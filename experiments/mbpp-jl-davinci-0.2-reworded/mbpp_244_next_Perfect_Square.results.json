{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tif N < 0\n\t\treturn -1\n\tend\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpygjb7hst.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpygjb7hst.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpygjb7hst.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpygjb7hst.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn next_Perfect_Square_helper(N, 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510032,
      "stdout": "test set: Error During Test at /tmp/tmp7xgvdwt6.jl:15\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: next_Perfect_Square_helper not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7xgvdwt6.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xgvdwt6.jl:15 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xgvdwt6.jl:14\ntest set: Error During Test at /tmp/tmp7xgvdwt6.jl:16\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: next_Perfect_Square_helper not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7xgvdwt6.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xgvdwt6.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xgvdwt6.jl:14\ntest set: Error During Test at /tmp/tmp7xgvdwt6.jl:17\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: next_Perfect_Square_helper not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7xgvdwt6.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7xgvdwt6.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7xgvdwt6.jl:14\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7xgvdwt6.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = Int64(ceil(sqrt(N)))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmp7tyb6vuq.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tyb6vuq.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tyb6vuq.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7tyb6vuq.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)::Int64\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 5\n\tend\n\tif N == 3\n\t\treturn 6\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpze1kvr8t.jl:1\nin expression starting at /tmp/tmpze1kvr8t.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\ti = 1\n\twhile i * i <= N\n\t\ti += 1\n\tend\n\treturn i * i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i^2 > N\n\t\t\treturn i^2\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t# N is the given number\n\t# returns the next perfect square greater than N\n\t\n\t# initialize the square root of N\n\tsqrt_N = sqrt(N)\n\t\n\t# check if sqrt_N is an integer\n\tif sqrt_N == floor(sqrt_N)\n\t\t# if it is, then N is a perfect square\n\t\t# return the next perfect square\n\t\treturn N + 1\n\telse\n\t\t# if it is not, then N is not a perfect square\n\t\t# return the next perfect square\n\t\treturn floor(sqrt_N)^2 + 1\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmp6pie3to8.jl:27\n  Expression: candidate(35) == 36\n   Evaluated: 26 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6pie3to8.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6pie3to8.jl:26\ntest set: Test Failed at /tmp/tmp6pie3to8.jl:28\n  Expression: candidate(6) == 9\n   Evaluated: 5 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6pie3to8.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6pie3to8.jl:26\ntest set: Test Failed at /tmp/tmp6pie3to8.jl:29\n  Expression: candidate(9) == 16\n   Evaluated: 10 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6pie3to8.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6pie3to8.jl:26\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6pie3to8.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)::Int64\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7tk7ofrm.jl:1\nin expression starting at /tmp/tmp7tk7ofrm.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpk0y_1ho8.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk0y_1ho8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk0y_1ho8.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk0y_1ho8.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tReturns the next perfect square greater than N.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpcqcijc8z.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcqcijc8z.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcqcijc8z.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcqcijc8z.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: N must be a positive integer.\"\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N == 28\n\t\treturn 841\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7xrkwzlw.jl:1\nin expression starting at /tmp/tmp7xrkwzlw.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = ceil(sqrt(N))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpjqcuh23h.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjqcuh23h.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjqcuh23h.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjqcuh23h.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFinds the next perfect square greater than a given number.\n\t\"\"\"\n\tn = ceil(Int64, sqrt(N))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmp4h03gfqg.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4h03gfqg.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4h03gfqg.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4h03gfqg.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = ceil(sqrt(N))\n\treturn n*n\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmp0fmmpe25.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0fmmpe25.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0fmmpe25.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0fmmpe25.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmp70ntxe6g.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp70ntxe6g.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp70ntxe6g.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp70ntxe6g.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is a positive integer\n\t\"\"\"\n\tif N < 0\n\t\terror(\"N must be a positive integer\")\n\tend\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmp2_mc911p.jl:20\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2_mc911p.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2_mc911p.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2_mc911p.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 4\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\tend\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb22bwuiq.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb22bwuiq.jl:1\nin expression starting at /tmp/tmpb22bwuiq.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0 \n\t\treturn 0\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 9\n\tend\n\tif N == 3\n\t\treturn 16\n\tend\n\tif N == 4\n\t\treturn 25\n\tend\n\tif N == 5\n\t\treturn 36\n\tend\n\tif N == 6\n\t\treturn 49\n\tend\n\tif N == 7\n\t\treturn 64\n\tend\n\tif N == 8\n\t\treturn 81\n\tend\n\tif N == 9\n\t\treturn 100\n\tend\n\tif N == 10\n\t\treturn 121\n\tend\n\tif N == 11\n\t\treturn 144\n\tend\n\tif N == 12\n\t\treturn 169\n\tend\n\tif N == 13\n\t\treturn 196\n\tend\n\tif N == 14\n\t\treturn 225\n\tend\n\tif N == 15\n\t\treturn 256\n\tend\n\tif N == 16\n\t\treturn 289\n\tend\n\tif N == 17\n\t\treturn 324\n\tend\n\tif N == 18\n\t\treturn 361\n\tend\n\tif N == 19\n\t\treturn 400\n\tend\n\tif N == 20\n\t\treturn 441\n\tend\n\tif N == 21\n\t\treturn 484\n\tend\n\tif N == 22\n\t\treturn 529\n\tend\n\tif N == 23\n\t\treturn 576\n\tend\n\tif N == 24\n\t\treturn 625\n\tend\n\tif N == 25\n\t\treturn 676\n\tend\n\tif N == 26\n\t\treturn 729\n\tend\n\tif N == 27\n\t\treturn 784\n\tend\n\tif N == 28\n\t\treturn 841\n\tend\n\tif N == 29\n\t\treturn 900\n\tend\n\tif N == 30\n\t\treturn 961\n\tend\n\tif N == 31\n\t\treturn 1024\n\tend\n\tif N == 32\n\t\treturn 1089\n\tend\n\tif N ==\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkq2ro81e.jl:1\nin expression starting at /tmp/tmpkq2ro81e.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = N+1\n\twhile n*n < N\n\t\tn = n+1\n\tend\n\treturn n*n\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpoxevlj20.jl:16\n  Expression: candidate(35) == 36\n   Evaluated: 1296 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxevlj20.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxevlj20.jl:15\ntest set: Test Failed at /tmp/tmpoxevlj20.jl:17\n  Expression: candidate(6) == 9\n   Evaluated: 49 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxevlj20.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxevlj20.jl:15\ntest set: Test Failed at /tmp/tmpoxevlj20.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 100 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoxevlj20.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoxevlj20.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpoxevlj20.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile (i*i <= N)\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64) -> Int64\n\t\n\tReturn the next perfect square greater than N.\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpz1c7hmea.jl:17\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1c7hmea.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1c7hmea.jl:16\ntest set: Test Failed at /tmp/tmpz1c7hmea.jl:18\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz1c7hmea.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz1c7hmea.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpz1c7hmea.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number and returns the next perfect square greater than the given number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"Please enter a positive number.\")\n\telse\n\t\tsqrt(N) % 1 == 0 ? N : next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpla5iifob.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpla5iifob.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpla5iifob.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpla5iifob.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpqhn721az.jl:19\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhn721az.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhn721az.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqhn721az.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile (i*i) <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N<0\n\t\treturn -1\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 4\n\tend\n\tif N==3\n\t\treturn 4\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\tif N==30\n\t\treturn 36\n\tend\n\tif N==31\n\t\treturn 36\n\tend\n\tif N==32\n\t\treturn 36\n\tend\n\tif N==33\n\t\treturn 36\n\tend\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3ni2ydyq.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3ni2ydyq.jl:1\nin expression starting at /tmp/tmp3ni2ydyq.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(Int64, sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "test set: Test Failed at /tmp/tmpbqriegcu.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbqriegcu.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbqriegcu.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbqriegcu.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "test set: Test Failed at /tmp/tmpao0v16i5.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpao0v16i5.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpao0v16i5.jl:14\ntest set: Test Failed at /tmp/tmpao0v16i5.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpao0v16i5.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpao0v16i5.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpao0v16i5.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i^2 <= N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti=1\n\twhile i*i<=N\n\t\ti+=1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tReturns the next perfect square greater than N.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "test set: Test Failed at /tmp/tmpw2bjvw_l.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw2bjvw_l.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw2bjvw_l.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw2bjvw_l.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N<0\n\t\treturn -1\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 5\n\tend\n\tif N==3\n\t\treturn 6\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\tif N==30\n\t\treturn 36\n\tend\n\tif N==31\n\t\treturn 36\n\tend\n\tif N==32\n\t\treturn 36\n\tend\n\tif N==33\n\t\treturn 36\n\tend\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf7lm7hjg.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf7lm7hjg.jl:1\nin expression starting at /tmp/tmpf7lm7hjg.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number to find the next perfect square greater than.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "test set: Test Failed at /tmp/tmpeenyi3tr.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpeenyi3tr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpeenyi3tr.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpeenyi3tr.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tn = ceil(Int64, sqrt(N))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "test set: Test Failed at /tmp/tmpw6dw5or5.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw6dw5or5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw6dw5or5.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw6dw5or5.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\tif N<0\n\t\treturn 0\n\tend\n\tif sqrt(N)%1 == 0\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "test set: Test Failed at /tmp/tmp8assi9pn.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8assi9pn.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8assi9pn.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8assi9pn.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = Int64(ceil(sqrt(N)))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmp7tyb6vuq.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tyb6vuq.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tyb6vuq.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7tyb6vuq.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFinds the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i^2 < N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "test set: Test Failed at /tmp/tmpfv7_9d39.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfv7_9d39.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfv7_9d39.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfv7_9d39.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti+=1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 9\n\tend\n\tif N == 3\n\t\treturn 16\n\tend\n\tif N == 4\n\t\treturn 25\n\tend\n\tif N == 5\n\t\treturn 36\n\tend\n\tif N == 6\n\t\treturn 49\n\tend\n\tif N == 7\n\t\treturn 64\n\tend\n\tif N == 8\n\t\treturn 81\n\tend\n\tif N == 9\n\t\treturn 100\n\tend\n\tif N == 10\n\t\treturn 121\n\tend\n\tif N == 11\n\t\treturn 144\n\tend\n\tif N == 12\n\t\treturn 169\n\tend\n\tif N == 13\n\t\treturn 196\n\tend\n\tif N == 14\n\t\treturn 225\n\tend\n\tif N == 15\n\t\treturn 256\n\tend\n\tif N == 16\n\t\treturn 289\n\tend\n\tif N == 17\n\t\treturn 324\n\tend\n\tif N == 18\n\t\treturn 361\n\tend\n\tif N == 19\n\t\treturn 400\n\tend\n\tif N == 20\n\t\treturn 441\n\tend\n\tif N == 21\n\t\treturn 484\n\tend\n\tif N == 22\n\t\treturn 529\n\tend\n\tif N == 23\n\t\treturn 576\n\tend\n\tif N == 24\n\t\treturn 625\n\tend\n\tif N == 25\n\t\treturn 676\n\tend\n\tif N == 26\n\t\treturn 729\n\tend\n\tif N == 27\n\t\treturn 784\n\tend\n\tif N == 28\n\t\treturn 841\n\tend\n\tif N == 29\n\t\treturn 900\n\tend\n\tif N == 30\n\t\treturn 961\n\tend\n\tif N == 31\n\t\treturn 1024\n\tend\n\tif N == 32\n\t\treturn 1089\n\tend\n\tif N == 33\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9ls5mf29.jl:1\nin expression starting at /tmp/tmp9ls5mf29.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmp7lmwmo4o.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7lmwmo4o.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7lmwmo4o.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7lmwmo4o.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = Int64(ceil(sqrt(N)))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmp7tyb6vuq.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7tyb6vuq.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7tyb6vuq.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7tyb6vuq.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\tParameters\n\t----------\n\tN : Int64\n\t\tThe number to find the next perfect square of.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tThe next perfect square greater than N.\n\t\"\"\"\n\tif N < 0\n\t\terror(\"N must be positive\")\n\tend\n\t\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmpl_1hnv3e.jl:33\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl_1hnv3e.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl_1hnv3e.jl:30\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl_1hnv3e.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i^2 <= N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i^2 < N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmpot9t_qa4.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpot9t_qa4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpot9t_qa4.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpot9t_qa4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tif N < 0\n\t\treturn -1\n\tend\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti = i + 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "test set: Test Failed at /tmp/tmpz8xpxqib.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz8xpxqib.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz8xpxqib.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpz8xpxqib.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tfor i = N+1:N+100\n\t\tif is_perfect_square(i)\n\t\t\treturn i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Error During Test at /tmp/tmp4iitj8ef.jl:19\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp4iitj8ef.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iitj8ef.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4iitj8ef.jl:18\ntest set: Error During Test at /tmp/tmp4iitj8ef.jl:20\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp4iitj8ef.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iitj8ef.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4iitj8ef.jl:18\ntest set: Error During Test at /tmp/tmp4iitj8ef.jl:21\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp4iitj8ef.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4iitj8ef.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4iitj8ef.jl:18\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4iitj8ef.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 0\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "test set: Test Failed at /tmp/tmpr5arxfj1.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5arxfj1.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5arxfj1.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpr5arxfj1.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmp0ztpfk__.jl:17\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ztpfk__.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ztpfk__.jl:16\ntest set: Test Failed at /tmp/tmp0ztpfk__.jl:18\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ztpfk__.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ztpfk__.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0ztpfk__.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpk0y_1ho8.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk0y_1ho8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk0y_1ho8.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk0y_1ho8.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpk0y_1ho8.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk0y_1ho8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk0y_1ho8.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk0y_1ho8.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)::Int64\n\t\n\tReturn the next perfect square greater than N.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmpghql86ly.jl:19\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpghql86ly.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpghql86ly.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpghql86ly.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tN = N+1\n\twhile true\n\t\tif is_Perfect_Square(N)\n\t\t\treturn N\n\t\telse\n\t\t\tN = N+1\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Error During Test at /tmp/tmp0ey6z78n.jl:19\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp0ey6z78n.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ey6z78n.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ey6z78n.jl:18\ntest set: Error During Test at /tmp/tmp0ey6z78n.jl:20\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp0ey6z78n.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ey6z78n.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ey6z78n.jl:18\ntest set: Error During Test at /tmp/tmp0ey6z78n.jl:21\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp0ey6z78n.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0ey6z78n.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0ey6z78n.jl:18\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0ey6z78n.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N<0\n\t\treturn 0\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 4\n\tend\n\tif N==3\n\t\treturn 4\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\tif N==30\n\t\treturn 36\n\tend\n\tif N==31\n\t\treturn 36\n\tend\n\tif N==32\n\t\treturn 36\n\tend\n\tif N==33\n\t\treturn 36\n\tend\n\tif\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmpm773yxj3.jl:113\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm773yxj3.jl:114\nin expression starting at /tmp/tmpm773yxj3.jl:114\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\t\n\tif N < 0\n\t\treturn 0\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N == 28\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcsmdc27n.jl:1\nin expression starting at /tmp/tmpcsmdc27n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 5\n\tend\n\tif N == 3\n\t\treturn 6\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\tend\n\tif\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmp_mc70xcu.jl:113\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_mc70xcu.jl:114\nin expression starting at /tmp/tmp_mc70xcu.jl:114\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number for which the next perfect square is to be found.\n\t\"\"\"\n\tif N < 0\n\t\terror(\"N must be a positive integer.\")\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N == 28\n\t\treturn 841\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2h74wzj1.jl:1\nin expression starting at /tmp/tmp2h74wzj1.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\ti = 2\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\t\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122771,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpb_8iw33y.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb_8iw33y.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb_8iw33y.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb_8iw33y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"N must be a positive integer.\")\n\t\treturn 0\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N == 28\n\t\treturn 8\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdoapqwxp.jl:1\nin expression starting at /tmp/tmpdoapqwxp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpk0y_1ho8.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk0y_1ho8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk0y_1ho8.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk0y_1ho8.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\tParameters\n\t----------\n\tN : Int64\n\t\tThe given number.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tThe next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmpwneo5n2z.jl:29\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwneo5n2z.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwneo5n2z.jl:26\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwneo5n2z.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpxa1f2kyu.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxa1f2kyu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxa1f2kyu.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxa1f2kyu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function finds the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122772,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer and returns the next perfect square greater than the given number.\n\t\"\"\"\n\t\n\t# Initialize the variable to store the next perfect square.\n\tnext_perfect_square = 0\n\t\n\t# Initialize the variable to store the square root of the given number.\n\tsquare_root = 0\n\t\n\t# Initialize the variable to store the square of the square root of the given number.\n\tsquare_of_square_root = 0\n\t\n\t# Calculate the square root of the given number.\n\tsquare_root = sqrt(N)\n\t\n\t# Calculate the square of the square root of the given number.\n\tsquare_of_square_root = square_root * square_root\n\t\n\t# Check if the square of the square root of the given number is equal to the given number.\n\tif square_of_square_root == N\n\t\t# If the square of the square root of the given number is equal to the given number, then the given number is a perfect square.\n\t\t# Hence, the next perfect square is the square of the square root of the given number plus one.\n\t\tnext_perfect_square = square_of_square_root + 1\n\telse\n\t\t# If the square of the square root of the given number is not equal to the given number, then the given number is not a perfect square.\n\t\t# Hence, the next perfect square is the square of the square root of the given number plus two.\n\t\tnext_perfect_square = square_of_square_root + 2\n\tend\n\t\n\t# Return the next perfect square.\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122775,
      "stdout": "test set: Error During Test at /tmp/tmpheruxj7u.jl:44\n  Test threw exception\n  Expression: candidate(6) == 9\n  InexactError: Int64(7.999999999999999)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpheruxj7u.jl:36\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpheruxj7u.jl:44 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpheruxj7u.jl:42\ntest set: Test Failed at /tmp/tmpheruxj7u.jl:45\n  Expression: candidate(9) == 16\n   Evaluated: 10 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpheruxj7u.jl:45 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpheruxj7u.jl:42\nTest Summary: | Pass  Fail  Error  Total\ntest set      |    1     1      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpheruxj7u.jl:40\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpk0y_1ho8.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk0y_1ho8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk0y_1ho8.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk0y_1ho8.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer N and returns the next perfect square greater than N.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122773,
      "stdout": "test set: Test Failed at /tmp/tmps1yb87_v.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1yb87_v.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1yb87_v.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1yb87_v.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122768,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i^2 <= N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122769,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510031,
      "stdout": "test set: Test Failed at /tmp/tmpgqgjca07.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqgjca07.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqgjca07.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqgjca07.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpky99zadx.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpky99zadx.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpky99zadx.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpky99zadx.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tReturns the next perfect square greater than N.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122770,
      "stdout": "test set: Test Failed at /tmp/tmpcqcijc8z.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcqcijc8z.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcqcijc8z.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcqcijc8z.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tsqrt_N = sqrt(N)\n\tif sqrt_N == trunc(sqrt_N)\n\t\treturn N\n\telse\n\t\treturn next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122774,
      "stdout": "test set: Test Failed at /tmp/tmphztcc9in.jl:22\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphztcc9in.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphztcc9in.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphztcc9in.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510030,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
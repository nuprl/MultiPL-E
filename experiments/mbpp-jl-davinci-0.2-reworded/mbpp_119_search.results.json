{
  "name": "mbpp_119_search",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpb0uit20e.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb0uit20e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = convert(Int64, length(arr)/2)\n\tif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpu2kfgdgt.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  InexactError: Int64(2.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu2kfgdgt.jl:8\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpu2kfgdgt.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpu2kfgdgt.jl:29\ntest set: Error During Test at /tmp/tmpu2kfgdgt.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  InexactError: Int64(5.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu2kfgdgt.jl:8\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpu2kfgdgt.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpu2kfgdgt.jl:29\ntest set: Error During Test at /tmp/tmpu2kfgdgt.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu2kfgdgt.jl:8\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpu2kfgdgt.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpu2kfg",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpu2kfgdgt.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1 return arr[1] end\n\tmid = n \u00f7 2\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp6a5jsi02.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6a5jsi02.jl:8\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6a5jsi02.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6a5jsi02.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6a5jsi02.jl:28\ntest set: Error During Test at /tmp/tmp6a5jsi02.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6a5jsi02.jl:8\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6a5jsi02.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6a5jsi02.jl:18\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6a5jsi02.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6a5jsi02.jl:28\ntest set: Test Failed at /tmp/tmp6a5jsi02.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6a5jsi02.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6a5jsi02.j",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp6a5jsi02.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tl = length(arr)\n\tif l == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(l, 2)\n\tif arr[mid] == arr[mid - 1]\n\t\tif mod(l, 2) == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mod(l, 2) == 0\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Test Failed at /tmp/tmpyjpxqdya.jl:31\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjpxqdya.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjpxqdya.jl:30\ntest set: Test Failed at /tmp/tmpyjpxqdya.jl:32\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyjpxqdya.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyjpxqdya.jl:30\ntest set: Error During Test at /tmp/tmpyjpxqdya.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyjpxqdya.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyjpxqdya.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyjpxqdya.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpyjpxqdya.jl:33 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpyjpxqdya.jl:30\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpyjpxqdya.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlen = length(arr)\n\tif len == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(len, 2)\n\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid - 1]\n\t\tif mod(mid, 2) == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mod(mid, 2) == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp4i0wpla_.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4i0wpla_.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4i0wpla_.jl:30\ntest set: Error During Test at /tmp/tmp4i0wpla_.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp4i0wpla_.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp4i0wpla_.jl:30\ntest set: Error During Test at /tmp/tmp4i0wpla_.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp4i0wpla_.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4i0wpla_.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp0jzym54x.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0jzym54x.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0jzym54x.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0jzym54x.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpjflxg47b.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjflxg47b.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjflxg47b.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjflxg47b.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[1:mid - 2])\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpsl6mcxhv.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpsl6mcxhv.jl:19\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpsl6mcxhv.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsl6mcxhv.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsl6mcxhv.jl:32\ntest set: Error During Test at /tmp/tmpsl6mcxhv.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpsl6mcxhv.jl:19\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpsl6mcxhv.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpsl6mcxhv.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpsl6mcxhv.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpsl6mcxhv.jl:32\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpsl6mcxhv.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpb0uit20e.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb0uit20e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp96jzfd8i.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96jzfd8i.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\t\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpqe_e4a_y.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqe_e4a_y.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif (mid % 2 == 0 && arr[mid] == arr[mid + 1]) || (mid % 2 == 1 && arr[mid] == arr[mid - 1])\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmptw0mvzc4.jl:28\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptw0mvzc4.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptw0mvzc4.jl:27\ntest set: Test Failed at /tmp/tmptw0mvzc4.jl:29\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptw0mvzc4.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptw0mvzc4.jl:27\ntest set: Test Failed at /tmp/tmptw0mvzc4.jl:30\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptw0mvzc4.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptw0mvzc4.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptw0mvzc4.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp9y996kma.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9y996kma.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9y996kma.jl:26\ntest set: Error During Test at /tmp/tmp9y996kma.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9y996kma.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9y996kma.jl:26\ntest set: Error During Test at /tmp/tmp9y996kma.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp9y996kma.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:2:n\n\t\tif i == n\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpb0uit20e.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb0uit20e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid%2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[1:mid-2])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmp6_x_etyv.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6_x_etyv.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6_x_etyv.jl:32\ntest set: Error During Test at /tmp/tmp6_x_etyv.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6_x_etyv.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6_x_etyv.jl:32\ntest set: Error During Test at /tmp/tmp6_x_etyv.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6_x_etyv.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6_x_etyv.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = div(n, 2)\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "test set: Error During Test at /tmp/tmptyv5dwsi.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmptyv5dwsi.jl:16\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmptyv5dwsi.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmptyv5dwsi.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmptyv5dwsi.jl:29\ntest set: Error During Test at /tmp/tmptyv5dwsi.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmptyv5dwsi.jl:16\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmptyv5dwsi.jl:17\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmptyv5dwsi.jl:19\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmptyv5dwsi.jl:31 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmptyv5dwsi.jl:29\ntest set: Test Failed at /tmp/tmptyv5dwsi.jl:32\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptyv5dwsi.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptyv5dws",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmptyv5dwsi.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || mid == length(arr)\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpdop2lg0g.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpdop2lg0g.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = low + (high - low) / 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\tif mid % 2 == 0\n\t\t\t\t\thigh = mid - 2\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif mid % 2 == 0\n\t\t\t\t\tlow = mid + 2\n\t\t\t\telse\n\t\t\t\t\thigh = mid - 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpli5mobe6.jl:45\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpli5mobe6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpli5mobe6.jl:45 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpli5mobe6.jl:44\ntest set: Error During Test at /tmp/tmpli5mobe6.jl:46\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpli5mobe6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpli5mobe6.jl:46 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpli5mobe6.jl:44\ntest set: Error During Test at /tmp/tmpli5mobe6.jl:47\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpli5mobe6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpli5mobe6.jl:42\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmp7i5qsj37.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i5qsj37.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7i5qsj37.jl:30\ntest set: Error During Test at /tmp/tmp7i5qsj37.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp7i5qsj37.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp7i5qsj37.jl:30\ntest set: Error During Test at /tmp/tmp7i5qsj37.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7i5qsj37.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7i5qsj37.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low < high\n\t\tmid = (low + high) >> 1\n\t\tif mid % 2 == 0\n\t\t\tif arr[mid] == arr[mid + 1]\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] == arr[mid - 1]\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn arr[low]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpyv1gwogb.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:30 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyv1gwogb.jl:29\ntest set: Error During Test at /tmp/tmpyv1gwogb.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:31 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyv1gwogb.jl:29\ntest set: Error During Test at /tmp/tmpyv1gwogb.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:23\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:32 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpyv1gwogb.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpb0uit20e.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb0uit20e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmpx1etnybl.jl:33\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:34\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx1etnybl.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\telse\n\t\treturn search(arr[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmpcb8hqg34.jl:19\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb8hqg34.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb8hqg34.jl:18\ntest set: Test Failed at /tmp/tmpcb8hqg34.jl:20\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcb8hqg34.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcb8hqg34.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcb8hqg34.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmp2lrgzv4b.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2lrgzv4b.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2lrgzv4b.jl:28\ntest set: Error During Test at /tmp/tmp2lrgzv4b.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2lrgzv4b.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2lrgzv4b.jl:28\ntest set: Error During Test at /tmp/tmp2lrgzv4b.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2lrgzv4b.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp2lrgzv4b.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpjflxg47b.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjflxg47b.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjflxg47b.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjflxg47b.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n,2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpmmza6egg.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmmza6egg.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpmmza6egg.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmmza6egg.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpdop2lg0g.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpdop2lg0g.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpslwejhyx.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpslwejhyx.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpslwejhyx.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpslwejhyx.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmp2sy6bzbg.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2sy6bzbg.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = div(n, 2)\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "test set: Error During Test at /tmp/tmpzhynocts.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzhynocts.jl:16\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzhynocts.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzhynocts.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzhynocts.jl:29\ntest set: Test Failed at /tmp/tmpzhynocts.jl:31\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzhynocts.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzhynocts.jl:29\ntest set: Test Failed at /tmp/tmpzhynocts.jl:32\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzhynocts.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzhynocts.jl:29\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpzhynocts.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = trunc(Int64, n/2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[1:mid - 2])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:n])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpw29l3k8a.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw29l3k8a.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw29l3k8a.jl:32\ntest set: Error During Test at /tmp/tmpw29l3k8a.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw29l3k8a.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw29l3k8a.jl:32\ntest set: Error During Test at /tmp/tmpw29l3k8a.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpw29l3k8a.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw29l3k8a.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid%2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmparkgcf86.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmparkgcf86.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmparkgcf86.jl:28\ntest set: Error During Test at /tmp/tmparkgcf86.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmparkgcf86.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmparkgcf86.jl:28\ntest set: Error During Test at /tmp/tmparkgcf86.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmparkgcf86.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmparkgcf86.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpius8c4xl.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpius8c4xl.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpius8c4xl.jl:26\ntest set: Error During Test at /tmp/tmpius8c4xl.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpius8c4xl.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpius8c4xl.jl:26\ntest set: Error During Test at /tmp/tmpius8c4xl.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpius8c4xl.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpius8c4xl.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp0jzym54x.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0jzym54x.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0jzym54x.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0jzym54x.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmp87hfq5on.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp87hfq5on.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp87hfq5on.jl:28\ntest set: Error During Test at /tmp/tmp87hfq5on.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp87hfq5on.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp87hfq5on.jl:28\ntest set: Error During Test at /tmp/tmp87hfq5on.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp87hfq5on.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp0jzym54x.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0jzym54x.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0jzym54x.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0jzym54x.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid - 1]\n\t\treturn search(arr[mid + 1:end])\n\telseif arr[mid] == arr[mid + 1]\n\t\treturn search(arr[1:mid - 1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpu4te1x_8.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpu4te1x_8.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpu4te1x_8.jl:21\ntest set: Error During Test at /tmp/tmpu4te1x_8.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:12\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpu4te1x_8.jl:23 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpu4te1x_8.jl:21\ntest set: Error During Test at /tmp/tmpu4te1x_8.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4te1x_8.jl:9\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmpu4te1x_8.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/e",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpu4te1x_8.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = Int64(floor(n/2))\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "test set: Error During Test at /tmp/tmprzp4ctlx.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmprzp4ctlx.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmprzp4ctlx.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmprzp4ctlx.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmprzp4ctlx.jl:30\ntest set: Error During Test at /tmp/tmprzp4ctlx.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmprzp4ctlx.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmprzp4ctlx.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmprzp4ctlx.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmprzp4ctlx.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmprzp4ctlx.jl:30\ntest set: Test Failed at /tmp/tmprzp4ctlx.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprzp4ctlx.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprzp4ctlx",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmprzp4ctlx.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = round(Int64, n/2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\tend\n\tif mid % 2 == 0\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123251,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Test Failed at /tmp/tmpwoiledvf.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\ntest set: Test Failed at /tmp/tmpwoiledvf.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\ntest set: Test Failed at /tmp/tmpwoiledvf.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwoiledvf.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Error During Test at /tmp/tmpqfosyq4a.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfosyq4a.jl:17\ntest set: Error During Test at /tmp/tmpqfosyq4a.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpqfosyq4a.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tr = mid - 2\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telse\n\t\t\tif mid % 2 == 0\n\t\t\t\tl = mid + 2\n\t\t\telse\n\t\t\t\tr = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Test Failed at /tmp/tmptzegcjqd.jl:36\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptzegcjqd.jl:36 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptzegcjqd.jl:35\ntest set: Error During Test at /tmp/tmptzegcjqd.jl:37\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmptzegcjqd.jl:26\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptzegcjqd.jl:37 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptzegcjqd.jl:35\ntest set: Error During Test at /tmp/tmptzegcjqd.jl:38\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmptzegcjqd.jl:33\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) / 2\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tr = mid - 2\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tl = mid + 2\n\t\t\telse\n\t\t\t\tr = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "test set: Error During Test at /tmp/tmpkr5xaix8.jl:36\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpkr5xaix8.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkr5xaix8.jl:36 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkr5xaix8.jl:35\ntest set: Error During Test at /tmp/tmpkr5xaix8.jl:37\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpkr5xaix8.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkr5xaix8.jl:37 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkr5xaix8.jl:35\ntest set: Error During Test at /tmp/tmpkr5xaix8.jl:38\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkr5xaix8.jl:33\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = Int64(floor(n/2))\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[1:mid-2])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Error During Test at /tmp/tmp374g_8t1.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp374g_8t1.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp374g_8t1.jl:32\ntest set: Error During Test at /tmp/tmp374g_8t1.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp374g_8t1.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp374g_8t1.jl:32\ntest set: Error During Test at /tmp/tmp374g_8t1.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp374g_8t1.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp374g_8t1.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpb0uit20e.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\ntest set: Test Failed at /tmp/tmpb0uit20e.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb0uit20e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb0uit20e.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb0uit20e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmpkykubpvo.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpkykubpvo.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpkykubpvo.jl:28\ntest set: Error During Test at /tmp/tmpkykubpvo.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpkykubpvo.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpkykubpvo.jl:28\ntest set: Error During Test at /tmp/tmpkykubpvo.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkykubpvo.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkykubpvo.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = div(low + high, 2)\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 2\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 2\n\t\t\tend\n\t\telseif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tlow = mid + 1\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Test Failed at /tmp/tmp3v81vhfj.jl:36\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3v81vhfj.jl:36 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3v81vhfj.jl:35\ntest set: Test Failed at /tmp/tmp3v81vhfj.jl:37\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3v81vhfj.jl:37 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3v81vhfj.jl:35\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3v81vhfj.jl:33\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[1:mid-2])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmpraazhfv9.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpraazhfv9.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpraazhfv9.jl:32\ntest set: Error During Test at /tmp/tmpraazhfv9.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpraazhfv9.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpraazhfv9.jl:32\ntest set: Error During Test at /tmp/tmpraazhfv9.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpraazhfv9.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpraazhfv9.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = length(arr) \u00f7 2\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmp6wfhyfhx.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6wfhyfhx.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6wfhyfhx.jl:21\ntest set: Error During Test at /tmp/tmp6wfhyfhx.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:12\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6wfhyfhx.jl:23 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6wfhyfhx.jl:21\ntest set: Error During Test at /tmp/tmp6wfhyfhx.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wfhyfhx.jl:9\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmp6wfhyfhx.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/e",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6wfhyfhx.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(mid,2) == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mod(mid,2) == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmpnfu1f56j.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnfu1f56j.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnfu1f56j.jl:30\ntest set: Error During Test at /tmp/tmpnfu1f56j.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnfu1f56j.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnfu1f56j.jl:30\ntest set: Error During Test at /tmp/tmpnfu1f56j.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnfu1f56j.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnfu1f56j.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tr = mid - 2\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tl = mid + 2\n\t\t\telse\n\t\t\t\tr = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Test Failed at /tmp/tmpxo8ybfiv.jl:35\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxo8ybfiv.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxo8ybfiv.jl:34\ntest set: Error During Test at /tmp/tmpxo8ybfiv.jl:36\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpxo8ybfiv.jl:25\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxo8ybfiv.jl:36 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxo8ybfiv.jl:34\ntest set: Error During Test at /tmp/tmpxo8ybfiv.jl:37\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Test Failed at /tmp/tmp8ttcz7yx.jl:33\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ttcz7yx.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ttcz7yx.jl:32\ntest set: Test Failed at /tmp/tmp8ttcz7yx.jl:34\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ttcz7yx.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ttcz7yx.jl:32\ntest set: Test Failed at /tmp/tmp8ttcz7yx.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ttcz7yx.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ttcz7yx.jl:32\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8ttcz7yx.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 2\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmp2xslf0ix.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2xslf0ix.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2xslf0ix.jl:21\ntest set: Error During Test at /tmp/tmp2xslf0ix.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:12\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp2xslf0ix.jl:23 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp2xslf0ix.jl:21\ntest set: Error During Test at /tmp/tmp2xslf0ix.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2xslf0ix.jl:9\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmp2xslf0ix.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/e",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp2xslf0ix.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n,2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpmmza6egg.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmmza6egg.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpmmza6egg.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmmza6egg.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = div(low + high, 2)\n\t\tif mid == 1 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mod(mid, 2) == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mod(mid, 2) == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Test Failed at /tmp/tmp97xnwgor.jl:32\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp97xnwgor.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp97xnwgor.jl:31\ntest set: Test Failed at /tmp/tmp97xnwgor.jl:33\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp97xnwgor.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp97xnwgor.jl:31\ntest set: Test Failed at /tmp/tmp97xnwgor.jl:34\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp97xnwgor.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp97xnwgor.jl:31\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp97xnwgor.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n/2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmp8fb4itr3.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmp8fb4itr3.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp8fb4itr3.jl:31 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp8fb4itr3.jl:30\ntest set: Error During Test at /tmp/tmp8fb4itr3.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmp8fb4itr3.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp8fb4itr3.jl:32 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp8fb4itr3.jl:30\ntest set: Error During Test at /tmp/tmp8fb4itr3.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8fb4itr3.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmpdqjv_lgw.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdqjv_lgw.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdqjv_lgw.jl:28\ntest set: Error During Test at /tmp/tmpdqjv_lgw.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdqjv_lgw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdqjv_lgw.jl:28\ntest set: Error During Test at /tmp/tmpdqjv_lgw.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdqjv_lgw.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpdqjv_lgw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Error During Test at /tmp/tmpq2b2so1k.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpq2b2so1k.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpq2b2so1k.jl:28\ntest set: Error During Test at /tmp/tmpq2b2so1k.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpq2b2so1k.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpq2b2so1k.jl:28\ntest set: Error During Test at /tmp/tmpq2b2so1k.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpq2b2so1k.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpq2b2so1k.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tstart = 1\n\tstop = length(arr)\n\tmid = div(start+stop, 2)\n\twhile start < stop\n\t\tif arr[mid] == arr[mid-1]\n\t\t\tstart = mid+1\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tstop = mid-1\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\t\tmid = div(start+stop, 2)\n\tend\n\treturn arr[mid]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmpobx9uqi5.jl:25\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpobx9uqi5.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpobx9uqi5.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpobx9uqi5.jl:24\ntest set: Test Failed at /tmp/tmpobx9uqi5.jl:26\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 4 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpobx9uqi5.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpobx9uqi5.jl:24\nTest Summary: | Pass  Fail  Error  Total\ntest set      |    1     1      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 1 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpobx9uqi5.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[1:mid-2])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmpnwu_7mja.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnwu_7mja.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnwu_7mja.jl:32\ntest set: Error During Test at /tmp/tmpnwu_7mja.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnwu_7mja.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnwu_7mja.jl:32\ntest set: Error During Test at /tmp/tmpnwu_7mja.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnwu_7mja.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnwu_7mja.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123254,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Error During Test at /tmp/tmpqfosyq4a.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfosyq4a.jl:17\ntest set: Error During Test at /tmp/tmpqfosyq4a.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpqfosyq4a.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmp9st5uakg.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:12\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp9st5uakg.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp9st5uakg.jl:32\ntest set: Error During Test at /tmp/tmp9st5uakg.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:12\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:16\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:24\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9st5uakg.jl:34 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9st5uakg.jl:32\ntest set: Error During Test at /tmp/tmp9st5uakg.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:12\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:22\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9st5uakg.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp9st5uakg.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telse\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Test Failed at /tmp/tmpqsd0q6c5.jl:37\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsd0q6c5.jl:37 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsd0q6c5.jl:36\ntest set: Test Failed at /tmp/tmpqsd0q6c5.jl:38\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsd0q6c5.jl:38 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsd0q6c5.jl:36\ntest set: Test Failed at /tmp/tmpqsd0q6c5.jl:39\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqsd0q6c5.jl:39 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqsd0q6c5.jl:36\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqsd0q6c5.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmp5i147k00.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5i147k00.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5i147k00.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp5i147k00.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp96jzfd8i.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96jzfd8i.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmpx1etnybl.jl:33\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:34\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx1etnybl.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123256,
      "stdout": "test set: Test Failed at /tmp/tmpr115_tqu.jl:32\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr115_tqu.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr115_tqu.jl:31\ntest set: Test Failed at /tmp/tmpr115_tqu.jl:33\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr115_tqu.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr115_tqu.jl:31\ntest set: Test Failed at /tmp/tmpr115_tqu.jl:34\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr115_tqu.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr115_tqu.jl:31\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpr115_tqu.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp9y996kma.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9y996kma.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9y996kma.jl:26\ntest set: Error During Test at /tmp/tmp9y996kma.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp9y996kma.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp9y996kma.jl:26\ntest set: Error During Test at /tmp/tmp9y996kma.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp9y996kma.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp9y996kma.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) / 2\n\t\tif mid == 1 || mid == length(arr)\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmplbf1gn6a.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmplbf1gn6a.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmplbf1gn6a.jl:34 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmplbf1gn6a.jl:33\ntest set: Error During Test at /tmp/tmplbf1gn6a.jl:35\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmplbf1gn6a.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmplbf1gn6a.jl:35 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmplbf1gn6a.jl:33\ntest set: Error During Test at /tmp/tmplbf1gn6a.jl:36\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplbf1gn6a.jl:31\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpjflxg47b.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjflxg47b.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpjflxg47b.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpjflxg47b.jl:28\ntest set: Error During Test at /tmp/tmpjflxg47b.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjflxg47b.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjflxg47b.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Error During Test at /tmp/tmpjozle7gt.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:20\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjozle7gt.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjozle7gt.jl:31\ntest set: Error During Test at /tmp/tmpjozle7gt.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:20\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:17\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:23\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjozle7gt.jl:33 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjozle7gt.jl:31\ntest set: Error During Test at /tmp/tmpjozle7gt.jl:34\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:20\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:17\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjozle7gt.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjozle7gt.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Error During Test at /tmp/tmp6rqnydhh.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6rqnydhh.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6rqnydhh.jl:28\ntest set: Error During Test at /tmp/tmp6rqnydhh.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6rqnydhh.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6rqnydhh.jl:28\ntest set: Error During Test at /tmp/tmp6rqnydhh.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6rqnydhh.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmp174wprub.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp174wprub.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp174wprub.jl:30\ntest set: Error During Test at /tmp/tmp174wprub.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp174wprub.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp174wprub.jl:30\ntest set: Test Failed at /tmp/tmp174wprub.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp174wprub.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp174wprub",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp174wprub.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || mid == length(arr)\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telse\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Test Failed at /tmp/tmp3n7k47uu.jl:34\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3n7k47uu.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3n7k47uu.jl:33\ntest set: Test Failed at /tmp/tmp3n7k47uu.jl:35\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3n7k47uu.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3n7k47uu.jl:33\ntest set: Test Failed at /tmp/tmp3n7k47uu.jl:36\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3n7k47uu.jl:36 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3n7k47uu.jl:33\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3n7k47uu.jl:31\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Test Failed at /tmp/tmphfccwbu6.jl:20\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfccwbu6.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfccwbu6.jl:19\ntest set: Test Failed at /tmp/tmphfccwbu6.jl:21\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfccwbu6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfccwbu6.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphfccwbu6.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif mid == 1\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] == arr[mid-1]\n\t\t\tif (mid-1) % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif (mid-1) % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Test Failed at /tmp/tmp10h21bxy.jl:40\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp10h21bxy.jl:40 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp10h21bxy.jl:39\ntest set: Test Failed at /tmp/tmp10h21bxy.jl:41\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp10h21bxy.jl:41 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp10h21bxy.jl:39\ntest set: Test Failed at /tmp/tmp10h21bxy.jl:42\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 4 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp10h21bxy.jl:42 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp10h21bxy.jl:39\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp10h21bxy.jl:37\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telse\n\t\tmid = n \u00f7 2\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmpojyd6d2h.jl:24\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:11\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpojyd6d2h.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpojyd6d2h.jl:23\ntest set: Error During Test at /tmp/tmpojyd6d2h.jl:25\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:11\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:13\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpojyd6d2h.jl:25 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpojyd6d2h.jl:23\ntest set: Error During Test at /tmp/tmpojyd6d2h.jl:26\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpojyd6d2h.jl:10\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmpojyd6d2h.jl:11\n   [4] macro expansion\n     @ /home/a.guha/.cond",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpojyd6d2h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp96jzfd8i.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96jzfd8i.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n,2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpmmza6egg.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmmza6egg.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpmmza6egg.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmmza6egg.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n/2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmpnacm8_rr.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpnacm8_rr.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpnacm8_rr.jl:31 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpnacm8_rr.jl:30\ntest set: Error During Test at /tmp/tmpnacm8_rr.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpnacm8_rr.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpnacm8_rr.jl:32 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpnacm8_rr.jl:30\ntest set: Error During Test at /tmp/tmpnacm8_rr.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnacm8_rr.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmp2sy6bzbg.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2sy6bzbg.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmp236rzids.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp236rzids.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp236rzids.jl:21\ntest set: Error During Test at /tmp/tmp236rzids.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:12\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp236rzids.jl:23 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp236rzids.jl:21\ntest set: Error During Test at /tmp/tmp236rzids.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp236rzids.jl:9\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmp236rzids.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/e",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp236rzids.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid - 1]\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp0jzym54x.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0jzym54x.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp0jzym54x.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp0jzym54x.jl:28\ntest set: Error During Test at /tmp/tmp0jzym54x.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0jzym54x.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0jzym54x.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmpx1etnybl.jl:33\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:34\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\ntest set: Test Failed at /tmp/tmpx1etnybl.jl:35\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx1etnybl.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx1etnybl.jl:32\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx1etnybl.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpia10zr6v.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpia10zr6v.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpia10zr6v.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpia10zr6v.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpia10zr6v.jl:30\ntest set: Error During Test at /tmp/tmpia10zr6v.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpia10zr6v.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpia10zr6v.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpia10zr6v.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpia10zr6v.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpia10zr6v.jl:30\ntest set: Test Failed at /tmp/tmpia10zr6v.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpia10zr6v.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpia10zr6v",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpia10zr6v.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmp174wprub.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp174wprub.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp174wprub.jl:30\ntest set: Error During Test at /tmp/tmp174wprub.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp174wprub.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp174wprub.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp174wprub.jl:30\ntest set: Test Failed at /tmp/tmp174wprub.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp174wprub.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp174wprub",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp174wprub.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\tend\n\treturn search(arr[1:mid-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low < high\n\t\tmid = (low + high) >> 1\n\t\tif mid % 2 == 0\n\t\t\tif arr[mid] == arr[mid + 1]\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] == arr[mid - 1]\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn arr[low]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpyv1gwogb.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:30 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyv1gwogb.jl:29\ntest set: Error During Test at /tmp/tmpyv1gwogb.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:31 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyv1gwogb.jl:29\ntest set: Error During Test at /tmp/tmpyv1gwogb.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpyv1gwogb.jl:23\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyv1gwogb.jl:32 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpy",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpyv1gwogb.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = convert(Int64, n/2)\n\t\tif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\treturn search(arr[mid+1:end])\n\t\t\telse\n\t\t\t\treturn search(arr[mid:end])\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\treturn search(arr[1:mid-1])\n\t\t\telse\n\t\t\t\treturn search(arr[1:mid])\n\t\t\tend\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmpumkg4zt2.jl:38\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  InexactError: Int64(2.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpumkg4zt2.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpumkg4zt2.jl:38 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpumkg4zt2.jl:37\ntest set: Error During Test at /tmp/tmpumkg4zt2.jl:39\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  InexactError: Int64(5.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpumkg4zt2.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpumkg4zt2.jl:39 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpumkg4zt2.jl:37\ntest set: Error During Test at /tmp/tmpumkg4zt2.jl:40\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpumkg4zt2.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpumkg4zt2.jl:40 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpum",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpumkg4zt2.jl:35\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n/2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Error During Test at /tmp/tmpx_rj2dw6.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpx_rj2dw6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpx_rj2dw6.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpx_rj2dw6.jl:28\ntest set: Error During Test at /tmp/tmpx_rj2dw6.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpx_rj2dw6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpx_rj2dw6.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpx_rj2dw6.jl:28\ntest set: Error During Test at /tmp/tmpx_rj2dw6.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpx_rj2dw6.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpx_rj2dw6.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tl = length(arr)\n\tif l == 1\n\t\treturn arr[1]\n\telseif l == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tm = l/2\n\t\tif arr[m] == arr[m-1]\n\t\t\treturn search(arr[m+1:end])\n\t\telseif arr[m] == arr[m+1]\n\t\t\treturn search(arr[1:m-1])\n\t\telse\n\t\t\treturn arr[m]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123260,
      "stdout": "test set: Error During Test at /tmp/tmpkalnzzss.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpkalnzzss.jl:16\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkalnzzss.jl:30 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkalnzzss.jl:29\ntest set: Error During Test at /tmp/tmpkalnzzss.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpkalnzzss.jl:16\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkalnzzss.jl:31 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkalnzzss.jl:29\ntest set: Error During Test at /tmp/tmpkalnzzss.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkalnzzss.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Test Failed at /tmp/tmpwoiledvf.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\ntest set: Test Failed at /tmp/tmpwoiledvf.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\ntest set: Test Failed at /tmp/tmpwoiledvf.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwoiledvf.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwoiledvf.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwoiledvf.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpj3o99os0.jl:37\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj3o99os0.jl:16\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj3o99os0.jl:18\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpj3o99os0.jl:37 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpj3o99os0.jl:36\ntest set: Test Failed at /tmp/tmpj3o99os0.jl:38\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3o99os0.jl:38 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3o99os0.jl:36\ntest set: Test Failed at /tmp/tmpj3o99os0.jl:39\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj3o99os0.jl:39 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj3o99os0.jl:36\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpj3o99os0.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123260,
      "stdout": "test set: Error During Test at /tmp/tmpr0ccrs03.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr0ccrs03.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr0ccrs03.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr0ccrs03.jl:20\ntest set: Error During Test at /tmp/tmpr0ccrs03.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr0ccrs03.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr0ccrs03.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr0ccrs03.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpr0ccrs03.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high \n\t\tmid = low + (high - low) / 2\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123260,
      "stdout": "test set: Error During Test at /tmp/tmpzrc30w8v.jl:36\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpzrc30w8v.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpzrc30w8v.jl:36 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpzrc30w8v.jl:35\ntest set: Error During Test at /tmp/tmpzrc30w8v.jl:37\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpzrc30w8v.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpzrc30w8v.jl:37 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpzrc30w8v.jl:35\ntest set: Error During Test at /tmp/tmpzrc30w8v.jl:38\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzrc30w8v.jl:33\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid%2 == 1\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123250,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp96jzfd8i.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96jzfd8i.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# TODO: Implement\n\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123259,
      "stdout": "test set: Test Failed at /tmp/tmpdo4toipc.jl:13\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdo4toipc.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdo4toipc.jl:12\ntest set: Test Failed at /tmp/tmpdo4toipc.jl:14\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdo4toipc.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdo4toipc.jl:12\ntest set: Test Failed at /tmp/tmpdo4toipc.jl:15\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdo4toipc.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdo4toipc.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdo4toipc.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpdop2lg0g.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpdop2lg0g.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpdop2lg0g.jl:28\ntest set: Error During Test at /tmp/tmpdop2lg0g.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpdop2lg0g.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpdop2lg0g.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low < high\n\t\tmid = low + (high - low) / 2\n\t\tif mid % 2 == 0\n\t\t\tif arr[mid] == arr[mid + 1]\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] == arr[mid - 1]\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn arr[low]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpxl0ttx2m.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpxl0ttx2m.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxl0ttx2m.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxl0ttx2m.jl:29\ntest set: Error During Test at /tmp/tmpxl0ttx2m.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpxl0ttx2m.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxl0ttx2m.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxl0ttx2m.jl:29\ntest set: Error During Test at /tmp/tmpxl0ttx2m.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpxl0ttx2m.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxl0ttx2m.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid+1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tl = mid+1\n\t\t\tend\n\t\telseif mid == n\n\t\t\tif arr[mid] != arr[mid-1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tr = mid-1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid-1]\n\t\t\t\tr = mid-2\n\t\t\telse\n\t\t\t\tl = mid+2\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123260,
      "stdout": "test set: Test Failed at /tmp/tmplt7e5ln8.jl:40\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplt7e5ln8.jl:40 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplt7e5ln8.jl:38\ntest set: Test Failed at /tmp/tmplt7e5ln8.jl:41\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplt7e5ln8.jl:41 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplt7e5ln8.jl:38\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplt7e5ln8.jl:36\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Error During Test at /tmp/tmpa6p3wm94.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpa6p3wm94.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6p3wm94.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa6p3wm94.jl:18\ntest set: Error During Test at /tmp/tmpa6p3wm94.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpa6p3wm94.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa6p3wm94.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpa6p3wm94.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# TODO\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Error During Test at /tmp/tmpc877ki91.jl:12\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpc877ki91.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc877ki91.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc877ki91.jl:11\ntest set: Error During Test at /tmp/tmpc877ki91.jl:13\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpc877ki91.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpc877ki91.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inline",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpc877ki91.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmp5i147k00.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5i147k00.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5i147k00.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp5i147k00.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid - 1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpr325b1m9.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpr325b1m9.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpr325b1m9.jl:26\ntest set: Error During Test at /tmp/tmpr325b1m9.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpr325b1m9.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpr325b1m9.jl:26\ntest set: Error During Test at /tmp/tmpr325b1m9.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr325b1m9.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpr325b1m9.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tl = length(arr)\n\tif l == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(l,2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpvj8pqbow.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:11\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvj8pqbow.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvj8pqbow.jl:22\ntest set: Error During Test at /tmp/tmpvj8pqbow.jl:24\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:11\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:13\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpvj8pqbow.jl:24 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpvj8pqbow.jl:22\ntest set: Error During Test at /tmp/tmpvj8pqbow.jl:25\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpvj8pqbow.jl:10\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmpvj8pqbow.jl:11\n   [4] macro expansion\n     @ /home/a.guha/.cond",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvj8pqbow.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = floor(Int64, n/2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmp1sx90q_8.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1sx90q_8.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1sx90q_8.jl:28\ntest set: Error During Test at /tmp/tmp1sx90q_8.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp1sx90q_8.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp1sx90q_8.jl:28\ntest set: Error During Test at /tmp/tmp1sx90q_8.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1sx90q_8.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1sx90q_8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] == arr[mid - 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid + 1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid + 1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid - 1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123257,
      "stdout": "test set: Error During Test at /tmp/tmp5i147k00.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5i147k00.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp5i147k00.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp5i147k00.jl:30\ntest set: Error During Test at /tmp/tmp5i147k00.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp5i147k00.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp5i147k00.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpqe_e4a_y.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqe_e4a_y.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n/2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\tend\n\tif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Error During Test at /tmp/tmphfo9xqo9.jl:33\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmphfo9xqo9.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmphfo9xqo9.jl:33 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmphfo9xqo9.jl:32\ntest set: Error During Test at /tmp/tmphfo9xqo9.jl:34\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmphfo9xqo9.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmphfo9xqo9.jl:34 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmphfo9xqo9.jl:32\ntest set: Error During Test at /tmp/tmphfo9xqo9.jl:35\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmphfo9xqo9.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Error During Test at /tmp/tmplgocb353.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmplgocb353.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmplgocb353.jl:30\ntest set: Error During Test at /tmp/tmplgocb353.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmplgocb353.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmplgocb353.jl:30\ntest set: Error During Test at /tmp/tmplgocb353.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmplgocb353.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplgocb353.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123252,
      "stdout": "test set: Test Failed at /tmp/tmp2sy6bzbg.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\ntest set: Test Failed at /tmp/tmp2sy6bzbg.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2sy6bzbg.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2sy6bzbg.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2sy6bzbg.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Error During Test at /tmp/tmpz1sf0051.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpz1sf0051.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpz1sf0051.jl:28\ntest set: Error During Test at /tmp/tmpz1sf0051.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpz1sf0051.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpz1sf0051.jl:28\ntest set: Error During Test at /tmp/tmpz1sf0051.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpz1sf0051.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpz1sf0051.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123263,
      "stdout": "test set: Test Failed at /tmp/tmpgn7x2kum.jl:31\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgn7x2kum.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgn7x2kum.jl:30\ntest set: Error During Test at /tmp/tmpgn7x2kum.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgn7x2kum.jl:21\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgn7x2kum.jl:32 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgn7x2kum.jl:30\ntest set: Error During Test at /tmp/tmpgn7x2kum.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpgn7x2kum.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 0\n\t\treturn -1\n\tend\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] == arr[mid + 1]\n\t\treturn search(arr[mid + 2:end])\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "test set: Test Failed at /tmp/tmpp4hjf2gs.jl:31\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4hjf2gs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4hjf2gs.jl:30\ntest set: Test Failed at /tmp/tmpp4hjf2gs.jl:32\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4hjf2gs.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4hjf2gs.jl:30\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp4hjf2gs.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmp96jzfd8i.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp96jzfd8i.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp96jzfd8i.jl:28\ntest set: Error During Test at /tmp/tmp96jzfd8i.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp96jzfd8i.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96jzfd8i.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpqe_e4a_y.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqe_e4a_y.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] == arr[mid-1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mod(n, 2) == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123263,
      "stdout": "test set: Test Failed at /tmp/tmpb9f8k9zq.jl:31\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9f8k9zq.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9f8k9zq.jl:30\ntest set: Test Failed at /tmp/tmpb9f8k9zq.jl:32\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9f8k9zq.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9f8k9zq.jl:30\ntest set: Error During Test at /tmp/tmpb9f8k9zq.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpb9f8k9zq.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpb9f8k9zq.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpb9f8k9zq.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpb9f8k9zq.jl:33 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpb9f8k9zq.jl:30\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpb9f8k9zq.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tlow = 1\n\thigh = n-1\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Test Failed at /tmp/tmp8rsv6or_.jl:33\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rsv6or_.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rsv6or_.jl:32\ntest set: Test Failed at /tmp/tmp8rsv6or_.jl:34\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8rsv6or_.jl:34 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8rsv6or_.jl:32\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8rsv6or_.jl:30\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 1\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123263,
      "stdout": "test set: Error During Test at /tmp/tmps6y89e8a.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmps6y89e8a.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmps6y89e8a.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmps6y89e8a.jl:18\ntest set: Error During Test at /tmp/tmps6y89e8a.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmps6y89e8a.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmps6y89e8a.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmps6y89e8a.jl:18\ntest set: Error During Test at /tmp/tmps6y89e8a.jl:21\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmps6y89e8a.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmps6y89e8a.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmps6y8",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps6y89e8a.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123258,
      "stdout": "test set: Error During Test at /tmp/tmp6rqnydhh.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6rqnydhh.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6rqnydhh.jl:28\ntest set: Error During Test at /tmp/tmp6rqnydhh.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6rqnydhh.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6rqnydhh.jl:28\ntest set: Error During Test at /tmp/tmp6rqnydhh.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6rqnydhh.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6rqnydhh.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Test Failed at /tmp/tmpnwvpow_6.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnwvpow_6.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnwvpow_6.jl:28\ntest set: Test Failed at /tmp/tmpnwvpow_6.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnwvpow_6.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnwvpow_6.jl:28\ntest set: Test Failed at /tmp/tmpnwvpow_6.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnwvpow_6.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnwvpow_6.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnwvpow_6.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpslwejhyx.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpslwejhyx.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpslwejhyx.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpslwejhyx.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmp87hfq5on.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp87hfq5on.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp87hfq5on.jl:28\ntest set: Error During Test at /tmp/tmp87hfq5on.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp87hfq5on.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp87hfq5on.jl:28\ntest set: Error During Test at /tmp/tmp87hfq5on.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp87hfq5on.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp87hfq5on.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[i]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid - 1])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpslwejhyx.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpslwejhyx.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpslwejhyx.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpslwejhyx.jl:28\ntest set: Error During Test at /tmp/tmpslwejhyx.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpslwejhyx.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpslwejhyx.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123255,
      "stdout": "test set: Error During Test at /tmp/tmpqfosyq4a.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqfosyq4a.jl:17\ntest set: Error During Test at /tmp/tmpqfosyq4a.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqfosyq4a.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqfosyq4a.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpqfosyq4a.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510193,
      "stdout": "test set: Test Failed at /tmp/tmpso_cynba.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\ntest set: Test Failed at /tmp/tmpso_cynba.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpso_cynba.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpso_cynba.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpso_cynba.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l+r)\u00f72\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] == arr[mid-1]\n\t\t\tif mid%2 == 0\n\t\t\t\tr = mid-2\n\t\t\telse\n\t\t\t\tl = mid+1\n\t\t\tend\n\t\telse\n\t\t\tif mid%2 == 0\n\t\t\t\tl = mid+2\n\t\t\telse\n\t\t\t\tr = mid-1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Test Failed at /tmp/tmp5vkov90a.jl:37\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vkov90a.jl:37 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vkov90a.jl:36\ntest set: Test Failed at /tmp/tmp5vkov90a.jl:38\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vkov90a.jl:38 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vkov90a.jl:36\ntest set: Test Failed at /tmp/tmp5vkov90a.jl:39\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vkov90a.jl:39 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vkov90a.jl:36\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5vkov90a.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n/2\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123263,
      "stdout": "test set: Error During Test at /tmp/tmpnpf_a2zl.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnpf_a2zl.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnpf_a2zl.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnpf_a2zl.jl:28\ntest set: Error During Test at /tmp/tmpnpf_a2zl.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnpf_a2zl.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpnpf_a2zl.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpnpf_a2zl.jl:28\ntest set: Error During Test at /tmp/tmpnpf_a2zl.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpnpf_a2zl.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnpf_a2zl.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n,2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123253,
      "stdout": "test set: Error During Test at /tmp/tmpmmza6egg.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpmmza6egg.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpmmza6egg.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpmmza6egg.jl:26\ntest set: Error During Test at /tmp/tmpmmza6egg.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpmmza6egg.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmmza6egg.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1 || arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123264,
      "stdout": "test set: Test Failed at /tmp/tmpr5auut6e.jl:31\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5auut6e.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5auut6e.jl:30\ntest set: Error During Test at /tmp/tmpr5auut6e.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpr5auut6e.jl:21\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr5auut6e.jl:32 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr5auut6e.jl:30\ntest set: Error During Test at /tmp/tmpr5auut6e.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpr5auut6e.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123264,
      "stdout": "test set: Error During Test at /tmp/tmpleamwvhg.jl:43\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpleamwvhg.jl:33\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpleamwvhg.jl:43 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpleamwvhg.jl:42\ntest set: Error During Test at /tmp/tmpleamwvhg.jl:44\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpleamwvhg.jl:33\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpleamwvhg.jl:44 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpleamwvhg.jl:40\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\thigh = mid - 2\n\t\t\telseif arr[mid] == arr[mid + 1]\n\t\t\t\tlow = mid + 2\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123262,
      "stdout": "test set: Test Failed at /tmp/tmpcn_d_0z1.jl:39\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcn_d_0z1.jl:39 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcn_d_0z1.jl:37\ntest set: Test Failed at /tmp/tmpcn_d_0z1.jl:40\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcn_d_0z1.jl:40 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcn_d_0z1.jl:37\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcn_d_0z1.jl:35\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\tmid = 0\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif mid == length(arr)\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = n \u00f7 2\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123264,
      "stdout": "test set: Error During Test at /tmp/tmpndb809b6.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpndb809b6.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpndb809b6.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpndb809b6.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpndb809b6.jl:30\ntest set: Error During Test at /tmp/tmpndb809b6.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpndb809b6.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpndb809b6.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpndb809b6.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpndb809b6.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpndb809b6.jl:30\ntest set: Test Failed at /tmp/tmpndb809b6.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpndb809b6.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpndb809b6",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpndb809b6.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510191,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid+1]\n\t\treturn search(arr[mid+2:end])\n\telseif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123264,
      "stdout": "test set: Test Failed at /tmp/tmp2fpbrf6n.jl:22\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fpbrf6n.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fpbrf6n.jl:21\ntest set: Test Failed at /tmp/tmp2fpbrf6n.jl:23\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 5 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2fpbrf6n.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2fpbrf6n.jl:21\ntest set: Error During Test at /tmp/tmp2fpbrf6n.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2fpbrf6n.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2fpbrf6n.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2fpbrf6n.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2fpbrf6n.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp2fpbrf6n.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted vector.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123261,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif mid == 1 || mid == n\n\t\t\treturn arr[mid]\n\t\tend\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid-1]\n\t\t\tif mid%2 == 0\n\t\t\t\tr = mid-2\n\t\t\telse\n\t\t\t\tl = mid+1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid%2 == 0\n\t\t\t\tl = mid+2\n\t\t\telse\n\t\t\t\tr = mid-1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123265,
      "stdout": "test set: Test Failed at /tmp/tmpu4wxaljw.jl:35\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu4wxaljw.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu4wxaljw.jl:34\ntest set: Error During Test at /tmp/tmpu4wxaljw.jl:36\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpu4wxaljw.jl:25\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu4wxaljw.jl:36 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu4wxaljw.jl:34\ntest set: Error During Test at /tmp/tmpu4wxaljw.jl:37\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpu4wxaljw.jl:32\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 2\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123265,
      "stdout": "test set: Error During Test at /tmp/tmpg780_w0q.jl:38\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpg780_w0q.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg780_w0q.jl:38 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg780_w0q.jl:36\ntest set: Error During Test at /tmp/tmpg780_w0q.jl:39\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpg780_w0q.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg780_w0q.jl:39 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpg780_w0q.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the element that appears only once in a sorted vector.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510194,
      "stdout": "test set: Error During Test at /tmp/tmpqe_e4a_y.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqe_e4a_y.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqe_e4a_y.jl:28\ntest set: Error During Test at /tmp/tmpqe_e4a_y.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpqe_e4a_y.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqe_e4a_y.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_477_is_lower",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to convert the given string to lower case.\n\t\"\"\"\nfunction is_lower(string::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_lower;\n\t@test(candidate(\"InValid\") == \"invalid\")\n\t@test(candidate(\"TruE\") == \"true\")\n\t@test(candidate(\"SenTenCE\") == \"sentence\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\treturn string.lower()\nend",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tThis function takes a string as an argument and returns the string in lower case.\n\t\"\"\"\n\tlower_string = \"\"\n\tfor i in string\n\t\tif (i >= \"A\" && i <= \"Z\")\n\t\t\tlower_string += (i + 32)\n\t\telse\n\t\t\tlower_string += i\n\treturn lower_string",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to check whether a string is a palindrome or not.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\treturn string.lower()\nend",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\"",
    "\t\"\"\"\n\tWrite a jlthon function to convert the given string to upper case.\n\t\"\"\""
  ]
}
{
  "name": "mbpp_793_last",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the last position of an element in a sorted vector.\n\t\"\"\"\nfunction last(arr::Vector{Int64}, x::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = last;\n\t@test(candidate([1, 2, 3], 1) == 0)\n\t@test(candidate([1, 1, 1, 2, 3, 4], 1) == 2)\n\t@test(candidate([2, 3, 2, 3, 6, 8, 9], 3) == 3)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tl = m + 1\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tl = 1\n\tr = length(arr)\n\twhile l < r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\treturn l - 1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] == x\n\t\t\tif m == length(arr) || arr[m+1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m+1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m-1\n\t\telse\n\t\t\tl = m+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m + 1] > x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l < r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\treturn l - 1\nend",
    "\ti = 1\n\tj = length(arr)\n\twhile i <= j\n\t\tm = (i+j)>>1\n\t\tif arr[m] <= x\n\t\t\ti = m+1\n\t\telse\n\t\t\tj = m-1\n\t\tend\n\tend\n\treturn j\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = 1\n\tj = length(arr)\n\twhile i < j\n\t\tm = div(i+j, 2)\n\t\tif arr[m] <= x\n\t\t\ti = m+1\n\t\telse\n\t\t\tj = m\n\t\tend\n\tend\n\treturn i-1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m+1] > x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m+1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m-1\n\t\telse\n\t\t\tl = m+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl::Int64 = 1\n\tr::Int64 = length(arr)\n\twhile l <= r\n\t\tm::Int64 = (l+r)>>1\n\t\tif arr[m] == x\n\t\t\tif m == length(arr) || arr[m+1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m+1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m-1\n\t\telse\n\t\t\tl = m+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = 1\n\twhile i <= length(arr)\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti += 1\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m + 1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid+1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid-1\n\t\telse\n\t\t\tl = mid+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l + r, 2)\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlo = 1\n\thi = length(arr)\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tif mid == n || arr[mid+1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l+r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid+1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl::Int64 = 1\n\tr::Int64 = length(arr)\n\twhile l < r\n\t\tm::Int64 = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m+1] > x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = low + (high - low) / 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\tend\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif x == arr[mid]\n\t\t\tif mid == n || x != arr[mid + 1]\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif x < arr[mid]\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == length(arr) || arr[m+1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif x > arr[mid]\n\t\t\tlow = mid + 1\n\t\telseif x < arr[mid]\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l + r, 2)\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low+high)>>1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid+1\n\t\telse\n\t\t\thigh = mid-1\n\t\tend\n\tend\n\treturn high\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = 1\n\twhile i <= length(arr)\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti += 1\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m + 1] > x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tn = length(arr)\n\tstart = 1\n\tstop = n\n\twhile start <= stop\n\t\tmid = (start + stop) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tstart = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tstop = mid - 1\n\t\telse\n\t\t\tstart = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif x == arr[mid]\n\t\t\tif mid == n || x < arr[mid + 1]\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif x < arr[mid]\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = 1\n\tj = length(arr)\n\twhile i <= j\n\t\tmid = (i+j)>>1\n\t\tif arr[mid] == x\n\t\t\ti = mid + 1\n\t\telse\n\t\t\tj = mid - 1\n\t\tend\n\tend\n\treturn j\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l + r, 2)\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 0\n\t\treturn -1\n\tend\n\tl = 1\n\tr = n\n\twhile l < r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti -= 1\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l < r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tlo = 1\n\thi = n\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 0\n\t\treturn -1\n\tend\n\tl = 0\n\tr = n - 1\n\twhile l < r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] > x\n\t\t\tr = m-1\n\t\telseif arr[m] < x\n\t\t\tl = m+1\n\t\telse\n\t\t\tif m == length(arr) || arr[m+1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m+1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == length(arr) || arr[m + 1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tlo = 1\n\thi = n\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\t\"\"\"\n\tFind the last position of x in arr.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m + 1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] < x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l < r\n\t\tm = (l + r) \u00f7 2\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 0\n\t\treturn -1\n\tend\n\tl = 1\n\tr = n\n\twhile l < r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\ti = length(arr)\n\twhile i > 0 && arr[i] > x\n\t\ti -= 1\n\tend\n\treturn i\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l+r, 2)\n\t\tif arr[m] == x\n\t\t\tif m == length(arr)\n\t\t\t\treturn m\n\t\t\telseif arr[m+1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] < x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl::Int64 = 1\n\tr::Int64 = length(arr)\n\twhile l <= r\n\t\tmid::Int64 = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti -= 1\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low+high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] > x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid+1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid-1\n\t\telse\n\t\t\tlow = mid+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti -= 1\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlo = 1\n\thi = n\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == n || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = floor(Int64, (low + high) / 2)\n\t\tif arr[mid] == x && (mid == n || arr[mid + 1] > x)\n\t\t\treturn mid\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr)\n\t\t\t\treturn mid\n\t\t\telseif arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] < x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l + r, 2)\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] == x\n\t\t\tif m == n || arr[m + 1] != x\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] > x\n\t\t\tr = m - 1\n\t\telse\n\t\t\tl = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\ti = length(arr)\n\twhile i > 0\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti -= 1\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l < r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l+r)>>1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid+1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid+1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid-1\n\t\telse\n\t\t\tl = mid+1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = div(l + r, 2)\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\ti = length(arr)\n\twhile i >= 1\n\t\tif arr[i] == x\n\t\t\treturn i\n\t\tend\n\t\ti -= 1\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlow = 1\n\thigh = n\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x && (mid == n || arr[mid + 1] > x)\n\t\t\treturn mid\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tn = length(arr)\n\tlo = 1\n\thi = n\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tn = length(arr)\n\tl = 1\n\tr = n\n\twhile l < r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] <= x\n\t\t\tl = mid + 1\n\t\telse\n\t\t\tr = mid\n\t\tend\n\tend\n\tif arr[l] == x\n\t\treturn l\n\telse\n\t\treturn -1\n\tend\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = low + (high - low) / 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = l + (r - l) / 2\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\tn = length(arr)\n\tlo = 1\n\thi = n\n\twhile lo <= hi\n\t\tmid = (lo + hi) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlo = mid + 1\n\t\telse\n\t\t\thi = mid - 1\n\t\tend\n\tend\n\treturn hi\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] <= x\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn high\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l + r) >> 1\n\t\tif arr[m] <= x\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tm = (l+r)>>1\n\t\tif arr[m] <= x\n\t\t\tl = m+1\n\t\telse\n\t\t\tr = m-1\n\t\tend\n\tend\n\treturn r\nend",
    "\tl = 1\n\tr = length(arr)\n\twhile l <= r\n\t\tmid = (l + r) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tl = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\tr = mid - 1\n\t\telse\n\t\t\tl = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "\t\"\"\"\n\tFind the last position of an element in a sorted vector.\n\t\"\"\"\n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) >> 1\n\t\tif arr[mid] == x\n\t\t\tif mid == length(arr) || arr[mid + 1] != x\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend"
  ]
}
{
  "name": "mbpp_801_test_three_equal",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && x == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && x == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z \n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || z == x\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x==y==z\n\t\treturn 3\n\telseif x==y || x==z || y==z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y\n\t\treturn 2\n\telseif x == z\n\t\treturn 2\n\telseif y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && y == z\n\t\treturn 3\n\telseif x == y || y == z || x == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y && x == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to count the number of equal numbers from three given integers.\n\t\"\"\"\nfunction test_three_equal(x::Int64, y::Int64, z::Int64)::Int64 \n\tif x == y == z\n\t\treturn 3\n\telseif x == y || x == z || y == z\n\t\treturn 2\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = test_three_equal;\n\t@test(candidate(1, 1, 1) == 3)\n\t@test(candidate(-1, -2, -3) == 0)\n\t@test(candidate(1, 2, 2) == 2)\nend\n",
      "timestamp": 1665517450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
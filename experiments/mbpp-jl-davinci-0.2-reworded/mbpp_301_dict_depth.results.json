{
  "name": "mbpp_301_dict_depth",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + max(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7hoonk6y.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7hoonk6y.jl:1\nin expression starting at /tmp/tmp7hoonk6y.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d,Dict)\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqcig1xc.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqcig1xc.jl:1\nin expression starting at /tmp/tmpaqcig1xc.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d,Dict)\n\t\treturn 1 + maximum(map(dict_depth,values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6rjc1pgf.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6rjc1pgf.jl:1\nin expression starting at /tmp/tmp6rjc1pgf.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpeosjkd0n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpeosjkd0n.jl:1\nin expression starting at /tmp/tmpeosjkd0n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tdepth = 0\n\t\tfor key in keys(d)\n\t\t\tdepth = max(depth, dict_depth(d[key]))\n\t\tend\n\t\treturn depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmplwwcx_6a.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplwwcx_6a.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplwwcx_6a.jl:19\ntest set: Test Failed at /tmp/tmplwwcx_6a.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplwwcx_6a.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplwwcx_6a.jl:19\ntest set: Test Failed at /tmp/tmplwwcx_6a.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplwwcx_6a.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplwwcx_6a.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplwwcx_6a.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpopybbpxo.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpopybbpxo.jl:1\nin expression starting at /tmp/tmpopybbpxo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\tmax_depth = 0 \n\tfor (k,v) in d \n\t\tmax_depth = max(max_depth, dict_depth(v)) \n\tend \n\treturn max_depth + 1 \nend \nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpitjqsw2p.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpitjqsw2p.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpitjqsw2p.jl:18\ntest set: Test Failed at /tmp/tmpitjqsw2p.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpitjqsw2p.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpitjqsw2p.jl:18\ntest set: Test Failed at /tmp/tmpitjqsw2p.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpitjqsw2p.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpitjqsw2p.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpitjqsw2p.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpkpv0p8g0.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpv0p8g0.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpv0p8g0.jl:14\ntest set: Test Failed at /tmp/tmpkpv0p8g0.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpv0p8g0.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpv0p8g0.jl:14\ntest set: Test Failed at /tmp/tmpkpv0p8g0.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkpv0p8g0.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkpv0p8g0.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkpv0p8g0.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend \nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpsc_oz65n.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc_oz65n.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc_oz65n.jl:14\ntest set: Test Failed at /tmp/tmpsc_oz65n.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc_oz65n.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc_oz65n.jl:14\ntest set: Test Failed at /tmp/tmpsc_oz65n.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsc_oz65n.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsc_oz65n.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsc_oz65n.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpg3ywlwo8.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg3ywlwo8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[key]) for key in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzj4yniy7.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzj4yniy7.jl:1\nin expression starting at /tmp/tmpzj4yniy7.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpg3ywlwo8.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg3ywlwo8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp3stom6a2.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\ntest set: Test Failed at /tmp/tmp3stom6a2.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\ntest set: Test Failed at /tmp/tmp3stom6a2.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3stom6a2.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\tmax_depth = 0\n\tfor (key, value) in d\n\t\tmax_depth = max(max_depth, dict_depth(value))\n\tend\n\treturn max_depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmptutheugt.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptutheugt.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptutheugt.jl:18\ntest set: Test Failed at /tmp/tmptutheugt.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptutheugt.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptutheugt.jl:18\ntest set: Test Failed at /tmp/tmptutheugt.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptutheugt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptutheugt.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptutheugt.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9l6yej95.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9l6yej95.jl:1\nin expression starting at /tmp/tmp9l6yej95.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp554776al.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp554776al.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpflhonxvi.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpflhonxvi.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d,Dict)\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp19h1m_mp.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp19h1m_mp.jl:1\nin expression starting at /tmp/tmp19h1m_mp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpnsx2x2oc.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnsx2x2oc.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp554776al.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp554776al.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\telse \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)]) \n\tend \nend \nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpfre26vsp.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfre26vsp.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfre26vsp.jl:15\ntest set: Test Failed at /tmp/tmpfre26vsp.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfre26vsp.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfre26vsp.jl:15\ntest set: Test Failed at /tmp/tmpfre26vsp.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfre26vsp.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfre26vsp.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfre26vsp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp39g7mj4o.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp39g7mj4o.jl:1\nin expression starting at /tmp/tmp39g7mj4o.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmplrjfx7cy.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\ntest set: Test Failed at /tmp/tmplrjfx7cy.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\ntest set: Test Failed at /tmp/tmplrjfx7cy.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplrjfx7cy.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpne7_17fx.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpne7_17fx.jl:1\nin expression starting at /tmp/tmpne7_17fx.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 1\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmphnb9m3j6.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 1 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphnb9m3j6.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphnb9m3j6.jl:15\ntest set: Test Failed at /tmp/tmphnb9m3j6.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphnb9m3j6.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphnb9m3j6.jl:15\ntest set: Test Failed at /tmp/tmphnb9m3j6.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphnb9m3j6.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphnb9m3j6.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphnb9m3j6.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tmax_depth = 0\n\t\tfor (k,v) in d\n\t\t\tmax_depth = max(max_depth, dict_depth(v))\n\t\tend\n\t\treturn max_depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmp0io8dgtv.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0io8dgtv.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0io8dgtv.jl:19\ntest set: Test Failed at /tmp/tmp0io8dgtv.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0io8dgtv.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0io8dgtv.jl:19\ntest set: Test Failed at /tmp/tmp0io8dgtv.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0io8dgtv.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0io8dgtv.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0io8dgtv.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tdepth = 1\n\t\tfor key in keys(d)\n\t\t\tdepth = max(depth, 1 + dict_depth(d[key]))\n\t\tend\n\t\treturn depth\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmpgtrznl57.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtrznl57.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtrznl57.jl:19\ntest set: Test Failed at /tmp/tmpgtrznl57.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtrznl57.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtrznl57.jl:19\ntest set: Test Failed at /tmp/tmpgtrznl57.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgtrznl57.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgtrznl57.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgtrznl57.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp554776al.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp554776al.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp554776al.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp554776al.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\telse \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlv4k9gp.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlv4k9gp.jl:1\nin expression starting at /tmp/tmpxlv4k9gp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmpr5ktje6v.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5ktje6v.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5ktje6v.jl:15\ntest set: Test Failed at /tmp/tmpr5ktje6v.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5ktje6v.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5ktje6v.jl:15\ntest set: Test Failed at /tmp/tmpr5ktje6v.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr5ktje6v.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr5ktje6v.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpr5ktje6v.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmpfnbb1a48.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnbb1a48.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnbb1a48.jl:15\ntest set: Test Failed at /tmp/tmpfnbb1a48.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnbb1a48.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnbb1a48.jl:15\ntest set: Test Failed at /tmp/tmpfnbb1a48.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfnbb1a48.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfnbb1a48.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfnbb1a48.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmp9xeqz6li.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xeqz6li.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xeqz6li.jl:14\ntest set: Test Failed at /tmp/tmp9xeqz6li.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xeqz6li.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xeqz6li.jl:14\ntest set: Test Failed at /tmp/tmp9xeqz6li.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9xeqz6li.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9xeqz6li.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9xeqz6li.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmpgsf3jhcu.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgsf3jhcu.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgsf3jhcu.jl:15\ntest set: Test Failed at /tmp/tmpgsf3jhcu.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgsf3jhcu.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgsf3jhcu.jl:15\ntest set: Test Failed at /tmp/tmpgsf3jhcu.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgsf3jhcu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgsf3jhcu.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgsf3jhcu.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp554776al.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\ntest set: Test Failed at /tmp/tmp554776al.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp554776al.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp554776al.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp554776al.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tmax_depth = 0\n\t\tfor key in keys(d)\n\t\t\tmax_depth = max(max_depth, dict_depth(d[key]))\n\t\tend\n\t\treturn max_depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "test set: Test Failed at /tmp/tmp_n4hx84e.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_n4hx84e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_n4hx84e.jl:19\ntest set: Test Failed at /tmp/tmp_n4hx84e.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_n4hx84e.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_n4hx84e.jl:19\ntest set: Test Failed at /tmp/tmp_n4hx84e.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_n4hx84e.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_n4hx84e.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_n4hx84e.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tmax_depth = 0\n\t\tfor (k,v) in d\n\t\t\tdepth = dict_depth(v)\n\t\t\tif depth > max_depth\n\t\t\t\tmax_depth = depth\n\t\t\tend\n\t\tend\n\t\treturn max_depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmps8b7jxhy.jl:23\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:24\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:25\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps8b7jxhy.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict{Any,Any}\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmpas9uwz5b.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpas9uwz5b.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpas9uwz5b.jl:15\ntest set: Test Failed at /tmp/tmpas9uwz5b.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpas9uwz5b.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpas9uwz5b.jl:15\ntest set: Test Failed at /tmp/tmpas9uwz5b.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpas9uwz5b.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpas9uwz5b.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpas9uwz5b.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\tmax_depth = 0\n\tfor (k, v) in d\n\t\tmax_depth = max(max_depth, dict_depth(v))\n\tend\n\treturn max_depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmpy7irlwku.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7irlwku.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7irlwku.jl:18\ntest set: Test Failed at /tmp/tmpy7irlwku.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7irlwku.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7irlwku.jl:18\ntest set: Test Failed at /tmp/tmpy7irlwku.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy7irlwku.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy7irlwku.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy7irlwku.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0ep1f27.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt0ep1f27.jl:1\nin expression starting at /tmp/tmpt0ep1f27.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzx8wenar.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzx8wenar.jl:1\nin expression starting at /tmp/tmpzx8wenar.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpne7_17fx.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpne7_17fx.jl:1\nin expression starting at /tmp/tmpne7_17fx.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp39g7mj4o.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp39g7mj4o.jl:1\nin expression starting at /tmp/tmp39g7mj4o.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpydmcv2do.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\ntest set: Test Failed at /tmp/tmpydmcv2do.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpydmcv2do.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpydmcv2do.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpydmcv2do.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpnsx2x2oc.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnsx2x2oc.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict{Any, Any}\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmpo8sgpzqi.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8sgpzqi.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8sgpzqi.jl:15\ntest set: Test Failed at /tmp/tmpo8sgpzqi.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8sgpzqi.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8sgpzqi.jl:15\ntest set: Test Failed at /tmp/tmpo8sgpzqi.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo8sgpzqi.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo8sgpzqi.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpo8sgpzqi.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpg3ywlwo8.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\ntest set: Test Failed at /tmp/tmpg3ywlwo8.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg3ywlwo8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg3ywlwo8.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg3ywlwo8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\telse \n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)]) \n\tend \nend \nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmpup0sju8g.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpup0sju8g.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpup0sju8g.jl:15\ntest set: Test Failed at /tmp/tmpup0sju8g.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpup0sju8g.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpup0sju8g.jl:15\ntest set: Test Failed at /tmp/tmpup0sju8g.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpup0sju8g.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpup0sju8g.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpup0sju8g.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf241c5ba.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf241c5ba.jl:1\nin expression starting at /tmp/tmpf241c5ba.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmplrjfx7cy.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\ntest set: Test Failed at /tmp/tmplrjfx7cy.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\ntest set: Test Failed at /tmp/tmplrjfx7cy.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplrjfx7cy.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplrjfx7cy.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplrjfx7cy.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
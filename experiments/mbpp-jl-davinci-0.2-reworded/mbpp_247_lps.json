{
  "name": "mbpp_247_lps",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the length of the longest palindromic subsequence in the given string.\n\t\"\"\"\nfunction lps(str::String)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_247_lps.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = lps;\n\t@test(candidate(\"TENS FOR TENS\") == 5)\n\t@test(candidate(\"CARDIO FOR CARDS\") == 7)\n\t@test(candidate(\"PART OF THE JOURNEY IS PART\") == 9)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i,i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i,j] = L[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tL[i,j] = max(L[i,j-1], L[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i,i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i,j] = L[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tL[i,j] = max(L[i,j-1], L[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1,n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tdp[i, i+1] = 2*(str[i] == str[i+1])\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend"
  ]
}
{
  "name": "mbpp_79_word_len",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s)%2==1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tlen(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510630,
      "stdout": "test set: Error During Test at /tmp/tmpcedu3jwx.jl:12\n  Test threw exception\n  Expression: candidate(\"Hadoop\") == false\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\ntest set: Error During Test at /tmp/tmpcedu3jwx.jl:13\n  Test threw exception\n  Expression: candidate(\"great\") == true\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\ntest set: Error During Test at /tmp/tmpcedu3jwx.jl:14\n  Test threw exception\n  Expression: candidate(\"structure\") == true\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:14 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpcedu3jwx.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s)%2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmpy3xqm0mj.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3xqm0mj.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3xqm0mj.jl:15\ntest set: Test Failed at /tmp/tmpy3xqm0mj.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3xqm0mj.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3xqm0mj.jl:15\ntest set: Test Failed at /tmp/tmpy3xqm0mj.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy3xqm0mj.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy3xqm0mj.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy3xqm0mj.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tlen = length(s)\n\tif len % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s)%2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123676,
      "stdout": "test set: Test Failed at /tmp/tmp53zoswsw.jl:12\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:13\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\ntest set: Test Failed at /tmp/tmp53zoswsw.jl:14\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp53zoswsw.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp53zoswsw.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp53zoswsw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s)%2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tlen = length(s)\n\tif len % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tlen(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510630,
      "stdout": "test set: Error During Test at /tmp/tmpcedu3jwx.jl:12\n  Test threw exception\n  Expression: candidate(\"Hadoop\") == false\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\ntest set: Error During Test at /tmp/tmpcedu3jwx.jl:13\n  Test threw exception\n  Expression: candidate(\"great\") == true\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\ntest set: Error During Test at /tmp/tmpcedu3jwx.jl:14\n  Test threw exception\n  Expression: candidate(\"structure\") == true\n  UndefVarError: len not defined\n  Stacktrace:\n   [1] word_len(s::String)\n     @ Main /tmp/tmpcedu3jwx.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcedu3jwx.jl:14 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcedu3jwx.jl:11\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpcedu3jwx.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510629,
      "stdout": "test set: Test Failed at /tmp/tmpkigldq5r.jl:16\n  Expression: candidate(\"Hadoop\") == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:17\n  Expression: candidate(\"great\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\ntest set: Test Failed at /tmp/tmpkigldq5r.jl:18\n  Expression: candidate(\"structure\") == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkigldq5r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkigldq5r.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkigldq5r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tlen = length(s)\n\tif len % 2 == 0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 0 ? false : true\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\tif length(s) % 2 == 0 \n\t\treturn false \n\telse \n\t\treturn true \n\tend \nend \nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to check whether the length of the word is odd or not.\n\t\"\"\"\nfunction word_len(s::String)::Bool \n\treturn length(s) % 2 == 1\nend\nusing Test\n\n@testset begin\n\ncandidate = word_len;\n\t@test(candidate(\"Hadoop\") == false)\n\t@test(candidate(\"great\") == true)\n\t@test(candidate(\"structure\") == true)\nend\n",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
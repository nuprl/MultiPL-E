{
  "name": "mbpp_558_digit_distance_nums",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tn1_list = digits(n1)\n\tn2_list = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_list)\n\t\tsum += abs(n1_list[i] - n2_list[i])\n\tend\n\treturn sum\nend",
    "\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# Pad with zeros\n\tn1_str = \"0\"^(length(n2_str)-length(n1_str)) * n1_str\n\tn2_str = \"0\"^(length(n1_str)-length(n2_str)) * n2_str\n\t# Sum the absolute differences\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .* n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tif n1 < 0 || n2 < 0\n\t\tthrow(ArgumentError(\"n1 and n2 must be positive integers\"))\n\tend\n\t\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) != length(n2_digits)\n\t\tthrow(ArgumentError(\"n1 and n2 must have the same number of digits\"))\n\tend\n\t\n\tsum = 0\n\tfor i = 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tn1, n2 = max(n1, n2), min(n1, n2)\n\ts = 0\n\twhile n1 > 0\n\t\ts += n1 % 10 - n2 % 10\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\td1 = digits(n1)\n\td2 = digits(n2)\n\tsum = 0\n\tfor i in 1:length(d1)\n\t\tsum += abs(d1[i] - d2[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# Pad the shorter number with zeros\n\tif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\telseif length(n2_digits) < length(n1_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tif length(n1_str) != length(n2_str)\n\t\treturn -1\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCompute the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len-n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len-n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\t\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i = 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i = 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = n1 - n1 % 10\n\tn2 = n2 - n2 % 10\n\tn1 = n1 / 10\n\tn2 = n2 / 10\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tif n1 > 0\n\t\t\tsum += n1 % 10\n\t\tend\n\t\tif n2 > 0\n\t\t\tsum += n2 % 10\n\t\tend\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n1_len < n2_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(parse.(Int64, n1_str) .- parse.(Int64, n2_str)))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n2_len > n1_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(Int64.(n1_str) .- Int64.(n2_str)))\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tif n1 < 0 || n2 < 0\n\t\treturn -1\n\tend\n\t\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) != length(n2_digits)\n\t\treturn -1\n\tend\n\t\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tfor i in 1:n1_len - n2_len\n\t\t\tpush!(n2_digits, 0)\n\t\tend\n\telseif n2_len > n1_len\n\t\tfor i in 1:n2_len - n1_len\n\t\t\tpush!(n1_digits, 0)\n\t\tend\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\t\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len-n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len-n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tif n1 > 0\n\t\t\td1 = n1 % 10\n\t\t\tn1 = n1 / 10\n\t\telse\n\t\t\td1 = 0\n\t\tend\n\t\tif n2 > 0\n\t\t\td2 = n2 % 10\n\t\t\tn2 = n2 / 10\n\t\telse\n\t\t\td2 = 0\n\t\tend\n\t\tsum += abs(d1 - d2)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# Find the length of the longer number\n\tmax_len = max(length(n1_str), length(n2_str))\n\t# Pad the shorter number with zeros\n\tn1_str = n1_str * \"0\"^(max_len - length(n1_str))\n\tn2_str = n2_str * \"0\"^(max_len - length(n2_str))\n\t# Convert back to integers\n\tn1_arr = parse.(Int64, n1_str)\n\tn2_arr = parse.(Int64, n2_str)\n\t# Find the difference between each digit\n\tdiff_arr = abs.(n1_arr - n2_arr)\n\t# Sum the differences\n\treturn sum(diff_arr)\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[end:-1:1], d2[end:-1:1]\n\tif length(d1) > length(d2)\n\t\td2 = vcat(zeros(Int64, length(d1) - length(d2)), d2)\n\telseif length(d2) > length(d1)\n\t\td1 = vcat(zeros(Int64, length(d2) - length(d1)), d1)\n\tend\n\treturn sum(abs.(d1 - d2))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .+ n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_length = length(n1_digits)\n\tn2_digits_length = length(n2_digits)\n\tif n1_digits_length > n2_digits_length\n\t\tn2_digits = [0 for i in 1:n1_digits_length - n2_digits_length] .+ n2_digits\n\telseif n2_digits_length > n1_digits_length\n\t\tn1_digits = [0 for i in 1:n2_digits_length - n1_digits_length] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = n1 \u00f7 10, n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "    n1_digits = digits(n1)\n    n2_digits = digits(n2)\n    sum = 0\n    for i in 1:length(n1_digits)\n        sum += abs(n1_digits[i] - n2_digits[i])\n    end\n    return sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in digits(n1)\n\t\tfor j in digits(n2)\n\t\t\tsum += abs(i - j)\n\t\tend\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == n2\n\t\treturn 0\n\tend\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# Pad the shorter number with zeros\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits)-length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits)-length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = n1 - n1 % 10\n\tn2 = n2 - n2 % 10\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = vcat(zeros(Int64, n1_len - n2_len), n2_digits)\n\telseif n2_len > n1_len\n\t\tn1_digits = vcat(zeros(Int64, n2_len - n1_len), n1_digits)\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == n2\n\t\treturn 0\n\tend\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\treturn sum(abs.(digits(n1) - digits(n2)))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tif length(n1_str) > length(n2_str)\n\t\tn2_str = repeat(\"0\", length(n1_str) - length(n2_str)) * n2_str\n\telseif length(n2_str) > length(n1_str)\n\t\tn1_str = repeat(\"0\", length(n2_str) - length(n1_str)) * n1_str\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tn1, n2 = min(n1, n2), max(n1, n2)\n\tn1_digits, n2_digits = digits(n1), digits(n2)\n\tn1_digits, n2_digits = reverse(n1_digits), reverse(n2_digits)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\t# convert to string\n\tn1 = string(n1)\n\tn2 = string(n2)\n\t# find the length of the longer number\n\tmax_len = max(length(n1), length(n2))\n\t# pad the shorter number with zeros\n\tn1 = string(\"0\", n1)\n\tn2 = string(\"0\", n2)\n\t# initialize the sum\n\tsum = 0\n\t# iterate through the digits\n\tfor i in 1:max_len\n\t\t# find the difference between the digits\n\t\tdiff = abs(parse(Int64, n1[i]) - parse(Int64, n2[i]))\n\t\t# add the difference to the sum\n\t\tsum += diff\n\tend\n\t# return the sum\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = digits(n1)\n\tn2 = digits(n2)\n\tn1 = length(n1)\n\tn2 = length(n2)\n\treturn abs(n1-n2)\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == 0 && n2 == 0\n\t\treturn 0\n\tend\n\treturn (n1 % 10 - n2 % 10) + digit_distance_nums(n1 / 10, n2 / 10)\nend",
    "\t# convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t\n\t# pad with zeros\n\tif length(n1_str) > length(n2_str)\n\t\tn2_str = repeat(\"0\", length(n1_str) - length(n2_str)) * n2_str\n\telseif length(n2_str) > length(n1_str)\n\t\tn1_str = repeat(\"0\", length(n2_str) - length(n1_str)) * n1_str\n\tend\n\t\n\t# sum the differences\n\treturn sum(abs.(Int64.(n1_str) .- Int64.(n2_str)))\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = n1 \u00f7 10, n2 \u00f7 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0]*(length(n1_digits) - length(n2_digits)) .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0]*(length(n2_digits) - length(n1_digits)) .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1,10) - mod(n2,10))\n\t\tn1 = div(n1,10)\n\t\tn2 = div(n2,10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tdiff = 0\n\twhile n1 > 0 || n2 > 0\n\t\tdiff += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn diff\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = string(n1)\n\tn2 = string(n2)\n\tif length(n1) > length(n2)\n\t\tn2 = \"0\"*(length(n1)-length(n2))*n2\n\telseif length(n1) < length(n2)\n\t\tn1 = \"0\"*(length(n2)-length(n1))*n1\n\tend\n\treturn sum(abs.(Int64.(n1)-Int64.(n2)))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\t\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tdiff = 0\n\twhile n1 > 0 || n2 > 0\n\t\tdiff += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn diff\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n1_digits_len < n2_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tdigit_distance_nums(n1::Int64, n2::Int64)::Int64\n\t\n\tCalculate the sum of the per-digit difference between two integers.\n\t\n\tParameters\n\t----------\n\tn1 : Int64\n\t\tFirst integer.\n\tn2 : Int64\n\t\tSecond integer.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tSum of the per-digit difference between two integers.\n\t\"\"\"\n\t\n\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t\n\t# Find the length of the shorter string\n\tlen_short = min(length(n1_str), length(n2_str))\n\t\n\t# Initialize the sum\n\tsum = 0\n\t\n\t# Loop over the shorter string\n\tfor i in 1:len_short\n\t\t# Add the difference between the digits to the sum\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\t\n\t# Return the sum\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[end:-1:1], d2[end:-1:1]\n\td1, d2 = fill(0, max(length(d2), length(d1)) - length(d1)) * d1, fill(0, max(length(d2), length(d1)) - length(d2)) * d2\n\treturn sum(abs.(d1 - d2))\nend",
    "\t\"\"\"\n\tReturn the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .+ n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0] * (n1_digits_len - n2_digits_len) + n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0] * (n2_digits_len - n1_digits_len) + n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\treturn sum(abs(digits(n1) .- digits(n2)))\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn s\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0] * (length(n1_digits) - length(n2_digits)) * n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0] * (length(n2_digits) - length(n1_digits)) * n1_digits\n\tend\n\tsum(abs.(n1_digits - n2_digits))\nend",
    "\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tn1 = n1 - n2\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += n1 % 10\n\t\tn1 = n1 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n2_len > n1_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(parse.(Int64, n1_str) - parse.(Int64, n2_str)))\nend",
    "\t# convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# pad with zeros\n\tn1_str = \"0\"*(length(n2_str)-length(n1_str))*(length(n2_str)>length(n1_str))*n1_str\n\tn2_str = \"0\"*(length(n1_str)-length(n2_str))*(length(n1_str)>length(n2_str))*n2_str\n\t# convert to arrays\n\tn1_arr = [parse(Int64,n1_str[i]) for i in 1:length(n1_str)]\n\tn2_arr = [parse(Int64,n2_str[i]) for i in 1:length(n2_str)]\n\t# compute the sum of the differences\n\treturn sum(abs.(n1_arr-n2_arr))\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tReturns the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = append!(n2_digits, zeros(Int64, n1_len - n2_len))\n\telseif n2_len > n1_len\n\t\tn1_digits = append!(n1_digits, zeros(Int64, n2_len - n1_len))\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\t\"\"\"\n\tReturns the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend",
    "\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len != n2_len\n\t\treturn -1\n\tend\n\tsum = 0\n\tfor i in 1:n1_len\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t# convert to string\n\tn1 = string(n1)\n\tn2 = string(n2)\n\t# pad with zeros\n\tn1 = \"0\"^(length(n2)-length(n1))*n1\n\tn2 = \"0\"^(length(n1)-length(n2))*n2\n\t# sum the absolute differences\n\tsum(abs(parse(Int64, n1[i])-parse(Int64, n2[i])) for i in 1:length(n1))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tCompute the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# pad the shorter number with zeros\n\tif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = vcat(zeros(Int64, length(n2_digits) - length(n1_digits)), n1_digits)\n\telseif length(n2_digits) < length(n1_digits)\n\t\tn2_digits = vcat(zeros(Int64, length(n1_digits) - length(n2_digits)), n2_digits)\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\t\"\"\"\n\tdigit_distance_nums(n1::Int64, n2::Int64) -> Int64\n\t\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = vcat(zeros(Int64, n1_len - n2_len), n2_digits)\n\telseif n2_len > n1_len\n\t\tn1_digits = vcat(zeros(Int64, n2_len - n1_len), n1_digits)\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = n2_str * \"0\"\n\telseif n2_len > n1_len\n\t\tn1_str = n1_str * \"0\"\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[:], d2[:]\n\tif length(d1) < length(d2)\n\t\td1 = [0 for i in 1:length(d2)-length(d1)] .+ d1\n\telseif length(d2) < length(d1)\n\t\td2 = [0 for i in 1:length(d1)-length(d2)] .+ d2\n\tend\n\tsum(abs.(d1-d2))\nend",
    "\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = string(\"0\", n2_str)\n\telseif n1_len < n2_len\n\t\tn1_str = string(\"0\", n1_str)\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend"
  ]
}
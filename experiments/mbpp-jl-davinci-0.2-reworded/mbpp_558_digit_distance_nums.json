{
  "name": "mbpp_558_digit_distance_nums",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tn1_list = digits(n1)\n\tn2_list = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_list)\n\t\tsum += abs(n1_list[i] - n2_list[i])\n\tend\n\treturn sum\nend",
    "\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# Pad with zeros\n\tn1_str = \"0\"^(length(n2_str)-length(n1_str)) * n1_str\n\tn2_str = \"0\"^(length(n1_str)-length(n2_str)) * n2_str\n\t# Sum the absolute differences\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .* n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend",
    "\tif n1 < 0 || n2 < 0\n\t\tthrow(ArgumentError(\"n1 and n2 must be positive integers\"))\n\tend\n\t\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) != length(n2_digits)\n\t\tthrow(ArgumentError(\"n1 and n2 must have the same number of digits\"))\n\tend\n\t\n\tsum = 0\n\tfor i = 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tn1, n2 = max(n1, n2), min(n1, n2)\n\ts = 0\n\twhile n1 > 0\n\t\ts += n1 % 10 - n2 % 10\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend",
    "\td1 = digits(n1)\n\td2 = digits(n2)\n\tsum = 0\n\tfor i in 1:length(d1)\n\t\tsum += abs(d1[i] - d2[i])\n\tend\n\treturn sum\nend",
    "\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend",
    "\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend"
  ]
}
{
  "name": "mbpp_59_is_octagonal",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the nth octagonal number.\n\t\"\"\"\nfunction is_octagonal(n::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_octagonal;\n\t@test(candidate(5) == 65)\n\t@test(candidate(10) == 280)\n\t@test(candidate(15) == 645)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn floor(sqrt(2*n+1/3)) == sqrt(2*n+1/3)",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n) + 1) % 6 == 0\nend",
    "\t\"\"\"\n\tCheck if the number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n + 1) + 1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn floor(sqrt(2*n+1/3))*(sqrt(2*n+1/3)+1)/2 == n ? 1 : 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tDetermine if a number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tCheck if a number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n + 1) + 1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn ((sqrt(24*n+1)+1)/6)%1 == 0 ? 1 : 0\nend",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24 * n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturn 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn floor(sqrt(2*n+1/3))*(sqrt(2*n+1/3)+1)/2 == n ? 1 : 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tDetermine if a number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n + 1) + 1) / 6\nend",
    "\t\"\"\"\n\tReturn 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n) + 1) % 6 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend"
  ]
}
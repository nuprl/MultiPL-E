{
  "name": "mbpp_86_centered_hexagonal_number",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find nth centered hexagonal number.\n\t\"\"\"\nfunction centered_hexagonal_number(n::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = centered_hexagonal_number;\n\t@test(candidate(10) == 271)\n\t@test(candidate(2) == 7)\n\t@test(candidate(9) == 217)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (n*(2*n-1))\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn n*(2*n-1)\nend",
    "\treturn n*(2*n-1)\nend",
    "\treturn n*(2*n-1)\nend",
    "\treturn n*(2*n-1)\nend",
    "\treturn n*(2*n-1)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (3*n*n - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend",
    "\treturn (n*(2*n-1))\nend",
    "\treturn (3n^2 - 3n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 1)\nend",
    "\treturn (3*n*n - 3*n + 2)\nend",
    "\treturn (3*n^2 - 3*n + 2)\nend"
  ]
}
{
  "name": "mbpp_56_checks",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to check if a given number is one less than twice its reverse.\n\t\"\"\"\nfunction checks(n::Int64)::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = checks;\n\t@test(candidate(70) == false)\n\t@test(candidate(23) == false)\n\t@test(candidate(73) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn n == 2*reverse(n)-1\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\tn == 2*reverse(n)-1\nend",
    "\treturn n == (2*reverse(n)-1)\nend",
    "\treturn n == (n + reverse(n)) / 2\nend",
    "\tif n < 10\n\t\treturn false\n\tend\n\t\n\trev = 0\n\twhile n > 0\n\t\trev = 10*rev + n%10\n\t\tn = n/10\n\tend\n\t\n\treturn n == 2*rev - 1\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\treturn n == 2*reverse(n) - 1\nend",
    "\treturn n == (n-1) * 2\nend",
    "\treturn n == (n-1)*2\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\treturn n == (n-1)/2\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\treturn n == (n-1) * 2\nend",
    "\tn_rev = reverse(n)\n\treturn n_rev == n - 1\nend",
    "\treturn n == (n - 1) / 2\nend",
    "\tn1 = n\n\trev = 0\n\twhile n1 != 0\n\t\trev = rev*10 + n1%10\n\t\tn1 = n1/10\n\tend\n\treturn n == 2*rev - 1\nend",
    "\treturn n == 2*reverse(n) - 1\nend"
  ]
}
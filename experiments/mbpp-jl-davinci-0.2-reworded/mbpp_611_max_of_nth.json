{
  "name": "mbpp_611_max_of_nth",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function which given a matrix represented as a vector of vectors returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_611_max_of_nth.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tGiven a matrix represented as a vector of vectors and a column number N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in test_list\n\t\tif i[N] > max_val\n\t\t\tmax_val = i[N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\t\"\"\"\n\tWrite a function which given a matrix represented as a vector of vectors returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_val = -Inf\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\t\"\"\"\n\tGiven a matrix represented as a vector of vectors and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\t\"\"\"\n\tGiven a matrix represented as a vector of vectors and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = -Inf\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_val = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend",
    "\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend",
    "\tmax = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend",
    "\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend",
    "\tmax = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend",
    "\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend"
  ]
}
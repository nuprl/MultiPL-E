{
  "name": "mbpp_558_digit_distance_nums",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_list = digits(n1)\n\tn2_list = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_list)\n\t\tsum += abs(n1_list[i] - n2_list[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# Pad with zeros\n\tn1_str = \"0\"^(length(n2_str)-length(n1_str)) * n1_str\n\tn2_str = \"0\"^(length(n1_str)-length(n2_str)) * n2_str\n\t# Sum the absolute differences\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .* n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tif n1 < 0 || n2 < 0\n\t\tthrow(ArgumentError(\"n1 and n2 must be positive integers\"))\n\tend\n\t\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) != length(n2_digits)\n\t\tthrow(ArgumentError(\"n1 and n2 must have the same number of digits\"))\n\tend\n\t\n\tsum = 0\n\tfor i = 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tn1, n2 = max(n1, n2), min(n1, n2)\n\ts = 0\n\twhile n1 > 0\n\t\ts += n1 % 10 - n2 % 10\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\td1 = digits(n1)\n\td2 = digits(n2)\n\tsum = 0\n\tfor i in 1:length(d1)\n\t\tsum += abs(d1[i] - d2[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517495,
      "stdout": "test set: Error During Test at /tmp/tmpf1ztbslp.jl:21\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpf1ztbslp.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf1ztbslp.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf1ztbslp.jl:20\ntest set: Error During Test at /tmp/tmpf1ztbslp.jl:22\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpf1ztbslp.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf1ztbslp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpf1ztbslp.jl:20\ntest set: Error During Test at /tmp/tmpf1ztbslp.jl:23\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpf1ztbslp.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpf1ztbslp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf1ztbslp.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# Pad the shorter number with zeros\n\tif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\telseif length(n2_digits) < length(n1_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tif length(n1_str) != length(n2_str)\n\t\treturn -1\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCompute the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len-n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len-n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmp0d7yt06o.jl:23\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:24\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:25\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0d7yt06o.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\t\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i = 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i = 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = n1 - n1 % 10\n\tn2 = n2 - n2 % 10\n\tn1 = n1 / 10\n\tn2 = n2 / 10\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tif n1 > 0\n\t\t\tsum += n1 % 10\n\t\tend\n\t\tif n2 > 0\n\t\t\tsum += n2 % 10\n\t\tend\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "test set: Test Failed at /tmp/tmpawq9tsw_.jl:29\n  Expression: candidate(1, 2) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpawq9tsw_.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpawq9tsw_.jl:28\ntest set: Error During Test at /tmp/tmpawq9tsw_.jl:30\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(7.777777777777777)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpawq9tsw_.jl:22\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpawq9tsw_.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpawq9tsw_.jl:28\ntest set: Error During Test at /tmp/tmpawq9tsw_.jl:31\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(11.11111111111111)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpawq9tsw_.jl:22\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpawq9tsw_.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpawq9tsw_.jl:28\nTest Summary: | Fail  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpawq9tsw_.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n1_len < n2_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(parse.(Int64, n1_str) .- parse.(Int64, n2_str)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Test Failed at /tmp/tmprn8yp3ze.jl:25\n  Expression: candidate(23, 56) == 6\n   Evaluated: 33 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprn8yp3ze.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprn8yp3ze.jl:23\ntest set: Test Failed at /tmp/tmprn8yp3ze.jl:26\n  Expression: candidate(123, 256) == 7\n   Evaluated: 133 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprn8yp3ze.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprn8yp3ze.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprn8yp3ze.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n2_len > n1_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(Int64.(n1_str) .- Int64.(n2_str)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "test set: Error During Test at /tmp/tmp3qbdya0b.jl:24\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128, Int16, Int32, Int64, Int8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/gmp.jl:357\n    ...\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] _getindex\n      @ ./broadcast.jl:666 [inlined]\n    [4] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n    [5] _getindex\n      @ ./broadcast.jl:667 [inlined]\n    [6] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n    [7] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [8] copy\n      @ ./broadcast.jl:875 [inlined]\n    [9] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [10] digit_distance_nums(n1::Int64, n2::Int64)\n      @ Main /tmp/tmp3qbdya0b.jl:17\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [12] macro expansion\n      @ /tmp/tmp3qbdya0b.jl:24 [inlined]\n   [13] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [14] top-level scope\n      @ /tmp/tmp3qbdya0b.jl:23\ntest set: Error During Test at /tmp/tmp3qbdya0b.jl:25\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/env",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3qbdya0b.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tif n1 < 0 || n2 < 0\n\t\treturn -1\n\tend\n\t\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) != length(n2_digits)\n\t\treturn -1\n\tend\n\t\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tfor i in 1:n1_len - n2_len\n\t\t\tpush!(n2_digits, 0)\n\t\tend\n\telseif n2_len > n1_len\n\t\tfor i in 1:n2_len - n1_len\n\t\t\tpush!(n1_digits, 0)\n\t\tend\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\t\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpj1a63b35.jl:23\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpj1a63b35.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpj1a63b35.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpj1a63b35.jl:22\ntest set: Error During Test at /tmp/tmpj1a63b35.jl:24\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpj1a63b35.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpj1a63b35.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpj1a63b35.jl:22\ntest set: Error During Test at /tmp/tmpj1a63b35.jl:25\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpj1a63b35.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpj1a63b35.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj1a63b35.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len-n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len-n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tif n1 > 0\n\t\t\td1 = n1 % 10\n\t\t\tn1 = n1 / 10\n\t\telse\n\t\t\td1 = 0\n\t\tend\n\t\tif n2 > 0\n\t\t\td2 = n2 % 10\n\t\t\tn2 = n2 / 10\n\t\telse\n\t\t\td2 = 0\n\t\tend\n\t\tsum += abs(d1 - d2)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp1shw2k6g.jl:30\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1shw2k6g.jl:23\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1shw2k6g.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1shw2k6g.jl:29\ntest set: Error During Test at /tmp/tmp1shw2k6g.jl:31\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1shw2k6g.jl:23\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1shw2k6g.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1shw2k6g.jl:29\ntest set: Error During Test at /tmp/tmp1shw2k6g.jl:32\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1shw2k6g.jl:23\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1shw2k6g.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1shw2k6g.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp1cv0ad49.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1cv0ad49.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# Find the length of the longer number\n\tmax_len = max(length(n1_str), length(n2_str))\n\t# Pad the shorter number with zeros\n\tn1_str = n1_str * \"0\"^(max_len - length(n1_str))\n\tn2_str = n2_str * \"0\"^(max_len - length(n2_str))\n\t# Convert back to integers\n\tn1_arr = parse.(Int64, n1_str)\n\tn2_arr = parse.(Int64, n2_str)\n\t# Find the difference between each digit\n\tdiff_arr = abs.(n1_arr - n2_arr)\n\t# Sum the differences\n\treturn sum(diff_arr)\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Test Failed at /tmp/tmpytvcecvv.jl:30\n  Expression: candidate(23, 56) == 6\n   Evaluated: 33 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpytvcecvv.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpytvcecvv.jl:28\ntest set: Test Failed at /tmp/tmpytvcecvv.jl:31\n  Expression: candidate(123, 256) == 7\n   Evaluated: 133 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpytvcecvv.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpytvcecvv.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpytvcecvv.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp7i22b8ra.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7i22b8ra.jl:21\ntest set: Error During Test at /tmp/tmp7i22b8ra.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7i22b8ra.jl:21\ntest set: Error During Test at /tmp/tmp7i22b8ra.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7i22b8ra.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[end:-1:1], d2[end:-1:1]\n\tif length(d1) > length(d2)\n\t\td2 = vcat(zeros(Int64, length(d1) - length(d2)), d2)\n\telseif length(d2) > length(d1)\n\t\td1 = vcat(zeros(Int64, length(d2) - length(d1)), d1)\n\tend\n\treturn sum(abs.(d1 - d2))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmp0d7yt06o.jl:23\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:24\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:25\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0d7yt06o.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp8lausrl2.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8lausrl2.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .+ n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_length = length(n1_digits)\n\tn2_digits_length = length(n2_digits)\n\tif n1_digits_length > n2_digits_length\n\t\tn2_digits = [0 for i in 1:n1_digits_length - n2_digits_length] .+ n2_digits\n\telseif n2_digits_length > n1_digits_length\n\t\tn1_digits = [0 for i in 1:n2_digits_length - n1_digits_length] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = n1 \u00f7 10, n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n    n1_digits = digits(n1)\n    n2_digits = digits(n2)\n    sum = 0\n    for i in 1:length(n1_digits)\n        sum += abs(n1_digits[i] - n2_digits[i])\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdistance = 0\n\tfor i in 1:length(n1_digits)\n\t\tdistance += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn distance\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmp0d7yt06o.jl:23\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:24\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0d7yt06o.jl:22\ntest set: Error During Test at /tmp/tmp0d7yt06o.jl:25\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp0d7yt06o.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0d7yt06o.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0d7yt06o.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tsum = 0\n\tfor i in digits(n1)\n\t\tfor j in digits(n2)\n\t\t\tsum += abs(i - j)\n\t\tend\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpvn0rf3m9.jl:19\n  Expression: candidate(23, 56) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvn0rf3m9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvn0rf3m9.jl:17\ntest set: Test Failed at /tmp/tmpvn0rf3m9.jl:20\n  Expression: candidate(123, 256) == 7\n   Evaluated: 23 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvn0rf3m9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvn0rf3m9.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvn0rf3m9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp1cv0ad49.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1cv0ad49.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == n2\n\t\treturn 0\n\tend\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# Pad the shorter number with zeros\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits)-length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits)-length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = n1 - n1 % 10\n\tn2 = n2 - n2 % 10\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpbesb0day.jl:24\n  Expression: candidate(1, 2) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbesb0day.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbesb0day.jl:23\ntest set: Error During Test at /tmp/tmpbesb0day.jl:25\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpbesb0day.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbesb0day.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbesb0day.jl:23\ntest set: Error During Test at /tmp/tmpbesb0day.jl:26\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(4.444444444444445)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpbesb0day.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbesb0day.jl:26 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbesb0day.jl:23\nTest Summary: | Fail  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpbesb0day.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = vcat(zeros(Int64, n1_len - n2_len), n2_digits)\n\telseif n2_len > n1_len\n\t\tn1_digits = vcat(zeros(Int64, n2_len - n1_len), n1_digits)\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == n2\n\t\treturn 0\n\tend\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\treturn sum(abs.(digits(n1) - digits(n2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tif length(n1_str) > length(n2_str)\n\t\tn2_str = repeat(\"0\", length(n1_str) - length(n2_str)) * n2_str\n\telseif length(n2_str) > length(n1_str)\n\t\tn1_str = repeat(\"0\", length(n2_str) - length(n1_str)) * n1_str\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp8lausrl2.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8lausrl2.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp1cv0ad49.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1cv0ad49.jl:21\ntest set: Error During Test at /tmp/tmp1cv0ad49.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp1cv0ad49.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1cv0ad49.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1cv0ad49.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tn1, n2 = min(n1, n2), max(n1, n2)\n\tn1_digits, n2_digits = digits(n1), digits(n2)\n\tn1_digits, n2_digits = reverse(n1_digits), reverse(n2_digits)\n\tdiff = 0\n\tfor i in 1:length(n1_digits)\n\t\tdiff += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t# convert to string\n\tn1 = string(n1)\n\tn2 = string(n2)\n\t# find the length of the longer number\n\tmax_len = max(length(n1), length(n2))\n\t# pad the shorter number with zeros\n\tn1 = string(\"0\", n1)\n\tn2 = string(\"0\", n2)\n\t# initialize the sum\n\tsum = 0\n\t# iterate through the digits\n\tfor i in 1:max_len\n\t\t# find the difference between the digits\n\t\tdiff = abs(parse(Int64, n1[i]) - parse(Int64, n2[i]))\n\t\t# add the difference to the sum\n\t\tsum += diff\n\tend\n\t# return the sum\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "test set: Test Failed at /tmp/tmpeyru92a3.jl:30\n  Expression: candidate(1, 2) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyru92a3.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyru92a3.jl:29\ntest set: Test Failed at /tmp/tmpeyru92a3.jl:31\n  Expression: candidate(23, 56) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyru92a3.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyru92a3.jl:29\ntest set: Test Failed at /tmp/tmpeyru92a3.jl:32\n  Expression: candidate(123, 256) == 7\n   Evaluated: 4 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyru92a3.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyru92a3.jl:29\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpeyru92a3.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = digits(n1)\n\tn2 = digits(n2)\n\tn1 = length(n1)\n\tn2 = length(n2)\n\treturn abs(n1-n2)\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "test set: Test Failed at /tmp/tmp0j5j4r_u.jl:18\n  Expression: candidate(1, 2) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0j5j4r_u.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0j5j4r_u.jl:17\ntest set: Test Failed at /tmp/tmp0j5j4r_u.jl:19\n  Expression: candidate(23, 56) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0j5j4r_u.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0j5j4r_u.jl:17\ntest set: Test Failed at /tmp/tmp0j5j4r_u.jl:20\n  Expression: candidate(123, 256) == 7\n   Evaluated: 0 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0j5j4r_u.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0j5j4r_u.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0j5j4r_u.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tif n1 == 0 && n2 == 0\n\t\treturn 0\n\tend\n\treturn (n1 % 10 - n2 % 10) + digit_distance_nums(n1 / 10, n2 / 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Error During Test at /tmp/tmp25kq78p7.jl:16\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching digit_distance_nums(::Float64, ::Float64)\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp25kq78p7.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25kq78p7.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25kq78p7.jl:15\ntest set: Error During Test at /tmp/tmp25kq78p7.jl:17\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  MethodError: no method matching digit_distance_nums(::Float64, ::Float64)\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp25kq78p7.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25kq78p7.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25kq78p7.jl:15\ntest set: Error During Test at /tmp/tmp25kq78p7.jl:18\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  MethodError: no method matching digit_distance_nums(::Float64, ::Float64)\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp25kq78p7.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp25kq78p7.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp25kq78p7.jl:15\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp25kq78p7.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t# convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t\n\t# pad with zeros\n\tif length(n1_str) > length(n2_str)\n\t\tn2_str = repeat(\"0\", length(n1_str) - length(n2_str)) * n2_str\n\telseif length(n2_str) > length(n1_str)\n\t\tn1_str = repeat(\"0\", length(n2_str) - length(n1_str)) * n1_str\n\tend\n\t\n\t# sum the differences\n\treturn sum(abs.(Int64.(n1_str) .- Int64.(n2_str)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123451,
      "stdout": "test set: Error During Test at /tmp/tmpjwv73e92.jl:24\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128, Int16, Int32, Int64, Int8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/gmp.jl:357\n    ...\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] _getindex\n      @ ./broadcast.jl:666 [inlined]\n    [4] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n    [5] _getindex\n      @ ./broadcast.jl:667 [inlined]\n    [6] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n    [7] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [8] copy\n      @ ./broadcast.jl:875 [inlined]\n    [9] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [10] digit_distance_nums(n1::Int64, n2::Int64)\n      @ Main /tmp/tmpjwv73e92.jl:17\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [12] macro expansion\n      @ /tmp/tmpjwv73e92.jl:24 [inlined]\n   [13] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [14] top-level scope\n      @ /tmp/tmpjwv73e92.jl:23\ntest set: Error During Test at /tmp/tmpjwv73e92.jl:25\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/env",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjwv73e92.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = n1 \u00f7 10, n2 \u00f7 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0]*(length(n1_digits) - length(n2_digits)) .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0]*(length(n2_digits) - length(n1_digits)) .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1,10) - mod(n2,10))\n\t\tn1 = div(n1,10)\n\t\tn2 = div(n2,10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .* n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .* n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tdiff = 0\n\twhile n1 > 0 || n2 > 0\n\t\tdiff += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1 = string(n1)\n\tn2 = string(n2)\n\tif length(n1) > length(n2)\n\t\tn2 = \"0\"*(length(n1)-length(n2))*n2\n\telseif length(n1) < length(n2)\n\t\tn1 = \"0\"*(length(n2)-length(n1))*n1\n\tend\n\treturn sum(abs.(Int64.(n1)-Int64.(n2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123451,
      "stdout": "test set: Error During Test at /tmp/tmpex6wgteh.jl:24\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128, Int16, Int32, Int64, Int8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/gmp.jl:357\n    ...\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n      @ ./broadcast.jl:875 [inlined]\n    [5] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [6] digit_distance_nums(n1::Int64, n2::Int64)\n      @ Main /tmp/tmpex6wgteh.jl:17\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpex6wgteh.jl:24 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpex6wgteh.jl:23\ntest set: Error During Test at /tmp/tmpex6wgteh.jl:25\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  MethodError: no method matching Int64(::String)\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128, Int16, Int32, Int64, Int8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/gmp.jl:357\n    ...\n  Stacktrace:\n    [1] _broadcast_getindex_ev",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpex6wgteh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\t\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tdiff = 0\n\twhile n1 > 0 || n2 > 0\n\t\tdiff += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn diff\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n1_digits_len < n2_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tdigit_distance_nums(n1::Int64, n2::Int64)::Int64\n\t\n\tCalculate the sum of the per-digit difference between two integers.\n\t\n\tParameters\n\t----------\n\tn1 : Int64\n\t\tFirst integer.\n\tn2 : Int64\n\t\tSecond integer.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tSum of the per-digit difference between two integers.\n\t\"\"\"\n\t\n\t# Convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t\n\t# Find the length of the shorter string\n\tlen_short = min(length(n1_str), length(n2_str))\n\t\n\t# Initialize the sum\n\tsum = 0\n\t\n\t# Loop over the shorter string\n\tfor i in 1:len_short\n\t\t# Add the difference between the digits to the sum\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\t\n\t# Return the sum\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[end:-1:1], d2[end:-1:1]\n\td1, d2 = fill(0, max(length(d2), length(d1)) - length(d1)) * d1, fill(0, max(length(d2), length(d1)) - length(d2)) * d2\n\treturn sum(abs.(d1 - d2))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123453,
      "stdout": "test set: Error During Test at /tmp/tmpadtmgzcz.jl:19\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpadtmgzcz.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpadtmgzcz.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpadtmgzcz.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tReturn the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = [0 for i in 1:n1_len - n2_len] .+ n2_digits\n\telseif n2_len > n1_len\n\t\tn1_digits = [0 for i in 1:n2_len - n1_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0] * (n1_digits_len - n2_digits_len) + n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0] * (n2_digits_len - n1_digits_len) + n1_digits\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp8lausrl2.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8lausrl2.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123446,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\treturn sum(abs(digits(n1) .- digits(n2)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123451,
      "stdout": "test set: Error During Test at /tmp/tmpj0aktpoc.jl:12\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching abs(::Vector{Int64})\n  Closest candidates are:\n    abs(!Matched::Unsigned) at /home/a.guha/.conda/envs/polyglot/share/julia/base/int.jl:179\n    abs(!Matched::Signed) at /home/a.guha/.conda/envs/polyglot/share/julia/base/int.jl:180\n    abs(!Matched::Complex) at /home/a.guha/.conda/envs/polyglot/share/julia/base/complex.jl:277\n    ...\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpj0aktpoc.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj0aktpoc.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj0aktpoc.jl:11\ntest set: Error During Test at /tmp/tmpj0aktpoc.jl:13\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  MethodError: no method matching abs(::Vector{Int64})\n  Closest candidates are:\n    abs(!Matched::Unsigned) at /home/a.guha/.conda/envs/polyglot/share/julia/base/int.jl:179\n    abs(!Matched::Signed) at /home/a.guha/.conda/envs/polyglot/share/julia/base/int.jl:180\n    abs(!Matched::Complex) at /home/a.guha/.conda/envs/polyglot/share/julia/base/complex.jl:277\n    ...\n  Stacktrace:\n   [1] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpj0aktpoc.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj0aktpoc.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj0aktpoc.jl:11\ntest set: Error During Test at /tmp/tmpj0aktpoc.jl:14\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  MethodError: no method matching abs(::Vector{Int64})\n  Closest",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj0aktpoc.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp7i22b8ra.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7i22b8ra.jl:21\ntest set: Error During Test at /tmp/tmp7i22b8ra.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp7i22b8ra.jl:21\ntest set: Error During Test at /tmp/tmp7i22b8ra.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp7i22b8ra.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp7i22b8ra.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7i22b8ra.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 \u00f7 10\n\t\tn2 = n2 \u00f7 10\n\tend\n\treturn s\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0] * (length(n1_digits) - length(n2_digits)) * n2_digits\n\telseif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = [0] * (length(n2_digits) - length(n1_digits)) * n1_digits\n\tend\n\tsum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tif n1 < n2\n\t\tn1, n2 = n2, n1\n\tend\n\tn1 = n1 - n2\n\tsum = 0\n\twhile n1 > 0\n\t\tsum += n1 % 10\n\t\tn1 = n1 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123451,
      "stdout": "test set: Error During Test at /tmp/tmpftklyvyy.jl:21\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpftklyvyy.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpftklyvyy.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpftklyvyy.jl:20\ntest set: Error During Test at /tmp/tmpftklyvyy.jl:22\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpftklyvyy.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpftklyvyy.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpftklyvyy.jl:20\ntest set: Error During Test at /tmp/tmpftklyvyy.jl:23\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpftklyvyy.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpftklyvyy.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpftklyvyy.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCalculate the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = repeat(\"0\", n1_len - n2_len) * n2_str\n\telseif n2_len > n1_len\n\t\tn1_str = repeat(\"0\", n2_len - n1_len) * n1_str\n\tend\n\treturn sum(abs.(parse.(Int64, n1_str) - parse.(Int64, n2_str)))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpx9kzzavs.jl:25\n  Expression: candidate(23, 56) == 6\n   Evaluated: 33 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9kzzavs.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9kzzavs.jl:23\ntest set: Test Failed at /tmp/tmpx9kzzavs.jl:26\n  Expression: candidate(123, 256) == 7\n   Evaluated: 133 == 7\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx9kzzavs.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx9kzzavs.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx9kzzavs.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t# convert to strings\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\t# pad with zeros\n\tn1_str = \"0\"*(length(n2_str)-length(n1_str))*(length(n2_str)>length(n1_str))*n1_str\n\tn2_str = \"0\"*(length(n1_str)-length(n2_str))*(length(n1_str)>length(n2_str))*n2_str\n\t# convert to arrays\n\tn1_arr = [parse(Int64,n1_str[i]) for i in 1:length(n1_str)]\n\tn2_arr = [parse(Int64,n2_str[i]) for i in 1:length(n2_str)]\n\t# compute the sum of the differences\n\treturn sum(abs.(n1_arr-n2_arr))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123453,
      "stdout": "test set: Error During Test at /tmp/tmpkajv73ca.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  MethodError: no method matching *(::String, ::Int64)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64, UInt8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/int.jl:88\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:260\n    ...\n  Stacktrace:\n   [1] *(a::String, b::Int64, c::Bool, xs::String)\n     @ Base ./operators.jl:655\n   [2] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpkajv73ca.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkajv73ca.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkajv73ca.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 /= 10\n\t\tn2 /= 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Error During Test at /tmp/tmp8lausrl2.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp8lausrl2.jl:19\ntest set: Error During Test at /tmp/tmp8lausrl2.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp8lausrl2.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp8lausrl2.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8lausrl2.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tReturns the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = append!(n2_digits, zeros(Int64, n1_len - n2_len))\n\telseif n2_len > n1_len\n\t\tn1_digits = append!(n1_digits, zeros(Int64, n2_len - n1_len))\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tReturns the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\t\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len != n2_len\n\t\treturn -1\n\tend\n\tsum = 0\n\tfor i in 1:n1_len\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t# convert to string\n\tn1 = string(n1)\n\tn2 = string(n2)\n\t# pad with zeros\n\tn1 = \"0\"^(length(n2)-length(n1))*n1\n\tn2 = \"0\"^(length(n1)-length(n2))*n2\n\t# sum the absolute differences\n\tsum(abs(parse(Int64, n1[i])-parse(Int64, n2[i])) for i in 1:length(n1))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tCompute the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\t# pad the shorter number with zeros\n\tif length(n1_digits) < length(n2_digits)\n\t\tn1_digits = vcat(zeros(Int64, length(n2_digits) - length(n1_digits)), n1_digits)\n\telseif length(n2_digits) < length(n1_digits)\n\t\tn2_digits = vcat(zeros(Int64, length(n1_digits) - length(n2_digits)), n2_digits)\n\tend\n\t\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tdigit_distance_nums(n1::Int64, n2::Int64) -> Int64\n\t\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_digits_len = length(n1_digits)\n\tn2_digits_len = length(n2_digits)\n\tif n1_digits_len > n2_digits_len\n\t\tn2_digits = [0 for i in 1:n1_digits_len - n2_digits_len] .+ n2_digits\n\telseif n2_digits_len > n1_digits_len\n\t\tn1_digits = [0 for i in 1:n2_digits_len - n1_digits_len] .+ n1_digits\n\tend\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tn1_len = length(n1_digits)\n\tn2_len = length(n2_digits)\n\tif n1_len > n2_len\n\t\tn2_digits = vcat(zeros(Int64, n1_len - n2_len), n2_digits)\n\telseif n2_len > n1_len\n\t\tn1_digits = vcat(zeros(Int64, n2_len - n1_len), n1_digits)\n\tend\n\treturn sum(abs.(n1_digits - n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\t\n\tif length(n1_digits) > length(n2_digits)\n\t\tn2_digits = [0 for i in 1:length(n1_digits) - length(n2_digits)] .+ n2_digits\n\telseif length(n2_digits) > length(n1_digits)\n\t\tn1_digits = [0 for i in 1:length(n2_digits) - length(n1_digits)] .+ n1_digits\n\tend\n\t\n\treturn sum(abs.(n1_digits .- n2_digits))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = n2_str * \"0\"\n\telseif n2_len > n1_len\n\t\tn1_str = n1_str * \"0\"\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\ts = 0\n\twhile n1 > 0 || n2 > 0\n\t\ts += abs(n1 % 10 - n2 % 10)\n\t\tn1, n2 = div(n1, 10), div(n2, 10)\n\tend\n\treturn s\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1, n2 = abs(n1), abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123449,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(n1 % 10 - n2 % 10)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123447,
      "stdout": "test set: Error During Test at /tmp/tmpxq_3xoay.jl:20\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:21\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxq_3xoay.jl:19\ntest set: Error During Test at /tmp/tmpxq_3xoay.jl:22\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmpxq_3xoay.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxq_3xoay.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxq_3xoay.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1, n2 = abs(n1), abs(n2)\n\td1, d2 = digits(n1), digits(n2)\n\td1, d2 = d1[:], d2[:]\n\tif length(d1) < length(d2)\n\t\td1 = [0 for i in 1:length(d2)-length(d1)] .+ d1\n\telseif length(d2) < length(d1)\n\t\td2 = [0 for i in 1:length(d1)-length(d2)] .+ d2\n\tend\n\tsum(abs.(d1-d2))\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_str = string(n1)\n\tn2_str = string(n2)\n\tn1_len = length(n1_str)\n\tn2_len = length(n2_str)\n\tif n1_len > n2_len\n\t\tn2_str = string(\"0\", n2_str)\n\telseif n1_len < n2_len\n\t\tn1_str = string(\"0\", n1_str)\n\tend\n\tsum = 0\n\tfor i in 1:length(n1_str)\n\t\tsum += abs(parse(Int64, n1_str[i]) - parse(Int64, n2_str[i]))\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123450,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\t\"\"\"\n\tFind the sum of the per-digit difference between two integers.\n\t\"\"\"\n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\td1 = n1 % 10\n\t\td2 = n2 % 10\n\t\tsum += abs(d1 - d2)\n\t\tn1 = n1 / 10\n\t\tn2 = n2 / 10\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517494,
      "stdout": "test set: Error During Test at /tmp/tmp4w57rkxp.jl:22\n  Test threw exception\n  Expression: candidate(1, 2) == 1\n  InexactError: Int64(1.1111111111111112)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:23\n  Test threw exception\n  Expression: candidate(23, 56) == 6\n  InexactError: Int64(6.666666666666668)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:23 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4w57rkxp.jl:21\ntest set: Error During Test at /tmp/tmp4w57rkxp.jl:24\n  Test threw exception\n  Expression: candidate(123, 256) == 7\n  InexactError: Int64(7.777777777777779)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] digit_distance_nums(n1::Int64, n2::Int64)\n     @ Main /tmp/tmp4w57rkxp.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4w57rkxp.jl:24 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4w57rkxp.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1 = abs(n1)\n\tn2 = abs(n2)\n\tsum = 0\n\twhile n1 > 0 || n2 > 0\n\t\tsum += abs(mod(n1, 10) - mod(n2, 10))\n\t\tn1 = div(n1, 10)\n\t\tn2 = div(n2, 10)\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the sum of the per-digit difference between two integers.\n\t\"\"\"\nfunction digit_distance_nums(n1::Int64, n2::Int64)::Int64 \n\tn1_digits = digits(n1)\n\tn2_digits = digits(n2)\n\tsum = 0\n\tfor i in 1:length(n1_digits)\n\t\tsum += abs(n1_digits[i] - n2_digits[i])\n\tend\n\treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = digit_distance_nums;\n\t@test(candidate(1, 2) == 1)\n\t@test(candidate(23, 56) == 6)\n\t@test(candidate(123, 256) == 7)\nend\n",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
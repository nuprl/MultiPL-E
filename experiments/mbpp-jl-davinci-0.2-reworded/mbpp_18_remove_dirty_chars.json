{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove characters from the first string which are present in the second string.\n\t\"\"\"\nfunction remove_dirty_chars(string::String, second_string::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = remove_dirty_chars;\n\t@test(candidate(\"probasscurve\", \"pros\") == \"bacuve\")\n\t@test(candidate(\"digitalindia\", \"talent\") == \"digiidi\")\n\t@test(candidate(\"exoticmiles\", \"toxic\") == \"emles\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tThis function removes characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tclean_string = \"\"\n\tfor char in string\n\t\tif !(char in second_string)\n\t\t\tclean_string *= char\n\tend\n\treturn clean_string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\t# Create a dictionary of the second string\n\tsecond_string_dict = Dict{Char, Int}()\n\tfor c in second_string\n\t\tsecond_string_dict[c] = 1\n\tend\n\t\n\t# Create a new string without the dirty characters\n\tnew_string = \"\"\n\tfor c in string\n\t\tif !haskey(second_string_dict, c)\n\t\t\tnew_string *= c\n\t\tend\n\tend\n\t\n\treturn new_string\nend",
    "\t\"\"\"\n\tFunction to remove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor char in second_string\n\t\tstring = replace(string, char, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor char in second_string\n\t\tstring = replace(string, char, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t# Remove the characters from the first string which are present in the second string.\n\tfor i in second_string\n\t\tstring = replace(string, i, \"\")\n\tend\n\treturn string\nend",
    "\t\"\"\"\n\tRemove characters from the first string which are present in the second string.\n\t\"\"\"\n\tfor c in second_string\n\t\tstring = replace(string, c, \"\")\n\tend\n\treturn string\nend"
  ]
}
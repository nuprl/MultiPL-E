{
  "name": "mbpp_776_count_vowels",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to count those characters which have vowels as their neighbors in the given string.\n\t\"\"\"\nfunction count_vowels(test_str::String)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = count_vowels;\n\t@test(candidate(\"bestinstareels\") == 7)\n\t@test(candidate(\"partofthejourneyistheend\") == 12)\n\t@test(candidate(\"amazonprime\") == 5)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiou\") && (test_str[i-1] in \"aeiou\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\"\n\t\t\tif i != 1 && test_str[i-1] in \"aeiou\"\n\t\t\t\tcount += 1\n\t\t\tend\n\t\t\tif i != length(test_str) && test_str[i+1] in \"aeiou\"\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\"\n\t\t\tif test_str[i-1] in \"aeiou\" || test_str[i+1] in \"aeiou\"\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\" && test_str[i-1] in \"aeiou\"\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\"\n\t\t\tif test_str[i-1] in \"aeiou\" || test_str[i+1] in \"aeiou\"\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif isvowel(test_str[i]) && isvowel(test_str[i-1])\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiou\") && (test_str[i-1] in \"aeiou\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i-1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i-1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\" && test_str[i-1] in \"aeiou\"\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)-1\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i+1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\" && test_str[i-1] in \"aeiou\"\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i+1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i-1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\"\n\t\t\tif i == 1\n\t\t\t\tif test_str[i+1] in \"aeiou\"\n\t\t\t\t\tcount += 1\n\t\t\t\tend\n\t\t\telseif i == length(test_str)\n\t\t\t\tif test_str[i-1] in \"aeiou\"\n\t\t\t\t\tcount += 1\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif test_str[i+1] in \"aeiou\" || test_str[i-1] in \"aeiou\"\n\t\t\t\t\tcount += 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif test_str[i] in \"aeiou\" && test_str[i-1] in \"aeiou\"\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)-1\n\t\tif test_str[i] in \"aeiou\" && test_str[i+1] in \"aeiou\"\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in ['a','e','i','o','u']) && (test_str[i+1] in ['a','e','i','o','u'])\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in \"aeiouAEIOU\") && (test_str[i-1] in \"aeiouAEIOU\")\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "\tcount = 0\n\tfor i in 1:length(test_str)\n\t\tif (test_str[i] in ['a', 'e', 'i', 'o', 'u']) && (test_str[i-1] in ['a', 'e', 'i', 'o', 'u'])\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend"
  ]
}
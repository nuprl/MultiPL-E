{
  "name": "mbpp_745_divisible_by_digits",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn filter(x -> all(mod.(x, digits(x)) .== 0), startnum:endnum)\nend",
    "\t\"\"\"\n\tReturns a vector of numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend",
    "\treturn filter(x->all(x%digits(x) .== 0), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "    return filter(x->all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t# Vector to store the numbers\n\tnumbers = []\n\tfor i in startnum:endnum\n\t\t# Check if the number is divisible by every digit it contains\n\t\tif all(i % parse(Int64, digit) == 0 for digit in string(i))\n\t\t\tpush!(numbers, i)\n\t\tend\n\tend\n\treturn numbers\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tReturns a vector of numbers between startnum and endnum that are divisible by every digit they contain.\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif divisible_by_digits(i)\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\treturn [x for x in startnum:endnum if all([x % int(i) == 0 for i in string(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "    return [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "    return [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x->all(mod(x, parse(Int64, digit)) == 0 for digit in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn filter(x->all(x%y==0 for y in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x->all(x % y == 0 for y in digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x%y==0 for y in digits(x)])]\nend",
    "    return filter(x -> all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\t\n\t# Create a vector of numbers within the range\n\tnumbers = collect(startnum:endnum)\n\t\n\t# Create a vector of numbers that are divisible by every digit it contains\n\tdivisible_numbers = filter(x->divisible_by_digits_helper(x), numbers)\n\t\n\treturn divisible_numbers\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % parse(Int64, y) == 0 for y in split(string(x), \"\"))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t# Create a vector to store the numbers\n\tnumbers = Vector{Int64}()\n\t# Iterate through the range\n\tfor i in startnum:endnum\n\t\t# Create a vector to store the digits\n\t\tdigits = Vector{Int64}()\n\t\t# Iterate through the digits\n\t\tfor j in digits(i)\n\t\t\t# Push the digits to the vector\n\t\t\tpush!(digits, j)\n\t\tend\n\t\t# Check if the number is divisible by all the digits\n\t\tif all(i % j == 0 for j in digits)\n\t\t\t# Push the number to the vector\n\t\t\tpush!(numbers, i)\n\t\tend\n\tend\n\t# Return the vector\n\treturn numbers\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend",
    "\tresult = []\n\tfor i in startnum:endnum\n\t\tif is_divisible_by_digits(i)\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\nend",
    "    \"\"\"\n    Returns a vector of numbers from startnum to endnum that are divisible by every digit it contains.\n    \"\"\"\n    return [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\t\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif i % digits(i) == 0\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif isdivisible(i)\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tReturns a vector of numbers between startnum and endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "    return [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn filter(x->all(mod(x,y)==0 for y in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(x % Int64(y) == 0 for y in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i%j == 0 for j in digits(i))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tdigits = digits(i)\n\t\tif all(i % j == 0 for j in digits)\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend",
    "\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "    return [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "    return [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\treturn filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tReturns a vector of numbers between startnum and endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "    \"\"\"\n    Find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n    \"\"\"\n    return [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend",
    "\treturn filter(x -> all(mod(x, parse(Int64, y)) == 0 for y in string(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([div(x, y) == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\t\tInput:\n\t\t\tstartnum: Start number\n\t\t\tendnum: End number\n\t\tOutput:\n\t\t\tVector of numbers that are divisible by their digits\n\t\"\"\"\n\t\n\t# Create a vector of numbers from startnum to endnum\n\tnumbers = collect(startnum:endnum)\n\t\n\t# Create a vector of numbers that are divisible by their digits\n\tdivisible_numbers = filter(x -> all(x % digit(y) == 0 for y in digits(x)), numbers)\n\t\n\treturn divisible_numbers\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i%j == 0 for j in digits(i))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\treturn filter(x -> all(x % Int64(y) == 0 for y in digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend",
    "\treturn filter(x -> all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(mod(x, parse(Int64, y)) == 0 for y in string(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif i % div(i) == 0\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tFinds numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\tresult = []\n\t\tfor i in startnum:endnum\n\t\t\tif all(i % j == 0 for j in digits(i))\n\t\t\t\tpush!(result, i)\n\t\t\tend\n\t\tend\n\t\treturn result\n\tend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tThis function returns a vector of numbers that are divisible by their digits.\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(x % digit(x, i) == 0 for i in 1:length(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tdigits = digits(i)\n\t\tif all(i % j == 0 for j in digits)\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend",
    "\treturn filter(x->all(x%digit(x)==0 for digit in digits(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\t#returns a vector of numbers from startnum to endnum that are divisible by every digit they contain\n\t\n\t#convert startnum and endnum to strings\n\tstartnum_str = string(startnum)\n\tendnum_str = string(endnum)\n\t\n\t#create a vector of the digits in startnum and endnum\n\tstartnum_digits = [parse(Int64, x) for x in startnum_str]\n\tendnum_digits = [parse(Int64, x) for x in endnum_str]\n\t\n\t#create a vector of the numbers from startnum to endnum\n\tnum_range = collect(startnum:endnum)\n\t\n\t#create a vector of the numbers from startnum to endnum that are divisible by every digit they contain\n\tdivisible_by_digits = []\n\tfor num in num_range\n\t\tnum_str = string(num)\n\t\tnum_digits = [parse(Int64, x) for x in num_str]\n\t\tif all(num % digit == 0 for digit in num_digits)\n\t\t\tpush!(divisible_by_digits, num)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tDivisible by digits\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn filter(x -> all(mod(x,y) == 0 for y in digits(x)), startnum:endnum)\nend",
    "\treturn filter(x -> all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn filter(x->all(mod(x, parse(Int64, y)) == 0 for y in string(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif i % digits(i) == 0\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend",
    "\treturn filter(x -> all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t# find all numbers in range\n\tnumbers = collect(startnum:endnum)\n\t# find all numbers divisible by their digits\n\tdivisible = filter(n -> all(n % digit(n) == 0 for digit in digits(n)), numbers)\n\treturn divisible\nend",
    "\treturn filter(x->all(x%d==0 for d in digits(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x%y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "\treturn filter(x->all(x % digit(x, i) == 0 for i in 1:length(x)), startnum:endnum)\nend",
    "\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all([i % j == 0 for j in digits(i)])\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend",
    "    return [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % parse(Int64, y) == 0 for y in string(x))]\nend",
    "\t# Create a vector of numbers from startnum to endnum\n\tnumbers = collect(startnum:endnum)\n\t# Create a vector of numbers that are divisible by their digits\n\tdivisible_by_digits = filter(n -> all(n % digit(n, i) == 0 for i in 1:length(n)), numbers)\n\treturn divisible_by_digits\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend",
    "\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend",
    "\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend",
    "\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/jlthon-exercises/lambda/jlthon-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend"
  ]
}
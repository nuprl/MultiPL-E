{
  "name": "mbpp_624_is_upper",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to convert a given string to uppercase.\n\t\"\"\"\nfunction is_upper(string::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_upper;\n\t@test(candidate(\"person\") == \"PERSON\")\n\t@test(candidate(\"final\") == \"FINAL\")\n\t@test(candidate(\"Valid\") == \"VALID\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn string.upper()\nend",
    "\t\"\"\"\n\tConvert a given string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tConvert a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\treturn string.upper()\nend",
    "\treturn string |> upper\nend",
    "\treturn uppercase(string)\nend",
    "\treturn string.upper()\nend",
    "\t\"\"\"\n\tWrite a jlthon function to print the following pattern.\n\t\"\"\"",
    "\treturn uppercase(string)\nend",
    "\t\"\"\"\n\tConvert a string to uppercase\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tConvert a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\treturn string |> String.upper\nend",
    "\t\"\"\"\n\tConvert a given string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tWrite a jlthon function to check whether a string is a palindrome or not.\n\t\"\"\"",
    "\t\"\"\"\n\tConvert a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tConvert a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tConvert a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\t\"\"\"\n\tConverts a string to uppercase.\n\t\"\"\"\n\treturn string.upper()\nend",
    "\treturn string.upper()\nend",
    "\treturn string.upper()\nend"
  ]
}
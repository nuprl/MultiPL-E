{
  "name": "mbpp_805_max_sum_list",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\t\n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in lists\n\t\tsum = 0\n\t\tfor j in i\n\t\t\tsum += j\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = i\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor elem in list\n\t\t\tsum += elem\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = Vector{Int64}()\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in lists\n\t\tif sum(i) > max_sum\n\t\t\tmax_sum = sum(i)\n\t\t\tmax_list = i\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor elem in list\n\t\t\tsum += elem\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\t# Initialize the max sum to the first vector in the list\n\tmax_sum = sum(lists[1])\n\t# Initialize the max sum vector to the first vector in the list\n\tmax_sum_vector = lists[1]\n\t# Iterate through the list of vectors\n\tfor i in 2:length(lists)\n\t\t# If the sum of the current vector is greater than the max sum\n\t\tif sum(lists[i]) > max_sum\n\t\t\t# Update the max sum to the sum of the current vector\n\t\t\tmax_sum = sum(lists[i])\n\t\t\t# Update the max sum vector to the current vector\n\t\t\tmax_sum_vector = lists[i]\n\t\tend\n\tend\n\t# Return the max sum vector\n\treturn max_sum_vector\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_index = 0\n\tfor i in 1:length(lists)\n\t\tsum = 0\n\t\tfor j in 1:length(lists[i])\n\t\t\tsum += lists[i][j]\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_index = i\n\t\tend\n\tend\n\treturn lists[max_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n    max_sum = 0\n    max_list = []\n    for list in lists\n        if sum(list) > max_sum\n            max_sum = sum(list)\n            max_list = list\n        end\n    end\n    return max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_index = 0\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_index = i\n\t\tend\n\tend\n\treturn lists[max_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in 1:length(lists)\n\t\tsum = 0\n\t\tfor j in 1:length(lists[i])\n\t\t\tsum += lists[i][j]\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = lists[i]\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\t# Initialize the maximum sum to the sum of the first vector\n\tmax_sum = sum(lists[1])\n\t# Initialize the maximum sum vector to the first vector\n\tmax_sum_vector = lists[1]\n\t# Loop through the vectors\n\tfor i = 2:length(lists)\n\t\t# If the sum of the current vector is greater than the current maximum sum\n\t\tif sum(lists[i]) > max_sum\n\t\t\t# Update the maximum sum to the sum of the current vector\n\t\t\tmax_sum = sum(lists[i])\n\t\t\t# Update the maximum sum vector to the current vector\n\t\t\tmax_sum_vector = lists[i]\n\t\tend\n\tend\n\t# Return the maximum sum vector\n\treturn max_sum_vector\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = Vector{Int64}()\n\tfor list in lists\n\t\tsum = 0\n\t\tfor elem in list\n\t\t\tsum += elem\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tlist_sum = sum(list)\n\t\tif list_sum > max_sum\n\t\t\tmax_sum = list_sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = Vector{Int64}()\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in lists\n\t\tif sum(i) > max_sum\n\t\t\tmax_sum = sum(i)\n\t\t\tmax_list = i\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_index = 0\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_index = i\n\t\tend\n\tend\n\treturn lists[max_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor elem in list\n\t\t\tsum += elem\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = Vector{Int64}()\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum = sum + element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\treturn lists[argmax([sum(list) for list in lists])]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_list = lists[i]\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_index = 0\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_index = i\n\t\tend\n\tend\n\treturn lists[max_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122591,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the vector in a vector of vectors whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor elem in list\n\t\t\tsum += elem\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510066,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
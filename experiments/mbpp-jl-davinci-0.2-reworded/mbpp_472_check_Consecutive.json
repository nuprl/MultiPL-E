{
  "name": "mbpp_472_check_Consecutive",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to check whether the given vector contains consecutive numbers or not.\n\t\"\"\"\nfunction check_Consecutive(l::Vector{Int64})::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = check_Consecutive;\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 2, 3, 5, 6]) == false)\n\t@test(candidate([1, 2, 1]) == false)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif abs(l[i]-l[i+1]) != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i] != l[i+1]-1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\tif length(l) == 1\n\t\t\treturn true\n\t\tend\n\t\tif l[1] == l[2]\n\t\t\treturn false\n\t\tend\n\t\tif l[1] > l[2]\n\t\t\treturn check_Consecutive(l[2:end])\n\t\telse\n\t\t\treturn check_Consecutive(l[1:end-1])\n\t\tend\n\tend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] != l[i]+1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t# check if the vector is empty\n\tif length(l) == 0\n\t\treturn false\n\tend\n\t# check if the vector is sorted\n\tif isequal(sort(l), l)\n\t\t# check if the vector is consecutive\n\t\tif l[end] - l[1] == length(l) - 1\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tCheck whether the given vector contains consecutive numbers or not.\n\t\"\"\"\n\tif length(l) == 0\n\t\treturn false\n\tend\n\t\n\tif length(l) == 1\n\t\treturn true\n\tend\n\t\n\tif l[1] == l[2]\n\t\treturn false\n\tend\n\t\n\tif l[1] > l[2]\n\t\treturn check_Consecutive(reverse(l))\n\tend\n\t\n\tfor i in 2:length(l)\n\t\tif l[i] - l[i-1] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\treturn true\nend",
    "\tl = sort(l)\n\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tl = sort(l)\n\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tCheck whether the given vector contains consecutive numbers or not.\n\t\"\"\"\n\tif length(l) == 1\n\t\treturn true\n\tend\n\tl = sort(l)\n\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tl = sort(l)\n\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1]-l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] != l[i]+1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tl = sort(l)\n\tfor i in 1:length(l)-1\n\t\tif l[i+1] - l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(l)-1\n\t\tif l[i+1]-l[i] != 1\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend"
  ]
}
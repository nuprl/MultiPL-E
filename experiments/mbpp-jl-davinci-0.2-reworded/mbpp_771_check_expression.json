{
  "name": "mbpp_771_check_expression",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\n\t\"\"\"\nfunction check_expression(exp::String)::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_771_check_expression.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = check_expression;\n\t@test(candidate(\"{()}[{}]\") == true)\n\t@test(candidate(\"{()}[{]\") == false)\n\t@test(candidate(\"{()}[{}][]({})\") == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in \"({[\"\n\t\t\tpush!(stack, i)\n\t\telseif i in \")}]\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif !match(top, i)\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpopped = pop!(stack)\n\t\t\t\tif (popped == \"(\" && i != \")\") || (popped == \"{\" && i != \"}\") || (popped == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && c != \")\") || (top == \"[\" && c != \"]\") || (top == \"{\" && c != \"}\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in \"({[\"\n\t\t\tpush!(stack, i)\n\t\telseif i in \")}]\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\topen = [\"(\", \"[\", \"{\"]\n\tclose = [\")\", \"]\", \"}\"]\n\tstack = []\n\tfor i in exp\n\t\tif i in open\n\t\t\tpush!(stack, i)\n\t\telseif i in close\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif open.index(stack[end]) == close.index(i)\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == ']' || i == '}'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif i == ')' && top != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && top != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && top != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && pop!(stack) != '('\n\t\t\t\treturn false\n\t\t\telseif i == '}' && pop!(stack) != '{'\n\t\t\t\treturn false\n\t\t\telseif i == ']' && pop!(stack) != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the expression is balanced or not.\n\t\"\"\"\n\tstack = Array{Char, 1}()\n\tfor c in exp\n\t\tif c == '(' || c == '{' || c == '['\n\t\t\tpush!(stack, c)\n\t\telseif c == ')' || c == '}' || c == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == ']' || i == '}'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == ')' && pop!(stack) != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && pop!(stack) != '['\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && pop!(stack) != '{'\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tx = pop!(stack)\n\t\t\t\tif i == ')' && x != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && x != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && x != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in 1:length(exp)\n\t\tif exp[i] == '(' || exp[i] == '{' || exp[i] == '['\n\t\t\tpush!(stack, exp[i])\n\t\telseif exp[i] == ')' || exp[i] == '}' || exp[i] == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif exp[i] == ')' && top != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif exp[i] == '}' && top != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif exp[i] == ']' && top != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif (i == \")\" && stack[end] == \"(\") || (i == \"}\" && stack[end] == \"{\") || (i == \"]\" && stack[end] == \"[\")\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor c in exp\n\t\tif c == '(' || c == '{' || c == '['\n\t\t\tpush!(stack, c)\n\t\telseif c == ')' || c == '}' || c == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && c != \")\") || (top == \"{\" && c != \"}\") || (top == \"[\" && c != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Array{Char,1}()\n\tfor i in 1:length(exp)\n\t\tif exp[i] == '(' || exp[i] == '{' || exp[i] == '['\n\t\t\tpush!(stack,exp[i])\n\t\telseif exp[i] == ')' || exp[i] == '}' || exp[i] == ']'\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif exp[i] == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif exp[i] == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif exp[i] == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif i == ')' && top != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && top != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && top != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack.top == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack.top == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack.top == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif stack == []\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif stack == []\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tThis function takes an expression as input and returns a boolean value.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif (i == \")\" && stack[end] == \"(\") || (i == \"]\" && stack[end] == \"[\") || (i == \"}\" && stack[end] == \"{\")\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif i == \")\" && top != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"]\" && top != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"}\" && top != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif !((top == \"(\" && i == \")\") || (top == \"{\" && i == \"}\") || (top == \"[\" && i == \"]\"))\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack) || pop!(stack) != '('\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif i == '}'\n\t\t\tif isempty(stack) || pop!(stack) != '{'\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif i == ']'\n\t\t\tif isempty(stack) || pop!(stack) != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == '(' && i != ')') || (top == '{' && i != '}') || (top == '[' && i != ']')\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tstack.push(i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif stack.isempty()\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tx = stack.pop()\n\t\t\t\tif !((x == '(' && i == ')') || (x == '{' && i == '}') || (x == '[' && i == ']'))\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif stack.isempty()\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"[\" && i != \"]\") || (top == \"{\" && i != \"}\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i == \"(\"\n\t\t\tpush!(stack, i)\n\t\telseif i == \")\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == \"(\"\n\t\t\tpush!(stack, i)\n\t\telseif i == \")\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == ']' || i == '}'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && peek(stack) == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && peek(stack) == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && peek(stack) == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = Stack()\n\tfor c in exp\n\t\tif c in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && c != \")\") || (top == \"{\" && c != \"}\") || (top == \"[\" && c != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tx = pop!(stack)\n\t\t\t\tif i == ')' && x != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && x != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && x != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tx = pop!(stack)\n\t\t\tif (i == ')' && x != '(') || (i == '}' && x != '{') || (i == ']' && x != '[')\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"[\" && i != \"]\") || (top == \"{\" && i != \"}\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn length(stack) == 0\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == '(' && i != ')') || (top == '{' && i != '}') || (top == '[' && i != ']')\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack,i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && peek(stack) == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && peek(stack) == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && peek(stack) == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in \"({[\"\n\t\t\tpush!(stack, i)\n\t\telseif i in \")}]\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && top(stack) == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && top(stack) == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && top(stack) == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\" && stack[end] != \"(\"\n\t\t\t\treturn false\n\t\t\telseif c == \"}\" && stack[end] != \"{\"\n\t\t\t\treturn false\n\t\t\telseif c == \"]\" && stack[end] != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif c == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\"\n\t\t\t\tif stack[end] != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif i == \"}\"\n\t\t\t\tif stack[end] != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif i == \"]\"\n\t\t\t\tif stack[end] != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && peek(stack) == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && peek(stack) == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && peek(stack) == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    stack = []\n    for i in exp\n        if i in [\"(\", \"[\", \"{\"]\n            push!(stack, i)\n        elseif i in [\")\", \"]\", \"}\"]\n            if isempty(stack)\n                return false\n            else\n                pop!(stack)\n            end\n        end\n    end\n    return isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif top == '(' && i != ')' || top == '{' && i != '}' || top == '[' && i != ']'\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c == '(' || c == '{' || c == '['\n\t\t\tpush!(stack, c)\n\t\telseif c == ')' || c == '}' || c == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == ')' && stack[end] != '('\n\t\t\t\treturn false\n\t\t\telseif c == '}' && stack[end] != '{'\n\t\t\t\treturn false\n\t\t\telseif c == ']' && stack[end] != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tx = pop!(stack)\n\t\t\tif i == ')' && x != '('\n\t\t\t\treturn false\n\t\t\telseif i == '}' && x != '{'\n\t\t\t\treturn false\n\t\t\telseif i == ']' && x != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor c in exp\n\t\tif c in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,c)\n\t\telseif c in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif c == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif c == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\telseif c == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack) || !match(i, pop!(stack))\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tx = pop!(stack)\n\t\t\tif i == ')' && x != '('\n\t\t\t\treturn false\n\t\t\telseif i == '}' && x != '{'\n\t\t\t\treturn false\n\t\t\telseif i == ']' && x != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == ']' || i == '}'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && top(stack) == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && top(stack) == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && top(stack) == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tx = pop!(stack)\n\t\t\tif i == ')' && x != '('\n\t\t\t\treturn false\n\t\t\telseif i == '}' && x != '{'\n\t\t\t\treturn false\n\t\t\telseif i == ']' && x != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,c)\n\t\telseif c in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (c == \")\" && top != \"(\") || (c == \"]\" && top != \"[\") || (c == \"}\" && top != \"{\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor c in exp\n\t\tif c in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,c)\n\t\telse\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\"\n\t\t\t\tif top(stack) != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif c == \"}\"\n\t\t\t\tif top(stack) != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif c == \"]\"\n\t\t\t\tif top(stack) != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"[\" && i != \"]\") || (top == \"{\" && i != \"}\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif i == ')' && top != '('\n\t\t\t\t\treturn false\n\t\t\t\telseif i == '}' && top != '{'\n\t\t\t\t\treturn false\n\t\t\t\telseif i == ']' && top != '['\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telse\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\"\n\t\t\t\tif stack[end] != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif i == \"]\"\n\t\t\t\tif stack[end] != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telseif i == \"}\"\n\t\t\t\tif stack[end] != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\t\tpop!(stack)\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tThis function checks if the expression is balanced or not.\n\t\"\"\"\n\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == ']' || i == '}'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\topen = 0\n\tclose = 0\n\tfor i in exp\n\t\tif i == '('\n\t\t\topen += 1\n\t\telseif i == ')'\n\t\t\tclose += 1\n\t\tend\n\tend\n\tif open == close\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tj = pop!(stack)\n\t\t\t\tif (i == \")\" && j != \"(\") || (i == \"]\" && j != \"[\") || (i == \"}\" && j != \"{\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == \"(\"\n\t\t\tpush!(stack, i)\n\t\telseif i == \")\"\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck if the expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tx = pop!(stack)\n\t\t\tif (i == ')' && x != '(') || (i == '}' && x != '{') || (i == ']' && x != '[')\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"[\" && i != \"]\") || (top == \"{\" && i != \"}\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tThis function checks if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif !isempty(stack)\n\t\treturn false\n\tend\n\treturn true\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor c in exp\n\t\tif c in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif c == \")\" && pop!(stack) != \"(\"\n\t\t\t\treturn false\n\t\t\telseif c == \"}\" && pop!(stack) != \"{\"\n\t\t\t\treturn false\n\t\t\telseif c == \"]\" && pop!(stack) != \"[\"\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tx = pop!(stack)\n\t\t\t\tif (x == \"(\" && i != \")\") || (x == \"{\" && i != \"}\") || (x == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telseif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\t\"\"\"\n\tChecks if the expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\t\tpop!(stack)\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"{\", \"[\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"}\", \"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttop = pop!(stack)\n\t\t\t\tif (top == \"(\" && i != \")\") || (top == \"{\" && i != \"}\") || (top == \"[\" && i != \"]\")\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c == '(' || c == '{' || c == '['\n\t\t\tpush!(stack, c)\n\t\telseif c == ')'\n\t\t\tif stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif c == '}'\n\t\t\tif stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif c == ']'\n\t\t\tif stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn length(stack) == 0\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '[' || i == '{'\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack) || pop!(stack) != '('\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif i == ']'\n\t\t\tif isempty(stack) || pop!(stack) != '['\n\t\t\t\treturn false\n\t\t\tend\n\t\telseif i == '}'\n\t\t\tif isempty(stack) || pop!(stack) != '{'\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, i)\n\t\telseif i in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\" && pop!(stack) != \"(\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"]\" && pop!(stack) != \"[\"\n\t\t\t\t\treturn false\n\t\t\t\telseif i == \"}\" && pop!(stack) != \"{\"\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif length(stack) == 0\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == \")\" && stack[end] == \"(\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"]\" && stack[end] == \"[\"\n\t\t\t\tpop!(stack)\n\t\t\telseif i == \"}\" && stack[end] == \"{\"\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif length(stack) == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"[\",\"{\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"]\",\"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif i == \")\"\n\t\t\t\t\tif stack[end] == \"(\"\n\t\t\t\t\t\tpop!(stack)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\telseif i == \"]\"\n\t\t\t\t\tif stack[end] == \"[\"\n\t\t\t\t\t\tpop!(stack)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\telseif i == \"}\"\n\t\t\t\t\tif stack[end] == \"{\"\n\t\t\t\t\t\tpop!(stack)\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck if the given expression is balanced or not.\n\t\"\"\"\n\tstack = []\n\tfor i in exp\n\t\tif i in [\"(\",\"{\",\"[\"]\n\t\t\tpush!(stack,i)\n\t\telseif i in [\")\",\"}\",\"]\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = Stack()\n\tfor i in exp\n\t\tif i == '('\n\t\t\tpush!(stack, i)\n\t\telseif i == ')'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tpop!(stack)\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor i in exp\n\t\tif i == '(' || i == '{' || i == '['\n\t\t\tpush!(stack, i)\n\t\telseif i == ')' || i == '}' || i == ']'\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif i == ')' && stack[end] == '('\n\t\t\t\tpop!(stack)\n\t\t\telseif i == '}' && stack[end] == '{'\n\t\t\t\tpop!(stack)\n\t\t\telseif i == ']' && stack[end] == '['\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tif isempty(stack)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tstack = []\n\tfor c in exp\n\t\tif c in [\"(\", \"[\", \"{\"]\n\t\t\tpush!(stack, c)\n\t\telseif c in [\")\", \"]\", \"}\"]\n\t\t\tif isempty(stack)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif (c == \")\" && stack[end] == \"(\") || (c == \"]\" && stack[end] == \"[\") || (c == \"}\" && stack[end] == \"{\")\n\t\t\t\tpop!(stack)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn isempty(stack)\nend"
  ]
}
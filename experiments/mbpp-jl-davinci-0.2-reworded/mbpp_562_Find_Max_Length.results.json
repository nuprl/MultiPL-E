{
  "name": "mbpp_562_Find_Max_Length",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tn = length(lst)\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvector.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max\n\t\t\tmax = length(lst[i])\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvector.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvector.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i = 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvector.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max\n\t\t\tmax = length(lst[i])\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i = 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvector.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\t\"\"\"\n\tFind the length of the longest subvectors.\n\t\"\"\"\n\tmax_len = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_len\n\t\t\tmax_len = length(lst[i])\n\t\tend\n\tend\n\treturn max_len\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1666124174,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in lst\n\t\tif length(i) > max_length\n\t\t\tmax_length = length(i)\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find the length of the longest subvectors.\n\t\"\"\"\nfunction Find_Max_Length(lst::Vector{Vector{Int64}})::Int64 \n\tmax_length = 0\n\tfor i in 1:length(lst)\n\t\tif length(lst[i]) > max_length\n\t\t\tmax_length = length(lst[i])\n\t\tend\n\tend\n\treturn max_length\nend\nusing Test\n\n@testset begin\n\ncandidate = Find_Max_Length;\n\t@test(candidate([[1], [1, 4], [5, 6, 7, 8]]) == 4)\n\t@test(candidate([[0, 1], [2, 2], [3, 2, 1]]) == 3)\n\t@test(candidate([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]) == 5)\nend\n",
      "timestamp": 1665509682,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_784_mul_even_odd",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the product of first even and odd number of a given vector.\n\t\"\"\"\nfunction mul_even_odd(list1::Vector{Int64})::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = mul_even_odd;\n\t@test(candidate([1, 3, 5, 7, 4, 1, 6, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([1, 5, 7, 9, 10]) == 10)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i % 2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i % 2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i]%2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i]%2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif (list1[i] % 2 == 0) && (even_num == 0)\n\t\t\teven_num = list1[i]\n\t\telseif (list1[i] % 2 != 0) && (odd_num == 0)\n\t\t\todd_num = list1[i]\n\t\tend\n\t\tif (even_num != 0) && (odd_num != 0)\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 == 0\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in 1:length(list1)\n\t\tif list1[i] % 2 != 0\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\teven_odd = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i]%2 == 0\n\t\t\teven_odd = list1[i]*list1[i+1]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_odd\nend",
    "\teven = 0\n\todd = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even*odd\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i%2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i%2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num*odd_num\nend",
    "\teven_num = 0\n\todd_num = 0\n\tfor i in list1\n\t\tif i % 2 == 0\n\t\t\teven_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i in list1\n\t\tif i % 2 != 0\n\t\t\todd_num = i\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend"
  ]
}
{
  "name": "mbpp_576_is_Sub_Array",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to check whether a vector is subvector of another or not.\n\t\"\"\"\nfunction is_Sub_Array(A::Vector{Int64}, B::Vector{Int64})::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_Sub_Array;\n\t@test(candidate([1, 4, 3, 5], [1, 2]) == false)\n\t@test(candidate([1, 2, 1], [1, 2, 1]) == true)\n\t@test(candidate([1, 0, 2, 2], [2, 2, 0]) == false)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tCheck whether a vector is subvector of another or not.\n\t\"\"\"\n\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B)-length(A)+1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B)-length(A)+1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i + length(A) - 1]\n\t\t\treturn true\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\t\"\"\"\n\t\tis_Sub_Array(A::Vector{Int64}, B::Vector{Int64})",
    "\t\tif length(A) > length(B)\n\t\t\treturn false\n\t\tend\n\t\tfor i in 1:length(B)-length(A)+1\n\t\t\tif A == B[i:i+length(A)-1]\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend",
    "\t\"\"\"\n\t\tA is the main vector and B is the sub vector.\n\t\"\"\"\n\tif length(A) < length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(A)\n\t\tif A[i] == B[1]\n\t\t\tfor j in 1:length(B)\n\t\t\t\tif A[i+j-1] != B[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(B)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B)-length(A)+1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tA is the subvector of B.\n\t\"\"\"\n\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i = 1:length(B) - length(A) + 1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B)-length(A)+1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(B)-length(A)+1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(B)\n\t\tif B[i] in A\n\t\t\tcontinue\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tis_Sub_Array(A::Vector{Int64}, B::Vector{Int64})::Bool \n\t\n\tThis function checks whether a vector is subvector of another or not.\n\t\n\tExample:\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\t\ttrue\n\t\t\n\t\tjulia> is_Sub_Array([1,2,3,4,5],[1,2,",
    "\tn = length(A)\n\tm = length(B)\n\tif m < n\n\t\treturn false\n\tend\n\tfor i in 1:m-n+1\n\t\tif A == B[i:i+n-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(A)\n\tm = length(B)\n\ti = 1\n\tj = 1\n\twhile i < n && j < m\n\t\tif A[i] == B[j]\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telse\n\t\t\ti = i - j + 2\n\t\t\tj = 1\n\t\tend\n\tend\n\tif j == m\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i + length(A) - 1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a vector is subvector of another or not.\n\t\"\"\"\n\tif length(A) > length(B)\n\t\treturn false\n\tend\n\ti = 1\n\tj = 1\n\twhile i <= length(A) && j <= length(B)\n\t\tif A[i] == B[j]\n\t\t\ti += 1\n\t\t\tj += 1\n\t\telse\n\t\t\tj += 1\n\t\tend\n\tend\n\tif i == length(A) + 1\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\t\"\"\"\n\tCheck whether a vector is subvector of another or not.\n\t\"\"\"\n\tif length(A) > length(B)\n\t\treturn false\n\tend\n\tfor i in 1:length(B) - length(A) + 1\n\t\tif A == B[i:i+length(A)-1]\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend"
  ]
}
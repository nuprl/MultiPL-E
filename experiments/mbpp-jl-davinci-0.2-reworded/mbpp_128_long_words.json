{
  "name": "mbpp_128_long_words",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given vector of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str, \" \")\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend",
    "\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend",
    "\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend",
    "\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend"
  ]
}
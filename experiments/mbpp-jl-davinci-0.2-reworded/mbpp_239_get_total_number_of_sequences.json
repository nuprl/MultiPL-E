{
  "name": "mbpp_239_get_total_number_of_sequences",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n\t\"\"\"\nfunction get_total_number_of_sequences(m::Int64, n::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_239_get_total_number_of_sequences.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = get_total_number_of_sequences;\n\t@test(candidate(10, 4) == 4)\n\t@test(candidate(5, 2) == 6)\n\t@test(candidate(16, 3) == 84)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn sum([get_total_number_of_sequences(m-i, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn m * get_total_number_of_sequences(m, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m - i, n - 1) for i in 2:m])\nend",
    "\tif n == 0:\n\t\treturn 1\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tdp = Array{Int64}(m)\n\tdp[1] = 1\n\tfor i in 2:m\n\t\tdp[i] = dp[i-1] + 1\n\tend\n\tfor j in 2:n\n\t\tfor i in 2:m\n\t\t\tdp[i] = dp[i-1] + dp[i]\n\t\tend\n\tend\n\treturn dp[m]\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 0:\n\t\treturn 1\n\tif m == 0:\n\t\treturn 0\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\ttotal_number_of_sequences = 0\n\t\tfor i in 2:m\n\t\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total_number_of_sequences\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn (m - 1) * get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "    if n == 1\n        return m\n    end\n    return get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\treturn m*(m+1)*(m+2)/6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m-1, n-2))\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n - 2))\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) * (m - n + 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\tdp = Array{Int64}(m)\n\tdp[1] = 1\n\t\n\tfor i in 2:m\n\t\tdp[i] = dp[i-1] + (i-1)\n\tend\n\t\n\tfor i in 2:n\n\t\tfor j in 2:m\n\t\t\tdp[j] += dp[j-1]\n\t\tend\n\tend\n\t\n\treturn dp[m]\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)/6\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)/24\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)/120\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)/720\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)/5040\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)/40320\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)/362880\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)/3628800\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)/39916800\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n - 2))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn (m * (m + 1) / 2) * get_total_number_of_sequences(m, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m-n+2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)*(m+11)\n\tend\n\tif",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\telseif n == 1\n\t\treturn m\n\telse\n\t\ttotal = 0\n\t\tfor i in 2:m\n\t\t\ttotal += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*m\n\tend\n\treturn m*m*get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\telseif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m, n-2)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1 \n\t\treturn m\n\telse \n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\ttotal = 0\n\t\tfor i in 2:m\n\t\t\ttotal += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total\n\tend\nend",
    "\t\"\"\"\n\tm: positive integer\n\tn: positive integer\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (2 * m + 1) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (2 * m + 1) * (3 * m^2 + 3 * m - 1) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (2 * m + 1) * (3 * m^2 + 3 * m - 1) * (4 * m^3 + 6 * m^2 - 3 * m - 1) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (2 * m + 1) * (3 * m^2 + 3 * m - 1) * (4 * m^3 + 6 * m^2 - 3 * m - 1) * (5 * m^4 + 10 * m^3 - 6 * m^2 - 4 * m + 1) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (2 * m + 1) * (3 * m^2 + 3 * m - 1) * (4 * m^3 + 6 * m^2 - 3 * m - 1) * (5 * m^4 + 10 * m^3 - 6 * m^2 - 4 * m + 1) * (6 * m^5 + 15 * m^4 - 10 * m^3 - 10 * m^2 + 5 * m + 1) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (2 * m + 1) * (3 * m^2 + 3 * m - 1) * (4 * m^3 + 6 * m^2 - 3 * m - 1) * (5 * m^4 + 10 * m^3 - 6 * m^2 - 4 * m + 1) * (6 * m^5 + 15 * m^4 - 10 * m^3 - 10 *",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\t\"\"\"\n\tm = maximum value of the sequence\n\tn = length of the sequence\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn sum(get_total_number_of_sequences(m, i) for i in 2:n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)*(m-2)^(n-2)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn m * get_total_number_of_sequences(m, n-1)\n\tend\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\tif m == 0 \n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n - 1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1), get_total_number_of_sequences(m, n-2)])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\t\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n - 2))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) * (m + n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\telseif n == 2\n\t\treturn m * (m + 1) / 2\n\telse\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\t\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif m < 2 * n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m, n-1))\nend",
    "\tif m == 0 || n == 0\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\treturn m*(m+1)*get_total_number_of_sequences(m, n-2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\t\n\treturn total_number_of_sequences\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 0:\n\t\treturn 1\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m - 1) * (m - 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) / 39916800\n\tend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m-n+2)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\treturn m*(m+1)*get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) * (m - n + 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i = 2*m to m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\t\"\"\"\n\t\tm: positive integer\n\t\tn: positive integer\n\t\treturn: number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\telse\n\t\ttotal_number_of_sequences = 0\n\t\tfor i in 2:m\n\t\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total_number_of_sequences\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 1 \n\t\treturn m\n\telse \n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn (m-1)*get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) / 2 * (m + 2) / 3\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\t\n\t# dp[i][j] = number of sequences of length i, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to j.\n\tdp = Array{Int64}(undef, n, m+1)\n\tdp[1,:] = fill(1, m+1)\n\tdp[2,:] = fill(1, m+1)\n\tfor i in 3:n\n\t\tfor j in 2:m\n\t\t\tdp[i,j] = dp[i,j-1] + dp[i-1,j] - dp[i-1,j-1]\n\t\tend\n\tend\n\treturn sum(dp[n,:])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1) + 1\n\tend\n\treturn m*(m-1)^(n-1) + get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*m\n\tend\n\tdp = Array{Int64}(n)\n\tdp[1] = m\n\tdp[2] = m*m\n\tfor i in 3:n\n\t\tdp[i] = dp[i-1]*(m-1) + dp[i-2]*(m-1)\n\tend\n\treturn dp[n]\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m-1, n-2))\nend",
    "    if n == 0\n        return 1\n    end\n    total = 0\n    for i in 2:m\n        total += get_total_number_of_sequences(i, n-1)\n    end\n    return total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\treturn m*(m-1)*(m-2)*(m-3)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0:\n\t\treturn 1\n\tif n == 1:\n\t\treturn m\n\t\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 0\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tdp = zeros(Int64, n)\n\tdp[1] = m\n\tfor i in 2:n\n\t\tdp[i] = sum(dp[1:i-1])\n\tend\n\treturn sum(dp)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 1 \n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\treturn m*(m+1)*(m+2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend",
    "\t# Write your code here\n\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn (m - 2) * get_total_number_of_sequences(m - 1, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * get_total_number_of_sequences(m - 2, n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)\n\tend\n\treturn m*(m+1)*(m+2)*(m+3)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif m < 2*n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn m - 2*n + 1 + get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)/6\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)/24\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)/120\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)/720\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)/5040\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)/40320\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)/362880\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)/3628800\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)/39916800\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(m, n-1)\n\tend\n\treturn total\nend",
    "    if n == 1\n        return m\n    end\n    if n == 2\n        return m*(m+1)/2\n    end\n    return m*(m+1)/2*(m+2)/3\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) / 2 * (m + 2) / 3\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m-1, n-2))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn sum([get_total_number_of_sequences(i, n-1) for i in (2*m..m)])\nend"
  ]
}
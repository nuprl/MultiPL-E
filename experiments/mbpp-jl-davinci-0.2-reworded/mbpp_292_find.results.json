{
  "name": "mbpp_292_find",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n/m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509728,
      "stdout": "test set: Error During Test at /tmp/tmp30d5000y.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp30d5000y.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp30d5000y.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp30d5000y.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp30d5000y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = 0\n\twhile n >= m\n\t\tn = n - m\n\t\tq = q + 1\n\tend\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = n/m\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmpy_7a1kb_.jl:13\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmpy_7a1kb_.jl:6\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpy_7a1kb_.jl:13 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpy_7a1kb_.jl:12\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpy_7a1kb_.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = 0\n\twhile n >= m\n\t\tn = n - m\n\t\tq = q + 1\n\tend\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n/m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509728,
      "stdout": "test set: Error During Test at /tmp/tmp30d5000y.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp30d5000y.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp30d5000y.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp30d5000y.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp30d5000y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = 0\n\twhile n >= m\n\t\tn -= m\n\t\tq += 1\n\tend\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n/m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509728,
      "stdout": "test set: Error During Test at /tmp/tmp30d5000y.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp30d5000y.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp30d5000y.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp30d5000y.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp30d5000y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn div(n, m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = 0\n\twhile n >= m\n\t\tn -= m\n\t\tq += 1\n\tend\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n/m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509728,
      "stdout": "test set: Error During Test at /tmp/tmp30d5000y.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp30d5000y.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp30d5000y.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp30d5000y.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp30d5000y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(Int64, n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(Int64, n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = n/m\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmpy_7a1kb_.jl:13\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(3.3333333333333335)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmpy_7a1kb_.jl:6\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpy_7a1kb_.jl:13 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpy_7a1kb_.jl:12\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpy_7a1kb_.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\t\treturn floor(n/m)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122422,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps5cocs7v.jl:7\nin expression starting at /tmp/tmps5cocs7v.jl:7\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\tq = 0\n\twhile n >= m\n\t\tn -= m\n\t\tq += 1\n\tend\n\treturn q\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(Int64, n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn n//m\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Error During Test at /tmp/tmp3k3fea39.jl:12\n  Test threw exception\n  Expression: candidate(10, 3) == 3\n  InexactError: Int64(10//3)\n  Stacktrace:\n   [1] Integer\n     @ ./rational.jl:110 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] find(n::Int64, m::Int64)\n     @ Main /tmp/tmp3k3fea39.jl:5\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp3k3fea39.jl:12 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp3k3fea39.jl:11\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp3k3fea39.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a jlthon function to find quotient of two numbers (rounded down to the nearest integer).\n\t\"\"\"\nfunction find(n::Int64, m::Int64)::Int64 \n\treturn floor(n/m)\nend\nusing Test\n\n@testset begin\n\ncandidate = find;\n\t@test(candidate(10, 3) == 3)\n\t@test(candidate(4, 2) == 2)\n\t@test(candidate(20, 5) == 4)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
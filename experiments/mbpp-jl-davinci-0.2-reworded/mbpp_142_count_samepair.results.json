{
  "name": "mbpp_142_count_samepair",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_142_count_samepair.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i = 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tif length(list1) != length(list2) || length(list1) != length(list3)\n\t\treturn 0\n\tend\n\tcount = 0\n\tfor i = 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list2[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list2[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i = 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i = 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\t\"\"\"\n\tcount_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})\n\t\n\tCount the number of items that are identical in the same position of three given vectors.\n\t\n\tExamples\n\t--------\n\tjulia> count_samepair([1,2,3],[1,2,3],[1,2,3])\n\t3\n\t\n\tjulia> count_samepair([1,2,3],[1,2,3],[1,2,4])\n\t2\n\t\"\"\"\n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list1[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\t\"\"\"\n\tcount_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})\n\t\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\n\tif length(list1) != length(list2) || length(list1) != length(list3)\n\t\treturn 0\n\tend\n\tcount = 0\n\tfor i = 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcnt = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcnt += 1\n\t\tend\n\tend\n\treturn cnt\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tn = length(list1)\n\tcount = 0\n\tfor i in 1:n\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list2[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list2[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\t\"\"\"\n\tcount_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})\n\t\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\t\"\"\"\n\tCount the number of items that are identical in the same position of three given vectors.\n\t\"\"\"\n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n    count = 0\n    for i in 1:length(list1)\n        if list1[i] == list2[i] && list2[i] == list3[i]\n            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\t\"\"\"\n\tcount_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})\n\t\n\tCount the number of items that are identical in the same position of three given vectors.\n\t\n\tExample\n\t-------\n\tjulia> count_samepair([1,2,3,4,5], [1,2,3,4,5], [1,2,3,4,5])\n\t5\n\t\n\tjulia> count_samepair([1,2,3,4,5], [1,2,3,4,5], [1,2,3,4,6])\n\t4\n\t\"\"\"\n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1666123198,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list2[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to count number items that are identical in the same position of three given vectors.\n\t\"\"\"\nfunction count_samepair(list1::Vector{Int64}, list2::Vector{Int64}, list3::Vector{Int64})::Int64 \n\tcount = 0\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list2[i] && list1[i] == list3[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_samepair;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 9], [2, 1, 3, 1, 2, 6, 7, 9]) == 3)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 4)\n\t@test(candidate([1, 2, 3, 4, 2, 6, 7, 8], [2, 2, 3, 1, 2, 6, 7, 8], [2, 1, 3, 1, 2, 6, 7, 8]) == 5)\nend\n",
      "timestamp": 1665510248,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
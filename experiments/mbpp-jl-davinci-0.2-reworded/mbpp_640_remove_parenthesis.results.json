{
  "name": "mbpp_640_remove_parenthesis",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in \"()\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Error During Test at /tmp/tmpeqt48emr.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeqt48emr.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeqt48emr.jl:19\ntest set: Error During Test at /tmp/tmpeqt48emr.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeqt48emr.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeqt48emr.jl:19\ntest set: Error During Test at /tmp/tmpeqt48emr.jl:22\n  Test threw exception\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeqt48emr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpcv63uhdf.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv63uhdf.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv63uhdf.jl:19\ntest set: Test Failed at /tmp/tmpcv63uhdf.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv63uhdf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv63uhdf.jl:19\ntest set: Test Failed at /tmp/tmpcv63uhdf.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcv63uhdf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcv63uhdf.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcv63uhdf.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemoves parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpsy8zkw_5.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsy8zkw_5.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmph0pqfv4h.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\ntest set: Test Failed at /tmp/tmph0pqfv4h.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\ntest set: Test Failed at /tmp/tmph0pqfv4h.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph0pqfv4h.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \" \"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \" \"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj4oii4iv.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\ntest set: Test Failed at /tmp/tmpj4oii4iv.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\ntest set: Test Failed at /tmp/tmpj4oii4iv.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj4oii4iv.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in [\"(\",\")\"]\n\t\t\titems = deleteat!(items,findall(items,item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpy11607de.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy11607de.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy11607de.jl:19\ntest set: Test Failed at /tmp/tmpy11607de.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy11607de.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy11607de.jl:19\ntest set: Test Failed at /tmp/tmpy11607de.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy11607de.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy11607de.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy11607de.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t# remove parenthesis and what is inbetween them\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpozx5qoe5.jl:26\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\ntest set: Test Failed at /tmp/tmpozx5qoe5.jl:27\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\ntest set: Test Failed at /tmp/tmpozx5qoe5.jl:28\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpozx5qoe5.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string and return the string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmputek3vam.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmputek3vam.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmputek3vam.jl:20\ntest set: Test Failed at /tmp/tmputek3vam.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmputek3vam.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmputek3vam.jl:20\ntest set: Test Failed at /tmp/tmputek3vam.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmputek3vam.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmputek3vam.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmputek3vam.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmp_e0l886c.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\ntest set: Test Failed at /tmp/tmp_e0l886c.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\ntest set: Test Failed at /tmp/tmp_e0l886c.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_e0l886c.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item)[1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpws2ika04.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\ntest set: Test Failed at /tmp/tmpws2ika04.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\ntest set: Test Failed at /tmp/tmpws2ika04.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpws2ika04.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppmlr9a_8.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppmlr9a_8.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tFunction to remove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjrsxelgq.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrsxelgq.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrsxelgq.jl:21\ntest set: Test Failed at /tmp/tmpjrsxelgq.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrsxelgq.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrsxelgq.jl:21\ntest set: Test Failed at /tmp/tmpjrsxelgq.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjrsxelgq.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjrsxelgq.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjrsxelgq.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tFunction to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpdu84zia1.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdu84zia1.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdu84zia1.jl:19\ntest set: Test Failed at /tmp/tmpdu84zia1.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdu84zia1.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdu84zia1.jl:19\ntest set: Test Failed at /tmp/tmpdu84zia1.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdu84zia1.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdu84zia1.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdu84zia1.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmp27fd7qdu.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp27fd7qdu.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp27fd7qdu.jl:20\ntest set: Test Failed at /tmp/tmp27fd7qdu.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp27fd7qdu.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp27fd7qdu.jl:20\ntest set: Test Failed at /tmp/tmp27fd7qdu.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp27fd7qdu.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp27fd7qdu.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp27fd7qdu.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp67fe9spx.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp67fe9spx.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp4eb6fbrm.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\ntest set: Test Failed at /tmp/tmp4eb6fbrm.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\ntest set: Test Failed at /tmp/tmp4eb6fbrm.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4eb6fbrm.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\" || items[i] == \")\"\n\t\t\tdeleteat!(items,i)\n\t\tend\n\tend\n\treturn join(items,\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmphro4b90m.jl:17\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphro4b90m.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphro4b90m.jl:16\ntest set: Test Failed at /tmp/tmphro4b90m.jl:18\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphro4b90m.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphro4b90m.jl:16\ntest set: Test Failed at /tmp/tmphro4b90m.jl:19\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphro4b90m.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphro4b90m.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphro4b90m.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpb03nc_hr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\ntest set: Test Failed at /tmp/tmpb03nc_hr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\ntest set: Test Failed at /tmp/tmpb03nc_hr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb03nc_hr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpkvr7h8mk.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkvr7h8mk.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item)[1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpucqfr5x2.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpucqfr5x2.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpucqfr5x2.jl:19\ntest set: Test Failed at /tmp/tmpucqfr5x2.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpucqfr5x2.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpucqfr5x2.jl:19\ntest set: Test Failed at /tmp/tmpucqfr5x2.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpucqfr5x2.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpucqfr5x2.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpucqfr5x2.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpg_1wpgf4.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg_1wpgf4.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items,findfirst(items,item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpnuzx2074.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuzx2074.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuzx2074.jl:19\ntest set: Test Failed at /tmp/tmpnuzx2074.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuzx2074.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuzx2074.jl:19\ntest set: Test Failed at /tmp/tmpnuzx2074.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnuzx2074.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnuzx2074.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnuzx2074.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpkyoi_5ox.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\ntest set: Test Failed at /tmp/tmpkyoi_5ox.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\ntest set: Test Failed at /tmp/tmpkyoi_5ox.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkyoi_5ox.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp67fe9spx.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp67fe9spx.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in items\n\t\tif i == \"(\"\n\t\t\treturn remove_parenthesis(items[i+1:end])\n\t\telseif i == \")\"\n\t\t\treturn remove_parenthesis(items[1:i-1])\n\t\tend\n\tend\n\treturn items\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123197,
      "stdout": "test set: Error During Test at /tmp/tmpmlfbuni4.jl:22\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: Cannot `convert` an object of type Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpmlfbuni4.jl:15\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmlfbuni4.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmlfbuni4.jl:21\ntest set: Error During Test at /tmp/tmpmlfbuni4.jl:23\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: Cannot `convert` an object of type Vector{String} to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpmlfbuni4.jl:15\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpmlfbuni4.jl:23 [inl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmlfbuni4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpbbm_r1t1.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbbm_r1t1.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\t\titems = deleteat!(items, findfirst(items, \")\"))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpsn4tnbgg.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsn4tnbgg.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsn4tnbgg.jl:20\ntest set: Test Failed at /tmp/tmpsn4tnbgg.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsn4tnbgg.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsn4tnbgg.jl:20\ntest set: Test Failed at /tmp/tmpsn4tnbgg.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsn4tnbgg.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsn4tnbgg.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsn4tnbgg.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphfkzzu8c.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphfkzzu8c.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp4eb6fbrm.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\ntest set: Test Failed at /tmp/tmp4eb6fbrm.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\ntest set: Test Failed at /tmp/tmp4eb6fbrm.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4eb6fbrm.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4eb6fbrm.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4eb6fbrm.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems[items.==item] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpv1o9y2vc.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1o9y2vc.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1o9y2vc.jl:19\ntest set: Test Failed at /tmp/tmpv1o9y2vc.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1o9y2vc.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1o9y2vc.jl:19\ntest set: Test Failed at /tmp/tmpv1o9y2vc.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1o9y2vc.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1o9y2vc.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpv1o9y2vc.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp8k95grto.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\ntest set: Test Failed at /tmp/tmp8k95grto.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\ntest set: Test Failed at /tmp/tmp8k95grto.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8k95grto.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemoves the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp9au6b7iq.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9au6b7iq.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9au6b7iq.jl:21\ntest set: Test Failed at /tmp/tmp9au6b7iq.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9au6b7iq.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9au6b7iq.jl:21\ntest set: Test Failed at /tmp/tmp9au6b7iq.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9au6b7iq.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9au6b7iq.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9au6b7iq.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\" || items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpsuat8oeu.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuat8oeu.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuat8oeu.jl:19\ntest set: Test Failed at /tmp/tmpsuat8oeu.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuat8oeu.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuat8oeu.jl:19\ntest set: Test Failed at /tmp/tmpsuat8oeu.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsuat8oeu.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsuat8oeu.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsuat8oeu.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in items\n\t\tif i == \"(\" || i == \")\"\n\t\t\tdeleteat!(items, findall(items, i))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp2hhwdixn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hhwdixn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hhwdixn.jl:19\ntest set: Test Failed at /tmp/tmp2hhwdixn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hhwdixn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hhwdixn.jl:19\ntest set: Test Failed at /tmp/tmp2hhwdixn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2hhwdixn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2hhwdixn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2hhwdixn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\telse\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Error During Test at /tmp/tmplollsscd.jl:23\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String}) (repeats 2 times)\n     @ Main /tmp/tmplollsscd.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmplollsscd.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmplollsscd.jl:22\ntest set: Error During Test at /tmp/tmplollsscd.jl:24\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String}) (repeats 2 times)\n     @ Main /tmp/tmplollsscd.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplollsscd.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tThis function removes the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp0_jxqc4h.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_jxqc4h.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_jxqc4h.jl:22\ntest set: Test Failed at /tmp/tmp0_jxqc4h.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_jxqc4h.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_jxqc4h.jl:22\ntest set: Test Failed at /tmp/tmp0_jxqc4h.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0_jxqc4h.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0_jxqc4h.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0_jxqc4h.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\" || items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpc9cjwv6t.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9cjwv6t.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9cjwv6t.jl:19\ntest set: Test Failed at /tmp/tmpc9cjwv6t.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9cjwv6t.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9cjwv6t.jl:19\ntest set: Test Failed at /tmp/tmpc9cjwv6t.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc9cjwv6t.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc9cjwv6t.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc9cjwv6t.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp67fe9spx.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp67fe9spx.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphfkzzu8c.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphfkzzu8c.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif occursin(\"(\", items[i])\n\t\t\titems[i] = replace(items[i], r\"\\(.*\\)\", \"\")\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Error During Test at /tmp/tmpp09apgfb.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpp09apgfb.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp09apgfb.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpp09apgfb.jl:19\ntest set: Error During Test at /tmp/tmpp09apgfb.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpp09apgfb.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpp09apgfb.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp09apgfb.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpc3ixet0f.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\ntest set: Test Failed at /tmp/tmpc3ixet0f.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\ntest set: Test Failed at /tmp/tmpc3ixet0f.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc3ixet0f.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphfkzzu8c.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\ntest set: Test Failed at /tmp/tmphfkzzu8c.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphfkzzu8c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphfkzzu8c.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphfkzzu8c.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item)[1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpsmxqzx55.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsmxqzx55.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsmxqzx55.jl:19\ntest set: Test Failed at /tmp/tmpsmxqzx55.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsmxqzx55.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsmxqzx55.jl:19\ntest set: Test Failed at /tmp/tmpsmxqzx55.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsmxqzx55.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsmxqzx55.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsmxqzx55.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpbbm_r1t1.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbbm_r1t1.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp8k95grto.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\ntest set: Test Failed at /tmp/tmp8k95grto.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\ntest set: Test Failed at /tmp/tmp8k95grto.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8k95grto.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8k95grto.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8k95grto.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i = 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmprbiq2eqm.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprbiq2eqm.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprbiq2eqm.jl:22\ntest set: Test Failed at /tmp/tmprbiq2eqm.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprbiq2eqm.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprbiq2eqm.jl:22\ntest set: Test Failed at /tmp/tmprbiq2eqm.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprbiq2eqm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprbiq2eqm.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprbiq2eqm.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphvh99jod.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphvh99jod.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123199,
      "stdout": "test set: Test Failed at /tmp/tmp_stzfc83.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\ntest set: Test Failed at /tmp/tmp_stzfc83.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\ntest set: Test Failed at /tmp/tmp_stzfc83.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_stzfc83.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in [\"(\",\")\"]\n\t\t\titems = deleteat!(items,findall(items,item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpm4myfqnr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4myfqnr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4myfqnr.jl:19\ntest set: Test Failed at /tmp/tmpm4myfqnr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4myfqnr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4myfqnr.jl:19\ntest set: Test Failed at /tmp/tmpm4myfqnr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm4myfqnr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm4myfqnr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm4myfqnr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppmlr9a_8.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppmlr9a_8.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\tfor i in 1:length(items)\n\t\t\tif items[i] == \"(\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\tfor j in i+1:length(items)\n\t\t\t\t\tif items[j] == \")\"\n\t\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\telse\n\t\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\treturn join(items)\n\tend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpf7ldn8c3.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7ldn8c3.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7ldn8c3.jl:24\ntest set: Test Failed at /tmp/tmpf7ldn8c3.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7ldn8c3.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7ldn8c3.jl:24\ntest set: Test Failed at /tmp/tmpf7ldn8c3.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpf7ldn8c3.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpf7ldn8c3.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpf7ldn8c3.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor item in items\n\t\tif item != \"(\" && item != \")\"\n\t\t\tresult = result * item\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123199,
      "stdout": "test set: Test Failed at /tmp/tmpsks5em3a.jl:18\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsks5em3a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsks5em3a.jl:17\ntest set: Test Failed at /tmp/tmpsks5em3a.jl:19\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsks5em3a.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsks5em3a.jl:17\ntest set: Test Failed at /tmp/tmpsks5em3a.jl:20\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsks5em3a.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsks5em3a.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsks5em3a.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\titems[items.==item] = \"\"\n\t\telseif item == \")\"\n\t\t\titems[items.==item] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123199,
      "stdout": "test set: Test Failed at /tmp/tmpdjfnlr53.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjfnlr53.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjfnlr53.jl:21\ntest set: Test Failed at /tmp/tmpdjfnlr53.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjfnlr53.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjfnlr53.jl:21\ntest set: Test Failed at /tmp/tmpdjfnlr53.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdjfnlr53.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdjfnlr53.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdjfnlr53.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor (i, item) in enumerate(items)\n\t\tif item == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif item == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmp3tig6t9_.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tig6t9_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tig6t9_.jl:21\ntest set: Test Failed at /tmp/tmp3tig6t9_.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tig6t9_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tig6t9_.jl:21\ntest set: Test Failed at /tmp/tmp3tig6t9_.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tig6t9_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tig6t9_.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3tig6t9_.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmph0pqfv4h.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\ntest set: Test Failed at /tmp/tmph0pqfv4h.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\ntest set: Test Failed at /tmp/tmph0pqfv4h.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph0pqfv4h.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph0pqfv4h.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph0pqfv4h.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item)[1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpws2ika04.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\ntest set: Test Failed at /tmp/tmpws2ika04.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\ntest set: Test Failed at /tmp/tmpws2ika04.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpws2ika04.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpws2ika04.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpws2ika04.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in \"()\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Error During Test at /tmp/tmpeqt48emr.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeqt48emr.jl:20 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeqt48emr.jl:19\ntest set: Error During Test at /tmp/tmpeqt48emr.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpeqt48emr.jl:21 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpeqt48emr.jl:19\ntest set: Error During Test at /tmp/tmpeqt48emr.jl:22\n  Test threw exception\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n  use occursin(x, y) for string containment\n  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] in(#unused#::String, #unused#::String)\n     @ Base ./strings/search.jl:638\n   [3] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpeqt48emr.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeqt48emr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpc3ixet0f.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\ntest set: Test Failed at /tmp/tmpc3ixet0f.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\ntest set: Test Failed at /tmp/tmpc3ixet0f.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc3ixet0f.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc3ixet0f.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc3ixet0f.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpg_1wpgf4.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg_1wpgf4.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmp67fe9spx.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\ntest set: Test Failed at /tmp/tmp67fe9spx.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67fe9spx.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67fe9spx.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp67fe9spx.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpkvr7h8mk.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkvr7h8mk.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in [\"(\", \")\"]\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmpp0a3p4wt.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0a3p4wt.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0a3p4wt.jl:19\ntest set: Test Failed at /tmp/tmpp0a3p4wt.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0a3p4wt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0a3p4wt.jl:19\ntest set: Test Failed at /tmp/tmpp0a3p4wt.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0a3p4wt.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0a3p4wt.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp0a3p4wt.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tresult = \"\"\n\tfor item in items\n\t\tif item != \"(\" && item != \")\"\n\t\t\tresult *= item\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmprt3kbv4i.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprt3kbv4i.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprt3kbv4i.jl:20\ntest set: Test Failed at /tmp/tmprt3kbv4i.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprt3kbv4i.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprt3kbv4i.jl:20\ntest set: Test Failed at /tmp/tmprt3kbv4i.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprt3kbv4i.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprt3kbv4i.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprt3kbv4i.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp9d1t4h_1.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d1t4h_1.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d1t4h_1.jl:19\ntest set: Test Failed at /tmp/tmp9d1t4h_1.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d1t4h_1.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d1t4h_1.jl:19\ntest set: Test Failed at /tmp/tmp9d1t4h_1.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9d1t4h_1.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9d1t4h_1.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9d1t4h_1.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmpnb5qiqch.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnb5qiqch.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmppiq2wohm.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppiq2wohm.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp13ltmatp.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp13ltmatp.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp13ltmatp.jl:19\ntest set: Test Failed at /tmp/tmp13ltmatp.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp13ltmatp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp13ltmatp.jl:19\ntest set: Test Failed at /tmp/tmp13ltmatp.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp13ltmatp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp13ltmatp.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp13ltmatp.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmpbbm_r1t1.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\ntest set: Test Failed at /tmp/tmpbbm_r1t1.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbbm_r1t1.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbbm_r1t1.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbbm_r1t1.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmp9lku_m6w.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9lku_m6w.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9lku_m6w.jl:22\ntest set: Test Failed at /tmp/tmp9lku_m6w.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9lku_m6w.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9lku_m6w.jl:22\ntest set: Test Failed at /tmp/tmp9lku_m6w.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9lku_m6w.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9lku_m6w.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9lku_m6w.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpakph3gc_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\ntest set: Test Failed at /tmp/tmpakph3gc_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpakph3gc_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpakph3gc_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpakph3gc_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\titems[i] = replace(items[i],\"(\",\"\")\n\t\titems[i] = replace(items[i],\")\",\"\")\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Error During Test at /tmp/tmp69csmsp8.jl:19\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmp69csmsp8.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69csmsp8.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp69csmsp8.jl:18\ntest set: Error During Test at /tmp/tmp69csmsp8.jl:20\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::String, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmp69csmsp8.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp69csmsp8.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp69csmsp8.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmph1y2ayrb.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph1y2ayrb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphvh99jod.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphvh99jod.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmptofzv51e.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptofzv51e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptofzv51e.jl:19\ntest set: Test Failed at /tmp/tmptofzv51e.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptofzv51e.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptofzv51e.jl:19\ntest set: Test Failed at /tmp/tmptofzv51e.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptofzv51e.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptofzv51e.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptofzv51e.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphvh99jod.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphvh99jod.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp5vgol9dz.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vgol9dz.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vgol9dz.jl:24\ntest set: Test Failed at /tmp/tmp5vgol9dz.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vgol9dz.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vgol9dz.jl:24\ntest set: Test Failed at /tmp/tmp5vgol9dz.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vgol9dz.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vgol9dz.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5vgol9dz.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif contains(items[i], \"(\")\n\t\t\titems[i] = replace(items[i], r\"\\(.*\\)\", \"\")\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Error During Test at /tmp/tmpfp6wc87u.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpfp6wc87u.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfp6wc87u.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfp6wc87u.jl:19\ntest set: Error During Test at /tmp/tmpfp6wc87u.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpfp6wc87u.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfp6wc87u.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpfp6wc87u.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\t\titems = deleteat!(items, findfirst(items, \")\"))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp70nrr_co.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp70nrr_co.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp70nrr_co.jl:20\ntest set: Test Failed at /tmp/tmp70nrr_co.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp70nrr_co.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp70nrr_co.jl:20\ntest set: Test Failed at /tmp/tmp70nrr_co.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp70nrr_co.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp70nrr_co.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp70nrr_co.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tcontinue\n\t\telse\n\t\t\tresult *= item\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmplkmgcrpr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplkmgcrpr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplkmgcrpr.jl:19\ntest set: Test Failed at /tmp/tmplkmgcrpr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplkmgcrpr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplkmgcrpr.jl:19\ntest set: Test Failed at /tmp/tmplkmgcrpr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplkmgcrpr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplkmgcrpr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplkmgcrpr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp48lmsobq.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp48lmsobq.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tFunction to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmpd6pyoxfa.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6pyoxfa.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6pyoxfa.jl:21\ntest set: Test Failed at /tmp/tmpd6pyoxfa.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6pyoxfa.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6pyoxfa.jl:21\ntest set: Test Failed at /tmp/tmpd6pyoxfa.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6pyoxfa.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6pyoxfa.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd6pyoxfa.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\telse\n\t\t\treturn remove_parenthesis(items[1:end-1]) * item * remove_parenthesis(items[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Error During Test at /tmp/tmpn1ccok2r.jl:23\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String}) (repeats 2 times)\n     @ Main /tmp/tmpn1ccok2r.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpn1ccok2r.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn1ccok2r.jl:22\ntest set: Error During Test at /tmp/tmpn1ccok2r.jl:24\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String}) (repeats 2 times)\n     @ Main /tmp/tmpn1ccok2r.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpn1ccok2r.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp3i_pfc1p.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3i_pfc1p.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmposnlredl.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\ntest set: Test Failed at /tmp/tmposnlredl.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\ntest set: Test Failed at /tmp/tmposnlredl.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmposnlredl.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tThis function removes the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmpbi65cexp.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbi65cexp.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbi65cexp.jl:19\ntest set: Test Failed at /tmp/tmpbi65cexp.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbi65cexp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbi65cexp.jl:19\ntest set: Test Failed at /tmp/tmpbi65cexp.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbi65cexp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbi65cexp.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbi65cexp.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Test Failed at /tmp/tmpvp3opoyr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp3opoyr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp3opoyr.jl:19\ntest set: Test Failed at /tmp/tmpvp3opoyr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp3opoyr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp3opoyr.jl:19\ntest set: Test Failed at /tmp/tmpvp3opoyr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvp3opoyr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvp3opoyr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvp3opoyr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpzvg956ud.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\ntest set: Test Failed at /tmp/tmpzvg956ud.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvg956ud.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvg956ud.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvg956ud.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\t# Remove the parenthesis and what is inbetween them from a string.\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\tdeleteat!(items, findall(items .== item))\n\t\t\tdeleteat!(items, findall(items .== \")\"))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Test Failed at /tmp/tmp2bj2sz5_.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bj2sz5_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bj2sz5_.jl:21\ntest set: Test Failed at /tmp/tmp2bj2sz5_.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bj2sz5_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bj2sz5_.jl:21\ntest set: Test Failed at /tmp/tmp2bj2sz5_.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2bj2sz5_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2bj2sz5_.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2bj2sz5_.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpkyoi_5ox.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\ntest set: Test Failed at /tmp/tmpkyoi_5ox.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\ntest set: Test Failed at /tmp/tmpkyoi_5ox.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyoi_5ox.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyoi_5ox.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkyoi_5ox.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\tcontinue\n\t\telseif item == \")\"\n\t\t\tcontinue\n\t\telse\n\t\t\tprint(item)\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123203,
      "stdout": "python (chrome)test set: Error During Test at /tmp/tmpl61o8438.jl:23\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpl61o8438.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl61o8438.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl61o8438.jl:22\nstring(.abc)test set: Error During Test at /tmp/tmpl61o8438.jl:24\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpl61o8438.jl:14\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl61o84",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpl61o8438.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in items\n\t\tif i == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif i == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123202,
      "stdout": "test set: Test Failed at /tmp/tmpn2i_7yrw.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2i_7yrw.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2i_7yrw.jl:21\ntest set: Test Failed at /tmp/tmpn2i_7yrw.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2i_7yrw.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2i_7yrw.jl:21\ntest set: Test Failed at /tmp/tmpn2i_7yrw.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn2i_7yrw.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn2i_7yrw.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn2i_7yrw.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
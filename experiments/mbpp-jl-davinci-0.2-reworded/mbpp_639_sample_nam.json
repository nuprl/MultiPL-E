{
  "name": "mbpp_639_sample_nam",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to sum the length of the names of a given vector of names after removing the names that start with a lowercase letter.\n\t\"\"\"\nfunction sample_nam(sample_names::Vector{String})::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = sample_nam;\n\t@test(candidate([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]) == 16)\n\t@test(candidate([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]) == 10)\n\t@test(candidate([\"abcd\", \"Python\", \"abba\", \"aba\"]) == 6)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\ttotal_length = 0\n\tfor i in sample_names\n\t\tif i[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t\t\ttotal_length += length(i)\n\t\tend\n\tend\n\treturn total_length\nend",
    "\tsum(length.(filter(x->!islower(x[1]), sample_names)))\nend",
    "\ttotal_length = 0\n\tfor name in sample_names\n\t\tif !islower(name[1])\n\t\t\ttotal_length += length(name)\n\t\tend\n\tend\n\treturn total_length\nend",
    "\t# remove names that start with a lowercase letter\n\tsample_names = sample_names[sample_names .>= \"a\"]\n\t# sum the length of the names\n\tsum(length.(sample_names))\nend",
    "\t\ttotal_length = 0\n\t\tfor name in sample_names\n\t\t\tif !islower(name[1])\n\t\t\t\ttotal_length += length(name)\n\t\t\tend\n\t\tend\n\t\treturn total_length\n\tend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\tlength(filter(x -> !islower(x[1]), sample_names))\nend",
    "\tsample_names_length = 0\n\tfor i in sample_names\n\t\tif isupper(i[1])\n\t\t\tsample_names_length += length(i)\n\t\tend\n\tend\n\treturn sample_names_length\nend",
    "\treturn sum(length.(filter(name -> !islower(name[1]), sample_names)))\nend",
    "\t\n\t# Initialize the sum of the lengths of the names\n\tsum_lengths = 0\n\t\n\t# Loop over the names\n\tfor name in sample_names\n\t\t\n\t\t# Check if the first letter is uppercase\n\t\tif uppercase(name[1]) == name[1]\n\t\t\t\n\t\t\t# Add the length of the name to the sum\n\t\t\tsum_lengths += length(name)\n\t\tend\n\tend\n\t\n\t# Return the sum of the lengths of the names\n\treturn sum_lengths\nend",
    "\t# remove the names that start with a lowercase letter\n\tsample_names = filter(x -> !islower(x[1]), sample_names)\n\t# sum the length of the names\n\tsum(length.(sample_names))\nend",
    "\t\"\"\"\n\tWrite a function to sum the length of the names of a given vector of names after removing the names that start with a lowercase letter.\n\t\"\"\"\n\tsample_names = filter(x -> x[1] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', sample_names)\n\treturn sum(length.(sample_names))\nend",
    "\ttotal_length = 0\n\tfor i in sample_names\n\t\tif isupper(i[1])\n\t\t\ttotal_length += length(i)\n\t\tend\n\tend\n\treturn total_length\nend",
    "\treturn sum(length(x) for x in sample_names if x[1] in uppercase(x))\nend",
    "\t\tsum(length.(sample_names[uppercase.(sample_names) .== sample_names]))\n\tend",
    "\tsum(length.(filter(x->!islower(x[1]), sample_names)))\nend",
    "\ttotal_length = 0\n\tfor i in sample_names\n\t\tif islower(i[1]) == false\n\t\t\ttotal_length += length(i)\n\t\tend\n\tend\n\treturn total_length\nend",
    "\t\"\"\"\n\tWrite a function to sum the length of the names of a given vector of names after removing the names that start with a lowercase letter.\n\t\"\"\"\n\tsum_len = 0\n\tfor i in sample_names\n\t\tif isupper(i[1])\n\t\t\tsum_len += length(i)\n\t\tend\n\tend\n\treturn sum_len\nend",
    "\tsample_names_filtered = filter(x -> !islower(x[1]), sample_names)\n\tsum(length.(sample_names_filtered))\nend",
    "\tsum(length.(sample_names[startswith.(sample_names, \"A\")::Vector{Bool}]))\nend"
  ]
}
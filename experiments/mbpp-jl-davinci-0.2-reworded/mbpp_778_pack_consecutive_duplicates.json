{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tlist2 = [list1[i]]\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tlist2 = append!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist3 = append!(list3, list2)\n\t\t\t\tlist2 = [list1[i]]\n\t\t\tend\n\t\tend\n\tend\n\tlist3 = append!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\tlist3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list and returns a list of lists containing consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\tfor i in 1:length(list3)\n\t\tif length(list3[i]) == 0\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(list4,list3[i])\n\t\tend\n\tend\n\treturn list4\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list and returns a list of lists with consecutive duplicates packed into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function packs consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2=[]\n\tlist3=[]\n\tfor i in 1:length(list1)\n\t\tif i==1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i]==list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2=[]\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\t\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\t\n\t\tParameters\n\t\t----------\n\t\tlist1 : Any\n\t\t\tThe list of elements.\n\t\t\t\n\t\tReturns\n\t\t-------\n\t\tAny\n\t\t\tThe list of subvectors.\n\t\t\t\n\t\tExamples\n\t\t--------\n\t\t>>> pack_consecutive_duplicates([1,1,1,2,2,2,3,3,3])\n\t\t[[1,1,1],[2,2,2],[3,3,3]]\n\t\t\n\t\t>>> pack_consecutive_duplicates([1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6])\n\t\t[[1,1,1],[2,2,2],[3,3,3],[4,4,4],[5,5,5],[6,6,6]]\n\t\t\n\t\t>>> pack_consecutive_duplicates([1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10])\n\t\t[[1,1,1],[2,2,2],[3,3,3],[4,4,4],[5,5,5],[6,6,6],[7,7,7],[8,8,8],[9,9,9],[10,10,10]]\n\t\"\"\"\n\t\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(",
    "\t\"\"\"\n\tThis function takes a list of any type and returns a list of lists of the same type.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists containing consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = Array{Any}(undef,0)\n\tlist3 = Array{Any}(undef,0)\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tlist2 = Array{Any}(undef,0)\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tlist5 = []\n\tlist6 = []\n\tlist7 = []\n\tlist8 = []\n\tlist9 = []\n\tlist10 = []\n\tlist11 = []\n\tlist12 = []\n\tlist13 = []\n\tlist14 = []\n\tlist15 = []\n\tlist16 = []\n\tlist17 = []\n\tlist18 = []\n\tlist19 = []\n\tlist20 = []\n\tlist21 = []\n\tlist22 = []\n\tlist23 = []\n\tlist24 = []\n\tlist25 = []\n\tlist26 = []\n\tlist27 = []\n\tlist28 = []\n\tlist29 = []\n\tlist30 = []\n\tlist31 = []\n\tlist32 = []\n\tlist33 = []\n\tlist34 = []\n\tlist35 = []\n\tlist36 = []\n\tlist37 = []\n\tlist38 = []\n\tlist39 = []\n\tlist40 = []\n\tlist41 = []\n\tlist42 = []\n\tlist43 = []\n\tlist44 = []\n\tlist45 = []\n\tlist46 = []\n\tlist47 = []\n\tlist48 = []\n\tlist49 = []\n\tlist50 = []\n\tlist51 = []\n\tlist52 = []\n\tlist53 = []\n\tlist54 = []\n\tlist55 = []\n\tlist56 = []\n\tlist57 = []\n\tlist58 = []\n\tlist59 = []\n\tlist60 = []\n\tlist61 = []\n\tlist62 = []\n\tlist63 = []\n\tlist64 = []\n\tlist65 = []\n\tlist66 = []\n\tlist67 = []\n\tlist68 = []\n\tlist69 = []\n\tlist70 = []\n\tlist71 = []\n\tlist72 = []\n\tlist73 = []\n\tlist74 = []\n\tlist75 = []\n\tlist76 = []\n\tlist77 = []\n\tlist78 = []\n\tlist79 = []\n\tlist80 = []\n\tlist81 = []\n\tlist82 = []\n\tlist83 = []\n\tlist84 = []\n\tlist85 = []\n\tlist86 = []\n\t",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tlist5 = []\n\tlist6 = []\n\tlist7 = []\n\tlist8 = []\n\tlist9 = []\n\tlist10 = []\n\tlist11 = []\n\tlist12 = []\n\tlist13 = []\n\tlist14 = []\n\tlist15 = []\n\tlist16 = []\n\tlist17 = []\n\tlist18 = []\n\tlist19 = []\n\tlist20 = []\n\tlist21 = []\n\tlist22 = []\n\tlist23 = []\n\tlist24 = []\n\tlist25 = []\n\tlist26 = []\n\tlist27 = []\n\tlist28 = []\n\tlist29 = []\n\tlist30 = []\n\tlist31 = []\n\tlist32 = []\n\tlist33 = []\n\tlist34 = []\n\tlist35 = []\n\tlist36 = []\n\tlist37 = []\n\tlist38 = []\n\tlist39 = []\n\tlist40 = []\n\tlist41 = []\n\tlist42 = []\n\tlist43 = []\n\tlist44 = []\n\tlist45 = []\n\tlist46 = []\n\tlist47 = []\n\tlist48 = []\n\tlist49 = []\n\tlist50 = []\n\tlist51 = []\n\tlist52 = []\n\tlist53 = []\n\tlist54 = []\n\tlist55 = []\n\tlist56 = []\n\tlist57 = []\n\tlist58 = []\n\tlist59 = []\n\tlist60 = []\n\tlist61 = []\n\tlist62 = []\n\tlist63 = []\n\tlist64 = []\n\tlist65 = []\n\tlist66 = []\n\tlist67 = []\n\tlist68 = []\n\tlist69 = []\n\tlist70 = []\n\tlist71 = []\n\tlist72 = []\n\tlist73 = []\n\tlist74 = []\n\tlist75 = []\n\tlist76 = []\n\tlist77 = []\n\tlist78 = []\n\tlist79 = []\n\tlist80 = []\n\tlist81 = []\n\tlist82 = []\n\tlist83 = []\n\tlist84 = []\n\tlist85 = []\n\tlist86 = []\n\t",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list and returns a list of lists with consecutive duplicates packed into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i+1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tlist2 = [list1[i]]\n\t\t\tlist3 = [list2]\n\t\telseif list1[i] == list1[i-1]\n\t\t\tlist2 = [list2; list1[i]]\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = [list1[i]]\n\t\t\tlist3 = [list3; list2]\n\t\tend\n\tend\n\tfor i in 1:length(list3)\n\t\tlist4 = [list4; list3[i][1]]\n\tend\n\treturn list4\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2=[]\n\tlist3=[]\n\tfor i in 1:length(list1)\n\t\tif i==1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i]==list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2=[]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tlist5 = []\n\tlist6 = []\n\tlist7 = []\n\tlist8 = []\n\tlist9 = []\n\tlist10 = []\n\tlist11 = []\n\tlist12 = []\n\tlist13 = []\n\tlist14 = []\n\tlist15 = []\n\tlist16 = []\n\tlist17 = []\n\tlist18 = []\n\tlist19 = []\n\tlist20 = []\n\tlist21 = []\n\tlist22 = []\n\tlist23 = []\n\tlist24 = []\n\tlist25 = []\n\tlist26 = []\n\tlist27 = []\n\tlist28 = []\n\tlist29 = []\n\tlist30 = []\n\tlist31 = []\n\tlist32 = []\n\tlist33 = []\n\tlist34 = []\n\tlist35 = []\n\tlist36 = []\n\tlist37 = []\n\tlist38 = []\n\tlist39 = []\n\tlist40 = []\n\tlist41 = []\n\tlist42 = []\n\tlist43 = []\n\tlist44 = []\n\tlist45 = []\n\tlist46 = []\n\tlist47 = []\n\tlist48 = []\n\tlist49 = []\n\tlist50 = []\n\tlist51 = []\n\tlist52 = []\n\tlist53 = []\n\tlist54 = []\n\tlist55 = []\n\tlist56 = []\n\tlist57 = []\n\tlist58 = []\n\tlist59 = []\n\tlist60 = []\n\tlist61 = []\n\tlist62 = []\n\tlist63 = []\n\tlist64 = []\n\tlist65 = []\n\tlist66 = []\n\tlist67 = []\n\tlist68 = []\n\tlist69 = []\n\tlist70 = []\n\tlist71 = []\n\tlist72 = []\n\tlist73 = []\n\tlist74 = []\n\tlist75 = []\n\tlist76 = []\n\tlist77 = []\n\tlist78 = []\n\tlist79 = []\n\tlist80 = []\n\tlist81 = []\n\tlist82 = []\n\tlist83 = []\n\tlist84 = []\n\tlist85 = []\n\tlist86 = []\n\t",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tlist2 = [list1[i]]\n\t\telseif list1[i] == list1[i-1]\n\t\t\tlist2[end] = [list2[end]; list1[i]]\n\t\telse\n\t\t\tlist2 = [list2; list1[i]]\n\t\tend\n\tend\n\treturn list2\nend",
    "\t\"\"\"\n\tThis function takes a list as input and returns a list of lists with consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\ttemp = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(temp, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(temp, list1[i])\n\t\telse\n\t\t\tpush!(list2, temp)\n\t\t\ttemp = []\n\t\t\tpush!(temp, list1[i])\n\t\tend\n\tend\n\tpush!(list2, temp)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists, where each sublist contains consecutive duplicates of the elements of the argument list.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\t\tpush!(list3, list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tPack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\telse\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\t\tpush!(list3,list2)\n\t\t\tend\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[length(list3)] = list2\n\t\telse\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function packs consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tlist2 = [[list1[i]]]\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2[end], list1[i])\n\t\t\telse\n\t\t\t\tpush!(list2, [list1[i]])\n\t\t\tend\n\t\tend\n\tend\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tpack_consecutive_duplicates(list1::Any)::Any\n\t\n\tThis function packs consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tlist2 = [list1[i]]\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tlist2[end] = append!(list2[end], list1[i])\n\t\t\telse\n\t\t\t\tlist2 = append!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\treturn list2\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given vector elements into subvectors.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend"
  ]
}
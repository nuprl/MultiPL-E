{
  "name": "mbpp_748_capital_words_spaces",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to put spaces between words starting with capital letters in a given string.\n\t\"\"\"\nfunction capital_words_spaces(str1::String)::String \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = capital_words_spaces;\n\t@test(candidate(\"Python\") == \"Python\")\n\t@test(candidate(\"PythonProgrammingExamples\") == \"Python Programming Examples\")\n\t@test(candidate(\"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tstr1 = replace(str1, r\"\\s+\", \" \")\n\tstr1 = replace(str1, r\"([A-Z])\", r\" \\1\")\n\tstr1 = replace(str1, r\"\\s+\", \" \")\n\treturn str1\nend",
    "\tstr1 = replace(str1, r\"\\b([A-Z])([a-z]+)\\b\", r\"\\1 \\2\")\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t\t\tstr2 *= \" \"\n\t\tend\n\t\tstr2 *= str1[i]\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\t\t\tstr2 *= \" \"\n\t\tend\n\t\tstr2 *= str1[i]\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, r\"\\s+\", \" \")\n\tstr1 = replace(str1, r\"(\\w)([A-Z])\", r\"\\1 \\2\")\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str1[i]\n\t\telseif str1[i] in ['A':'Z'] && str1[i-1] in ['a':'z']\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, r\"\\b([A-Z][a-z]+)\", r\" \\1\")\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in ['A':'Z']\n\t\t\tstr2 *= \" \"\n\t\tend\n\t\tstr2 *= str1[i]\n\tend\n\tstr2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif (str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') && (str1[i-1] in 'abcdefghijklmnopqrstuvwxyz')\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str2 * str1[i]\n\t\telseif str1[i] in ['A':'Z'] && str1[i-1] in ['a':'z']\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif isupper(str1[i]) && i != 1\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str2 * str1[i]\n\t\telseif str1[i] in ['A':'Z'] && str1[i-1] in ['a':'z']\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str1[i]\n\t\telseif str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' && str1[i-1] in 'abcdefghijklmnopqrstuvwxyz'\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str2 * str1[i]\n\t\telseif str1[i] in ['A':'Z'] && str1[i-1] in ['a':'z']\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, r\"[A-Z]\", \" $0\")\n\tstr1 = replace(str1, r\"\\s+\", \" \")\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str2 * str1[i]\n\t\telseif str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' && str1[i-1] in 'abcdefghijklmnopqrstuvwxyz'\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif i == 1\n\t\t\tstr2 = str2 * str1[i]\n\t\telseif str1[i] in ['A':'Z'] && str1[i-1] in ['a':'z']\n\t\t\tstr2 = str2 * \" \" * str1[i]\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\nfunction find_length(string::String)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = find_length;\n\t@test(candidate(\"11000010001\") == 6)\n\t@test(candidate(\"10111\") == 1)\n\t@test(candidate(\"11011101100101\") == 2)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_diff = max(max_diff, ones + zeros)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tzeros -= 1\n\t\telse\n\t\t\tones -= 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_diff = max(max_diff, ones + zeros)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, count_0 - count_1)\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero+count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_len = max(max_len, count_0 + count_1)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, count_0 + count_1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = zeros(Int64, n)\n\tzeros = zeros(Int64, n)\n\tif string[1] == '1'\n\t\tones[1] = 1\n\telse\n\t\tzeros[1] = 1\n\tend\n\tfor i in 2:n\n\t\tif string[i] == '1'\n\t\t\tones[i] = ones[i-1] + 1\n\t\t\tzeros[i] = zeros[i-1]\n\t\telse\n\t\t\tones[i] = ones[i-1]\n\t\t\tzeros[i] = zeros[i-1] + 1\n\t\tend\n\tend\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tif max_diff < abs(ones[j] - zeros[j] + zeros[i-1] - ones[i-1])\n\t\t\t\tmax_diff = abs(ones[j] - zeros[j] + zeros[i-1] - ones[i-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend"
  ]
}
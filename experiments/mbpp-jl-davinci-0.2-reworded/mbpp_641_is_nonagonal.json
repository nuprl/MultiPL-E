{
  "name": "mbpp_641_is_nonagonal",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the nth nonagonal number.\n\t\"\"\"\nfunction is_nonagonal(n::Int64)::Int64 \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_nonagonal;\n\t@test(candidate(10) == 325)\n\t@test(candidate(15) == 750)\n\t@test(candidate(18) == 1089)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\treturn (sqrt(1 + 8*n) - 1)/2\nend",
    "\t\"\"\"\n\tReturn the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tCheck if n is a nonagonal number.\n\t\"\"\"\n\treturn (sqrt(1 + 8*n) % 1 == 0)\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n * (3 * n - 2)) / 2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\treturn (3*n*n - n)/2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\treturn (sqrt(1 + 8*n) - 1)/2\nend",
    "\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tCheck if a number is nonagonal.\n\t\"\"\"\n\treturn (sqrt(1+8*n)-1)/2 % 1 == 0\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn (n*(3*n-2))/2\nend",
    "\t\"\"\"\n\tReturns the nth nonagonal number.\n\t\"\"\"\n\treturn n*(3*n-2)\nend",
    "\t\"\"\"\n\tCheck if a number is nonagonal.\n\t\"\"\"\n\tif (sqrt(1 + 8n) % 2 == 1)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend"
  ]
}
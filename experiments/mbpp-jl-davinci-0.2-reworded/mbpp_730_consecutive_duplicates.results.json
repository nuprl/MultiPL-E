{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tresult = []\n\tfor i in nums\n\t\tif i != last(result)\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpxe3zgl2o.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] last\n     @ ./abstractarray.jl:473 [inlined]\n   [3] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpxe3zgl2o.jl:7\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxe3zgl2o.jl:18 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxe3zgl2o.jl:17\ntest set: Error During Test at /tmp/tmpxe3zgl2o.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] last\n     @ ./abstractarray.jl:473 [inlined]\n   [3] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpxe3zgl2o.jl:7\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxe3zgl2o.jl:19 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxe3zgl2o.jl:17\ntest set: Error During Test at /tmp/tmpxe3zgl2o.jl:20\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] last\n     @ ./abstractarray.jl:473 [inlined]\n   [3] consecutive_duplicates(nums::Vector{String})\n     @ Main /tmp/tmpxe3zgl2o.jl:7\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpxe3zgl2o.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpmwo32k57.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmwo32k57.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmwo32k57.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmph63508h0.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmph63508h0.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmph63508h0.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpb3d0j4fx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpb3d0j4fx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb3d0j4fx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tReturn a vector with consecutive duplicates removed.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmp0aqomovx.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp0aqomovx.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0aqomovx.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0aqomovx.jl:18\ntest set: Error During Test at /tmp/tmp0aqomovx.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp0aqomovx.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0aqomovx.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0aqomovx.jl:18\ntest set: Error During Test at /tmp/tmp0aqomovx.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tnew_nums = []\n\tfor i in nums\n\t\tif i in new_nums\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_nums, i)\n\t\tend\n\tend\n\treturn new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmpexfy_r6v.jl:20\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\ntest set: Test Failed at /tmp/tmpexfy_r6v.jl:21\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\ntest set: Test Failed at /tmp/tmpexfy_r6v.jl:23\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpexfy_r6v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpee7o0d67.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpee7o0d67.jl:17\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpee7o0d67.jl:15\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpee7o0d67.jl:17\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpee7o0d67.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpee7o0d67.jl:17\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpee7o0d67.jl:15\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpee7o0d67.jl:24 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpee7o0d67.jl:23\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpidukd3oo.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpidukd3oo.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpidukd3oo.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpidukd3oo.jl:18\ntest set: Error During Test at /tmp/tmpidukd3oo.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpidukd3oo.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpidukd3oo.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpidukd3oo.jl:18\ntest set: Error During Test at /tmp/tmpidukd3oo.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]]*(nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmp6y7t5hu1.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp6y7t5hu1.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6y7t5hu1.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6y7t5hu1.jl:18\ntest set: Error During Test at /tmp/tmp6y7t5hu1.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp6y7t5hu1.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6y7t5hu1.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6y7t5hu1.jl:18\ntest set: Error During Test at /tmp/tmp6y7t5hu1.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tConsecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpbemzkavk.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpbemzkavk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbemzkavk.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbemzkavk.jl:18\ntest set: Error During Test at /tmp/tmpbemzkavk.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpbemzkavk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbemzkavk.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbemzkavk.jl:18\ntest set: Error During Test at /tmp/tmpbemzkavk.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpi6s9eb4q.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpi6s9eb4q.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpi6s9eb4q.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpxcdsnsl7.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxcdsnsl7.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxcdsnsl7.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpxcdsnsl7.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpxcdsnsl7.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpxcdsnsl7.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxcdsnsl7.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpxcdsnsl7.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxcdsnsl7.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpxcdsnsl7.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpxcdsnsl7.jl:22\ntest set: Error During Test at /tmp/tmpxcdsnsl7.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxcdsnsl7.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpxcdsnsl7.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpxcdsnsl7.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp4o2knrjc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp4o2knrjc.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp4o2knrjc.jl:20\ntest set: Error During Test at /tmp/tmp4o2knrjc.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp4o2knrjc.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmph63508h0.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmph63508h0.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmph63508h0.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpl12hb4wr.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpl12hb4wr.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpl12hb4wr.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpdokvm3jl.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpdokvm3jl.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpdokvm3jl.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpb3d0j4fx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpb3d0j4fx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb3d0j4fx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpa6bckyax.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa6bckyax.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa6bckyax.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa6bckyax.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa6bckyax.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa6bckyax.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa6bckyax.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa6bckyax.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa6bckyax.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpa6bckyax.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpa6bckyax.jl:22\ntest set: Error During Test at /tmp/tmpa6bckyax.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa6bckyax.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpa6bckyax.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpa6bckyax.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tnums: a vector of numbers\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp6fh7_fvm.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Any})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.LQPackedQ) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:290\n    ...\n  Stacktrace:\n   [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp6fh7_fvm.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp6fh7_fvm.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6fh7_fvm.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpr0rci8zo.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpr0rci8zo.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpr0rci8zo.jl:20\ntest set: Error During Test at /tmp/tmpr0rci8zo.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpr0rci8zo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpd9x6r48k.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpd9x6r48k.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpd9x6r48k.jl:22\ntest set: Error During Test at /tmp/tmpd9x6r48k.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpd9x6r48k.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmppd0zumbv.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmppd0zumbv.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmppd0zumbv.jl:22\ntest set: Error During Test at /tmp/tmppd0zumbv.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmppd0zumbv.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tnums_new = []\n\tfor i in nums\n\t\tif i != nums_new[end]\n\t\t\tpush!(nums_new, i)\n\t\tend\n\tend\n\treturn nums_new\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpcwei3orm.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpcwei3orm.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcwei3orm.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcwei3orm.jl:20\ntest set: Error During Test at /tmp/tmpcwei3orm.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpcwei3orm.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcwei3orm.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcwei3orm.jl:20\ntest set: Error During Test at /tmp/tmpcwei3orm.jl:23\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{String})\n     @ Main /tmp/tmpcwei3orm.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpcwei3orm.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpj5gz9vqk.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpj5gz9vqk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj5gz9vqk.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj5gz9vqk.jl:18\ntest set: Error During Test at /tmp/tmpj5gz9vqk.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpj5gz9vqk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj5gz9vqk.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj5gz9vqk.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tInput:\n\t\tnums: a vector of numbers\n\tOutput:\n\t\ta vector of numbers with consecutive duplicates removed\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpnx_vwbmo.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnx_vwbmo.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnx_vwbmo.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpnx_vwbmo.jl:16\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpnx_vwbmo.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpnx_vwbmo.jl:16\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnx_vwbmo.jl:14\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpnx_vwbmo.jl:16\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnx_vwbmo.jl:14\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpnx_vwbmo.jl:24 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpnx_vwbmo.jl:23\ntest set: Error During Test at /tmp/tmpnx_vwbmo.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnx_vwbmo.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpnx_vwbmo.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpnx_vwbmo.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpv1vojhhe.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpv1vojhhe.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpv1vojhhe.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp4o2knrjc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp4o2knrjc.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp4o2knrjc.jl:20\ntest set: Error During Test at /tmp/tmp4o2knrjc.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp4o2knrjc.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpr0rci8zo.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpr0rci8zo.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpr0rci8zo.jl:20\ntest set: Error During Test at /tmp/tmpr0rci8zo.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpr0rci8zo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp8nd4cuq3.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\ntest set: Error During Test at /tmp/tmp8nd4cuq3.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpq8wuc8qk.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpq8wuc8qk.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpq8wuc8qk.jl:17\ntest set: Error During Test at /tmp/tmpq8wuc8qk.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpq8wuc8qk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpmwo32k57.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmwo32k57.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmwo32k57.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tnew_nums = [nums[1]]\n\t\tfor i in 2:length(nums)\n\t\t\tif nums[i] != nums[i-1]\n\t\t\t\tpush!(new_nums, nums[i])\n\t\t\tend\n\t\tend\n\t\treturn new_nums\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp30759mec.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp30759mec.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp30759mec.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp30759mec.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp30759mec.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp30759mec.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpi6s9eb4q.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpi6s9eb4q.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpi6s9eb4q.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a vector and returns a vector without consecutive duplicates.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp5b33ag4i.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp5b33ag4i.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp5b33ag4i.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp5b33ag4i.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp5b33ag4i.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp5b33ag4i.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp5b33ag4i.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp5b33ag4i.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp5b33ag4i.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tresult = []\n\tfor i in nums\n\t\tif i != result[end]\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp06ojpeqp.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmp06ojpeqp.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp06ojpeqp.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp06ojpeqp.jl:20\ntest set: Error During Test at /tmp/tmp06ojpeqp.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmp06ojpeqp.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp06ojpeqp.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp06ojpeqp.jl:20\ntest set: Error During Test at /tmp/tmp06ojpeqp.jl:23\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  BoundsError: attempt to access 0-element Vector{Any} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{String})\n     @ Main /tmp/tmp06ojpeqp.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp06ojpeqp.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpfrfuopbc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpfrfuopbc.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpfrfuopbc.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpr0rci8zo.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpr0rci8zo.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpr0rci8zo.jl:20\ntest set: Error During Test at /tmp/tmpr0rci8zo.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpr0rci8zo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] if nums[1] != nums[2] else []\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123576,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: \"if\" at /tmp/tmp0gt0rz5f.jl:8 expected \"end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0gt0rz5f.jl:11\nin expression starting at /tmp/tmp0gt0rz5f.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp4o2knrjc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp4o2knrjc.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp4o2knrjc.jl:20\ntest set: Error During Test at /tmp/tmp4o2knrjc.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4o2knrjc.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp4o2knrjc.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp4o2knrjc.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tnew_nums = [nums[1]]\n\t\tfor i in 2:length(nums)\n\t\t\tif nums[i] != nums[i-1]\n\t\t\t\tpush!(new_nums, nums[i])\n\t\t\tend\n\t\tend\n\t\treturn new_nums\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tnums = [nums[i] for i in 1:length(nums) if nums[i] != nums[i-1]]\n\treturn nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123579,
      "stdout": "test set: Error During Test at /tmp/tmp7d5pfqmm.jl:16\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n    [1] getindex(A::Vector{Int64}, i1::Int64)\n      @ Base ./array.jl:861\n    [2] (::var\"#2#4\")(i::Int64)\n      @ Main ./none:0\n    [3] iterate\n      @ ./iterators.jl:447 [inlined]\n    [4] iterate\n      @ ./generator.jl:44 [inlined]\n    [5] grow_to!(dest::Vector{Any}, itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\", UnitRange{Int64}}, var\"#1#3\"})\n      @ Base ./array.jl:797\n    [6] collect(itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\", UnitRange{Int64}}, var\"#1#3\"})\n      @ Base ./array.jl:721\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp7d5pfqmm.jl:8\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp7d5pfqmm.jl:16 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp7d5pfqmm.jl:15\ntest set: Error During Test at /tmp/tmp7d5pfqmm.jl:17\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n    [1] getindex(A::Vector{Int64}, i1::Int64)\n      @ Base ./array.jl:861\n    [2] (::var\"#2#4\")(i::Int64)\n      @ Main ./none:0\n    [3] iterate\n      @ ./iterators.jl:447 [inlined]\n    [4] iterate\n      @ ./generator.jl:44 [inlined]\n    [5] grow_to!(dest::Vector{Any}, itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\", UnitRange{Int64}}, var\"#1#3\"})\n      @ Base ./array.jl:797\n    [6] collect(itr::Base.Generator{Base.Iterators.Filter{var\"#2#4\", UnitRange{Int64}}, var\"#1#3\"})\n      @ Base ./array.jl:721\n    [7] consecutive_duplicates(",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp7d5pfqmm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpvdjm2d51.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvdjm2d51.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvdjm2d51.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvdjm2d51.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvdjm2d51.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvdjm2d51.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvdjm2d51.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvdjm2d51.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvdjm2d51.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpq8wuc8qk.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpq8wuc8qk.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpq8wuc8qk.jl:17\ntest set: Error During Test at /tmp/tmpq8wuc8qk.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq8wuc8qk.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpq8wuc8qk.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpq",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpq8wuc8qk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmp2u4f9r9c.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2u4f9r9c.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2u4f9r9c.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2u4f9r9c.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2u4f9r9c.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2u4f9r9c.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2u4f9r9c.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp2u4f9r9c.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp2u4f9r9c.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tnew_nums = []\n\tfor i in nums\n\t\tif i in new_nums\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_nums,i)\n\t\tend\n\tend\n\treturn new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123580,
      "stdout": "test set: Test Failed at /tmp/tmplfgbwody.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplfgbwody.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplfgbwody.jl:22\ntest set: Test Failed at /tmp/tmplfgbwody.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplfgbwody.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplfgbwody.jl:22\ntest set: Test Failed at /tmp/tmplfgbwody.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplfgbwody.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplfgbwody.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplfgbwody.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpqg0c32k8.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpqg0c32k8.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpqg0c32k8.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpqg0c32k8.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpqg0c32k8.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpqg0c32k8.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpqg0c32k8.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpqg0c32k8.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpqg0c32k8.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tnew_nums = []\n\tfor i in nums\n\t\tif i in new_nums\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_nums, i)\n\t\tend\n\tend\n\treturn new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmpexfy_r6v.jl:20\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\ntest set: Test Failed at /tmp/tmpexfy_r6v.jl:21\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\ntest set: Test Failed at /tmp/tmpexfy_r6v.jl:23\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpexfy_r6v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpexfy_r6v.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpexfy_r6v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpdokvm3jl.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpdokvm3jl.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpdokvm3jl.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpfrfuopbc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpfrfuopbc.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpfrfuopbc.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123580,
      "stdout": "test set: Error During Test at /tmp/tmp03sfjx78.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp03sfjx78.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp03sfjx78.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp03sfjx78.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp03sfjx78.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp03sfjx78.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp03sfjx78.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp03sfjx78.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp03sfjx78.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp03sfjx78.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp03sfjx78.jl:22\ntest set: Error During Test at /tmp/tmp03sfjx78.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp03sfjx78.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp03sfjx78.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp03sfjx78.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp30759mec.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp30759mec.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp30759mec.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp30759mec.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp30759mec.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp30759mec.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp30759mec.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpd6bcsm9i.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpd6bcsm9i.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd6bcsm9i.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd6bcsm9i.jl:18\ntest set: Error During Test at /tmp/tmpd6bcsm9i.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpd6bcsm9i.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpd6bcsm9i.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpd6bcsm9i.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmp0h2obtxy.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp0h2obtxy.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0h2obtxy.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0h2obtxy.jl:18\ntest set: Error During Test at /tmp/tmp0h2obtxy.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp0h2obtxy.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0h2obtxy.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0h2obtxy.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\t\t>>> consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123579,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe6d3mp48.jl:1\nin expression starting at /tmp/tmpe6d3mp48.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tInput:\n\t\tnums: Any\n\tOutput:\n\t\tAny\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpgbocqzx6.jl:28\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgbocqzx6.jl:19\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgbocqzx6.jl:17\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgbocqzx6.jl:19\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgbocqzx6.jl:17\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgbocqzx6.jl:19\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgbocqzx6.jl:17\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpgbocqzx6.jl:28 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpgbocqzx6.jl:27\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpa837akq9.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n   [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 15 times)\n     @ Main /tmp/tmpa837akq9.jl:13\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpa837akq9.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa837akq9.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmph63508h0.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmph63508h0.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmph63508h0.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmph63508h0.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmph63508h0.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0 \n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpbu8wl7li.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbu8wl7li.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbu8wl7li.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbu8wl7li.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbu8wl7li.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbu8wl7li.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbu8wl7li.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpbu8wl7li.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpbu8wl7li.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telse\n\t\tresult = [nums[1]]\n\t\tfor i in 2:length(nums)\n\t\t\tif nums[i] != nums[i-1]\n\t\t\t\tpush!(result, nums[i])\n\t\t\tend\n\t\tend\n\t\treturn result\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123581,
      "stdout": "test set: Error During Test at /tmp/tmp2zjuzo6k.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2zjuzo6k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2zjuzo6k.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2zjuzo6k.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2zjuzo6k.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2zjuzo6k.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2zjuzo6k.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2zjuzo6k.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2zjuzo6k.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2zjuzo6k.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2zjuzo6k.jl:22\ntest set: Error During Test at /tmp/tmp2zjuzo6k.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2zjuzo6k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2zjuzo6k.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2zjuzo6k.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmpmaaqllee.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmaaqllee.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmaaqllee.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp8nd4cuq3.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\ntest set: Error During Test at /tmp/tmp8nd4cuq3.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpmwo32k57.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmwo32k57.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmwo32k57.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmpkhempn3y.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkhempn3y.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkhempn3y.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkhempn3y.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkhempn3y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkhempn3y.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkhempn3y.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkhempn3y.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkhempn3y.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpb3d0j4fx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpb3d0j4fx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb3d0j4fx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]]*(nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmp6y7t5hu1.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp6y7t5hu1.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6y7t5hu1.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6y7t5hu1.jl:18\ntest set: Error During Test at /tmp/tmp6y7t5hu1.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp6y7t5hu1.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6y7t5hu1.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6y7t5hu1.jl:18\ntest set: Error During Test at /tmp/tmp6y7t5hu1.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpdokvm3jl.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpdokvm3jl.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpdokvm3jl.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpdokvm3jl.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpdokvm3jl.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpr0rci8zo.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpr0rci8zo.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpr0rci8zo.jl:20\ntest set: Error During Test at /tmp/tmpr0rci8zo.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr0rci8zo.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpr0rci8zo.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpr0rci8zo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmpd6x0j0tf.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd6x0j0tf.jl:17\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd6x0j0tf.jl:15\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd6x0j0tf.jl:17\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd6x0j0tf.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd6x0j0tf.jl:17\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd6x0j0tf.jl:15\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd6x0j0tf.jl:24 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd6x0j0tf.jl:23\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpfdsrayz_.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfdsrayz_.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfdsrayz_.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfdsrayz_.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfdsrayz_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfdsrayz_.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfdsrayz_.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpfdsrayz_.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpfdsrayz_.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tInput:\n\t\tnums: a vector of any type\n\tOutput:\n\t\ta vector of the same type as nums with consecutive duplicates removed\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpr1enzeoa.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpr1enzeoa.jl:14\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr1enzeoa.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr1enzeoa.jl:21\ntest set: Error During Test at /tmp/tmpr1enzeoa.jl:23\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpr1enzeoa.jl:14\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpr1enzeoa.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpr1enzeoa.jl:21\ntest set: Error During Test at /tmp/tmpr1enzeoa.jl:24\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpd9x6r48k.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpd9x6r48k.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpd9x6r48k.jl:22\ntest set: Error During Test at /tmp/tmpd9x6r48k.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd9x6r48k.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpd9x6r48k.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpd9x6r48k.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpfrfuopbc.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfrfuopbc.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfrfuopbc.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpfrfuopbc.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpfrfuopbc.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmp4svp0woe.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4svp0woe.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4svp0woe.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4svp0woe.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4svp0woe.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4svp0woe.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4svp0woe.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp4svp0woe.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp4svp0woe.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpv1vojhhe.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpv1vojhhe.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpv1vojhhe.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpv1vojhhe.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpv1vojhhe.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpxss033lj.jl:20\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpxss033lj.jl:12\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpxss033lj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpxss033lj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxss033lj.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpxss033lj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpxss033lj.jl:10\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpxss033lj.jl:20 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpxss033lj.jl:19\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123582,
      "stdout": "test set: Error During Test at /tmp/tmpru491fvt.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpru491fvt.jl:8\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpru491fvt.jl:9\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpru491fvt.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpru491fvt.jl:9\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpru491fvt.jl:11\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpru491fvt.jl:9\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpru491fvt.jl:11\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpru491fvt.jl:9\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpru491fvt.jl:19 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpru491fvt.jl:18\ntest set: Error During Test at /tmp/tmpru491fvt.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpru491fvt.jl:8\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpru491fvt.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpr",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpru491fvt.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpi6s9eb4q.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6s9eb4q.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6s9eb4q.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpi6s9eb4q.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpi6s9eb4q.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpvk5t6dnh.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvk5t6dnh.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvk5t6dnh.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvk5t6dnh.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvk5t6dnh.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvk5t6dnh.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvk5t6dnh.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpvk5t6dnh.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpvk5t6dnh.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmpmaaqllee.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmaaqllee.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmaaqllee.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmaaqllee.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmaaqllee.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpokxrlhhs.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpokxrlhhs.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpokxrlhhs.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpokxrlhhs.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpokxrlhhs.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpokxrlhhs.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpokxrlhhs.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpokxrlhhs.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpokxrlhhs.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpb3d0j4fx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb3d0j4fx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb3d0j4fx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpb3d0j4fx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb3d0j4fx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpidukd3oo.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpidukd3oo.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpidukd3oo.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpidukd3oo.jl:18\ntest set: Error During Test at /tmp/tmpidukd3oo.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpidukd3oo.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpidukd3oo.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpidukd3oo.jl:18\ntest set: Error During Test at /tmp/tmpidukd3oo.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpbmh383or.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbmh383or.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbmh383or.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbmh383or.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbmh383or.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbmh383or.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbmh383or.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpbmh383or.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpbmh383or.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp8nd4cuq3.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\ntest set: Error During Test at /tmp/tmp8nd4cuq3.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn [nums[1]]\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123584,
      "stdout": "test set: Error During Test at /tmp/tmpaenh0hw8.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpaenh0hw8.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpaenh0hw8.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpaenh0hw8.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaenh0hw8.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpaenh0hw8.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaenh0hw8.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpaenh0hw8.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpaenh0hw8.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123583,
      "stdout": "test set: Error During Test at /tmp/tmpybyfzg8c.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpybyfzg8c.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpybyfzg8c.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpybyfzg8c.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpybyfzg8c.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpybyfzg8c.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpybyfzg8c.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpybyfzg8c.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpybyfzg8c.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpybyfzg8c.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpybyfzg8c.jl:22\ntest set: Error During Test at /tmp/tmpybyfzg8c.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpybyfzg8c.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpybyfzg8c.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpybyfzg8c.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpl12hb4wr.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpl12hb4wr.jl:17\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpl12hb4wr.jl:15\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpl12hb4wr.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpl12hb4wr.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpmwo32k57.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmwo32k57.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmwo32k57.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpmwo32k57.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpmwo32k57.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmpj5gz9vqk.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpj5gz9vqk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj5gz9vqk.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj5gz9vqk.jl:18\ntest set: Error During Test at /tmp/tmpj5gz9vqk.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpj5gz9vqk.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj5gz9vqk.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj5gz9vqk.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpjabslksp.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpjabslksp.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjabslksp.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjabslksp.jl:18\ntest set: Error During Test at /tmp/tmpjabslksp.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpd2snqbwq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpd2snqbwq.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpd2snqbwq.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpd2snqbwq.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpd2snqbwq.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmppd0zumbv.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmppd0zumbv.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmppd0zumbv.jl:22\ntest set: Error During Test at /tmp/tmppd0zumbv.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmppd0zumbv.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmppd0zumbv.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmppd0zumbv.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\t\n\tif nums == []\n\t\treturn []\n\tend\n\t\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\t\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\t\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123585,
      "stdout": "test set: Error During Test at /tmp/tmpb4q05kd_.jl:28\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb4q05kd_.jl:21\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb4q05kd_.jl:18\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb4q05kd_.jl:21\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb4q05kd_.jl:18\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb4q05kd_.jl:21\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb4q05kd_.jl:18\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpb4q05kd_.jl:28 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpb4q05kd_.jl:27\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpyd28ufc_.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpyd28ufc_.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpyd28ufc_.jl:22\ntest set: Error During Test at /tmp/tmpyd28ufc_.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyd28ufc_.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpyd28ufc_.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpyd28ufc_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123586,
      "stdout": "test set: Error During Test at /tmp/tmpcm5y89sz.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n   [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 15 times)\n     @ Main /tmp/tmpcm5y89sz.jl:13\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcm5y89sz.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcm5y89sz.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp6py5hfl4.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6py5hfl4.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6py5hfl4.jl:22\ntest set: Error During Test at /tmp/tmp6py5hfl4.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp6py5hfl4.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp6py5hfl4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp6py5hfl4.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510259,
      "stdout": "test set: Error During Test at /tmp/tmpo2tucadx.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpo2tucadx.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpo2tucadx.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpo2tucadx.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpo2tucadx.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a vector and returns a vector with consecutive duplicates removed.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telse\n\t\treturn [nums[1]]*(nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123587,
      "stdout": "test set: Error During Test at /tmp/tmp8wx77tea.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp8wx77tea.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8wx77tea.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8wx77tea.jl:18\ntest set: Error During Test at /tmp/tmp8wx77tea.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp8wx77tea.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8wx77tea.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8wx77tea.jl:18\ntest set: Error During Test at /tmp/tmp8wx77tea.jl:21\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  MethodError: no method matching *(::String, ::Bool)\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(::Union{AbstractChar, AbstractString}, !Matched::Union{AbstractChar, AbstractString}...) at /home/a.guha/.conda/envs/p",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123587,
      "stdout": "test set: Error During Test at /tmp/tmpf14w53ky.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpf14w53ky.jl:17\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpf14w53ky.jl:15\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpf14w53ky.jl:17\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpf14w53ky.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpf14w53ky.jl:17\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpf14w53ky.jl:15\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpf14w53ky.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpf14w53ky.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tconsecutive_duplicates(nums::Any)::Any \n\t\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123585,
      "stdout": "test set: Error During Test at /tmp/tmps1zhhm51.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmps1zhhm51.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmps1zhhm51.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmps1zhhm51.jl:16\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmps1zhhm51.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmps1zhhm51.jl:16\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmps1zhhm51.jl:14\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmps1zhhm51.jl:16\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmps1zhhm51.jl:14\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps1zhhm51.jl:25 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps1zhhm51.jl:24\ntest set: Error During Test at /tmp/tmps1zhhm51.jl:26\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmps1zhhm51.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmps1zhhm51.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmps1zhhm51.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123578,
      "stdout": "test set: Error During Test at /tmp/tmp8nd4cuq3.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\ntest set: Error During Test at /tmp/tmp8nd4cuq3.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmp8nd4cuq3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8nd4cuq3.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8nd4cuq3.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmpzb82rlgj.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzb82rlgj.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzb82rlgj.jl:22\ntest set: Error During Test at /tmp/tmpzb82rlgj.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzb82rlgj.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzb82rlgj.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzb82rlgj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123577,
      "stdout": "test set: Error During Test at /tmp/tmp2ssc6p7y.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2ssc6p7y.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2ssc6p7y.jl:22\ntest set: Error During Test at /tmp/tmp2ssc6p7y.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2ssc6p7y.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2ssc6p7y.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2ssc6p7y.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given vector.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a vector.\n\t\"\"\"\n\ti = 1\n\twhile i <= length(nums)\n\t\tif nums[i] == nums[i-1]\n\t\t\tdeleteat!(nums, i)\n\t\telse\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123585,
      "stdout": "test set: Error During Test at /tmp/tmpktbtl5dz.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpktbtl5dz.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpktbtl5dz.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpktbtl5dz.jl:22\ntest set: Error During Test at /tmp/tmpktbtl5dz.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpktbtl5dz.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpktbtl5dz.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpktbtl5dz.jl:22\ntest set: Error During Test at /tmp/tmpktbtl5dz.jl:25\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{String})\n     @ Main /tmp/tmpktbtl5dz.jl:10\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n  ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpktbtl5dz.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
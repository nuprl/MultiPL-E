{
  "name": "mbpp_603_get_ludic",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to get all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\nfunction get_ludic(n::Int64)::Vector{Int64} \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_603_get_ludic.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = get_ludic;\n\t@test(candidate(10) == [1, 2, 3, 5, 7])\n\t@test(candidate(25) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25])\n\t@test(candidate(45) == [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tReturns a vector of all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\n\tludic_numbers = Int64[]\n\t\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\t\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic,i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tReturns a vector of all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tReturns all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all the ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tReturns a vector of all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tReturns a vector of all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = [1]\n\tfor i in 2:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = [1]\n\tfor i in 2:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic,i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic,i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tReturns a vector of all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tReturns a vector of all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tReturns a vector of all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tFunction to get all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tReturns a vector of all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_vec = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_vec, i)\n\t\tend\n\tend\n\treturn ludic_vec\nend",
    "\tludic_numbers = []\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i = 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tReturn a vector of all ludic numbers smaller than or equal to n.\n\t\"\"\"\n\tludic_numbers = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = Vector{Int64}()\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic_numbers = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\tludic_numbers = Int64[]\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic_numbers, i)\n\t\tend\n\tend\n\treturn ludic_numbers\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = [1]\n\tfor i in 2:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\t\"\"\"\n\tGet all lucid numbers smaller than or equal to a given integer.\n\t\"\"\"\n\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend",
    "\tludic = []\n\tfor i in 1:n\n\t\tif is_ludic(i)\n\t\t\tpush!(ludic, i)\n\t\tend\n\tend\n\treturn ludic\nend"
  ]
}
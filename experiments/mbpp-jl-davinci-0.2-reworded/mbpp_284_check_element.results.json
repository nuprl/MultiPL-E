{
  "name": "mbpp_284_check_element",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "using Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n    for i in list\n        if i != element\n            return false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list \n\t\tif i != element \n\t\t\treturn false \n\t\tend \n\tend \n\treturn true \nend \nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor item in list\n\t\tif item != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\n\t\"\"\"\nfunction check_element(list::Any, element::Any)::Bool \n\tfor i in list\n\t\tif i != element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\nusing Test\n\n@testset begin\n\ncandidate = check_element;\n\t@test(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\") == false)\n\t@test(candidate([1, 2, 3, 4], 7) == false)\n\t@test(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\") == true)\nend\n",
      "timestamp": 1665509678,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
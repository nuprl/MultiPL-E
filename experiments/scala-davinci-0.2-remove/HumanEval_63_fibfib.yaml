name: HumanEval_63_fibfib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n   \
  \ // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    def fibfib(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n\
  \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
  \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n\
  \    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
completions: ["        if (n == 0) 0\n        else if (n == 1) 0\n        else if\
    \ (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", " \
    \       def fibfib(n : Long, a : Long, b : Long, c : Long) : Long = {\n      \
    \      if (n == 0) a\n            else if (n == 1) b\n            else if (n ==\
    \ 2) c\n            else fibfib(n - 1, b, c, a + b + c)\n        }\n        fibfib(n,\
    \ 0, 0, 1)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n   \
    \     var d = 0L\n        for (i <- 3 to n.toInt) {\n            d = a + b + c\n\
    \            a = b\n            b = c\n            c = d\n        }\n        d",
  "        if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return c", "   \
    \     if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        c", "        val a = ArrayBuffer[Long](0, 0, 1)\n        for (i\
    \ <- 3 to n.toInt) {\n            a += a(i - 1) + a(i - 2) + a(i - 3)\n      \
    \  }\n        a(n.toInt)", "        val a = Array.fill(n.toInt + 1)(0L)\n    \
    \    a(0) = 0\n        a(1) = 0\n        a(2) = 1\n        for (i <- 3 to n.toInt)\
    \ {\n            a(i) = a(i - 1) + a(i - 2) + a(i - 3)\n        }\n        a(n.toInt)",
  "        if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return c", "   \
    \     var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 0\
    \ until n) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        a", "        if (n == 0) 0\n    \
    \    else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1)\
    \ + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if\
    \ (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n      \
    \  var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n       \
    \     val d = a + b + c\n            a = b\n            b = c\n            c =\
    \ d\n        }\n        return c", "        if (n == 0) 0\n        else if (n\
    \ == 1) 0\n        else if (n == 2) 1\n        else {\n            var a = 0L\n\
    \            var b = 0L\n            var c = 1L\n            for (i <- 3 to n.toInt)\
    \ {\n                val d = a + b + c\n                a = b\n              \
    \  b = c\n                c = d\n            }\n            c\n        }", " \
    \       if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else {\n            var a = 0L\n            var b = 0L\n            var\
    \ c = 1L\n            for (i <- 3 to n.toInt) {\n                val d = a + b\
    \ + c\n                a = b\n                b = c\n                c = d\n \
    \           }\n            c\n        }", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        var a = 0L\n        var b = 0L\n        var c = 1L\n\
    \        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n          \
    \  a = b\n            b = c\n            c = d\n        }\n        c", "     \
    \   def fibfib(n : Long, a : Long, b : Long, c : Long) : Long = {\n          \
    \  if (n == 0) a\n            else if (n == 1) b\n            else if (n == 2)\
    \ c\n            else fibfib(n - 1, b, c, a + b + c)\n        }\n        fibfib(n,\
    \ 0, 0, 1)", "        if (n == 0) return 0\n        if (n == 1) return 0\n   \
    \     if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var\
    \ c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n \
    \           a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n ==\
    \ 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "       \
    \ if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return\
    \ 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i\
    \ <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n     \
    \       b = c\n            c = d\n        }\n        return c", "        if (n\
    \ == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n   \
    \     else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n -\
    \ 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if\
    \ (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n       \
    \ for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n\
    \            b = c\n            c = d\n        }\n        c", "        var a =\
    \ 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt)\
    \ {\n            val d = a + b + c\n            a = b\n            b = c\n   \
    \         c = d\n        }\n        c", "        if (n == 0) return 0\n      \
    \  if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n  \
    \      var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n   \
    \         val d = a + b + c\n            a = b\n            b = c\n          \
    \  c = d\n        }\n        return c", "        var a = 0L\n        var b = 0L\n\
    \        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a\
    \ + b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        c", "        if (n == 0) return 0\n        if (n == 1) return 0\n   \
    \     if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var\
    \ c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n \
    \           a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n ==\
    \ 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "       \
    \ if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n    \
    \    else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0)\
    \ 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n \
    \       var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n  \
    \          val d = a + b + c\n            a = b\n            b = c\n         \
    \   c = d\n        }\n        return c", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 1 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        a", "        if (n == 0) 0\n        else if (n == 1) 0\n      \
    \  else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n -\
    \ 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n        for\
    \ (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n  \
    \          b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a =\
    \ 0L\n        var b = 0L\n        var c = 1L\n        var d = 1L\n        var\
    \ e = 1L\n        for (i <- 3 to n.toInt) {\n            e = a + b + c\n     \
    \       a = b\n            b = c\n            c = d\n            d = e\n     \
    \   }\n        return e", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n       \
    \ for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n\
    \            b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n  \
    \      var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3\
    \ to n.toInt) {\n            val d = a + b + c\n            a = b\n          \
    \  b = c\n            c = d\n        }\n        return c", "        if (n == 0)\
    \ 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return\
    \ 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i\
    \ <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n     \
    \       b = c\n            c = d\n        }\n        return c", "        if (n\
    \ == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n < 0) throw new\
    \ IllegalArgumentException(\"n must be non-negative\")\n        if (n == 0) return\
    \ 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n        var a\
    \ = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt)\
    \ {\n            val d = a + b + c\n            a = b\n            b = c\n   \
    \         c = d\n        }\n        c", "        if (n == 0) 0\n        else if\
    \ (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        val mod = 1000000007\n        var a = 0L\n \
    \       var b = 0L\n        var c = 1L\n        for (i <- 1 to n.toInt) {\n  \
    \          val d = (a + b + c) % mod\n            a = b\n            b = c\n \
    \           c = d\n        }\n        return a", "        if (n == 0) return 0\n\
    \        if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n\
    \        var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n \
    \           var d = a + b + c\n            a = b\n            b = c\n        \
    \    c = d\n        }\n        return c", "        val cache = new Array[Long](n.toInt\
    \ + 1)\n        cache(0) = 0\n        cache(1) = 0\n        cache(2) = 1\n   \
    \     def fibfib(n : Int) : Long = {\n            if (cache(n) == 0) cache(n)\
    \ = fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n            cache(n)\n    \
    \    }\n        fibfib(n.toInt)", "        if (n == 0) 0\n        else if (n ==\
    \ 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    var a = 0L\n        var b = 0L\n        var c = 1L\n        var d = 1L\n\
    \        for (i <- 3 to n.toInt) {\n            val temp = d\n            d =\
    \ a + b + c\n            a = b\n            b = c\n            c = temp\n    \
    \    }\n        d", "        var a = 0L\n        var b = 0L\n        var c = 1L\n\
    \        var d = 0L\n        for (i <- 3 to n.toInt) {\n            d = a + b\
    \ + c\n            a = b\n            b = c\n            c = d\n        }\n  \
    \      d", "        if (n == 0) return 0\n        if (n == 1) return 0\n     \
    \   if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var\
    \ c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n \
    \           a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n ==\
    \ 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "       \
    \ if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n    \
    \    else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0)\
    \ return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n     \
    \   var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to\
    \ n.toInt) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        return c", "        if (n == 0) 0\n\
    \        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n \
    \       var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n  \
    \          val d = a + b + c\n            a = b\n            b = c\n         \
    \   c = d\n        }\n        return c", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) return 0\n        if (n == 1) return 0\n       \
    \ if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c\
    \ = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n   \
    \         a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        var a = 0L\n        var b = 0L\n        var c = 1L\n        var\
    \ d = 0L\n        for (i <- 2 to n.toInt) {\n            d = a + b + c\n     \
    \       a = b\n            b = c\n            c = d\n        }\n        return\
    \ d", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n ==\
    \ 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "       \
    \ if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n    \
    \    else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n < 0)\
    \ throw new IllegalArgumentException(\"n must be non-negative\")\n        if (n\
    \ == 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n\
    \        var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <-\
    \ 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n        \
    \    b = c\n            c = d\n        }\n        c", "        if (n == 0) 0\n\
    \        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n \
    \       var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n  \
    \          val d = a + b + c\n            a = b\n            b = c\n         \
    \   c = d\n        }\n        return c", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        c", "        if (n == 0) 0\n        else if (n == 1) 0\n      \
    \  else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n -\
    \ 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n       \
    \ for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n\
    \            b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else {\n            var a\
    \ = 0L\n            var b = 0L\n            var c = 1L\n            for (i <-\
    \ 3 to n.toInt) {\n                val d = a + b + c\n                a = b\n\
    \                b = c\n                c = d\n            }\n            c\n\
    \        }", "        if (n == 0) return 0\n        if (n == 1) return 0\n   \
    \     if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var\
    \ c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n \
    \           a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        if (n == 0) return 0\n        if (n == 1) return 0\n        if\
    \ (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n\
    \        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n          \
    \  a = b\n            b = c\n            c = d\n        }\n        return c",
  "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a =\
    \ 0L\n        var b = 0L\n        var c = 1L\n        var d = 0L\n        for\
    \ (i <- 3 to n.toInt) {\n            d = a + b + c\n            a = b\n      \
    \      b = c\n            c = d\n        }\n        d", "        if (n == 0) 0\n\
    \        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        val mod = 1000000007\n     \
    \   val a = Array.fill(n.toInt + 1)(0L)\n        a(0) = 0\n        a(1) = 0\n\
    \        a(2) = 1\n        for (i <- 3 to n.toInt) {\n            a(i) = (a(i\
    \ - 1) + a(i - 2) + a(i - 3)) % mod\n        }\n        a(n.toInt)", "       \
    \ def fibfib_helper(n : Long, a : Long, b : Long, c : Long) : Long = {\n     \
    \       if (n == 0) a\n            else if (n == 1) b\n            else if (n\
    \ == 2) c\n            else fibfib_helper(n - 1, b, c, a + b + c)\n        }\n\
    \        fibfib_helper(n, 0, 0, 1)", "        if (n == 0) 0\n        else if (n\
    \ == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n -\
    \ 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n  \
    \      else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a =\
    \ 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt)\
    \ {\n            val d = a + b + c\n            a = b\n            b = c\n   \
    \         c = d\n        }\n        c", "        if (n == 0) 0\n        else if\
    \ (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        val fib = new Array[Long](n.toInt + 1)\n   \
    \     fib(0) = 0\n        fib(1) = 0\n        fib(2) = 1\n        for (i <- 3\
    \ to n.toInt) fib(i) = fib(i - 1) + fib(i - 2) + fib(i - 3)\n        fib(n.toInt)",
  "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else {\n            var a = 0L\n            var b = 0L\n            var\
    \ c = 1L\n            for (i <- 3 to n.toInt) {\n                val d = a + b\
    \ + c\n                a = b\n                b = c\n                c = d\n \
    \           }\n            c\n        }", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n       \
    \ for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n\
    \            b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n  \
    \      var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3\
    \ to n.toInt) {\n            val d = a + b + c\n            a = b\n          \
    \  b = c\n            c = d\n        }\n        return c", "        if (n == 0)\
    \ return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n     \
    \   var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to\
    \ n.toInt) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        return c", "        if (n == 0) 0\n\
    \        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 0\n        if (n == 2) return 1\n        var a = 0L\n \
    \       var b = 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n  \
    \          val d = a + b + c\n            a = b\n            b = c\n         \
    \   c = d\n        }\n        return c", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else {\n            var a\
    \ = 0L\n            var b = 0L\n            var c = 1L\n            for (i <-\
    \ 3 to n.toInt) {\n                val d = a + b + c\n                a = b\n\
    \                b = c\n                c = d\n            }\n            c\n\
    \        }", "        if (n == 0) 0\n        else if (n == 1) 0\n        else\
    \ if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
  "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) return 0\n        if (n == 1) return 0\n       \
    \ if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c\
    \ = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n   \
    \         a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        if (n == 0) return 0\n        if (n == 1) return 0\n        if\
    \ (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n\
    \        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n          \
    \  a = b\n            b = c\n            c = d\n        }\n        return c",
  "        val mod = 1000000007L\n        if (n == 0) 0\n        else if (n == 1)\
    \ 0\n        else if (n == 2) 1\n        else {\n            var a = 0L\n    \
    \        var b = 0L\n            var c = 1L\n            var d = 0L\n        \
    \    for (i <- 3 to n.toInt) {\n                d = (a + b + c) % mod\n      \
    \          a = b\n                b = c\n                c = d\n            }\n\
    \            d\n        }", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        var a = 0L\n        var b = 0L\n        var c = 1L\n       \
    \ for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n\
    \            b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 0\n        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n  \
    \      var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a +\
    \ b + c\n            a = b\n            b = c\n            c = d\n        }\n\
    \        return c", "        if (n == 0) 0\n        else if (n == 1) 0\n     \
    \   else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else {\n            var a = 0L\n            var b = 0L\n            var\
    \ c = 1L\n            for (i <- 3 to n.toInt) {\n                val d = a + b\
    \ + c\n                a = b\n                b = c\n                c = d\n \
    \           }\n            c\n        }", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) return 0\n        else if (n == 1) return 0\n  \
    \      else if (n == 2) return 1\n        else return fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) {\n            0\n        } else if (n == 1) {\n            0\n        }\
    \ else if (n == 2) {\n            1\n        } else {\n            fibfib(n -\
    \ 1) + fibfib(n - 2) + fibfib(n - 3)\n        }", "        if (n == 0) 0\n   \
    \     else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n -\
    \ 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n < 2) 0\n        else if\
    \ (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", " \
    \       val a = Array.fill(n.toInt + 1)(0L)\n        a(0) = 0\n        a(1) =\
    \ 0\n        a(2) = 1\n        for (i <- 3 to n.toInt) a(i) = a(i - 1) + a(i -\
    \ 2) + a(i - 3)\n        a(n.toInt)", "        if (n == 0) 0\n        else if\
    \ (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else {\n            var a = 0L\n        \
    \    var b = 0L\n            var c = 1L\n            for (i <- 3 to n.toInt) {\n\
    \                val d = a + b + c\n                a = b\n                b =\
    \ c\n                c = d\n            }\n            c\n        }", "      \
    \  if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n   \
    \     else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0)\
    \ return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n     \
    \   var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to\
    \ n.toInt) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        return c", "        def fibfib(n\
    \ : Long, a : Long, b : Long, c : Long) : Long = {\n            if (n == 0) a\n\
    \            else if (n == 1) b\n            else if (n == 2) c\n            else\
    \ fibfib(n - 1, b, c, a + b + c)\n        }\n        fibfib(n, 0, 0, 1)", "  \
    \      if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else {\n            var a = 0L\n        \
    \    var b = 0L\n            var c = 1L\n            for (i <- 3 to n.toInt) {\n\
    \                val d = a + b + c\n                a = b\n                b =\
    \ c\n                c = d\n            }\n            c\n        }", "      \
    \  if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n   \
    \     else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0)\
    \ return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n     \
    \   var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3 to\
    \ n.toInt) {\n            val d = a + b + c\n            a = b\n            b\
    \ = c\n            c = d\n        }\n        return c", "        if (n == 0) 0\n\
    \        else if (n == 1) 0\n        else if (n == 2) 1\n        else {\n    \
    \        var a = 0L\n            var b = 0L\n            var c = 1L\n        \
    \    for (i <- 3 to n.toInt) {\n                val d = a + b + c\n          \
    \      a = b\n                b = c\n                c = d\n            }\n  \
    \          c\n        }", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else {\n            var a = 0L\n        \
    \    var b = 0L\n            var c = 1L\n            for (i <- 3 to n.toInt) {\n\
    \                val d = a + b + c\n                a = b\n                b =\
    \ c\n                c = d\n            }\n            c\n        }", "      \
    \  if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n   \
    \     else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0)\
    \ 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else {\n\
    \            var a = 0L\n            var b = 0L\n            var c = 1L\n    \
    \        for (i <- 3 to n.toInt) {\n                val d = a + b + c\n      \
    \          a = b\n                b = c\n                c = d\n            }\n\
    \            c\n        }", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) return 0\n        if (n == 1) return 0\n       \
    \ if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n        var c\
    \ = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b + c\n   \
    \         a = b\n            b = c\n            c = d\n        }\n        return\
    \ c", "        var a = 0L\n        var b = 0L\n        var c = 1L\n        for\
    \ (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a = b\n  \
    \          b = c\n            c = d\n        }\n        c", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 0\n        if (n == 2) return 1\n  \
    \      var a = 0L\n        var b = 0L\n        var c = 1L\n        for (i <- 3\
    \ to n.toInt) {\n            val d = a + b + c\n            a = b\n          \
    \  b = c\n            c = d\n        }\n        return c", "        if (n == 0)\
    \ 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else if (n\
    \ == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "    \
    \    if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n \
    \       else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        c", "        if (n == 0) return 0\n        if (n == 1) return 0\n\
    \        if (n == 2) return 1\n        var a = 0L\n        var b = 0L\n      \
    \  var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d = a + b +\
    \ c\n            a = b\n            b = c\n            c = d\n        }\n    \
    \    return c", "        if (n == 0) 0\n        else if (n == 1) 0\n        else\
    \ if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
  "        if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return c", "   \
    \     if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return c", "   \
    \     def fibfib(n : Long, a : Long, b : Long, c : Long) : Long = {\n        \
    \    if (n == 0) a\n            else if (n == 1) b\n            else if (n ==\
    \ 2) c\n            else fibfib(n - 1, b, c, a + b + c)\n        }\n        fibfib(n,\
    \ 0, 0, 1)", "        if (n == 0) 0\n        else if (n == 1) 0\n        else\
    \ if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
  "        if (n == 0) return 0\n        if (n == 1) return 0\n        if (n == 2)\
    \ return 1\n        var a = 0L\n        var b = 0L\n        var c = 1L\n     \
    \   for (i <- 3 to n.toInt) {\n            val d = a + b + c\n            a =\
    \ b\n            b = c\n            c = d\n        }\n        return c", "   \
    \     if (n == 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n\
    \        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 0\n        else if (n == 2) 1\n        else fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)", "        var a = 0L\n        var b =\
    \ 0L\n        var c = 1L\n        for (i <- 3 to n.toInt) {\n            val d\
    \ = a + b + c\n            a = b\n            b = c\n            c = d\n     \
    \   }\n        c", "        val m = ArrayBuffer.fill(3)(0L)\n        m(0) = 0\n\
    \        m(1) = 0\n        m(2) = 1\n        for (i <- 3 to n.toInt) {\n     \
    \       m(i % 3) = m((i - 1) % 3) + m((i - 2) % 3) + m((i - 3) % 3)\n        }\n\
    \        m(n.toInt % 3)", "        if (n == 0) 0\n        else if (n == 1) 0\n\
    \        else if (n == 2) 1\n        else fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)"]
stop_tokens:
- "\n    }\n"

name: HumanEval_84_solve
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a positive integer N, return the total sum of its digits in binary.\n\
  \    // Example\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
  \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    def solve(N\
  \ : Long) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(solve((1000l)).equals((\"\
  1\")));\n    assert(solve((150l)).equals((\"110\")));\n    assert(solve((147l)).equals((\"\
  1100\")));\n    assert(solve((333l)).equals((\"1001\")));\n    assert(solve((963l)).equals((\"\
  10010\")));\n    }\n\n}\n"
completions: ["        var result = \"\"\n        var n = N\n        while (n > 0)\
    \ {\n            result = (n % 2).toString + result\n            n /= 2\n    \
    \    }\n        result", "        var n = N\n        var result = \"\"\n     \
    \   while (n > 0) {\n            result = (n % 2).toString + result\n        \
    \    n /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        // Write\
    \ your code here\n        var result = \"\"\n        var n = N\n        while\
    \ (n > 0) {\n            result = (n % 2).toString + result\n            n /=\
    \ 2\n        }\n        result", "        var result = \"\"\n        var n = N\n\
    \        while (n > 0) {\n            result = (n % 2).toString + result\n   \
    \         n /= 2\n        }\n        result", "        var result = \"\"\n   \
    \     var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var n = N\n        var s = \"\"\n        while (n > 0) {\n            s\
    \ = (n % 2).toString + s\n            n /= 2\n        }\n        s", "       \
    \ val binary = N.toBinaryString\n        val sum = binary.map(x => x.asDigit).sum\n\
    \        sum.toString", "        var result = \"\"\n        var n = N\n      \
    \  while (n > 0) {\n            result = (n % 2).toString + result\n         \
    \   n /= 2\n        }\n        result", "        var result = \"\"\n        var\
    \ n = N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        val binary = N.toBinaryString\n\
    \        var sum = 0\n        for (i <- 0 until binary.length) {\n           \
    \ sum += binary(i).asDigit\n        }\n        sum.toString", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result : String = \"\"\n        var n : Long = N\n\
    \        while (n > 0) {\n            result = (n % 2).toString + result\n   \
    \         n /= 2\n        }\n        result", "        var result = \"\"\n   \
    \     var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var binary\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            binary = (n\
    \ % 2).toString + binary\n            n /= 2\n        }\n        binary", "  \
    \      val binary = N.toBinaryString\n        var sum = 0\n        for (i <- 0\
    \ until binary.length) {\n            sum += binary(i).asDigit\n        }\n  \
    \      sum.toString", "        var n = N\n        var result = \"\"\n        while\
    \ (n > 0) {\n            result = (n % 2).toString + result\n            n /=\
    \ 2\n        }\n        result", "        var n = N\n        var result = \"\"\
    \n        while (n > 0) {\n            result = (n % 2).toString + result\n  \
    \          n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var binary = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     binary = (n % 2).toString + binary\n            n /= 2\n        }\n    \
    \    binary", "        var n = N\n        var s = \"\"\n        while (n != 0)\
    \ {\n            s = (n % 2).toString + s\n            n /= 2\n        }\n   \
    \     s", "        val binary = N.toBinaryString\n        binary.map(x => x.toString.toInt).sum.toString",
  '        return Integer.toBinaryString(N.toInt)', "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var result = \"\"\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var n = N\n        var s\
    \ = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n    \
    \        n /= 2\n        }\n        s", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n  \
    \          n /= 2\n        }\n        s", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var n = N\n\
    \        var s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString\
    \ + s\n            n /= 2\n        }\n        s", "        // Write your code\
    \ here\n        var n = N\n        var result = \"\"\n        while (n > 0) {\n\
    \            result = (n % 2).toString + result\n            n /= 2\n        }\n\
    \        result", "        var sum = 0\n        var binary = N.toBinaryString\n\
    \        for (i <- 0 until binary.length) {\n            sum += binary(i).asDigit\n\
    \        }\n        sum.toString", "        var result = \"\"\n        var n =\
    \ N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var n = N\n\
    \        var s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString\
    \ + s\n            n /= 2\n        }\n        s", "        var binary = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            binary = (n % 2).toString\
    \ + binary\n            n /= 2\n        }\n        return binary", "        var\
    \ n = N\n        var result = \"\"\n        while (n > 0) {\n            result\
    \ = (n % 2).toString + result\n            n /= 2\n        }\n        result",
  "        var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var sum = 0\n        var n = N\n        while (n > 0) {\n\
    \            sum += n % 2\n            n /= 2\n        }\n        sum.toString",
  "        var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result : String = \"\"\n        var\
    \ N_copy : Long = N\n        while (N_copy > 0) {\n            result = (N_copy\
    \ % 2).toString + result\n            N_copy /= 2\n        }\n        result",
  "        var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var binary\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            binary = (n\
    \ % 2).toString + binary\n            n /= 2\n        }\n        binary", "  \
    \      var n = N\n        var s = \"\"\n        while (n > 0) {\n            s\
    \ = (n % 2).toString + s\n            n /= 2\n        }\n        s", "       \
    \ var n = N\n        var s = \"\"\n        while (n > 0) {\n            s = (n\
    \ % 2).toString + s\n            n /= 2\n        }\n        s", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var s = \"\"\n        while (n > 0)\
    \ {\n            s = (n % 2).toString + s\n            n /= 2\n        }\n   \
    \     s", "        var sum = 0\n        var n = N\n        while (n > 0) {\n \
    \           sum += n % 2\n            n /= 2\n        }\n        return sum.toString",
  "        var n = N\n        var s = \"\"\n        while (n > 0) {\n            s\
    \ = (n % 2).toString + s\n            n /= 2\n        }\n        s", "       \
    \ var result = \"\"\n        var n = N\n        while (n > 0) {\n            result\
    \ = (n % 2).toString + result\n            n /= 2\n        }\n        result",
  "        var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var result = \"\"\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ : String = \"\"\n        var n = N\n        while (n > 0) {\n            result\
    \ = (n % 2).toString + result\n            n /= 2\n        }\n        result",
  "        var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        val binary = N.toBinaryString\n        binary.map(x =>\
    \ x.toString.toInt).sum.toString", "        var n = N\n        var result = \"\
    \"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var result = \"\"\n\
    \        var n = N\n        while (n != 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var s = \"\"\n        var n = N\n        while (n > 0) {\n            s\
    \ = (n % 2).toString + s\n            n /= 2\n        }\n        s", "       \
    \ var binary = \"\"\n        var n = N\n        while (n != 0) {\n           \
    \ binary = (n % 2).toString + binary\n            n /= 2\n        }\n        return\
    \ binary", "        var n = N\n        var s = \"\"\n        while (n > 0) {\n\
    \            s = (n % 2).toString + s\n            n /= 2\n        }\n       \
    \ s", "        var result = \"\"\n        var n = N\n        while (n > 0) {\n\
    \            result = (n % 2).toString + result\n            n /= 2\n        }\n\
    \        result", "        var n = N\n        var result = \"\"\n        while\
    \ (n > 0) {\n            result = (n % 2).toString + result\n            n /=\
    \ 2\n        }\n        result", "        val binary = N.toBinaryString\n    \
    \    var sum = 0\n        for (i <- 0 until binary.length) {\n            sum\
    \ += binary(i).asDigit\n        }\n        sum.toString", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var result = \"\"\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var s = \"\"\n      \
    \  while (n > 0) {\n            s = (n % 2).toString + s\n            n /= 2\n\
    \        }\n        s", "        var n = N\n        var result = \"\"\n      \
    \  while (n > 0) {\n            result = (n % 2).toString + result\n         \
    \   n /= 2\n        }\n        result", "        var result = \"\"\n        var\
    \ n = N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        return result",
  "        var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var result = \"\"\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var sum = 0\n        var\
    \ n = N\n        while (n > 0) {\n            sum += n % 2\n            n /= 2\n\
    \        }\n        sum.toString", "        var result = \"\"\n        var n =\
    \ N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n  \
    \          n /= 2\n        }\n        s", "        var result = \"\"\n       \
    \ var num = N\n        while (num > 0) {\n            result = (num % 2).toString\
    \ + result\n            num /= 2\n        }\n        result", "        var n =\
    \ N\n        var s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString\
    \ + s\n            n /= 2\n        }\n        s", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ : String = \"\"\n        var n : Long = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var sum = 0\n        var\
    \ binary = N.toBinaryString\n        for (i <- 0 until binary.length) {\n    \
    \        sum += binary(i).asDigit\n        }\n        return sum.toString", " \
    \       var result = \"\"\n        var n = N\n        while (n != 0) {\n     \
    \       result = (n % 2).toString + result\n            n /= 2\n        }\n  \
    \      result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n  \
    \          n /= 2\n        }\n        s", "        var result = \"\"\n       \
    \ var n = N\n        while (n > 0) {\n            result = (n % 2).toString +\
    \ result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var n = N\n        var s = \"\"\n        while (n > 0) {\n            s\
    \ = (n % 2).toString + s\n            n /= 2\n        }\n        s", "       \
    \ var n = N\n        var result = \"\"\n        while (n > 0) {\n            result\
    \ = (n % 2).toString + result\n            n /= 2\n        }\n        result",
  "        var result : String = \"\"\n        var n : Long = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var sum = 0\n        var n = N\n       \
    \ while (n > 0) {\n            sum += n % 2\n            n /= 2\n        }\n \
    \       sum.toString", "        var n = N\n        var result = \"\"\n       \
    \ while (n > 0) {\n            result = (n % 2).toString + result\n          \
    \  n /= 2\n        }\n        result", "        var result = \"\"\n        var\
    \ n = N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ s = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n  \
    \          n /= 2\n        }\n        s", "        var result = \"\"\n       \
    \ var n = N\n        while (n > 0) {\n            result = (n % 2).toString +\
    \ result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var n = N\n        var s\
    \ = \"\"\n        while (n > 0) {\n            s = (n % 2).toString + s\n    \
    \        n /= 2\n        }\n        s", "        var binary = \"\"\n        var\
    \ n = N\n        while (n > 0) {\n            binary = (n % 2).toString + binary\n\
    \            n /= 2\n        }\n        binary", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        val binary = N.toBinaryString\n        var\
    \ sum = 0\n        for (i <- 0 until binary.length) {\n            sum += binary(i).asDigit\n\
    \        }\n        sum.toString", "        var result = \"\"\n        var n =\
    \ N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var n = N\n\
    \        var result = \"\"\n        while (n > 0) {\n            result = (n %\
    \ 2).toString + result\n            n /= 2\n        }\n        result", "    \
    \    var result = \"\"\n        var n = N\n        while (n > 0) {\n         \
    \   result = (n % 2).toString + result\n            n /= 2\n        }\n      \
    \  result", "        var n = N\n        var result = \"\"\n        while (n >\
    \ 0) {\n            result = (n % 2).toString + result\n            n /= 2\n \
    \       }\n        result", "        var x = N\n        var result = \"\"\n  \
    \      while (x > 0) {\n            result = (x % 2).toString + result\n     \
    \       x /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var sum = 0\n      \
    \  var n = N\n        while (n > 0) {\n            sum += n % 2\n            n\
    \ /= 2\n        }\n        sum.toString", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var n = N\n\
    \        var result = \"\"\n        while (n > 0) {\n            result = (n %\
    \ 2).toString + result\n            n /= 2\n        }\n        result", "    \
    \    var sum = 0\n        var n = N\n        while (n > 0) {\n            sum\
    \ += n % 2\n            n /= 2\n        }\n        sum.toString", "        var\
    \ result = \"\"\n        var n = N\n        while (n > 0) {\n            result\
    \ = (n % 2).toString + result\n            n /= 2\n        }\n        result",
  "        var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var binary = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            binary = (n % 2).toString + binary\n    \
    \        n /= 2\n        }\n        binary", "        var result = \"\"\n    \
    \    var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var s = \"\"\n      \
    \  while (n > 0) {\n            s = (n % 2).toString + s\n            n /= 2\n\
    \        }\n        s", "        var result = \"\"\n        var n = N\n      \
    \  while (n > 0) {\n            result = (n % 2).toString + result\n         \
    \   n /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var sum = 0\n      \
    \  var binary = N.toBinaryString\n        for (i <- 0 until binary.length) {\n\
    \            sum += binary(i).asDigit\n        }\n        return sum.toString",
  "        var n = N\n        var result = \"\"\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        var n = N\n        var result\
    \ = \"\"\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var n = N\n        var\
    \ result = \"\"\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var binary\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            binary = (n\
    \ % 2).toString + binary\n            n /= 2\n        }\n        binary", "  \
    \      var result = \"\"\n        var n = N\n        while (n > 0) {\n       \
    \     result = (n % 2).toString + result\n            n /= 2\n        }\n    \
    \    result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var result = \"\"\n        var n = N\n \
    \       while (n > 0) {\n            result = (n % 2).toString + result\n    \
    \        n /= 2\n        }\n        result", "        // Write your code here\n\
    \        var result = \"\"\n        var n = N\n        while (n > 0) {\n     \
    \       result = (n % 2).toString + result\n            n /= 2\n        }\n  \
    \      result", "        var result = \"\"\n        var n = N\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        var n = N\n        var s = \"\"\n      \
    \  while (n > 0) {\n            s = (n % 2).toString + s\n            n /= 2\n\
    \        }\n        s", "        var result : String = \"\"\n        var n : Long\
    \ = N\n        while (n > 0) {\n            result = (n % 2).toString + result\n\
    \            n /= 2\n        }\n        result", "        var result = \"\"\n\
    \        var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        var result\
    \ = \"\"\n        var n = N\n        while (n > 0) {\n            result = (n\
    \ % 2).toString + result\n            n /= 2\n        }\n        result", "  \
    \      // Write your code here\n        var result = \"\"\n        var n = N\n\
    \        while (n > 0) {\n            result = (n % 2).toString + result\n   \
    \         n /= 2\n        }\n        result", "        var result = \"\"\n   \
    \     var n = N\n        while (n > 0) {\n            result = (n % 2).toString\
    \ + result\n            n /= 2\n        }\n        result", "        val binary\
    \ = N.toBinaryString\n        var sum = 0\n        for (i <- 0 until binary.length)\
    \ {\n            sum += binary(i).asDigit\n        }\n        sum.toString", " \
    \       var n = N\n        var result = \"\"\n        while (n > 0) {\n      \
    \      result = (n % 2).toString + result\n            n /= 2\n        }\n   \
    \     result", "        var n = N\n        var result = \"\"\n        while (n\
    \ > 0) {\n            result = (n % 2).toString + result\n            n /= 2\n\
    \        }\n        result", "        val binary = N.toBinaryString\n        var\
    \ sum = 0\n        for (i <- 0 until binary.length) {\n            sum += binary(i).asDigit\n\
    \        }\n        sum.toString", "        var s = N.toBinaryString\n       \
    \ var sum = 0\n        for (i <- 0 until s.length) {\n            sum += s(i).asDigit\n\
    \        }\n        return sum.toString", "        var result = \"\"\n       \
    \ var n = N\n        while (n > 0) {\n            result = (n % 2).toString +\
    \ result\n            n /= 2\n        }\n        result", "        var n = N\n\
    \        var result = \"\"\n        while (n > 0) {\n            result = (n %\
    \ 2).toString + result\n            n /= 2\n        }\n        result"]
stop_tokens:
- "\n    }\n"

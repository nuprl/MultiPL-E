name: HumanEval_117_select_words
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string s and a natural number n, you have been tasked to implement\
  \ \n    // a function that returns a list of all words from string s that contain\
  \ exactly \n    // n consonants, in order these words appear in the string s.\n\
  \    // If the string s is empty then the function should return an empty list.\n\
  \    // Note: you may assume the input string contains only letters and spaces.\n\
  \    // Examples:\n    def selectWords(s : String, n : Long) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(selectWords((\"Mary\
  \ had a little lamb\"), (4l)).equals((List[String](\"little\"))));\n    assert(selectWords((\"\
  Mary had a little lamb\"), (3l)).equals((List[String](\"Mary\", \"lamb\"))));\n\
  \    assert(selectWords((\"simple white space\"), (2l)).equals((List[String]())));\n\
  \    assert(selectWords((\"Hello world\"), (4l)).equals((List[String](\"world\"\
  ))));\n    assert(selectWords((\"Uncle sam\"), (3l)).equals((List[String](\"Uncle\"\
  ))));\n    assert(selectWords((\"\"), (4l)).equals((List[String]())));\n    assert(selectWords((\"\
  a b c d e f\"), (1l)).equals((List[String](\"b\", \"c\", \"d\", \"f\"))));\n   \
  \ }\n\n}\n"
completions: ["        // Write your code here\n        val words = s.split(\" \"\
    )\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val consonants\
    \ = words.filter(w => w.filter(c => vowels.contains(c.toLower)).length == n)\n\
    \        consonants.toList", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n.toInt)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') == n)", '        s.split(" ").filter(x => x.filter(y
    => "aeiou".contains(y)).length == n).toList', "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u').length == n.toInt)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.count(c => c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n)",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        var result = List[String]()\n        var words = s.split(\"\
    \ \")\n        for (word <- words) {\n            var count = 0\n            for\
    \ (c <- word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u') count += 1\n            }\n            if (count == n) result\
    \ = word :: result\n        }\n        result", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => c.isLetter && !c.isVowel).length == n)", "        val words =\
    \ s.split(\" \").toList\n        words.filter(w => w.filter(c => c.isLetter &&\
    \ !c.isVowel).length == n)", "        val words = s.split(\" \").toList\n    \
    \    words.filter(w => w.filter(c => \"aeiou\".contains(c)).length == n)", " \
    \       val vowels = List('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x\
    \ => x.filter(!vowels.contains(_)).length == n).toList", '        s.split(" ").filter(x
    => x.filter(y => "aeiou".contains(y)).length == n).toList', "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filterNot(c => \"aeiou\"\
    .contains(c)).length == n)", '        s.split(" ").filter(x => x.filter(y => "aeiou".contains(y)).length
    == n).toList', "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => \"aeiou\".contains(c)).length == n)", "        var result =\
    \ List[String]()\n        var words = s.split(\" \")\n        for (word <- words)\
    \ {\n            var count = 0\n            for (c <- word) {\n              \
    \  if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') count += 1\n\
    \            }\n            if (count == n) result = word :: result\n        }\n\
    \        result", "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => \"bcdfghjklmnpqrstvwxyz\".contains(c)).length == n)", "   \
    \     val words = s.split(\" \").toList\n        words.filter(word => word.filter(c\
    \ => !c.isVowel).length == n)", "        val words = s.split(\" \").toList\n \
    \       words.filter(w => w.filter(c => \"aeiou\".contains(c)).length == n)",
  "        val words = s.split(\" \").toList\n        words.filter(word => word.count(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".contains(c)) == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u').length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u').length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u').length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.count(c => !vowels.contains(c)) == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u').length == n.toInt)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c))\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.count(c\
    \ => \"aeiou\".contains(c)) == n)", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \").toList\n        words.filter(word =>\
    \ word.filter(c => !vowels.contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        val result = words.filter(x => x.count(y => y.isLetter &&\
    \ !y.isVowel) == n)\n        result", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u').length == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.count(c => !c.isVowel) == n)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(c => c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u').length == n.toInt)", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \").toList\n        val result = words.filter(w => w.filter(c =>\
    \ !vowels.contains(c)).length == n)\n        result", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => c.isLetter && !c.isVowel) == n)", "        val words = s.split(\"\
    \ \").toList\n        val result = words.filter(w => w.count(c => c.isLetter &&\
    \ !c.isVowel) == n)\n        result", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n.toInt)", "        // Fill\
    \ in the code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n      \
    \  val words = s.split(\" \").toList\n        words.filter(w => w.filter(c =>\
    \ !vowels.contains(c)).length == n)", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(!vowels.contains(_)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !\"aeiou\".contains(c)).length == n)", "        s.split(\" \").filter(x =>\
    \ x.count(y => y != 'a' && y != 'e' && y != 'i' && y != 'o' && y != 'u') == n).toList",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ var words = s.split(\" \")\n        for (word <- words) {\n            if (countConsonants(word)\
    \ == n) result = word :: result\n        }\n        result", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(c => c.isLetter\
    \ && !c.isVowel).length == n)", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val words = s.split(\" \").toList\n        words.filter(word =>\
    \ word.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => c.isLetter && !c.isVowel)\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => \"aeiou\".contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => c.isLetter && !c.isVowel)\
    \ == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => \"aeiou\".contains(c)) == n)", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.count(y => !vowels.contains(y))\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \").toList\n        words.filter(w => w.count(c => !vowels.contains(c))\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(c => \"bcdfghjklmnpqrstvwxyz\".contains(c)).length == n)", " \
    \       val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => \"aeiou\".contains(c)).length == n)", "        // Fill in the code here\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => !vowels.contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => !c.isVowel) == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(word => word.count(c => \"aeiou\".contains(c)) == n)", " \
    \       val words = s.split(\" \").toList\n        words.filter(word => word.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length == n)",
  "        val words = s.split(\" \").toList\n        val result = words.filter(word\
    \ => word.filter(c => !\"aeiou\".contains(c)).length == n)\n        result", " \
    \       s.split(\" \").filter(x => x.filter(y => y.toLower != 'a' && y.toLower\
    \ != 'e' && y.toLower != 'i' && y.toLower != 'o' && y.toLower != 'u').length ==\
    \ n).toList", '        s.split(" ").filter(x => x.count(y => "aeiou".contains(y))
    == n).toList', "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \").toList\n        words.filter(word => word.filter(c =>\
    \ !vowels.contains(c)).length == n)", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c)) ==\
    \ n)", "        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => \"aeiou\".contains(c)).length == n)", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(x => x.count(y => !List('a', 'e', 'i', 'o',\
    \ 'u').contains(y)) == n)", "        val words = s.split(\" \").toList\n     \
    \   words.filter(x => x.count(y => \"aeiou\".contains(y)) == n)", "        val\
    \ words = s.split(\" \").toList\n        words.filter(w => w.filter(c => \"aeiou\"\
    .contains(c)).length == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(x => x.filter(y => \"aeiou\".contains(y)).length == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => \"aeiou\".contains(c)).length == n)", "        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.count(c => c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') == n)", '        s.split(" ").filter(x => x.filter(y
    => "aeiou".contains(y)).length == n).toList', "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length\
    \ == n)", "        // Fill in the code here\n        var words = s.split(\" \"\
    )\n        var result = List[String]()\n        for (word <- words) {\n      \
    \      if (word.count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') == n) {\n                result = result :+ word\n            }\n     \
    \   }\n        result", "        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(c => \"aeiou\".contains(c)).length == n)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(x => x.count(y => y.isLetter &&\
    \ !y.isVowel) == n)", "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => \"aeiou\".contains(c)).length == n)", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n  \
    \      val result = words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n.toInt)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(ch => ch != 'a' && ch !=\
    \ 'e' && ch != 'i' && ch != 'o' && ch != 'u').length == n)", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.count(c => !vowels.contains(c)) == n)", "       \
    \ val words = s.split(\" \").toList\n        words.filter(word => word.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length == n.toInt)",
  "        val words = s.split(\" \").toList\n        words.filter(word => word.count(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".contains(c)) == n)", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", '        s.split(" ").filter(x => x.count(y => y.isLetter && !y.isVowel)
    == n).toList', "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') ==\
    \ n)", "        val words = s.split(\" \").toList\n        val consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n        words.filter(w => w.count(consonants.contains(_))\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => c.isLetter && !c.isVowel) == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c)) ==\
    \ n)", "        val vowels = \"aeiou\"\n        val words = s.split(\" \")\n \
    \       val result = new ListBuffer[String]\n        for (word <- words) {\n \
    \           var count = 0\n            for (letter <- word) {\n              \
    \  if (!vowels.contains(letter)) count += 1\n            }\n            if (count\
    \ == n) result += word\n        }\n        result.toList", "        val words\
    \ = s.split(\" \").toList\n        words.filter(word => word.filter(c => \"aeiou\"\
    .contains(c)).length == n)", "        var words = s.split(\" \").toList\n    \
    \    var result = List[String]()\n        for (word <- words) {\n            if\
    \ (countConsonants(word) == n) result = word :: result\n        }\n        result",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.count(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n)", "     \
    \   val words = s.split(\" \").toList\n        words.filter(w => w.filter(c =>\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length == n)", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x\
    \ => x.filter(!vowels.contains(_)).length == n).toList", "        val words =\
    \ s.split(\" \").toList\n        words.filter(word => word.filter(c => \"aeiou\"\
    .contains(c)).length == n)", "        val words = s.split(\" \").toList\n    \
    \    words.filter(word => word.count(c => \"aeiou\".contains(c)) == n)", "   \
    \     val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => c.isLetter && !c.isVowel).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u').length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u').length == n.toInt)", "        val words =\
    \ s.split(\" \").toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c))\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => \"aeiou\".contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(c => !vowels.contains(c)).length == n)", "        val words =\
    \ s.split(\" \").toList\n        words.filter(word => word.filter(ch => ch.isLetter\
    \ && !ch.isVowel).length == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.count(c => \"bcdfghjklmnpqrstvwxz\".contains(c))\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => \"aeiou\".contains(c)) == n)", "        // Write your code here\n\
    \        val words = s.split(\" \")\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val result = ListBuffer[String]()\n        for (word <- words) {\n \
    \           var count = 0\n            for (c <- word) {\n                if (consonants.contains(c))\
    \ count += 1\n            }\n            if (count == n) result += word\n    \
    \    }\n        result.toList", "        val words = s.split(\" \").toList\n \
    \       words.filter(w => w.filter(c => !c.isVowel).length == n)", "        val\
    \ words = s.split(\" \").toList\n        words.filter(x => x.filter(y => y.toLower\
    \ != 'a' && y.toLower != 'e' && y.toLower != 'i' && y.toLower != 'o' && y.toLower\
    \ != 'u').length == n.toInt)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        val words = s.split(\" \").toList\n\
    \        val result = words.filter(w => w.count(c => !c.isVowel) == n)\n     \
    \   result", "        val words = s.split(\" \").toList\n        words.filter(x\
    \ => x.filter(y => y.toLower != 'a' && y.toLower != 'e' && y.toLower != 'i' &&\
    \ y.toLower != 'o' && y.toLower != 'u').length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        var words = s.split(\"\
    \ \").toList\n        var result = List[String]()\n        for (word <- words)\
    \ {\n            var count = 0\n            for (letter <- word) {\n         \
    \       if (letter != 'a' && letter != 'e' && letter != 'i' && letter != 'o' &&\
    \ letter != 'u') {\n                    count += 1\n                }\n      \
    \      }\n            if (count == n) {\n                result = word :: result\n\
    \            }\n        }\n        return result", '        s.split(" ").filter(x
    => x.filter(y => "aeiou".contains(y)).length == n).toList', "        val words\
    \ = s.split(\" \").toList\n        words.filter(x => x.count(y => y != 'a' &&\
    \ y != 'e' && y != 'i' && y != 'o' && y != 'u') == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => !c.isVowel) == n)", "   \
    \     val words = s.split(\" \").toList\n        words.filter(word => word.filter(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".contains(c)).length == n)", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n\
    \        words.filter(x => x.filter(!vowels.contains(_)).length == n)", "    \
    \    val words = s.split(\" \").toList\n        words.filter(x => x.filter(y =>\
    \ \"aeiou\".contains(y)).length == n)", "        val words = s.split(\" \").toList\n\
    \        val vowels = List('a', 'e', 'i', 'o', 'u')\n        words.filter(word\
    \ => word.filter(c => !vowels.contains(c)).length == n)", "        val words =\
    \ s.split(\" \").toList\n        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(c => \"aeiou\".contains(c)).length == n)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(x => x.filter(y => \"aeiou\".contains(y)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => \"aeiou\".contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.filter(c => \"aeiou\".contains(c)).length == n)", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(c => c.isLetter\
    \ && !c.isVowel).length == n)", "        // Fill in the code here\n        val\
    \ words = s.split(\" \")\n        val result = new ListBuffer[String]\n      \
    \  for (word <- words) {\n            val consonants = word.filter(c => c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u')\n            if (consonants.length\
    \ == n) result += word\n        }\n        result.toList", "        val words\
    \ = s.split(\" \").toList\n        words.filter(x => x.filter(y => \"aeiou\".contains(y)).length\
    \ == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        // Fill in the code here\n        val words = s.split(\" \"\
    )\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val result = words.filter(w\
    \ => w.count(c => vowels.contains(c.toLower)) == n)\n        result.toList", " \
    \       val words = s.split(\" \").toList\n        words.filter(x => x.filter(y\
    \ => y.toLower != 'a' && y.toLower != 'e' && y.toLower != 'i' && y.toLower !=\
    \ 'o' && y.toLower != 'u').length == n)", "        val words = s.split(\" \").toList\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        words.filter(w =>\
    \ w.filter(c => consonants.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => \"bcdfghjklmnpqrstvwxz\".contains(c)) == n)", "        def isConsonant(c\
    \ : Char) : Boolean = {\n            val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \            !vowels.contains(c)\n        }\n        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.count(isConsonant) == n)", "        val\
    \ words = s.split(\" \").toList\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        words.filter(w => w.filter(c => consonants.contains(c)).length == n)",
  '        s.split(" ").filter(x => x.filter(y => "aeiou".contains(y)).length == n).toList',
  "        val words = s.split(\" \").toList\n        words.filter(x => x.filter(y\
    \ => y.toLower != 'a' && y.toLower != 'e' && y.toLower != 'i' && y.toLower !=\
    \ 'o' && y.toLower != 'u').length == n)", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        s.split(\" \").filter(word => word.count(c => !vowels.contains(c))\
    \ == n).toList", "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => \"aeiou\".contains(c)).length == n)", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(x => x.filter(!vowels.contains(_)).length\
    \ == n).toList", "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.count(c => \"aeiou\".contains(c)) == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.count(c => c.isLetter && !c.isVowel)\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => \"aeiou\".contains(c)).length == n)", "        val words = s.split(\" \"\
    ).toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c)) == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.count(c\
    \ => !c.isVowel) == n)", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => !vowels.contains(c)).length == n)", "        if (s.length == 0) return List()\n\
    \        val words = s.split(\" \")\n        val result = new ListBuffer[String]\n\
    \        for (word <- words) {\n            val consonants = word.filter(x =>\
    \ x != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u')\n            if (consonants.length\
    \ == n) result += word\n        }\n        result.toList", "        val words\
    \ = s.split(\" \").toList\n        words.filter(w => w.count(c => \"aeiou\".contains(c))\
    \ == n)", "        var words = s.split(\" \").toList\n        var result = List[String]()\n\
    \        for (word <- words) {\n            if (word.filter(x => x != 'a' && x\
    \ != 'e' && x != 'i' && x != 'o' && x != 'u').length == n) {\n               \
    \ result = word :: result\n            }\n        }\n        result", "      \
    \  val words = s.split(\" \").toList\n        words.filter(w => w.filter(c =>\
    \ \"aeiou\".contains(c)).length == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length == n)",
  "        val words = s.split(\" \").toList\n        words.filter(w => w.filter(c\
    \ => c.isLetter && !c.isVowel).length == n)", "        val words = s.split(\"\
    \ \").toList\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        // Write your\
    \ code here\n        val words = s.split(\" \")\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    .toSet\n        words.filter(word => word.filter(consonants.contains(_)).length\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        s.split(\"\
    \ \").filter(word => word.filter(!vowels.contains(_)).length == n).toList", '        s.split("
    ").filter(x => x.filter(y => "aeiou".contains(y)).length == n).toList', '        s.split("
    ").filter(x => x.count(y => "aeiou".contains(y)) == n).toList', '        s.split("
    ").filter(x => x.filter(y => "aeiou".contains(y)).length == n).toList', "    \
    \    val words = s.split(\" \").toList\n        val wordsWithConsonants = words.filter(w\
    \ => w.filter(c => \"bcdfghjklmnpqrstvwxyz\".contains(c)).length == n)\n     \
    \   wordsWithConsonants", "        val words = s.split(\" \").toList\n       \
    \ words.filter(w => w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u').length == n)", "        val words = s.split(\" \").toList\n   \
    \     words.filter(w => w.count(c => \"bcdfghjklmnpqrstvwxyz\".contains(c)) ==\
    \ n)", "        val words = s.split(\" \").toList\n        words.filter(w => w.count(c\
    \ => \"aeiou\".contains(c)) == n)", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.filter(c => !vowels.contains(c)).length == n)", "        val words = s.split(\"\
    \ \").toList\n        words.filter(word => word.filter(c => c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u').length == n)", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        s.split(\" \").filter(w => w.count(c => !vowels.contains(c))\
    \ == n).toList", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ words = s.split(\" \").toList\n        words.filter(w => w.filter(c => !vowels.contains(c)).length\
    \ == n)", "        val words = s.split(\" \").toList\n        words.filter(w =>\
    \ w.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u').length\
    \ == n)", "        // Fill in the code here\n        val words = s.split(\" \"\
    )\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val result = new\
    \ ListBuffer[String]\n        for (word <- words) {\n            var count = 0\n\
    \            for (c <- word) {\n                if (consonants.contains(c)) count\
    \ += 1\n            }\n            if (count == n) result += word\n        }\n\
    \        result.toList", "        val words = s.split(\" \").toList\n        words.filter(word\
    \ => word.count(c => !c.isVowel) == n)", "        val words = s.split(\" \").toList\n\
    \        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length == n)",
  "        s.split(\" \").filter(x => x.filter(y => y != 'a' && y != 'e' && y != 'i'\
    \ && y != 'o' && y != 'u').length == n).toList", "        val words = s.split(\"\
    \ \").toList\n        words.filter(w => w.filter(c => \"aeiou\".contains(c)).length\
    \ == n)", '        s.split(" ").filter(x => x.count(y => "aeiou".contains(y))
    == n).toList', "        val words = s.split(\" \").toList\n        words.filter(w\
    \ => w.count(c => \"aeiou\".contains(c)) == n)"]
stop_tokens:
- "\n    }\n"

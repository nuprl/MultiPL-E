name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    def removeVowels(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val result = new StringBuilder()\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) result.append(c)\n\
    \        }\n        result.toString", "        var result = \"\"\n        for\
    \ (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                result += c\n            }\n        }\n    \
    \    return result", '        return text.replaceAll("[aeiouAEIOU]", "")', " \
    \       val vowels = \"aeiouAEIOU\"\n        text.filterNot(vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filter(!vowels.contains(_))", "        val vowels =\
    \ \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", " \
    \       val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var vowels = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        return result", "     \
    \   val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  '        return text.replaceAll("[aeiouAEIOU]", "")', "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))", "     \
    \   val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        var result = \"\
    \"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u') {\n                result += c\n            }\n   \
    \     }\n        return result", "        var result = \"\"\n        for (c <-\
    \ text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                result += c\n            }\n        }\n        return\
    \ result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        return result", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n\
    \        val text_list_without_vowels = text_list.filter(x => !vowels.contains(x))\n\
    \        val text_without_vowels = text_list_without_vowels.mkString\n       \
    \ return text_without_vowels", "        var result = \"\"\n        for (c <- text)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        text.filter(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   var vowels = List('a', 'e', 'i', 'o', 'u')\n        var textWithoutVowels\
    \ = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c)) {\n\
    \                textWithoutVowels += c\n            }\n        }\n        return\
    \ textWithoutVowels", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n   \
    \     text.filter(!vowels.contains(_))", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(x => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u')",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n\
    \        val text_list_without_vowels = text_list.filter(x => !vowels.contains(x))\n\
    \        val text_without_vowels = text_list_without_vowels.mkString\n       \
    \ return text_without_vowels", "        var result = \"\"\n        for (c <- text)\
    \ {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        return result", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val textWithoutVowels = text.filter(c => !vowels.contains(c))\n\
    \        return textWithoutVowels", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        text.filter(ch => !vowels.contains(ch))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var vowels = List('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) {\n         \
    \       result += c\n            }\n        }\n        return result", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n\
    \        val text_list_filtered = text_list.filter(c => !vowels.contains(c))\n\
    \        text_list_filtered.mkString", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        text.filter(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels)",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (text(i) != 'a' && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' &&\
    \ text(i) != 'u') {\n                result += text(i)\n            }\n      \
    \  }\n        return result", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(c => !vowels.contains(c))", "        var vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        var result = \"\"\n        for (c <- text) {\n\
    \            if (!vowels.contains(c)) {\n                result += c\n       \
    \     }\n        }\n        return result", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val result = new StringBuilder()\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result.append(c)\n\
    \            }\n        }\n        result.toString", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = Array('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c <-\
    \ text) {\n            if (!vowels.contains(c)) {\n                result += c\n\
    \            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n        val text_list_filtered\
    \ = text_list.filter(x => !vowels.contains(x))\n        val text_filtered = text_list_filtered.mkString\n\
    \        return text_filtered", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(c => !vowels.contains(c))", "        var result =\
    \ \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u') {\n                result += c\n            }\n\
    \        }\n        return result", "        val vowels = \"aeiouAEIOU\"\n   \
    \     var result = \"\"\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result += c\n            }\n        }\n        return result",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val sb = new StringBuilder\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) sb.append(c)\n\
    \        }\n        sb.toString", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        text.filter(!vowels.contains(_))", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n\
    \        val text_list_without_vowels = text_list.filter(x => !vowels.contains(x))\n\
    \        text_list_without_vowels.mkString", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (char <- text) {\n            if (char !=\
    \ 'a' && char != 'e' && char != 'i' && char != 'o' && char != 'u') {\n       \
    \         result += char\n            }\n        }\n        return result", " \
    \       val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(ch => !vowels.contains(ch))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(x => !List('a', 'e', 'i', 'o', 'u').contains(x))", "      \
    \  val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(ch => !vowels.contains(ch))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n      \
    \      }\n        }\n        return result", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = \"aeiouAEIOU\"\n        text.filter(!vowels.contains(_))", "      \
    \  var result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        // vowels is a set\
    \ of vowels.\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        // result\
    \ is a string buffer that will contain the result.\n        val result = new StringBuffer\n\
    \        // iterate over the text and append the character to the result if it\
    \ is not a vowel.\n        for (c <- text) {\n            if (!vowels.contains(c))\
    \ {\n                result.append(c)\n            }\n        }\n        // return\
    \ the result.\n        result.toString", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        var\
    \ result = \"\"\n        for (c <- text) {\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n      \
    \      }\n        }\n        return result", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels)",
  "        val vowels = \"aeiouAEIOU\"\n        val text_without_vowels = text.filter(x\
    \ => !vowels.contains(x))\n        return text_without_vowels", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val text_list = text.toList\n\
    \        val text_list_filtered = text_list.filter(x => !vowels.contains(x))\n\
    \        text_list_filtered.mkString", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = \"aeiou\"\n        val sb = new StringBuilder\n        for\
    \ (c <- text) {\n            if (!vowels.contains(c)) {\n                sb.append(c)\n\
    \            }\n        }\n        sb.toString", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))", "     \
    \   var textWithoutVowels = \"\"\n        for (c <- text) {\n            if (c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                textWithoutVowels\
    \ += c\n            }\n        }\n        return textWithoutVowels", "       \
    \ val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filterNot(vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(x => !vowels.contains(x))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (i <- 0 until text.length) {\n         \
    \   if (text(i) != 'a' && text(i) != 'e' && text(i) != 'i' && text(i) != 'o' &&\
    \ text(i) != 'u') {\n                result += text(i)\n            }\n      \
    \  }\n        return result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        text.filter(!vowels.contains(_))", "        val vowels = List('a', 'e',\
    \ 'i', 'o', 'u')\n        text.filter(!vowels.contains(_))", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        text.filter(c => !vowels.contains(c))"]
stop_tokens:
- "\n    }\n"

name: HumanEval_158_find_max
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that accepts a list of strings.\n    // The list contains\
  \ different words. Return the word with maximum number\n    // of unique characters.\
  \ If multiple strings have maximum number of unique\n    // characters, return the\
  \ one which comes first in lexicographical order.\n    def findMax(words : List[String])\
  \ : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(findMax((List[String](\"\
  name\", \"of\", \"string\"))).equals((\"string\")));\n    assert(findMax((List[String](\"\
  name\", \"enam\", \"game\"))).equals((\"enam\")));\n    assert(findMax((List[String](\"\
  aaaaaaa\", \"bb\", \"cc\"))).equals((\"aaaaaaa\")));\n    assert(findMax((List[String](\"\
  abc\", \"cba\"))).equals((\"abc\")));\n    assert(findMax((List[String](\"play\"\
  , \"this\", \"game\", \"of\", \"footbott\"))).equals((\"footbott\")));\n    assert(findMax((List[String](\"\
  we\", \"are\", \"gonna\", \"rock\"))).equals((\"gonna\")));\n    assert(findMax((List[String](\"\
  we\", \"are\", \"a\", \"mad\", \"nation\"))).equals((\"nation\")));\n    assert(findMax((List[String](\"\
  this\", \"is\", \"a\", \"prrk\"))).equals((\"this\")));\n    assert(findMax((List[String](\"\
  b\"))).equals((\"b\")));\n    assert(findMax((List[String](\"play\", \"play\", \"\
  play\"))).equals((\"play\")));\n    }\n\n}\n"
completions: ["        var max = 0\n        var maxWord = \"\"\n        for (word\
    \ <- words) {\n            val unique = word.toSet.size\n            if (unique\
    \ > max) {\n                max = unique\n                maxWord = word\n   \
    \         }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val set = new HashSet[Char]\n\
    \            for (c <- word) {\n                set += c\n            }\n    \
    \        if (set.size > max) {\n                max = set.size\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", "      \
    \  var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n  \
    \          val unique = word.toSet.size\n            if (unique > max) {\n   \
    \             max = unique\n                maxWord = word\n            }\n  \
    \      }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val count = word.toSet.size\n    \
    \        if (count > max) {\n                max = count\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        val max = words.map(x\
    \ => x.toSet.size).max\n        words.filter(x => x.toSet.size == max).min", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val set = new HashSet[Char]\n   \
    \         for (c <- word) {\n                set += c\n            }\n       \
    \     if (set.size > max) {\n                max = set.size\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars\
    \ = word.toSet\n            if (uniqueChars.size > max) {\n                max\
    \ = uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", "      \
    \  var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n  \
    \          val unique = word.toSet.size\n            if (unique > max) {\n   \
    \             max = unique\n                maxWord = word\n            }\n  \
    \      }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val uniqueChars = word.toSet\n   \
    \         if (uniqueChars.size > max) {\n                max = uniqueChars.size\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val uniqueChars = word.toSet\n            if (uniqueChars.size >\
    \ max) {\n                max = uniqueChars.size\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val set = word.toSet\n            if (set.size\
    \ > max) {\n                max = set.size\n                maxWord = word\n \
    \           }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ if (word.toSet.size > max) {\n                max = word.toSet.size\n      \
    \          maxWord = word\n            }\n        }\n        maxWord", "     \
    \   var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n \
    \           val unique = word.toSet.size\n            if (unique > max) {\n  \
    \              max = unique\n                maxWord = word\n            }\n \
    \       }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val unique = word.toSet.size\n   \
    \         if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars\
    \ = word.toSet\n            if (uniqueChars.size > max) {\n                max\
    \ = uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", "      \
    \  var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n  \
    \          val unique = word.toSet.size\n            if (unique > max) {\n   \
    \             max = unique\n                maxWord = word\n            }\n  \
    \      }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val unique = word.toSet.size\n   \
    \         if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", '        words.maxBy(word
    => word.toSet.size)', "        var max = 0\n        var res = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                res = word\n\
    \            }\n        }\n        res", '        words.maxBy(word => word.toSet.size)',
  "        var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val uniqueChars = word.toSet\n            if (uniqueChars.size >\
    \ max) {\n                max = uniqueChars.size\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val set = word.toSet\n            if (set.size > max) {\n                max\
    \ = set.size\n                maxWord = word\n            }\n        }\n     \
    \   maxWord", "        var max = 0\n        var maxWord = \"\"\n        for (word\
    \ <- words) {\n            val unique = word.toSet.size\n            if (unique\
    \ > max) {\n                max = unique\n                maxWord = word\n   \
    \         }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val set = new HashSet[Char]\n            for (c <- word) {\n               \
    \ set += c\n            }\n            if (set.size > max) {\n               \
    \ max = set.size\n                maxWord = word\n            }\n        }\n \
    \       maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ res = \"\"\n        for (word <- words) {\n            val set = new HashSet[Char]\n\
    \            for (c <- word) set += c\n            if (set.size > max) {\n   \
    \             max = set.size\n                res = word\n            }\n    \
    \    }\n        res", "        var max = 0\n        var maxWord = \"\"\n     \
    \   for (word <- words) {\n            val unique = word.toSet.size\n        \
    \    if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var result = \"\"\n        for (word <- words) {\n            val\
    \ set = new HashSet[Char]\n            for (c <- word) set += c\n            if\
    \ (set.size > max) {\n                max = set.size\n                result =\
    \ word\n            }\n        }\n        result", "        var max = 0\n    \
    \    var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxString = \"\"\n        for (word <- words)\
    \ {\n            val unique = word.toSet.size\n            if (unique > max) {\n\
    \                max = unique\n                maxString = word\n            }\n\
    \        }\n        maxString", "        var max = 0\n        var maxWord = \"\
    \"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", '        words.maxBy(word => word.toSet.size)', "        var\
    \ max = \"\"\n        var maxCount = 0\n        for (word <- words) {\n      \
    \      val count = word.toSet.size\n            if (count > maxCount) {\n    \
    \            max = word\n                maxCount = count\n            }\n   \
    \     }\n        max", "        var max = 0\n        var maxWord = \"\"\n    \
    \    for (word <- words) {\n            val unique = word.toSet.size\n       \
    \     if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val set = new HashSet[Char]\n            for (c <- word) {\n    \
    \            set += c\n            }\n            if (set.size > max) {\n    \
    \            max = set.size\n                maxWord = word\n            }\n \
    \       }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val uniqueChars = word.toSet\n   \
    \         if (uniqueChars.size > max) {\n                max = uniqueChars.size\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       val map = new HashMap[String, Int]\n        for (word <- words) {\n  \
    \          val set = new HashSet[Char]\n            for (c <- word) set += c\n\
    \            map(word) = set.size\n        }\n        var max = 0\n        var\
    \ maxWord = \"\"\n        for ((word, count) <- map) {\n            if (count\
    \ > max) {\n                max = count\n                maxWord = word\n    \
    \        }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var result = \"\"\n        for\
    \ (word <- words) {\n            val set = new HashSet[Char]\n            for\
    \ (c <- word) set += c\n            if (set.size > max) {\n                max\
    \ = set.size\n                result = word\n            }\n        }\n      \
    \  result", "        var max = 0\n        var result = \"\"\n        for (word\
    \ <- words) {\n            val unique = word.toSet.size\n            if (unique\
    \ > max) {\n                max = unique\n                result = word\n    \
    \        }\n        }\n        result", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val set = new HashSet[Char]\n            for (c <- word) {\n               \
    \ set += c\n            }\n            if (set.size > max) {\n               \
    \ max = set.size\n                maxWord = word\n            }\n        }\n \
    \       maxWord", "        var max = 0\n        var result = \"\"\n        for\
    \ (word <- words) {\n            val set = word.toSet\n            if (set.size\
    \ > max) {\n                max = set.size\n                result = word\n  \
    \          }\n        }\n        result", '        words.maxBy(word => word.toSet.size)',
  "        var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = \"\"\n        var maxCount =\
    \ 0\n        for (word <- words) {\n            val count = word.toSet.size\n\
    \            if (count > maxCount) {\n                max = word\n           \
    \     maxCount = count\n            }\n        }\n        max", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var maxWord = \"\"\n        var\
    \ maxCount = 0\n        for (word <- words) {\n            val count = word.toSet.size\n\
    \            if (count > maxCount) {\n                maxCount = count\n     \
    \           maxWord = word\n            }\n        }\n        maxWord", '        words.maxBy(x
    => x.toSet.size)', "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", "      \
    \  var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n  \
    \          val wordSet = word.toSet\n            if (wordSet.size > max) {\n \
    \               max = wordSet.size\n                maxWord = word\n         \
    \   }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val uniqueChars = word.toSet\n\
    \            if (uniqueChars.size > max) {\n                max = uniqueChars.size\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val count = word.toSet.size\n   \
    \         if (count > max) {\n                max = count\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = \"\"\n        var maxCount = 0\n        for (word <- words)\
    \ {\n            val count = word.toSet.size\n            if (count > maxCount)\
    \ {\n                max = word\n                maxCount = count\n          \
    \  }\n        }\n        max", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var result = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                result = word\n\
    \            }\n        }\n        result", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var max = 0\n        var result\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   result = word\n            }\n        }\n        result", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ result = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   result = word\n            }\n        }\n        result", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", '        words.maxBy(w => w.toSet.size)',
  "        var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val uniqueChars = word.toSet\n            if (uniqueChars.size > max) {\n  \
    \              max = uniqueChars.size\n                maxWord = word\n      \
    \      }\n        }\n        maxWord", "        var max = 0\n        var maxWord\
    \ = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val set = new HashSet[Char]\n\
    \            for (c <- word) set += c\n            if (set.size > max) {\n   \
    \             max = set.size\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val set = HashSet[Char]()\n            for (c <- word) {\n                set\
    \ += c\n            }\n            if (set.size > max) {\n                max\
    \ = set.size\n                maxWord = word\n            }\n        }\n     \
    \   maxWord", "        var max = 0\n        var maxWord = \"\"\n        for (word\
    \ <- words) {\n            val uniqueChars = word.toSet\n            if (uniqueChars.size\
    \ > max) {\n                max = uniqueChars.size\n                maxWord =\
    \ word\n            }\n        }\n        maxWord", "        var max = 0\n   \
    \     var maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars\
    \ = word.toSet\n            if (uniqueChars.size > max) {\n                max\
    \ = uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", '        words.maxBy(x
    => x.toSet.size)', "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        if (words.isEmpty)\
    \ return \"\"\n        var max = words(0)\n        var maxCount = words(0).toSet.size\n\
    \        for (i <- 1 until words.length) {\n            val word = words(i)\n\
    \            val count = word.toSet.size\n            if (count > maxCount) {\n\
    \                max = word\n                maxCount = count\n            }\n\
    \        }\n        return max", "        var max = 0\n        var maxWord = \"\
    \"\n        for (word <- words) {\n            val uniqueChars = word.toSet\n\
    \            if (uniqueChars.size > max) {\n                max = uniqueChars.size\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val set = word.toSet\n\
    \            if (set.size > max) {\n                max = set.size\n         \
    \       maxWord = word\n            }\n        }\n        maxWord", "        var\
    \ max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n       \
    \     val unique = word.toSet.size\n            if (unique > max) {\n        \
    \        max = unique\n                maxWord = word\n            }\n       \
    \ }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n    \
    \    for (word <- words) {\n            val count = word.toSet.size\n        \
    \    if (count > max) {\n                max = count\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = 0\n \
    \       var maxWord = \"\"\n        for (word <- words) {\n            val unique\
    \ = word.toSet.size\n            if (unique > max) {\n                max = unique\n\
    \                maxWord = word\n            }\n        }\n        maxWord", " \
    \       var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                maxWord = word\n            }\n\
    \        }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\
    \n        for (word <- words) {\n            val unique = word.toSet.size\n  \
    \          if (unique > max) {\n                max = unique\n               \
    \ maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val set = HashSet[Char]()\n            for (c\
    \ <- word) set += c\n            if (set.size > max) {\n                max =\
    \ set.size\n                maxWord = word\n            }\n        }\n       \
    \ maxWord", "        var max = 0\n        var maxWord = \"\"\n        for (word\
    \ <- words) {\n            val uniqueChars = word.toSet\n            if (uniqueChars.size\
    \ > max) {\n                max = uniqueChars.size\n                maxWord =\
    \ word\n            }\n        }\n        maxWord", "        var max = 0\n   \
    \     var maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars\
    \ = word.toSet\n            if (uniqueChars.size > max) {\n                max\
    \ = uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val uniqueChars =\
    \ word.toSet\n            if (uniqueChars.size > max) {\n                max =\
    \ uniqueChars.size\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val uniqueChars = word.toSet\n            if\
    \ (uniqueChars.size > max) {\n                max = uniqueChars.size\n       \
    \         maxWord = word\n            }\n        }\n        maxWord", "      \
    \  var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n  \
    \          val unique = word.toSet.size\n            if (unique > max) {\n   \
    \             max = unique\n                maxWord = word\n            }\n  \
    \      }\n        maxWord", "        def findMax(words : List[String], max : String,\
    \ maxCount : Int) : String = {\n            if (words.isEmpty) max\n         \
    \   else {\n                val word = words.head\n                val count =\
    \ word.toSet.size\n                if (count > maxCount) findMax(words.tail, word,\
    \ count)\n                else if (count == maxCount) findMax(words.tail, if (word\
    \ < max) word else max, count)\n                else findMax(words.tail, max,\
    \ maxCount)\n            }\n        }\n        findMax(words, \"\", 0)", "   \
    \     var max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n\
    \            val uniqueChars = word.toSet\n            if (uniqueChars.size >\
    \ max) {\n                max = uniqueChars.size\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = \"\"\n       \
    \ var maxUnique = 0\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > maxUnique) {\n                max = word\n         \
    \       maxUnique = unique\n            }\n        }\n        max", "        var\
    \ max = 0\n        var maxWord = \"\"\n        for (word <- words) {\n       \
    \     val unique = word.toSet.size\n            if (unique > max) {\n        \
    \        max = unique\n                maxWord = word\n            }\n       \
    \ }\n        maxWord", "        var max = 0\n        var maxWord = \"\"\n    \
    \    for (word <- words) {\n            val unique = word.toSet.size\n       \
    \     if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        def findMax(words\
    \ : List[String], max : String, maxCount : Int) : String = {\n            if (words.isEmpty)\
    \ max\n            else {\n                val word = words.head\n           \
    \     val count = word.toSet.size\n                if (count > maxCount) findMax(words.tail,\
    \ word, count)\n                else if (count == maxCount) findMax(words.tail,\
    \ if (word < max) word else max, count)\n                else findMax(words.tail,\
    \ max, maxCount)\n            }\n        }\n        findMax(words, \"\", 0)",
  "        var max = 0\n        var result = \"\"\n        for (word <- words) {\n\
    \            val unique = word.toSet.size\n            if (unique > max) {\n \
    \               max = unique\n                result = word\n            }\n \
    \       }\n        result", "        var max = 0\n        var maxWord = \"\"\n\
    \        for (word <- words) {\n            val unique = word.toSet.size\n   \
    \         if (unique > max) {\n                max = unique\n                maxWord\
    \ = word\n            }\n        }\n        maxWord", "        var max = words(0)\n\
    \        for (word <- words) {\n            if (word.toSet.size > max.toSet.size)\
    \ max = word\n            else if (word.toSet.size == max.toSet.size && word <\
    \ max) max = word\n        }\n        max", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord", "        var max = 0\n        var maxWord = \"\"\n        for\
    \ (word <- words) {\n            val unique = word.toSet.size\n            if\
    \ (unique > max) {\n                max = unique\n                maxWord = word\n\
    \            }\n        }\n        maxWord", "        var max = 0\n        var\
    \ maxWord = \"\"\n        for (word <- words) {\n            val unique = word.toSet.size\n\
    \            if (unique > max) {\n                max = unique\n             \
    \   maxWord = word\n            }\n        }\n        maxWord", "        var max\
    \ = 0\n        var maxWord = \"\"\n        for (word <- words) {\n           \
    \ val unique = word.toSet.size\n            if (unique > max) {\n            \
    \    max = unique\n                maxWord = word\n            }\n        }\n\
    \        maxWord"]
stop_tokens:
- "\n    }\n"

name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        val nums = numbers.split(\" \").map(x => x match {\n      \
    \      case \"zero\" => 0\n            case \"one\" => 1\n            case \"\
    two\" => 2\n            case \"three\" => 3\n            case \"four\" => 4\n\
    \            case \"five\" => 5\n            case \"six\" => 6\n            case\
    \ \"seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" =>\
    \ 9\n        })\n        nums.sorted.map(x => x match {\n            case 0 =>\
    \ \"zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n   \
    \         case 3 => \"three\"\n            case 4 => \"four\"\n            case\
    \ 5 => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\
    \n            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val res = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        res.mkString(\" \")", "        val\
    \ numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" ->\
    \ 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" ->\
    \ 8, \"nine\" -> 9)\n        val numberToNumeral = Map(0 -> \"zero\", 1 -> \"\
    one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6 -> \"six\"\
    , 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val nums = numbers.split(\"\
    \ \").map(numeralToNumber(_)).sorted\n        nums.map(numberToNumeral(_)).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numberMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val numberList = numbers.split(\" \").map(numberMap(_)).sorted\n    \
    \    numberList.map(number => number match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\"\
    \ -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\"\
    \ -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral = Map(0 ->\
    \ \"zero\", 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"\
    five\", 6 -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n       \
    \ val numbersList = numbers.split(\" \").map(numeralToNumber(_)).toList.sorted\n\
    \        numbersList.map(numberToNumeral(_)).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numberMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2,\
    \ \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7,\
    \ \"eight\" -> 8, \"nine\" -> 9)\n        numbers.split(\" \").map(x => numberMap(x)).sorted.map(x\
    \ => numberMap.find(_._2 == x).get._1).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap = Map(\"\
    zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\"\
    \ -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n       \
    \ val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val numeralMap\
    \ = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" ->\
    \ 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" ->\
    \ 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n    \
    \    nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val numeralList = numbers.split(\" \").map(x => numeralMap(x)).sorted.map(x\
    \ => numeralMap.find(_._2 == x).get._1)\n        return numeralList.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(n => numeralMap.find(_._2 == n).get._1).mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\"\
    \ \").map(numeralMap(_)).sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val numsSorted = nums.sorted\n    \
    \    numsSorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(numeralToInt)\n        val\
    \ sorted = nums.sorted\n        sorted.map(intToNumeral).mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => {\n            if (x\
    \ == \"zero\") 0\n            else if (x == \"one\") 1\n            else if (x\
    \ == \"two\") 2\n            else if (x == \"three\") 3\n            else if (x\
    \ == \"four\") 4\n            else if (x == \"five\") 5\n            else if (x\
    \ == \"six\") 6\n            else if (x == \"seven\") 7\n            else if (x\
    \ == \"eight\") 8\n            else if (x == \"nine\") 9\n            else throw\
    \ new Exception(\"Invalid input\")\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => {\n            if (x == 0) \"zero\"\n            else\
    \ if (x == 1) \"one\"\n            else if (x == 2) \"two\"\n            else\
    \ if (x == 3) \"three\"\n            else if (x == 4) \"four\"\n            else\
    \ if (x == 5) \"five\"\n            else if (x == 6) \"six\"\n            else\
    \ if (x == 7) \"seven\"\n            else if (x == 8) \"eight\"\n            else\
    \ if (x == 9) \"nine\"\n            else throw new Exception(\"Invalid input\"\
    )\n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val numeralMap = Map[String, Int](\"zero\"\
    \ -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" ->\
    \ 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val\
    \ nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" ->\
    \ 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" ->\
    \ 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        numeralList.map(numeralMap.find(_._2 == _).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(_.toInt).sorted\n\
    \        nums.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val numeralList = numbers.split(\" \").map(numeralMap(_)).sorted\n  \
    \      numeralList.map(numeralMap.find(_._2 == _).get._1).mkString(\" \")", " \
    \       val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"\
    three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val numberToNumeral = Map(0 -> \"zero\", 1 ->\
    \ \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6 -> \"\
    six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val numbersArray\
    \ = numbers.split(\" \").map(numeralToNumber(_))\n        numbersArray.sorted.map(numberToNumeral(_)).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val words = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        numeralList.map(numeralMap.find(_._2 == _).get._1).mkString(\" \")",
  "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\"\
    \ -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\"\
    \ -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral = numeralToNumber.map(_.swap)\n\
    \        val numbersList = numbers.split(\" \").map(numeralToNumber(_)).toList.sorted\n\
    \        numbersList.map(numberToNumeral(_)).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\"\
    \ \").map(numeralMap(_)).sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(s => s match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(n => n match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(s\
    \ => s match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(n => n match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val numeralMap = Map(\"zero\" -> 0, \"\
    one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\"\
    \ -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\"\
    \ \").map(numeralMap(_)).sorted\n        nums.map(num => numeralMap.find(_._2\
    \ == num).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(toInt)\n        nums.sorted.map(toString).mkString(\"\
    \ \")", "        val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\"\
    \ -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\"\
    \ -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral = numeralToNumber.map(_.swap)\n\
    \        val nums = numbers.split(\" \").map(numeralToNumber(_))\n        nums.sorted.map(numberToNumeral(_)).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\"\
    \ \").map(numeralMap(_)).toList.sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val numeralMap = Map(\"zero\" -> 0, \"\
    one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\"\
    \ -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList\
    \ = numbers.split(\" \").map(numeralMap(_)).sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(numeralToInt).sorted\n        nums.map(intToNumeral).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\"\
    \ -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\"\
    \ -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral = Map(0 ->\
    \ \"zero\", 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"\
    five\", 6 -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n       \
    \ val numbersList = numbers.split(\" \").map(numeralToNumber(_)).sorted\n    \
    \    numbersList.map(numberToNumeral(_)).mkString(\" \")", "        val nums =\
    \ numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n  \
    \          case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ val sorted = nums.sorted\n        sorted.map(x => x match {\n            case\
    \ 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n\
    \            case 3 => \"three\"\n            case 4 => \"four\"\n           \
    \ case 5 => \"five\"\n            case 6 => \"six\"\n            case 7 => \"\
    seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\n   \
    \     }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x => x\
    \ match {\n            case \"zero\" => 0\n            case \"one\" => 1\n   \
    \         case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(s\
    \ => s match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(n => n match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToInt = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val intToNumeral = Map(0 -> \"zero\"\
    , 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6\
    \ -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val nums\
    \ = numbers.split(\" \").map(numeralToInt(_)).sorted\n        nums.map(intToNumeral(_)).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(s => s match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(n => n match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToNumber = Map(\"zero\" -> 0, \"one\" -> 1, \"two\"\
    \ -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\"\
    \ -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral = Map(0 ->\
    \ \"zero\", 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"\
    five\", 6 -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n       \
    \ val numbersList = numbers.split(\" \").map(numeralToNumber(_)).sorted\n    \
    \    numbersList.map(numberToNumeral(_)).mkString(\" \")", "        val nums =\
    \ numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n  \
    \          case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => {\n            x match {\n                case \"zero\" => 0\n          \
    \      case \"one\" => 1\n                case \"two\" => 2\n                case\
    \ \"three\" => 3\n                case \"four\" => 4\n                case \"\
    five\" => 5\n                case \"six\" => 6\n                case \"seven\"\
    \ => 7\n                case \"eight\" => 8\n                case \"nine\" =>\
    \ 9\n            }\n        })\n        nums.sorted.map(x => {\n            x\
    \ match {\n                case 0 => \"zero\"\n                case 1 => \"one\"\
    \n                case 2 => \"two\"\n                case 3 => \"three\"\n   \
    \             case 4 => \"four\"\n                case 5 => \"five\"\n       \
    \         case 6 => \"six\"\n                case 7 => \"seven\"\n           \
    \     case 8 => \"eight\"\n                case 9 => \"nine\"\n            }\n\
    \        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x =>\
    \ x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n \
    \           case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val numeralMap =\
    \ Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4,\
    \ \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n\
    \        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(num\
    \ => numeralMap.find(_._2 == num).get._1).mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n           \
    \ case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"three\"\
    \n            case 4 => \"four\"\n            case 5 => \"five\"\n           \
    \ case 6 => \"six\"\n            case 7 => \"seven\"\n            case 8 => \"\
    eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val sortedStrings = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        sortedStrings.mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n    \
    \        case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        var nums = numbers.split(\" \").toList\n        var sorted =\
    \ nums.sorted\n        var result = \"\"\n        for (num <- sorted) {\n    \
    \        result += num + \" \"\n        }\n        return result.trim", "    \
    \    val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val numeralToNumber = Map(\"zero\" ->\
    \ 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5,\
    \ \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numberToNumeral\
    \ = Map(0 -> \"zero\", 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\"\
    , 5 -> \"five\", 6 -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n\
    \        val numbersArray = numbers.split(\" \").map(numeralToNumber(_))\n   \
    \     numbersArray.sorted.map(numberToNumeral(_)).mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralToInt = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val intToNumeral = Map(0 -> \"zero\"\
    , 1 -> \"one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6\
    \ -> \"six\", 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val nums\
    \ = numbers.split(\" \").map(numeralToInt(_)).sorted\n        nums.map(intToNumeral(_)).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(numeralToNumber)\n      \
    \  nums.sorted.map(numberToNumeral).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")"]
stop_tokens:
- "\n    }\n"

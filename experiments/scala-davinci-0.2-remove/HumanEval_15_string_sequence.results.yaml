language: scala
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i +\
    \ \" \")\n        }\n        s.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3q8q496s.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmcxl4af9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = new StringBuilder\n        for (i <- 0 to n) {\n            result.append(i)\n\
    \            result.append(\" \")\n        }\n        result.toString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprw0p3bo4.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\";\n        for (i <- 0 to n) {\n            s += i + \" \";\n      \
    \  }\n        return s;\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4_pgrz10.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s : String = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n\
    \            if (i != n) s += \" \"\n        }\n        return s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplyoit9x1.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmcxl4af9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\";\n        for (i <- 0 to n) {\n            s += i + \" \";\n      \
    \  }\n        return s.trim();\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpismlmckd.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s : String = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\
    \ + \" \"\n        }\n        return s\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc6pwvgri.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n       \
    \     if (i != n) s += \" \"\n        }\n        return s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdvspl9_1.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0) \"0\"\n        else if (n == 1) \"0 1\"\n        else {\n         \
    \   val s = stringSequence(n / 2)\n            s + \" \" + (n / 2 + 1) + \" \"\
    \ + n\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu1ecj64d.scala:16)\n\tat Problem.main(tmpu1ecj64d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmcxl4af9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0)\n            return \"0\"\n        val sb = new StringBuilder\n   \
    \     for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5arvji4e.scala:9:23\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i <-\
    \ 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n        }\n\
    \        sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd7lq3ly2.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0) return \"0\"\n        val sb = new StringBuilder\n        var i = 0\n\
    \        while (i <= n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n            i += 1\n        }\n        sb.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprhtivpwa.scala:18)\n\tat Problem.main(tmprhtivpwa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0)\n            return \"0\"\n        val sb = new StringBuilder\n   \
    \     for (i <- 0 to n) {\n            sb.append(i)\n            sb.append(\"\
    \ \")\n        }\n        sb.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5arvji4e.scala:9:23\
    \ ---------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n       \
    \     if (i != n) s += \" \"\n        }\n        return s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdvspl9_1.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0) return \"0\"\n        val sb = new StringBuilder\n        for (i <-\
    \ 0 to n) {\n            sb.append(i)\n            sb.append(\" \")\n        }\n\
    \        sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd7lq3ly2.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder()\n        for (i <- 0 to n) {\n            s.append(i\
    \ + \" \")\n        }\n        s.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6j2dwx7z.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        val\
    \ sb = new StringBuilder\n        for (i <- 0 to n) {\n            sb.append(i)\n\
    \            sb.append(\" \")\n        }\n        sb.toString\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi8p211j7.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmcxl4af9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i.toString\
    \ + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb6bajtlf.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        if\
    \ (n == 0) return \"0\"\n        var s = \"\"\n        for (i <- 0 to n) {\n \
    \           s += i.toString + \" \"\n        }\n        return s.trim\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc2mxeemg.scala:8:23\
    \ ---------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ result = \"\"\n        for (i <- 0 to n) {\n            result += i + \" \"\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmcxl4af9.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString\n       \
    \     if (i != n) s += \" \"\n        }\n        return s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdvspl9_1.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\";\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\
    ;\n        }\n        return s.trim;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7sbpiwk0.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i + \" \"\n        }\n\
    \        s\n    }\n    def main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"\
    0\")));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3lg5y6ap.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) s += i + \" \"\n        s\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\"\
    )));\n    assert(stringSequence((3l)).equals((\"0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps8kt9_oe.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) s += i + \e[31m\" \"\e[0m\n\e[31m\e[31m  |\e[0m         \
    \              ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\
    \e[31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = new StringBuilder\n        for (i <- 0 to n) {\n            s.append(i)\n\
    \            s.append(\" \")\n        }\n        s.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp59r8gup6.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978623
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\n    def stringSequence(n : Long) : String = {\n        var\
    \ s = \"\"\n        for (i <- 0 to n) {\n            s += i.toString + \" \"\n\
    \        }\n        return s\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringSequence((0l)).equals((\"0\")));\n    assert(stringSequence((3l)).equals((\"\
    0 1 2 3\")));\n    assert(stringSequence((10l)).equals((\"0 1 2 3 4 5 6 7 8 9\
    \ 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwgf7k37l.scala:7:23\
    \ ---------------------\e[0m\e[0m\n\e[31m7 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e\
    [31m  |\e[0m                       Found:    (n : Long)\n\e[31m  |\e[0m      \
    \                 Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978624

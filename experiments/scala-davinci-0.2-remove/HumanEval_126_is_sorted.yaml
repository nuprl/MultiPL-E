name: HumanEval_126_is_sorted
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of numbers, return whether or not they are sorted\n    // in\
  \ ascending order. If list has more than 1 duplicate of the same\n    // number,\
  \ return False. Assume no negative numbers and only integers.\n    // Examples\n\
  \    def isSorted(lst : List[Long]) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isSorted((List[Long](5l.toLong)))\
  \ == (true));\n    assert(isSorted((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 5l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong))) == (true));\n\
  \    assert(isSorted((List[Long](1l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong,\
  \ 6l.toLong, 7l.toLong))) == (false));\n    assert(isSorted((List[Long]())) == (true));\n\
  \    assert(isSorted((List[Long](1l.toLong))) == (true));\n    assert(isSorted((List[Long](3l.toLong,\
  \ 2l.toLong, 1l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 2l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 3l.toLong, 3l.toLong, 4l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 4l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong))) == (true));\n    }\n\n}\n"
completions: ["        if (lst.length == 0) return true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < prev) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ if (lst.length == 0) return true\n        var last = lst(0)\n        for (i\
    \ <- 1 until lst.length) {\n            if (lst(i) < last) return false\n    \
    \        last = lst(i)\n        }\n        return true", "        val sorted =\
    \ lst.sorted\n        for (i <- 0 until lst.length) {\n            if (lst(i)\
    \ != sorted(i)) return false\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var current = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < current) return false\n            current = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ <= prev) return false\n            prev = lst(i)\n        }\n        return\
    \ true", "        if (lst.length == 0) return true\n        var last = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < last) return\
    \ false\n            last = lst(i)\n        }\n        return true", "       \
    \ if (lst.length == 0) return true\n        var prev = lst(0)\n        for (i\
    \ <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n    \
    \        prev = lst(i)\n        }\n        return true", "        var sorted =\
    \ true\n        var prev = -1L\n        for (i <- lst) {\n            if (i ==\
    \ prev) return false\n            if (i < prev) sorted = false\n            prev\
    \ = i\n        }\n        return sorted", "        if (lst.length == 0) return\
    \ true\n        var last = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < last) return false\n            last = lst(i)\n     \
    \   }\n        return true", "        if (lst.length == 0) return true\n     \
    \   var prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < prev) return false\n            prev = lst(i)\n        }\n       \
    \ return true", "        if (lst.length == 0) return true\n        var prev =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <= prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var cur = lst(0)\n        for (i <- 1 until lst.length) {\n         \
    \   if (lst(i) <= cur) return false\n            cur = lst(i)\n        }\n   \
    \     return true", "        if (lst.length == 0) return true\n        var cur\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ cur) return false\n            cur = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        if (lst.length\
    \ == 1) return true\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < lst(i - 1)) return false\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        val sorted = lst.sorted\n        for\
    \ (i <- 0 until lst.length) {\n            if (lst(i) != sorted(i)) return false\n\
    \        }\n        return true", "        val sorted = lst.sorted\n        for\
    \ (i <- 0 until lst.length) {\n            if (lst(i) != sorted(i)) return false\n\
    \        }\n        return true", "        if (lst.length < 2) return true\n \
    \       var prev = lst(0)\n        for (i <- 1 until lst.length) {\n         \
    \   if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n  \
    \      return true", "        var sorted = true\n        for (i <- 0 until lst.length\
    \ - 1) {\n            if (lst(i) >= lst(i + 1)) {\n                sorted = false\n\
    \            }\n        }\n        sorted", "        if (lst.length == 0) return\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) return false\n            prev = lst(i)\n     \
    \   }\n        return true", "        if (lst.length == 0) return true\n     \
    \   var prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < prev) return false\n            prev = lst(i)\n        }\n       \
    \ return true", "        if (lst.length == 0) return true\n        var last =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) < last)\
    \ return false\n            last = lst(i)\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return false\n\
    \            prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var cur\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ cur) return false\n            cur = lst(i)\n        }\n        return true",
  "        if (lst.length <= 1) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return false\n\
    \            prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length <= 1) return true\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= lst(i - 1)) return false\n        }\n        return\
    \ true", "        if (lst.length == 0) return true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ if (lst.length == 0) return true\n        var prev = lst(0)\n        for (i\
    \ <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n    \
    \        prev = lst(i)\n        }\n        return true", "        val sorted =\
    \ lst.sorted\n        for (i <- 0 until lst.length) {\n            if (lst(i)\
    \ != sorted(i)) return false\n        }\n        true", "        if (lst.length\
    \ <= 1) true\n        else if (lst(0) > lst(1)) false\n        else isSorted(lst.tail)",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var last = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= last) return false\n            last = lst(i)\n        }\n\
    \        return true", "        if (lst.length <= 1) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        var sorted = true\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < lst(i - 1)) sorted = false\n        }\n        sorted",
  "        if (lst.length == 0) return true\n        var cur = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < cur) return false\n  \
    \          cur = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var last = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= last) return false\n            last = lst(i)\n        }\n\
    \        return true", "        if (lst.length <= 1) return true\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < lst(i - 1)) return false\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var last = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < last) return false\n \
    \           last = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        val sorted = lst.sorted\n        for (i <- 0 until\
    \ lst.length) {\n            if (lst(i) != sorted(i)) return false\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        val sorted = lst.sorted\n        for (i <- 0 until lst.length) {\n    \
    \        if (lst(i) != sorted(i)) return false\n        }\n        true", "  \
    \      if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        var sorted = true\n        for (i <- 0 until lst.length\
    \ - 1) {\n            if (lst(i) >= lst(i + 1)) {\n                sorted = false\n\
    \            }\n        }\n        sorted", "        if (lst.length == 0) return\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) return false\n            prev = lst(i)\n     \
    \   }\n        return true", "        var sorted = true\n        var prev = -1\n\
    \        for (i <- lst) {\n            if (i == prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        sorted", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var last\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ last) return false\n            last = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return false\n\
    \            prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        if (lst(0) > lst(1)) return false\n        return\
    \ isSorted(lst.slice(1, lst.length))", "        if (lst.isEmpty) return true\n\
    \        var prev = lst.head\n        for (i <- lst) {\n            if (i < prev)\
    \ return false\n            prev = i\n        }\n        return true", "     \
    \   if (lst.length == 0) return true\n        var prev = lst(0)\n        for (i\
    \ <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n    \
    \        prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        var prev = -1L\n        for (i <- lst)\
    \ {\n            if (i == prev) return false\n            if (i < prev) return\
    \ false\n            prev = i\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        val sorted = lst.sorted\n        for\
    \ (i <- 0 until lst.length) {\n            if (lst(i) != sorted(i)) return false\n\
    \        }\n        return true", "        if (lst.size == 0) return true\n  \
    \      var prev = lst(0)\n        for (i <- 1 until lst.size) {\n            if\
    \ (lst(i) < prev) return false\n            prev = lst(i)\n        }\n       \
    \ return true", "        if (lst.length == 0) return true\n        var prev =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) < prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       if (lst.size == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.size) {\n            if (lst(i) < prev) return false\n   \
    \         prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length <= 1) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.size == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.size) {\n            if (lst(i) < prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length <= 1) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        var sorted = true\n        for (i <- 1 until lst.length) {\n          \
    \  if (lst(i) < lst(i - 1)) sorted = false\n        }\n        sorted", "    \
    \    if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length < 2) return true\n \
    \       var prev = lst(0)\n        for (i <- 1 until lst.length) {\n         \
    \   if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n  \
    \      return true", "        if (lst.length == 0) return true\n        var last\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <=\
    \ last) return false\n            last = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var last = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < last) return false\n \
    \           last = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        val sorted\
    \ = lst.sorted\n        for (i <- 0 until lst.length) {\n            if (lst(i)\
    \ != sorted(i)) return false\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length <= 1) return true\n\
    \        val sorted = lst.sorted\n        for (i <- 0 until lst.length) {\n  \
    \          if (lst(i) != sorted(i)) return false\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        var sorted = true\n        var prev = -1\n    \
    \    for (i <- lst) {\n            if (i == prev) return false\n            if\
    \ (i < prev) sorted = false\n            prev = i\n        }\n        return sorted",
  "        if (lst.size == 0) return true\n        var last = lst(0)\n        for\
    \ (i <- 1 until lst.size) {\n            if (lst(i) <= last) return false\n  \
    \          last = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var cur = lst(0)\n        for (i <- 1 until lst.length) {\n         \
    \   if (lst(i) <= cur) return false\n            cur = lst(i)\n        }\n   \
    \     return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) true\n       \
    \ else if (lst.length == 1) true\n        else {\n            val head = lst.head\n\
    \            val tail = lst.tail\n            if (tail.contains(head)) false\n\
    \            else if (head > tail.head) false\n            else isSorted(tail)\n\
    \        }", "        if (lst.length == 0) return true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ if (lst.length <= 1) true\n        else if (lst(0) > lst(1)) false\n       \
    \ else isSorted(lst.slice(1, lst.length))", "        if (lst.length == 0) return\
    \ true\n        var last = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < last) return false\n            last = lst(i)\n     \
    \   }\n        return true", "        if (lst.length <= 1) return true\n     \
    \   var prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n      \
    \  return true", "        if (lst.length == 0) return true\n        var prev =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) < prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length <= 1) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return false\n\
    \            prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        if (lst.length == 1) return true\n        var prev = lst(0)\n       \
    \ for (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n\
    \            prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        val sorted = lst.sorted\n        for (i <- 0 until\
    \ lst.length) {\n            if (lst(i) != sorted(i)) return false\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ <= prev) return false\n            prev = lst(i)\n        }\n        return\
    \ true", "        if (lst.length == 0) return true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) <= prev) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ val sorted = lst.sorted\n        for (i <- 0 until lst.length) {\n         \
    \   if (lst(i) != sorted(i)) return false\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.size\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) true\n        else if (lst.length\
    \ == 1) true\n        else {\n            val sorted = lst.sorted\n          \
    \  for (i <- 0 until lst.length) {\n                if (lst(i) != sorted(i)) return\
    \ false\n            }\n            true\n        }", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length <= 1) true\n        else if (lst(0) > lst(1)) false\n  \
    \      else isSorted(lst.tail)", "        if (lst.length == 0) return true\n \
    \       var prev = lst(0)\n        for (i <- 1 until lst.length) {\n         \
    \   if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n  \
    \      return true", "        if (lst.length <= 1) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) true\n        else if (lst.length == 1) true\n   \
    \     else {\n            val sorted = lst.sorted\n            for (i <- 0 until\
    \ lst.length) {\n                if (lst(i) != sorted(i)) return false\n     \
    \       }\n            true\n        }", "        if (lst.length == 0) return\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) return false\n            prev = lst(i)\n     \
    \   }\n        return true", "        if (lst.length <= 1) return true\n     \
    \   var prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < prev) return false\n            prev = lst(i)\n        }\n       \
    \ return true", "        if (lst.length <= 1) return true\n        for (i <- 1\
    \ until lst.length) {\n            if (lst(i) <= lst(i - 1)) return false\n  \
    \      }\n        return true", "        val sorted = lst.sorted\n        val\
    \ distinct = lst.distinct\n        sorted == lst && sorted == distinct", "   \
    \     if (lst.length <= 1) true\n        else if (lst(0) > lst(1)) false\n   \
    \     else isSorted(lst.tail)", "        if (lst.length == 0) return true\n  \
    \      var prev = lst(0)\n        for (i <- 1 until lst.length) {\n          \
    \  if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n   \
    \     return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        var sorted\
    \ = true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < prev) {\n                sorted = false\n          \
    \      return sorted\n            }\n            prev = lst(i)\n        }\n  \
    \      return sorted", "        if (lst.length <= 1) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.size == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.size) {\n            if (lst(i) < prev) return false\n   \
    \         prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        if (lst.length == 0) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n\
    \        return true", "        if (lst.size <= 1) return true\n        for (i\
    \ <- 1 until lst.size) {\n            if (lst(i) <= lst(i - 1)) return false\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        var sorted = true\n        var prev = Long.MinValue\n\
    \        for (i <- lst) {\n            if (i < prev) sorted = false\n        \
    \    prev = i\n        }\n        return sorted", "        if (lst.length == 0)\
    \ return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <=\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.size == 0) return true\n  \
    \      var prev = lst(0)\n        for (i <- 1 until lst.size) {\n            if\
    \ (lst(i) <= prev) return false\n            prev = lst(i)\n        }\n      \
    \  return true", "        if (lst.length == 0) return true\n        var prev =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) < prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        val sorted = lst.sorted\n        for\
    \ (i <- 0 until lst.length) {\n            if (lst(i) != sorted(i)) return false\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length < 2) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        var sorted\
    \ = true\n        var prev = -1\n        for (i <- lst) {\n            if (i ==\
    \ prev) return false\n            if (i < prev) sorted = false\n            prev\
    \ = i\n        }\n        return sorted", "        if (lst.length <= 1) return\
    \ true\n        for (i <- 1 until lst.length) {\n            if (lst(i) < lst(i\
    \ - 1)) return false\n        }\n        return true", "        if (lst.size ==\
    \ 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true", "        if (lst.length == 0) return true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < prev) return false\n            prev = lst(i)\n        }\n \
    \       return true", "        if (lst.length == 0) return true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length <= 1) return true\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < lst(i - 1)) return false\n        }\n        return\
    \ true", "        if (lst.length == 0) return true\n        var cur = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < cur) return\
    \ false\n            cur = lst(i)\n        }\n        return true", "        if\
    \ (lst.length <= 1) return true\n        var prev = lst(0)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < prev) return false\n       \
    \     prev = lst(i)\n        }\n        return true", "        var sorted = true\n\
    \        for (i <- 0 until lst.length - 1) {\n            if (lst(i) >= lst(i\
    \ + 1)) {\n                sorted = false\n            }\n        }\n        sorted",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var last = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < last) return false\n            last = lst(i)\n\
    \        }\n        return true", "        var sorted = true\n        for (i <-\
    \ 0 until lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n       \
    \         sorted = false\n            }\n        }\n        return sorted", " \
    \       var sorted = true\n        for (i <- 0 until lst.length - 1) {\n     \
    \       if (lst(i) >= lst(i + 1)) {\n                sorted = false\n        \
    \    }\n        }\n        return sorted", "        if (lst.size == 0) return\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.size) {\n   \
    \         if (lst(i) < prev) return false\n            prev = lst(i)\n       \
    \ }\n        return true", "        if (lst.length == 0) return true\n       \
    \ var prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) return false\n            prev = lst(i)\n        }\n        return true",
  "        if (lst.length == 0) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ <= 1) true\n        else if (lst(0) > lst(1)) false\n        else isSorted(lst.tail)",
  "        if (lst.length < 2) return true\n        var prev = lst(0)\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           prev = lst(i)\n        }\n        return true", "        if (lst.length\
    \ == 0) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) return false\n            prev = lst(i)\n\
    \        }\n        return true"]
stop_tokens:
- "\n    }\n"

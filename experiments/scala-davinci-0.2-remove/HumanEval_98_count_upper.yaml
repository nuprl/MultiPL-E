name: HumanEval_98_count_upper
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string s, count the number of uppercase vowels in even indices.\n\
  \    // For example:\n    def countUpper(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(countUpper((\"aBCdEf\"\
  )) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
  dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
  U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
  EEEE\")) == (2l));\n    }\n\n}\n"
completions: ['        s.zipWithIndex.filter(p => p._2 % 2 == 0 && p._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count",
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).length', '        s.zipWithIndex.filter(x => x._2 %
    2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n    \
    \    count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length by 2) {\n           \
    \ if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0
    && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0 && isUpper(s(i))) count += 1\n        }\n        count", "        var\
    \ count = 0\n        for (i <- 0 until s.length if i % 2 == 0) {\n           \
    \ if (s(i) == 'A' || s(i) == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U')\
    \ count += 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n    \
    \    count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(t => t._2 % 2 == 0 && t._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0
    && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).length', '        s.zipWithIndex.filter(x => x._2 %
    2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 &&
    x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length\
    \ if i % 2 == 0) {\n            if (s(i) == 'A' || s(i) == 'E' || s(i) == 'I'\
    \ || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n        count", "    \
    \    var count = 0\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n    \
    \    count", "        var count = 0\n        for (i <- 0 until s.length) {\n \
    \           if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n        count",
  "        var count = 0\n        for (i <- 0 until s.length if i % 2 == 0) {\n  \
    \          if (s(i) == 'A' || s(i) == 'E' || s(i) == 'I' || s(i) == 'O' || s(i)\
    \ == 'U') count += 1\n        }\n        count", "        var count = 0\n    \
    \    for (i <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper)\
    \ count += 1\n        }\n        count", "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            val c = s(i)\n            if (c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') count += 1\n        }\n\
    \        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        val vowels = Set('A', 'E', 'I', 'O', 'U')\n        s.zipWithIndex.filter(x\
    \ => x._2 % 2 == 0 && vowels.contains(x._1)).size", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", "        var count = 0\n        for (i <- 0 until s.length by 2) {\n\
    \            if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(p
    => p._2 % 2 == 0 && p._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0 && s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n    \
    \    }\n        count", "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", "        var count = 0\n        for (i <- 0 until s.length) {\n  \
    \          if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n        count",
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length if i % 2 == 0) {\n            if (s(i) == 'A' || s(i) ==\
    \ 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n  \
    \      count", "        var count = 0\n        for (i <- 0 until s.length) {\n\
    \            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n        count",
  "        var count = 0\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count",
  "        var count = 0\n        for (i <- 0 until s.length by 2) {\n           \
    \ if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        val vowels = Set('A', 'E', 'I', 'O',\
    \ 'U')\n        s.zipWithIndex.filter(x => x._2 % 2 == 0 && vowels.contains(x._1)).size",
  "        var count = 0\n        for (i <- 0 until s.length by 2) {\n           \
    \ if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && "AEIOU".contains(x._1)).length', "        var count = 0\n        for\
    \ (i <- 0 until s.length if i % 2 == 0) {\n            if (s(i) == 'A' || s(i)\
    \ == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n\
    \        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count",
  '        s.zipWithIndex.filter(t => t._2 % 2 == 0 && t._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count +=\
    \ 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 &&
    x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    val vowels = Set('A', 'E', 'I', 'O', 'U')\n        s.zipWithIndex.filter(x\
    \ => x._2 % 2 == 0 && vowels.contains(x._1)).size", "        var count = 0\n \
    \       for (i <- 0 until s.length by 2) {\n            if (s(i).isUpper) count\
    \ += 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2 %
    2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length\
    \ if i % 2 == 0) {\n            if (s(i) == 'A' || s(i) == 'E' || s(i) == 'I'\
    \ || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n        count", "    \
    \    var count = 0\n        for (i <- 0 until s.length by 2) {\n            if\
    \ (s(i).isUpper) count += 1\n        }\n        count", "        val vowels =\
    \ Set('A', 'E', 'I', 'O', 'U')\n        s.zipWithIndex.filter(x => x._2 % 2 ==\
    \ 0 && vowels.contains(x._1)).size", '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && isUpper(s(i))) count += 1\n     \
    \   }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).length',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length by 2) {\n            if\
    \ (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count +=\
    \ 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 &&
    x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).length', '        s.zipWithIndex.filter(x =>
    x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0
    && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", "        var count = 0\n        for (i <- 0 until s.length by 2) {\n\
    \            if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && isUpper(s(i))) count += 1\n        }\n    \
    \    count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n    \
    \    count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length by 2) {\n           \
    \ if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(p => p._2
    % 2 == 0 && p._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length by 2) {\n            if\
    \ (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length if i % 2 == 0) {\n            if (s(i) == 'A' || s(i) ==\
    \ 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n  \
    \      count", "        var count = 0\n        for (i <- 0 until s.length by 2)\
    \ {\n            if (\"AEIOU\".contains(s(i))) count += 1\n        }\n       \
    \ count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length) {\n            if (i\
    \ % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count",
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n    \
    \    count", "        var count = 0\n        for (i <- 0 until s.length) {\n \
    \           if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n        count",
  "        var count = 0\n        for (i <- 0 until s.length if i % 2 == 0) {\n  \
    \          if (s(i) == 'A' || s(i) == 'E' || s(i) == 'I' || s(i) == 'O' || s(i)\
    \ == 'U') count += 1\n        }\n        count", "        var count = 0\n    \
    \    for (i <- 0 until s.length if i % 2 == 0) {\n            if (s(i) == 'A'\
    \ || s(i) == 'E' || s(i) == 'I' || s(i) == 'O' || s(i) == 'U') count += 1\n  \
    \      }\n        count", "        var count = 0\n        for (i <- 0 until s.length\
    \ by 2) {\n            if (\"AEIOU\".contains(s(i))) count += 1\n        }\n \
    \       count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).length',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0 && s(i).isUpper) count += 1\n        }\n        count", "        val\
    \ vowels = Set('A', 'E', 'I', 'O', 'U')\n        s.zipWithIndex.filter(x => x._2\
    \ % 2 == 0 && vowels.contains(x._1)).size", "        var count = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count\
    \ += 1\n        }\n        count", "        var count = 0L\n        for (i <-\
    \ 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n       \
    \ }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', "    \
    \    var count = 0\n        for (i <- 0 until s.length) {\n            if (i %\
    \ 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).length', "        var count = 0\n        for (i <- 0\
    \ until s.length by 2) {\n            if (s(i).isUpper) count += 1\n        }\n\
    \        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && \"AEIOU\".contains(s(i))) count +=\
    \ 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", "        var count = 0\n        for (i <- 0 until s.length) {\n  \
    \          if (i % 2 == 0 && \"AEIOU\".contains(s(i))) count += 1\n        }\n\
    \        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  "        var count = 0\n        for (i <- 0 until s.length by 2) {\n           \
    \ if (s(i).isUpper) count += 1\n        }\n        count", '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && "AEIOU".contains(x._1)).size', '        s.zipWithIndex.filter(x =>
    x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length if i % 2 == 0) {\n            if (s(i) == 'A' || s(i) == 'E' || s(i)\
    \ == 'I' || s(i) == 'O' || s(i) == 'U') count += 1\n        }\n        count",
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n      \
    \  }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2
    % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2
    == 0 && x._1.isUpper).size', "        var count = 0L\n        for (i <- 0 until\
    \ s.length) {\n            if (i % 2 == 0 && \"AEIOU\".contains(s(i))) count +=\
    \ 1\n        }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 ==
    0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x => x._2 % 2 == 0 &&
    x._1.isUpper).size', "        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (i % 2 == 0 && s(i).isUpper) count += 1\n        }\n     \
    \   count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).length',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size', '        s.zipWithIndex.filter(x
    => x._2 % 2 == 0 && x._1.isUpper).size', "        var count = 0\n        for (i\
    \ <- 0 until s.length by 2) {\n            if (s(i).isUpper) count += 1\n    \
    \    }\n        count", '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size',
  '        s.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1.isUpper).size']
stop_tokens:
- "\n    }\n"

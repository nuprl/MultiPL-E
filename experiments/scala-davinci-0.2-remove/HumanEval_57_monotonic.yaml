name: HumanEval_57_monotonic
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return True is list elements are monotonically increasing or decreasing.\n\
  \    def monotonic(l : List[Long]) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 10l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 20l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 20l.toLong, 4l.toLong, 10l.toLong))) == (false));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 0l.toLong, -10l.toLong))) == (true));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 1l.toLong, 0l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 2l.toLong, 5l.toLong, 60l.toLong))) == (false));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 60l.toLong))) == (true));\n    assert(monotonic((List[Long](9l.toLong,\
  \ 9l.toLong, 9l.toLong, 9l.toLong))) == (true));\n    }\n\n}\n"
completions: ["        if (l.length <= 1) return true\n        if (l(0) < l(1)) {\n\
    \            for (i <- 1 until l.length - 1) if (l(i) > l(i + 1)) return false\n\
    \        } else {\n            for (i <- 1 until l.length - 1) if (l(i) < l(i\
    \ + 1)) return false\n        }\n        return true", "        if (l.length <=\
    \ 1) return true\n        val sign = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (sign * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length <= 1) return true\n        if (l(0)\
    \ < l(1)) {\n            for (i <- 1 until l.length - 1) {\n                if\
    \ (l(i) > l(i + 1)) return false\n            }\n        } else {\n          \
    \  for (i <- 1 until l.length - 1) {\n                if (l(i) < l(i + 1)) return\
    \ false\n            }\n        }\n        return true", "        if (l.length\
    \ <= 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.size <= 2) return true\n      \
    \  val d = l(1) - l(0)\n        for (i <- 1 until l.size - 1) {\n            if\
    \ (d * (l(i + 1) - l(i)) < 0) return false\n        }\n        return true", " \
    \       if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n       \
    \ for (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i)) <\
    \ 0) return false\n        }\n        return true", "        if (l.size <= 2)\
    \ return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        if (diffs.forall(x => x >= 0)) return true\n        if (diffs.forall(x\
    \ => x <= 0)) return true\n        return false", "        if (l.length < 2) return\
    \ true\n        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n \
    \           if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size == 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.size == 1)\
    \ return true\n        if (l.size == 2) return true\n        var i = 1\n     \
    \   var increasing = true\n        var decreasing = true\n        while (i < l.size)\
    \ {\n            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            i += 1\n        }\n        return\
    \ increasing || decreasing", "        if (l.size <= 2) return true\n        val\
    \ diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        if (first == 0) return monotonic(diffs)\n        diffs.forall(x => x\
    \ == 0 || x == first)", "        if (l.length < 2) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.length <= 1) return true\n        val s = l.sliding(2).map(x => x(1)\
    \ - x(0)).toList\n        s.forall(x => x == 0) || s.forall(x => x > 0) || s.forall(x\
    \ => x < 0)", "        if (l.length <= 1) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length < 2) return true\n        var inc = true\n        var dec = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) dec =\
    \ false\n            if (l(i) < l(i - 1)) inc = false\n        }\n        return\
    \ inc || dec", "        if (l.length < 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length < 2) return true\n        val diff = l(1) - l(0)\n        if (diff\
    \ == 0) return false\n        for (i <- 2 until l.length) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length < 2) return true\n        if (l(0) < l(1)) {\n           \
    \ for (i <- 1 until l.length - 1) {\n                if (l(i) > l(i + 1)) return\
    \ false\n            }\n        } else {\n            for (i <- 1 until l.length\
    \ - 1) {\n                if (l(i) < l(i + 1)) return false\n            }\n \
    \       }\n        return true", "        if (l.length < 2) return true\n    \
    \    val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n         \
    \   if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        val firstDiff = diffs(0)\n        diffs.forall(x\
    \ => x == firstDiff)", "        if (l.size <= 2) return true\n        val diffs\
    \ = l.sliding(2).map(x => x(1) - x(0)).toList\n        val diff = diffs(0)\n \
    \       diffs.forall(x => x == diff)", "        if (l.length <= 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length < 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <=\
    \ 1) return true\n        val d = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n    \
    \    return true", "        if (l.size <= 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.size - 1) {\n            if (diff * (l(i\
    \ + 1) - l(i)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length < 2) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.size <= 2)\
    \ return true\n        val diffs = l.zip(l.tail).map(x => x._2 - x._1)\n     \
    \   val first = diffs.head\n        diffs.forall(x => x == first)", "        if\
    \ (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x => x(1) -\
    \ x(0)).toList\n        if (diffs.forall(x => x == 0)) return true\n        if\
    \ (diffs.forall(x => x > 0)) return true\n        if (diffs.forall(x => x < 0))\
    \ return true\n        return false", "        if (l.length < 2) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size == 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <=\
    \ 1) return true\n        val sign = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (sign * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length < 2) true\n        else {\n      \
    \      val diff = l(1) - l(0)\n            if (diff == 0) monotonic(l.tail)\n\
    \            else {\n                val sign = diff / abs(diff)\n           \
    \     l.tail.forall(x => sign * (x - l.head) >= 0)\n            }\n        }",
  "        if (l.size <= 2) return true\n        val d = l(1) - l(0)\n        for\
    \ (i <- 1 until l.size - 1) {\n            if (l(i + 1) - l(i) != d) return false\n\
    \        }\n        return true", "        if (l.size <= 2) return true\n    \
    \    val d = l(1) - l(0)\n        for (i <- 1 until l.size - 1) {\n          \
    \  if (l(i + 1) - l(i) != d) return false\n        }\n        return true", " \
    \       if (l.length < 2) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length <= 1) true\n\
    \        else {\n            val diff = l(1) - l(0)\n            if (diff == 0)\
    \ monotonic(l.tail)\n            else {\n                val sign = diff / abs(diff)\n\
    \                val diffs = l.tail.map(x => sign * (x - l.head))\n          \
    \      diffs.forall(x => x >= 0)\n            }\n        }", "        if (l.length\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length < 2) return true\n     \
    \   val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n          \
    \  if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        val diff = l.sliding(2).map(x => x(1) - x(0)).toList\n        if (diff.forall(x\
    \ => x == 0)) true\n        else if (diff.forall(x => x > 0)) true\n        else\
    \ if (diff.forall(x => x < 0)) true\n        else false", "        if (l.length\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length < 2) return true\n     \
    \   val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n          \
    \  if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length < 2) return true\n        if (l(0) < l(1)) {\n           \
    \ for (i <- 1 until l.length - 1) {\n                if (l(i) > l(i + 1)) return\
    \ false\n            }\n        } else {\n            for (i <- 1 until l.length\
    \ - 1) {\n                if (l(i) < l(i + 1)) return false\n            }\n \
    \       }\n        return true", "        if (l.size <= 2) true\n        else\
    \ {\n            val diff = l(1) - l(0)\n            var i = 2\n            while\
    \ (i < l.size) {\n                if (l(i) - l(i - 1) != diff) return false\n\
    \                i += 1\n            }\n            true\n        }", "      \
    \  if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length < 2) return true\n        val d = l(1) - l(0)\n\
    \        if (d == 0) return monotonic(l.tail)\n        for (i <- 1 until l.length)\
    \ {\n            if (l(i) - l(i - 1) != d) return false\n        }\n        true",
  "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        increasing || decreasing", "        if\
    \ (l.length <= 1) true\n        else if (l(0) < l(1)) l.sliding(2).forall(x =>\
    \ x(0) < x(1))\n        else l.sliding(2).forall(x => x(0) > x(1))", "       \
    \ if (l.length < 2) return true\n        val d = l(1) - l(0)\n        for (i <-\
    \ 1 until l.length) {\n            if (d * (l(i) - l(i - 1)) < 0) return false\n\
    \        }\n        return true", "        if (l.length <= 1) return true\n  \
    \      val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n       \
    \     if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        if (l(0) < l(1)) {\n            for (i <- 1 until l.length\
    \ - 1) {\n                if (l(i) > l(i + 1)) return false\n            }\n \
    \       } else {\n            for (i <- 1 until l.length - 1) {\n            \
    \    if (l(i) < l(i + 1)) return false\n            }\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      if (l(0) < l(1)) {\n            for (i <- 1 until l.length - 1) if (l(i)\
    \ > l(i + 1)) return false\n        } else {\n            for (i <- 1 until l.length\
    \ - 1) if (l(i) < l(i + 1)) return false\n        }\n        return true", " \
    \       var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n \
    \           if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val sign = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if\
    \ (sign * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        val sign = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (sign * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        val n = l.length\n \
    \       if (n <= 1) return true\n        val d = l(1) - l(0)\n        for (i <-\
    \ 1 until n) {\n            if (d * (l(i) - l(i - 1)) < 0) return false\n    \
    \    }\n        return true", "        if (l.length == 1) return true\n      \
    \  val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n           \
    \ if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length < 2) return true\n        if (l(0) < l(1)) {\n           \
    \ for (i <- 1 until l.length - 1) {\n                if (l(i) > l(i + 1)) return\
    \ false\n            }\n        } else {\n            for (i <- 1 until l.length\
    \ - 1) {\n                if (l(i) < l(i + 1)) return false\n            }\n \
    \       }\n        return true", "        if (l.length <= 1) return true\n   \
    \     val inc = l(0) <= l(1)\n        for (i <- 1 until l.length - 1) {\n    \
    \        if (inc && l(i) > l(i + 1)) return false\n            if (!inc && l(i)\
    \ < l(i + 1)) return false\n        }\n        return true", "        if (l.size\
    \ <= 2) return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        if (diffs.forall(x => x == 0)) return true\n        if (diffs.forall(x\
    \ => x > 0)) return true\n        if (diffs.forall(x => x < 0)) return true\n\
    \        return false", "        if (l.size <= 2) return true\n        val diffs\
    \ = l.sliding(2).map(x => x(1) - x(0)).toList\n        if (diffs.forall(x => x\
    \ == 0)) return true\n        if (diffs.forall(x => x > 0)) return true\n    \
    \    if (diffs.forall(x => x < 0)) return true\n        return false", "     \
    \   if (l.length <= 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        if (l.length == 2) return l(0) == l(1)\n        val\
    \ diff = l(1) - l(0)\n        for (i <- 2 until l.length) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length == 1) return true\n        if (l.length == 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        if (diffs.forall(x\
    \ => x > 0)) return true\n        if (diffs.forall(x => x < 0)) return true\n\
    \        return false", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length <=\
    \ 1) return true\n        val s = l.head\n        val d = l.head - l.tail.head\n\
    \        l.tail.tail.forall(x => (x - s) * d >= 0)", "        if (l.size <= 2)\
    \ return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length < 2) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.size <= 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val diff\
    \ = diffs(0)\n        diffs.forall(x => x == diff)", "        if (l.size <= 2)\
    \ return true\n        val delta = l(1) - l(0)\n        for (i <- 1 until l.size\
    \ - 1) {\n            if (delta * (l(i + 1) - l(i)) < 0) return false\n      \
    \  }\n        return true", "        if (l.size <= 2) return true\n        val\
    \ diff = l(1) - l(0)\n        for (i <- 2 until l.size) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x =>\
    \ x(1) - x(0)).toList\n        val diff = diffs(0)\n        diffs.forall(x =>\
    \ x == diff)", "        if (l.length <= 1) return true\n        if (l(0) < l(1))\
    \ {\n            for (i <- 1 until l.length - 1) if (l(i) > l(i + 1)) return false\n\
    \        } else {\n            for (i <- 1 until l.length - 1) if (l(i) < l(i\
    \ + 1)) return false\n        }\n        return true", "        if (l.size <=\
    \ 2) return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        if (diffs.forall(x => x == 0)) return true\n        if (diffs.forall(x\
    \ => x > 0)) return true\n        if (diffs.forall(x => x < 0)) return true\n\
    \        return false", "        if (l.length <= 1) return true\n        if (l(0)\
    \ < l(1)) {\n            for (i <- 1 until l.length - 1) {\n                if\
    \ (l(i) > l(i + 1)) return false\n            }\n        } else {\n          \
    \  for (i <- 1 until l.length - 1) {\n                if (l(i) < l(i + 1)) return\
    \ false\n            }\n        }\n        return true", "        if (l.length\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length < 2) return true\n     \
    \   var i = 0\n        var increasing = true\n        while (i < l.length - 1)\
    \ {\n            if (l(i) > l(i + 1)) increasing = false\n            if (l(i)\
    \ < l(i + 1)) return false\n            i += 1\n        }\n        return true",
  "        if (l.length <= 1) return true\n        if (l(0) < l(1)) {\n          \
    \  for (i <- 1 until l.length - 1) if (l(i) > l(i + 1)) return false\n       \
    \ } else {\n            for (i <- 1 until l.length - 1) if (l(i) < l(i + 1)) return\
    \ false\n        }\n        return true", "        if (l.size == 1) return true\n\
    \        var inc = true\n        var dec = true\n        for (i <- 0 until l.size\
    \ - 1) {\n            if (l(i) > l(i + 1)) inc = false\n            if (l(i) <\
    \ l(i + 1)) dec = false\n        }\n        return inc || dec", "        if (l.length\
    \ <= 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length <= 1) return true\n    \
    \    val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n         \
    \   if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 2 until l.size) {\n            if (l(i) - l(i - 1) != diff)\
    \ return false\n        }\n        return true", "        if (l.size == 1) return\
    \ true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size) {\n\
    \            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n     \
    \   return true", "        if (l.length <= 1) return true\n        val diff =\
    \ l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length <= 1) return true\n        var inc = true\n        var dec = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) dec =\
    \ false\n            if (l(i) < l(i - 1)) inc = false\n        }\n        return\
    \ inc || dec", "        if (l.size == 1) return true\n        if (l.size == 2)\
    \ return l(0) == l(1)\n        var increasing = l(0) < l(1)\n        for (i <-\
    \ 1 until l.size - 1) {\n            if (increasing) {\n                if (l(i)\
    \ > l(i + 1)) return false\n            } else {\n                if (l(i) < l(i\
    \ + 1)) return false\n            }\n        }\n        return true", "      \
    \  if (l.size <= 2) return true\n        if (l(0) < l(1)) {\n            for (i\
    \ <- 1 until l.size - 1) if (l(i) > l(i + 1)) return false\n        } else {\n\
    \            for (i <- 1 until l.size - 1) if (l(i) < l(i + 1)) return false\n\
    \        }\n        return true", "        if (l.length <= 1) return true\n  \
    \      val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n       \
    \     if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        val inc = l(0) < l(1)\n        for (i <- 1 until l.length\
    \ - 1) {\n            if (inc && l(i) > l(i + 1)) return false\n            if\
    \ (!inc && l(i) < l(i + 1)) return false\n        }\n        return true", " \
    \       if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n     \
    \   for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) <\
    \ 0) return false\n        }\n        return true", "        if (l.length <= 1)\
    \ return true\n        if (l(0) < l(1)) {\n            for (i <- 1 until l.length\
    \ - 1) if (l(i) > l(i + 1)) return false\n        } else {\n            for (i\
    \ <- 1 until l.length - 1) if (l(i) < l(i + 1)) return false\n        }\n    \
    \    return true", "        if (l.length <= 1) return true\n        val diff =\
    \ l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for (i\
    \ <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.size <= 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.size) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.size == 1) return true\n        val\
    \ diff = l(1) - l(0)\n        for (i <- 1 until l.size) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length < 2) return true\n        val diff = l(1) - l(0)\n       \
    \ for (i <- 2 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1))\
    \ increasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length < 2) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length < 2) return\
    \ true\n        val diff = l(1) - l(0)\n        for (i <- 2 until l.length) {\n\
    \            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n     \
    \   return true", "        if (l.length <= 1) return true\n        val diff =\
    \ l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        val\
    \ n = l.length\n        if (n == 1) return true\n        if (l(0) < l(1)) {\n\
    \            for (i <- 1 until n - 1) if (l(i) > l(i + 1)) return false\n    \
    \    } else {\n            for (i <- 1 until n - 1) if (l(i) < l(i + 1)) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.size == 1) return\
    \ true\n        if (l.size == 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 2 until l.size) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length <= 1) return true\n        val inc\
    \ = l(0) <= l(1)\n        for (i <- 1 until l.length - 1) {\n            if (inc)\
    \ {\n                if (l(i) > l(i + 1)) return false\n            } else {\n\
    \                if (l(i) < l(i + 1)) return false\n            }\n        }\n\
    \        return true", "        if (l.length <= 1) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.length <= 1) return true\n        if (l(0) < l(1)) {\n            for\
    \ (i <- 1 until l.length - 1) if (l(i) > l(i + 1)) return false\n        } else\
    \ {\n            for (i <- 1 until l.length - 1) if (l(i) < l(i + 1)) return false\n\
    \        }\n        return true", "        if (l.size == 1) return true\n    \
    \    if (l.size == 2) return true\n        var increasing = l(0) < l(1)\n    \
    \    for (i <- 1 until l.size - 1) {\n            if (increasing) {\n        \
    \        if (l(i) > l(i + 1)) return false\n            } else {\n           \
    \     if (l(i) < l(i + 1)) return false\n            }\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        if (diffs.forall(x => x == 0)) return true\n\
    \        if (diffs.forall(x => x > 0)) return true\n        if (diffs.forall(x\
    \ => x < 0)) return true\n        return false", "        if (l.size <= 2) return\
    \ true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n      \
    \  if (diffs.forall(x => x >= 0)) return true\n        if (diffs.forall(x => x\
    \ <= 0)) return true\n        return false", "        if (l.size == 1) return\
    \ true\n        val d = l(1) - l(0)\n        for (i <- 1 until l.size) {\n   \
    \         if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length < 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 2 until l.length)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length < 2) return true\n        if (l(0)\
    \ < l(1)) {\n            for (i <- 1 until l.length - 1) if (l(i) > l(i + 1))\
    \ return false\n        } else {\n            for (i <- 1 until l.length - 1)\
    \ if (l(i) < l(i + 1)) return false\n        }\n        return true", "      \
    \  if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        if (l(0) < l(1)) {\n\
    \            for (i <- 1 until l.length - 1) if (l(i) > l(i + 1)) return false\n\
    \        } else {\n            for (i <- 1 until l.length - 1) if (l(i) < l(i\
    \ + 1)) return false\n        }\n        return true", "        if (l.size ==\
    \ 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length == 1) return true\n        if (l.length\
    \ == 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 2 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        val n = l.length\n        if (n <= 1)\
    \ return true\n        val d = l(1) - l(0)\n        for (i <- 1 until n) {\n \
    \           if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length ==\
    \ 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length == 1) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.length < 2) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length < 2) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i))\
    \ < 0) return false\n        }\n        return true", "        if (l.size <= 2)\
    \ return true\n        val diff = l(1) - l(0)\n        for (i <- 2 until l.size)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.size == 1) return true\n        if (l.size\
    \ == 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 2 until\
    \ l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n    \
    \    }\n        return true", "        if (l.length <= 1) return true\n      \
    \  val inc = l(0) <= l(1)\n        for (i <- 1 until l.length - 1) {\n       \
    \     if (inc && l(i) > l(i + 1)) return false\n            if (!inc && l(i) <\
    \ l(i + 1)) return false\n        }\n        return true", "        if (l.length\
    \ <= 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 2 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length == 1) return true\n    \
    \    if (l.length == 2) return l(0) == l(1)\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        if (diffs.forall(x => x == 0)) return true\n\
    \        if (diffs.forall(x => x > 0)) return true\n        if (diffs.forall(x\
    \ => x < 0)) return true\n        return false", "        if (l.size <= 2) return\
    \ true\n        val diff = l(1) - l(0)\n        for (i <- 2 until l.size) {\n\
    \            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n     \
    \   return true", "        if (l.size <= 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.size) {\n            if (diff * (l(i) -\
    \ l(i - 1)) < 0) return false\n        }\n        return true", "        if (l.size\
    \ <= 2) return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        val diff = diffs(0)\n        diffs.forall(x => x == diff)", "       \
    \ if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length < 2) return true\n\
    \        val d = l(1) - l(0)\n        for (i <- 2 until l.length) {\n        \
    \    if (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.size <= 2) true\n        else {\n            val d = l(1) - l(0)\n\
    \            if (d == 0) monotonic(l.tail)\n            else {\n             \
    \   val d2 = l(2) - l(1)\n                if (d2 == 0) monotonic(l.tail.tail)\n\
    \                else d * d2 > 0 && monotonic(l.tail.tail)\n            }\n  \
    \      }", "        if (l.length < 2) return true\n        val d = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (d * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.size == 1)\
    \ return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length <= 1) return\
    \ true\n        var inc = true\n        var dec = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) inc = false\n            if (l(i)\
    \ > l(i - 1)) dec = false\n        }\n        inc || dec", "        if (l.length\
    \ <= 1) return true\n        if (l(0) < l(1)) {\n            for (i <- 1 until\
    \ l.length - 1) {\n                if (l(i) > l(i + 1)) return false\n       \
    \     }\n        } else {\n            for (i <- 1 until l.length - 1) {\n   \
    \             if (l(i) < l(i + 1)) return false\n            }\n        }\n  \
    \      return true", "        if (l.length < 2) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i)) < 0) return\
    \ false\n        }\n        return true", "        if (l.size <= 2) return true\n\
    \        if (l(0) < l(1)) {\n            for (i <- 1 until l.size - 1) {\n   \
    \             if (l(i) > l(i + 1)) return false\n            }\n        } else\
    \ {\n            for (i <- 1 until l.size - 1) {\n                if (l(i) < l(i\
    \ + 1)) return false\n            }\n        }\n        return true", "      \
    \  if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.size <= 2) return true\n        if (l(0) == l(1))\
    \ return monotonic(l.tail)\n        val inc = l(0) < l(1)\n        for (i <- 1\
    \ until l.size - 1) if (inc != (l(i) < l(i + 1))) return false\n        true",
  "        if (l.length < 2) return true\n        val diff = l(1) - l(0)\n       \
    \ for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length < 2) return\
    \ true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n\
    \            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n     \
    \   return true", "        if (l.length <= 1) return true\n        val diff =\
    \ l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.size <= 2) return true\n        val diff = l(1) - l(0)\n        for (i <-\
    \ 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i)) < 0) return\
    \ false\n        }\n        return true", "        if (l.size <= 2) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 2 until l.size) {\n       \
    \     if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length < 2) true\n        else {\n            val diff\
    \ = l(1) - l(0)\n            l.sliding(2).forall(x => x(1) - x(0) == diff)\n \
    \       }", "        if (l.length <= 1) return true\n        val diff = l(1) -\
    \ l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i) -\
    \ l(i - 1)) < 0) return false\n        }\n        return true", "        if (l.length\
    \ <= 1) return true\n        if (l(0) < l(1)) {\n            for (i <- 1 until\
    \ l.length - 1) {\n                if (l(i) > l(i + 1)) return false\n       \
    \     }\n        } else {\n            for (i <- 1 until l.length - 1) {\n   \
    \             if (l(i) < l(i + 1)) return false\n            }\n        }\n  \
    \      return true", "        if (l.length <= 1) return true\n        if (l(0)\
    \ < l(1)) {\n            for (i <- 1 until l.length - 1) {\n                if\
    \ (l(i) > l(i + 1)) return false\n            }\n        } else {\n          \
    \  for (i <- 1 until l.length - 1) {\n                if (l(i) < l(i + 1)) return\
    \ false\n            }\n        }\n        return true", "        if (l.length\
    \ <= 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        if (l.length < 2) return true\n     \
    \   val diff = l(1) - l(0)\n        for (i <- 2 until l.length) {\n          \
    \  if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.size <= 2) return true\n        var inc = true\n        var dec =\
    \ true\n        for (i <- 1 until l.size) {\n            if (l(i) > l(i - 1))\
    \ dec = false\n            if (l(i) < l(i - 1)) inc = false\n        }\n     \
    \   return inc || dec", "        if (l.length <= 1) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    if (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x => x(1)\
    \ - x(0)).toList\n        if (diffs.forall(x => x == 0)) return true\n       \
    \ if (diffs.forall(x => x > 0)) return true\n        if (diffs.forall(x => x <\
    \ 0)) return true\n        return false", "        if (l.length <= 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <\
    \ 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.size <= 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first\
    \ = diffs(0)\n        diffs.forall(x => x == first)", "        if (l.size <= 2)\
    \ return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        if (diffs.forall(x => x == 0)) return true\n        if (diffs.forall(x\
    \ => x > 0)) return true\n        if (diffs.forall(x => x < 0)) return true\n\
    \        return false", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        return increasing || decreasing",
  "        if (l.size == 1) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 1 until l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1))\
    \ < 0) return false\n        }\n        return true", "        if (l.length <=\
    \ 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if\
    \ (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        if (l.size <= 2) return true\n        val inc = l(1) - l(0) > 0\n     \
    \   for (i <- 1 until l.size - 1) {\n            val diff = l(i + 1) - l(i)\n\
    \            if (inc && diff < 0) return false\n            if (!inc && diff >\
    \ 0) return false\n        }\n        return true", "        if (l.length < 2)\
    \ return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n     \
    \       if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        if (diffs.forall(x => x == 0)) return true\n\
    \        val first = diffs(0)\n        if (diffs.forall(x => x == first)) return\
    \ true\n        val second = diffs(1)\n        if (diffs.forall(x => x == second))\
    \ return true\n        return false", "        if (l.length <= 1) return true\n\
    \        if (l(0) < l(1)) {\n            for (i <- 1 until l.length - 1) {\n \
    \               if (l(i) > l(i + 1)) return false\n            }\n        } else\
    \ {\n            for (i <- 1 until l.length - 1) {\n                if (l(i) <\
    \ l(i + 1)) return false\n            }\n        }\n        return true", "  \
    \      val diff = l.zip(l.tail).map(x => x._1 - x._2)\n        diff.forall(x =>\
    \ x == 0) || diff.forall(x => x < 0) || diff.forall(x => x > 0)", "        if\
    \ (l.size == 1) return true\n        if (l.size == 2) return l(0) == l(1)\n  \
    \      val d = l(1) - l(0)\n        for (i <- 1 until l.size - 1) {\n        \
    \    if (d * (l(i + 1) - l(i)) < 0) return false\n        }\n        return true",
  "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n        for\
    \ (i <- 2 until l.size) {\n            if (diff * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.size == 1) return true\n\
    \        val diff = l(1) - l(0)\n        for (i <- 1 until l.size) {\n       \
    \     if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n        return\
    \ true", "        if (l.size <= 2) return true\n        val diff = l(1) - l(0)\n\
    \        for (i <- 1 until l.size - 1) {\n            if (diff * (l(i + 1) - l(i))\
    \ < 0) return false\n        }\n        return true", "        if (l.size == 1)\
    \ return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size)\
    \ {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n \
    \       return true", "        if (l.length < 2) return true\n        val diff\
    \ = l(1) - l(0)\n        for (i <- 2 until l.length) {\n            if (diff *\
    \ (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "    \
    \    var increasing = true\n        var decreasing = true\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n   \
    \         if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.size == 1) return true\n        if (l.size == 2) return l(0) == l(1)\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.size) {\n            if (l(i) > l(i - 1)) decreasing = false\n   \
    \         if (l(i) < l(i - 1)) increasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.size == 1) return true\n        if (l.size ==\
    \ 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size\
    \ - 1) {\n            if (diff * (l(i + 1) - l(i)) < 0) return false\n       \
    \ }\n        return true", "        if (l.length <= 1) return true\n        val\
    \ diff = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length <= 1) return true\n        val d = l(1) - l(0)\n        for\
    \ (i <- 1 until l.length) {\n            if (d * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true"]
stop_tokens:
- "\n    }\n"

name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting array, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // If the array is empty,\
  \ return an empty array:\n    // If the array has any strange number ignore it:\n\
  \    def byLength(arr : List[Long]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: ["        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4\
    \ -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9\
    \ -> \"Nine\")\n        var result = List[String]()\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) {\n                result = map(i.toInt) ::\
    \ result\n            }\n        }\n        result", "        val map = Map(1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map\
    \ = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"\
    Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n   \
    \     val result = new ListBuffer[String]\n        for (i <- arr) {\n        \
    \    if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = new HashMap[Long, String]()\n        map += (1L -> \"One\")\n\
    \        map += (2L -> \"Two\")\n        map += (3L -> \"Three\")\n        map\
    \ += (4L -> \"Four\")\n        map += (5L -> \"Five\")\n        map += (6L ->\
    \ \"Six\")\n        map += (7L -> \"Seven\")\n        map += (8L -> \"Eight\"\
    )\n        map += (9L -> \"Nine\")\n        val result = new ListBuffer[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result += map(i)\n            }\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1\
    \ && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse", "       \
    \ val map = new HashMap[Long, String]\n        map += (1L -> \"One\")\n      \
    \  map += (2L -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L\
    \ -> \"Four\")\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\"\
    )\n        map += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n      \
    \  map += (9L -> \"Nine\")\n        val result = new ListBuffer[String]\n    \
    \    for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result\
    \ += map(i)\n            }\n        }\n        result.toList.sorted", "      \
    \  val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5\
    \ -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = new HashMap[Long, String]()\n        map += 1 -> \"One\"\n  \
    \      map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 ->\
    \ \"Four\"\n        map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n      \
    \  map += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"\
    Nine\"\n        val result = new ListBuffer[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                result += map(i)\n \
    \           }\n        }\n        result.toList.reverse", "        val map = Map(1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list =\
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n  \
    \      list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L ->\
    \ \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L\
    \ -> \"Eight\", 9L -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))", "        val map = Map(1 -> \"\
    One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\"\
    , 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >=\
    \ 1 && x <= 9).sortWith(_ < _).map(x => map(x.toInt)).reverse", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val result\
    \ = new ListBuffer[String]\n        for (i <- arr) {\n            if (i > 0 &&\
    \ i < 10) {\n                result += map(i.toInt)\n            }\n        }\n\
    \        result.toList.sorted.reverse", "        val map = Map(1 -> \"One\", 2\
    \ -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 ->\
    \ \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map = Map(1 ->\
    \ \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"\
    Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map =\
    \ Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n\
    \        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val result = for (i <- arr if i >= 1 && i <= 9) yield\
    \ map(i.toInt)\n        result.sortBy(_.length).reverse", "        val map = new\
    \ HashMap[Long, String]\n        map += (1 -> \"One\")\n        map += (2 -> \"\
    Two\")\n        map += (3 -> \"Three\")\n        map += (4 -> \"Four\")\n    \
    \    map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n        map += (7\
    \ -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map += (9 -> \"Nine\"\
    )\n        val list = new ListBuffer[String]\n        for (i <- arr) {\n     \
    \       if (i >= 1 && i <= 9) {\n                list += map(i)\n            }\n\
    \        }\n        list.toList.sorted.reverse", "        val m = arr.map(x =>\
    \ (x, x.toString.length)).groupBy(_._2).map(x => (x._1, x._2.map(_._1)))\n   \
    \     m.toList.sortBy(_._1).map(_._2.sorted.map(_.toString))", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map\
    \ = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"\
    Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n\
    \        list", "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"\
    Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L ->\
    \ \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))\n        list", "        val map = Map(1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list =\
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n  \
    \      list", "        val map = new HashMap[Long, String]\n        map += 1 ->\
    \ \"One\"\n        map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n      \
    \  map += 4 -> \"Four\"\n        map += 5 -> \"Five\"\n        map += 6 -> \"\
    Six\"\n        map += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map\
    \ += 9 -> \"Nine\"\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        val map = new HashMap[Long, String]()\n        map +=\
    \ (1L -> \"One\")\n        map += (2L -> \"Two\")\n        map += (3L -> \"Three\"\
    )\n        map += (4L -> \"Four\")\n        map += (5L -> \"Five\")\n        map\
    \ += (6L -> \"Six\")\n        map += (7L -> \"Seven\")\n        map += (8L ->\
    \ \"Eight\")\n        map += (9L -> \"Nine\")\n        val sorted = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x)).reverse", "   \
    \     val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sortWith(_ < _).map(x => map(x.toInt)).reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x\
    \ => map(x.toInt)).reverse", "        val map = Map(1L -> \"One\", 2L -> \"Two\"\
    , 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\"\
    , 8L -> \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        val map\
    \ = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"\
    Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n   \
    \     val result = for (i <- arr if i >= 1 && i <= 9) yield map(i)\n        result.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val m = new HashMap[Long, String]\n        m(1) = \"One\"\n        m(2)\
    \ = \"Two\"\n        m(3) = \"Three\"\n        m(4) = \"Four\"\n        m(5) =\
    \ \"Five\"\n        m(6) = \"Six\"\n        m(7) = \"Seven\"\n        m(8) = \"\
    Eight\"\n        m(9) = \"Nine\"\n        arr.map(x => m(x)).reverse", "     \
    \   val sorted = arr.sortWith(_.toString.length < _.toString.length)\n       \
    \ sorted.map(x => x.toString.reverse.map(y => y match {\n            case '1'\
    \ => \"One\"\n            case '2' => \"Two\"\n            case '3' => \"Three\"\
    \n            case '4' => \"Four\"\n            case '5' => \"Five\"\n       \
    \     case '6' => \"Six\"\n            case '7' => \"Seven\"\n            case\
    \ '8' => \"Eight\"\n            case '9' => \"Nine\"\n            case _ => \"\
    \"\n        }).mkString(\" \"))", "        val sorted = arr.sortWith((a, b) =>\
    \ a.toString.length < b.toString.length)\n        sorted.map(x => x.toString)",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  '        arr.map(x => x.toString).sortBy(x => x.length).map(x => x.toString)', " \
    \       val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sortWith(_ < _).map(x => map(x.toInt)).reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x\
    \ => map(x.toInt)).reverse", '        arr.map(x => x.toString).sortBy(x => x.length).map(x
    => x.toString)', "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted\
    \ = arr.sortWith(_ < _).filter(x => x >= 1 && x <= 9)\n        sorted.map(x =>\
    \ map(x.toInt)).reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3\
    \ -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8\
    \ -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x\
    \ <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map\
    \ = new HashMap[Long, String]\n        map += 1 -> \"One\"\n        map += 2 ->\
    \ \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 -> \"Four\"\n     \
    \   map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n        map += 7 -> \"\
    Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"Nine\"\n       \
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "      \
    \  val map = new HashMap[Long, String]()\n        map += 1 -> \"One\"\n      \
    \  map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 -> \"\
    Four\"\n        map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n        map\
    \ += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"Nine\"\
    \n        val result = new ListBuffer[String]()\n        for (i <- arr) {\n  \
    \          if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).map(x => map(x.toInt)).sorted(Ordering.String.reverse)\n\
    \        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        result", "        val map = Map(1 -> \"One\", 2 ->\
    \ \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"\
    Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse", " \
    \       val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        result", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse\n        sorted.map(x => map(x.toInt))", "       \
    \ val map = new HashMap[Long, String]()\n        map += 1 -> \"One\"\n       \
    \ map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 -> \"Four\"\
    \n        map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n        map += 7\
    \ -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"Nine\"\n\
    \        val result = new ListBuffer[String]()\n        for (i <- arr) {\n   \
    \         if (i >= 1 && i <= 9) {\n                result += map(i)\n        \
    \    }\n        }\n        result.toList.reverse", "        val map = Map(1 ->\
    \ \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"\
    Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map =\
    \ Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val filtered\
    \ = arr.filter(x => x >= 1 && x <= 9)\n        val sorted = filtered.sorted\n\
    \        val reversed = sorted.reverse\n        val result = reversed.map(x =>\
    \ map(x.toInt))\n        result", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = new HashMap[Long, String]\n        map += (1 -> \"One\")\n        map += (2\
    \ -> \"Two\")\n        map += (3 -> \"Three\")\n        map += (4 -> \"Four\"\
    )\n        map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n        map\
    \ += (7 -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map += (9 -> \"\
    Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        val result = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => map(x.toInt))\n        result", "       \
    \ val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 ->\
    \ \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sortWith(_ < _).reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse\n        sorted.map(x => map(x.toInt))", "       \
    \ val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 ->\
    \ \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n   \
    \     val result = ListBuffer[String]()\n        for (i <- arr) {\n          \
    \  if (i >= 1 && i <= 9) result += map(i.toInt)\n        }\n        result.toList.sorted.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x\
    \ => map(x.toInt)).reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val res = for (i <- arr if i >= 1 && i <= 9) yield map(i.toInt)\n\
    \        res.reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 ->\
    \ \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 ->\
    \ \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1\
    \ && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse", "       \
    \ val digits = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x.toString)\n\
    \        val names = List(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\")\n        digits.map(x => names(x.toInt\
    \ - 1))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4\
    \ -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9\
    \ -> \"Nine\")\n        val s = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        if (s.isEmpty) List() else s", "        val map =\
    \ new HashMap[Long, String]\n        map += (1L -> \"One\")\n        map += (2L\
    \ -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L -> \"Four\"\
    )\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\")\n        map\
    \ += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n        map += (9L ->\
    \ \"Nine\")\n        val result = new ListBuffer[String]\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                result += map(i)\n \
    \           }\n        }\n        result.toList.sorted.reverse", "        val\
    \ map = new HashMap[Long, String]\n        map += (1L -> \"One\")\n        map\
    \ += (2L -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L ->\
    \ \"Four\")\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\")\n\
    \        map += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n        map\
    \ += (9L -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = new HashMap[Long, String]\n        map += (1 -> \"One\")\n        map += (2\
    \ -> \"Two\")\n        map += (3 -> \"Three\")\n        map += (4 -> \"Four\"\
    )\n        map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n        map\
    \ += (7 -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map += (9 -> \"\
    Nine\")\n        val result = new ListBuffer[String]\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.sorted.reverse",
  "        val map = new HashMap[Long, String]()\n        map += 1 -> \"One\"\n  \
    \      map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 ->\
    \ \"Four\"\n        map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n      \
    \  map += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"\
    Nine\"\n        val result = new ListBuffer[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1L -> \"One\", 2L -> \"\
    Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"\
    Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result += map(i)\n            }\n        }\n        result.toList.reverse",
  '        arr.map(x => x.toString).sortBy(x => x.length).map(x => x.toString)', " \
    \       val map = new HashMap[Long, String]\n        map += (1L -> \"One\")\n\
    \        map += (2L -> \"Two\")\n        map += (3L -> \"Three\")\n        map\
    \ += (4L -> \"Four\")\n        map += (5L -> \"Five\")\n        map += (6L ->\
    \ \"Six\")\n        map += (7L -> \"Seven\")\n        map += (8L -> \"Eight\"\
    )\n        map += (9L -> \"Nine\")\n        val sorted = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted\n        sorted.map(x => map(x)).reverse", "        val\
    \ map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"\
    Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n       \
    \ val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n\
    \        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        sorted.map(x => map(x.toInt))", "        val map = Map(1 -> \"One\",\
    \ 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7\
    \ -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map = Map(1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list =\
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n  \
    \      list", "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\"\
    , 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\"\
    , 9L -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        list", "        val map = new HashMap[Long, String]()\n\
    \        map += (1L -> \"One\")\n        map += (2L -> \"Two\")\n        map +=\
    \ (3L -> \"Three\")\n        map += (4L -> \"Four\")\n        map += (5L -> \"\
    Five\")\n        map += (6L -> \"Six\")\n        map += (7L -> \"Seven\")\n  \
    \      map += (8L -> \"Eight\")\n        map += (9L -> \"Nine\")\n        val\
    \ result = new ListBuffer[String]()\n        for (i <- arr) {\n            if\
    \ (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n     \
    \   sorted.map(x => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 ->\
    \ \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"\
    Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x\
    \ >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "    \
    \    val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val map = Map(1L -> \"One\", 2L -> \"Two\"\
    , 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\"\
    , 8L -> \"Eight\", 9L -> \"Nine\")\n        val res = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x))\n        res", "        val map = Map(1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3\
    \ -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8\
    \ -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x\
    \ <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"\
    Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n   \
    \     val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.reverse.map(x\
    \ => map(x))", "        val map = new HashMap[Long, String]\n        map += 1\
    \ -> \"One\"\n        map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n   \
    \     map += 4 -> \"Four\"\n        map += 5 -> \"Five\"\n        map += 6 ->\
    \ \"Six\"\n        map += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n    \
    \    map += 9 -> \"Nine\"\n        val result = new ListBuffer[String]\n     \
    \   for (i <- arr) {\n            if (i >= 1 && i <= 9) result += map(i)\n   \
    \     }\n        result.toList.sorted", "        val map = Map(1 -> \"One\", 2\
    \ -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 ->\
    \ \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map = Map(1L ->\
    \ \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L\
    \ -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val sorted\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted\n        val reversed = sorted.reverse\n\
    \        reversed.map(x => map(x))", "        val map = Map(1 -> \"One\", 2 ->\
    \ \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"\
    Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x\
    \ >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "    \
    \    val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\",\
    \ 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val s\
    \ = arr.map(x => x.toString)\n        s.sortWith((x, y) => x.length < y.length)",
  "        val map = new HashMap[Long, String]()\n        map += 1 -> \"One\"\n  \
    \      map += 2 -> \"Two\"\n        map += 3 -> \"Three\"\n        map += 4 ->\
    \ \"Four\"\n        map += 5 -> \"Five\"\n        map += 6 -> \"Six\"\n      \
    \  map += 7 -> \"Seven\"\n        map += 8 -> \"Eight\"\n        map += 9 -> \"\
    Nine\"\n        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n      \
    \  sorted.map(x => map(x)).reverse", "        val map = Map(1 -> \"One\", 2 ->\
    \ \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"\
    Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x.toInt))", "        val map = Map(1 -> \"One\"\
    , 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7\
    \ -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result += map(i.toInt)\n            }\n        }\n        result.toList.sorted.reverse",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val m = arr.groupBy(_.toString.length)\n  \
    \      val l = m.keys.toList.sortWith(_ < _)\n        val result = new ListBuffer[String]\n\
    \        for (i <- l) {\n            val l2 = m(i).toList.sortWith(_ < _)\n  \
    \          for (j <- l2) result += j.toString\n        }\n        result.toList",
  "        val result = new ListBuffer[String]\n        for (i <- 1 to 9) {\n    \
    \        val x = arr.filter(_ == i)\n            if (x.length > 0) {\n       \
    \         result += x.length.toString + \" \" + i.toString\n            }\n  \
    \      }\n        result.toList", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse\n        sorted.map(x => map(x.toInt))", "       \
    \ val map = new HashMap[Long, String]()\n        map += (1 -> \"One\")\n     \
    \   map += (2 -> \"Two\")\n        map += (3 -> \"Three\")\n        map += (4\
    \ -> \"Four\")\n        map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n\
    \        map += (7 -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map\
    \ += (9 -> \"Nine\")\n        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n\
    \        sorted.map(x => map(x)).reverse", "        val map = Map[Long, String](1\
    \ -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 ->\
    \ \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val result\
    \ = arr.filter(x => x > 0 && x < 10).sorted.reverse.map(x => map(x))\n       \
    \ result", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\",\
    \ 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sortWith(_\
    \ < _).reverse.map(x => map(x.toInt))\n        list", "        val map = Map(1L\
    \ -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\",\
    \ 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "        val map = Map(1L\
    \ -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\",\
    \ 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val\
    \ result = new ListBuffer[String]\n        for (i <- arr) {\n            if (i\
    \ >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n     \
    \   sorted.map(x => map(x.toInt))", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val res = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        res", "      \
    \  val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5\
    \ -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = new HashMap[Long, String]()\n        map.put(1, \"One\")\n  \
    \      map.put(2, \"Two\")\n        map.put(3, \"Three\")\n        map.put(4,\
    \ \"Four\")\n        map.put(5, \"Five\")\n        map.put(6, \"Six\")\n     \
    \   map.put(7, \"Seven\")\n        map.put(8, \"Eight\")\n        map.put(9, \"\
    Nine\")\n        val result = new ListBuffer[String]()\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) {\n                result += map.get(i).get\n\
    \            }\n        }\n        result.toList.sorted.reverse", "        val\
    \ m = arr.map(x => (x, x.toString.length)).groupBy(_._2).mapValues(_.map(_._1))\n\
    \        m.toList.sortBy(_._1).map(_._2).map(_.map(_.toString)).flatten", '        arr.map(x
    => x.toString).sortBy(x => x.length).map(x => x.toString)', "        val map =\
    \ Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val result\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n\
    \        result", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x.toInt)).reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val m = arr.map(x => (x, x.toString.length)).groupBy(_._2).map(x => (x._1,\
    \ x._2.map(_._1)))\n        m.toList.sortBy(_._1).map(_._2).map(_.map(_.toString)).map(_.mkString(\"\
    \ \"))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4\
    \ -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9\
    \ -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sortWith(_ < _).map(x\
    \ => map(x.toInt)).reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        def byLengthHelper(arr : List[Long], acc : List[String])\
    \ : List[String] = {\n            if (arr.isEmpty) acc\n            else {\n \
    \               val (ones, rest) = arr.partition(x => x >= 1 && x <= 9)\n    \
    \            val sorted = ones.sorted.reverse\n                byLengthHelper(rest,\
    \ acc ::: sorted.map(x => x match {\n                    case 1 => \"One\"\n \
    \                   case 2 => \"Two\"\n                    case 3 => \"Three\"\
    \n                    case 4 => \"Four\"\n                    case 5 => \"Five\"\
    \n                    case 6 => \"Six\"\n                    case 7 => \"Seven\"\
    \n                    case 8 => \"Eight\"\n                    case 9 => \"Nine\"\
    \n                }))\n            }\n        }\n        byLengthHelper(arr, List())",
  "        val map = new HashMap[Long, String]\n        map.put(1, \"One\")\n    \
    \    map.put(2, \"Two\")\n        map.put(3, \"Three\")\n        map.put(4, \"\
    Four\")\n        map.put(5, \"Five\")\n        map.put(6, \"Six\")\n        map.put(7,\
    \ \"Seven\")\n        map.put(8, \"Eight\")\n        map.put(9, \"Nine\")\n  \
    \      val sorted = arr.filter(x => x > 0 && x < 10).sorted\n        sorted.map(x\
    \ => map.get(x).get).reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) result += map(i.toInt)\n\
    \        }\n        result.toList.sorted.reverse", "        val map = Map(1 ->\
    \ \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"\
    Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map =\
    \ new HashMap[Long, String]\n        map += (1 -> \"One\")\n        map += (2\
    \ -> \"Two\")\n        map += (3 -> \"Three\")\n        map += (4 -> \"Four\"\
    )\n        map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n        map\
    \ += (7 -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map += (9 -> \"\
    Nine\")\n        val list = new ListBuffer[String]\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) list += map(i)\n        }\n        list.toList.sorted.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n     \
    \   sorted.map(x => map(x.toInt))", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "     \
    \   val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val map = Map(1L -> \"One\", 2L -> \"Two\"\
    , 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\"\
    , 8L -> \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        val map\
    \ = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"\
    Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n   \
    \     val result = new ListBuffer[String]\n        for (i <- arr) {\n        \
    \    if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.map(x\
    \ => map(x.toInt)).reverse", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val res\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))\n\
    \        res", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"\
    Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\"\
    , 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"\
    Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\"\
    , 8 -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map\
    \ = new HashMap[Long, String]()\n        map += (1L -> \"One\")\n        map +=\
    \ (2L -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L -> \"\
    Four\")\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\")\n   \
    \     map += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n        map\
    \ += (9L -> \"Nine\")\n        val result = new ListBuffer[String]()\n       \
    \ for (i <- arr) {\n            if (i >= 1 && i <= 9) result += map(i)\n     \
    \   }\n        result.toList.reverse", "        val map = new HashMap[Long, String]\n\
    \        map += (1 -> \"One\")\n        map += (2 -> \"Two\")\n        map +=\
    \ (3 -> \"Three\")\n        map += (4 -> \"Four\")\n        map += (5 -> \"Five\"\
    )\n        map += (6 -> \"Six\")\n        map += (7 -> \"Seven\")\n        map\
    \ += (8 -> \"Eight\")\n        map += (9 -> \"Nine\")\n        val result = new\
    \ ListBuffer[String]\n        for (i <- arr) {\n            if (i >= 1 && i <=\
    \ 9) {\n                result += map(i)\n            }\n        }\n        result.toList.sorted.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n     \
    \   sorted.map(x => map(x.toInt))", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "     \
    \   val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        result", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) result += map(i)\n\
    \        }\n        result.toList.reverse", "        val map = Map(1 -> \"One\"\
    , 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7\
    \ -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result += map(i.toInt)\n            }\n        }\n        result.toList.sorted.reverse",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val result = new ListBuffer[String]\n        for (i <- arr) {\n   \
    \         if (i >= 1 && i <= 9) {\n                result += map(i)\n        \
    \    }\n        }\n        result.toList.reverse", "        val m = arr.map(x\
    \ => (x, x.toString.length)).groupBy(_._2).map(x => (x._1, x._2.map(_._1)))\n\
    \        m.toList.sortBy(_._1).map(_._2).map(_.map(_.toString)).map(_.sorted).map(_.reverse).map(_.mkString(\"\
    \ \"))", "        val map = new HashMap[Long, String]\n        map += (1L -> \"\
    One\")\n        map += (2L -> \"Two\")\n        map += (3L -> \"Three\")\n   \
    \     map += (4L -> \"Four\")\n        map += (5L -> \"Five\")\n        map +=\
    \ (6L -> \"Six\")\n        map += (7L -> \"Seven\")\n        map += (8L -> \"\
    Eight\")\n        map += (9L -> \"Nine\")\n        val sorted = arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted\n        sorted.map(x => map(x)).reverse", "      \
    \  val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val result = new ListBuffer[String]\n        for (i <- arr) {\n   \
    \         if (i >= 1 && i <= 9) result += map(i)\n        }\n        result.toList.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3\
    \ -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8\
    \ -> \"Eight\", 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x\
    \ <= 9).sorted.reverse.map(x => map(x.toInt))\n        list", "        val map\
    \ = new HashMap[Long, String]\n        map += (1 -> \"One\")\n        map += (2\
    \ -> \"Two\")\n        map += (3 -> \"Three\")\n        map += (4 -> \"Four\"\
    )\n        map += (5 -> \"Five\")\n        map += (6 -> \"Six\")\n        map\
    \ += (7 -> \"Seven\")\n        map += (8 -> \"Eight\")\n        map += (9 -> \"\
    Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\"\
    , 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\"\
    )\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        list", "        val map = new HashMap[Long, String]()\n   \
    \     map += (1 -> \"One\")\n        map += (2 -> \"Two\")\n        map += (3\
    \ -> \"Three\")\n        map += (4 -> \"Four\")\n        map += (5 -> \"Five\"\
    )\n        map += (6 -> \"Six\")\n        map += (7 -> \"Seven\")\n        map\
    \ += (8 -> \"Eight\")\n        map += (9 -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "     \
    \   val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5\
    \ -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = Map(1L -> \"One\", 2L -> \"\
    Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"\
    Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val list = arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        val\
    \ map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"\
    Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n       \
    \ arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))", " \
    \       val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x.toInt))",
  '        arr.map(x => x.toString).sortBy(x => x.length).map(x => x.toString)', " \
    \       val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        val reversed\
    \ = sorted.reverse\n        val result = reversed.map(x => x match {\n       \
    \     case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 =>\
    \ \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\n\
    \            case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case\
    \ 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        result",
  "        val res = new ListBuffer[String]\n        for (i <- arr) {\n          \
    \  if (i == 1) res += \"One\"\n            else if (i == 2) res += \"Two\"\n \
    \           else if (i == 3) res += \"Three\"\n            else if (i == 4) res\
    \ += \"Four\"\n            else if (i == 5) res += \"Five\"\n            else\
    \ if (i == 6) res += \"Six\"\n            else if (i == 7) res += \"Seven\"\n\
    \            else if (i == 8) res += \"Eight\"\n            else if (i == 9) res\
    \ += \"Nine\"\n        }\n        res.toList", "        val map = new HashMap[Int,\
    \ List[String]]\n        for (i <- arr) {\n            val str = i.toString\n\
    \            val len = str.length\n            if (map.contains(len)) map(len)\
    \ = str :: map(len)\n            else map(len) = List(str)\n        }\n      \
    \  val sorted = map.toList.sortBy(_._1)\n        val result = new ListBuffer[String]\n\
    \        for (i <- sorted) {\n            for (j <- i._2) result += j\n      \
    \  }\n        result.toList", "        val map = Map(1 -> \"One\", 2 -> \"Two\"\
    , 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\",\
    \ 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))", "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L ->\
    \ \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L\
    \ -> \"Eight\", 9L -> \"Nine\")\n        val res = arr.filter(x => x >= 1 && x\
    \ <= 9).sorted.reverse.map(x => map(x))\n        res", "        val map = new\
    \ HashMap[Long, String]()\n        map += (1L -> \"One\")\n        map += (2L\
    \ -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L -> \"Four\"\
    )\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\")\n        map\
    \ += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n        map += (9L ->\
    \ \"Nine\")\n        val result = new ListBuffer[String]()\n        for (i <-\
    \ arr) {\n            if (i >= 1 && i <= 9) {\n                result += map(i)\n\
    \            }\n        }\n        result.toList.reverse", "        val map =\
    \ new HashMap[Long, String]\n        map += (1L -> \"One\")\n        map += (2L\
    \ -> \"Two\")\n        map += (3L -> \"Three\")\n        map += (4L -> \"Four\"\
    )\n        map += (5L -> \"Five\")\n        map += (6L -> \"Six\")\n        map\
    \ += (7L -> \"Seven\")\n        map += (8L -> \"Eight\")\n        map += (9L ->\
    \ \"Nine\")\n        val list = new ListBuffer[String]\n        for (i <- arr)\
    \ {\n            if (i >= 1 && i <= 9) list += map(i)\n        }\n        list.toList.sorted.reverse",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list", "        val map = new HashMap[Long, String]\n\
    \        map.put(1, \"One\")\n        map.put(2, \"Two\")\n        map.put(3,\
    \ \"Three\")\n        map.put(4, \"Four\")\n        map.put(5, \"Five\")\n   \
    \     map.put(6, \"Six\")\n        map.put(7, \"Seven\")\n        map.put(8, \"\
    Eight\")\n        map.put(9, \"Nine\")\n        val result = new ListBuffer[String]\n\
    \        for (i <- arr) {\n            if (map.contains(i)) result += map(i)\n\
    \        }\n        result.toList", "        val map = Map(1 -> \"One\", 2 ->\
    \ \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"\
    Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x.toInt))", "        val m = arr.groupBy(_.toString.length).map(x\
    \ => (x._1, x._2.sorted))\n        m.toList.sortBy(_._1).map(x => x._2.map(_.toString)).flatten",
  "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        if (list.isEmpty) List() else list", "        val map\
    \ = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\"\
    , 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        val sorted\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted\n        sorted.reverse.map(x =>\
    \ map(x.toInt))", "        val map = Map(1L -> \"One\", 2L -> \"Two\", 3L -> \"\
    Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L -> \"Seven\", 8L ->\
    \ \"Eight\", 9L -> \"Nine\")\n        val result = new ListBuffer[String]\n  \
    \      for (i <- arr) {\n            if (i >= 1 && i <= 9) result += map(i)\n\
    \        }\n        result.toList.reverse", "        val map = Map(1 -> \"One\"\
    , 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7\
    \ -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n        arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse.map(x => map(x.toInt))", "        val map = Map(1L\
    \ -> \"One\", 2L -> \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\",\
    \ 6L -> \"Six\", 7L -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val\
    \ list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n \
    \       list", "        val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\"\
    , 4 -> \"Four\", 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\",\
    \ 9 -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x.toInt))\n        list", "        val map = Map(1L -> \"One\", 2L ->\
    \ \"Two\", 3L -> \"Three\", 4L -> \"Four\", 5L -> \"Five\", 6L -> \"Six\", 7L\
    \ -> \"Seven\", 8L -> \"Eight\", 9L -> \"Nine\")\n        val sorted = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        sorted.map(x => map(x))", "   \
    \     val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x.toInt))\n        list"]
stop_tokens:
- "\n    }\n"

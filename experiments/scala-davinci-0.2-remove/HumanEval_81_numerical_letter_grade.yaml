name: HumanEval_81_numerical_letter_grade
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // It is the last week of the semester and the teacher has to give the grades\n\
  \    // to students. The teacher has been making her own algorithm for grading.\n\
  \    // The only problem is, she has lost the code she used for grading.\n    //\
  \ She has given you a list of GPAs for some students and you have to write \n  \
  \  // a function that can output a list of letter grades using the following table:\n\
  \    // GPA       |    Letter grade\n    // 4.0                A+\n    // > 3.7\
  \                A \n    // > 3.3                A- \n    // > 3.0             \
  \   B+\n    // > 2.7                B \n    // > 2.3                B-\n    // >\
  \ 2.0                C+\n    // > 1.7                C\n    // > 1.3           \
  \     C-\n    // > 1.0                D+ \n    // > 0.7                D \n    //\
  \ > 0.0                D-\n    // 0.0                E\n    // Example:\n    def\
  \ numericalLetterGrade(grades : List[Float]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(numericalLetterGrade((List[Float](4.0f.toFloat,\
  \ 3l.toFloat, 1.7f.toFloat, 2l.toFloat, 3.5f.toFloat))).equals((List[String](\"\
  A+\", \"B\", \"C-\", \"C\", \"A-\"))));\n    assert(numericalLetterGrade((List[Float](1.2f.toFloat))).equals((List[String](\"\
  D+\"))));\n    assert(numericalLetterGrade((List[Float](0.5f.toFloat))).equals((List[String](\"\
  D-\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat))).equals((List[String](\"\
  E\"))));\n    assert(numericalLetterGrade((List[Float](1.0f.toFloat, 0.3f.toFloat,\
  \ 1.5f.toFloat, 2.8f.toFloat, 3.3f.toFloat))).equals((List[String](\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat,\
  \ 0.7f.toFloat))).equals((List[String](\"E\", \"D-\"))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return List()", "        //\
    \ Write your code here\n        return List()", "        var letterGrades = List[String]()\n\
    \        for (g <- grades) {\n            if (g == 4.0) letterGrades = \"A+\"\
    \ :: letterGrades\n            else if (g > 3.7) letterGrades = \"A\" :: letterGrades\n\
    \            else if (g > 3.3) letterGrades = \"A-\" :: letterGrades\n       \
    \     else if (g > 3.0) letterGrades = \"B+\" :: letterGrades\n            else\
    \ if (g > 2.7) letterGrades = \"B\" :: letterGrades\n            else if (g >\
    \ 2.3) letterGrades = \"B-\" :: letterGrades\n            else if (g > 2.0) letterGrades\
    \ = \"C+\" :: letterGrades\n            else if (g > 1.7) letterGrades = \"C\"\
    \ :: letterGrades\n            else if (g > 1.3) letterGrades = \"C-\" :: letterGrades\n\
    \            else if (g > 1.0) letterGrades = \"D+\" :: letterGrades\n       \
    \     else if (g > 0.7) letterGrades = \"D\" :: letterGrades\n            else\
    \ if (g > 0.0) letterGrades = \"D-\" :: letterGrades\n            else letterGrades\
    \ = \"E\" :: letterGrades\n        }\n        letterGrades.reverse", "       \
    \ // Write your code here\n        return List()", "        var letterGrades =\
    \ List[String]()\n        for (grade <- grades) {\n            if (grade >= 4.0)\
    \ letterGrades = \"A+\" :: letterGrades\n            else if (grade >= 3.7) letterGrades\
    \ = \"A\" :: letterGrades\n            else if (grade >= 3.3) letterGrades = \"\
    A-\" :: letterGrades\n            else if (grade >= 3.0) letterGrades = \"B+\"\
    \ :: letterGrades\n            else if (grade >= 2.7) letterGrades = \"B\" ::\
    \ letterGrades\n            else if (grade >= 2.3) letterGrades = \"B-\" :: letterGrades\n\
    \            else if (grade >= 2.0) letterGrades = \"C+\" :: letterGrades\n  \
    \          else if (grade >= 1.7) letterGrades = \"C\" :: letterGrades\n     \
    \       else if (grade >= 1.3) letterGrades = \"C-\" :: letterGrades\n       \
    \     else if (grade >= 1.0) letterGrades = \"D+\" :: letterGrades\n         \
    \   else if (grade >= 0.7) letterGrades = \"D\" :: letterGrades\n            else\
    \ if (grade >= 0.0) letterGrades = \"D-\" :: letterGrades\n            else letterGrades\
    \ = \"E\" :: letterGrades\n        }\n        letterGrades.reverse", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // TODO: Implement this function\n  \
    \      return List()", "        // Write your code here\n        return List()",
  "        // Write your code here\n        return List[String]()", "        var letterGrades\
    \ = List[String]()\n        for (grade <- grades) {\n            if (grade >=\
    \ 4.0) {\n                letterGrades = letterGrades :+ \"A+\"\n            }\
    \ else if (grade >= 3.7) {\n                letterGrades = letterGrades :+ \"\
    A\"\n            } else if (grade >= 3.3) {\n                letterGrades = letterGrades\
    \ :+ \"A-\"\n            } else if (grade >= 3.0) {\n                letterGrades\
    \ = letterGrades :+ \"B+\"\n            } else if (grade >= 2.7) {\n         \
    \       letterGrades = letterGrades :+ \"B\"\n            } else if (grade >=\
    \ 2.3) {\n                letterGrades = letterGrades :+ \"B-\"\n            }\
    \ else if (grade >= 2.0) {\n                letterGrades = letterGrades :+ \"\
    C+\"\n            } else if (grade >= 1.7) {\n                letterGrades = letterGrades\
    \ :+ \"C\"\n            } else if (grade >= 1.3) {\n                letterGrades\
    \ = letterGrades :+ \"C-\"\n            } else if (grade >= 1.0) {\n         \
    \       letterGrades = letterGrades :+ \"D+\"\n            } else if (grade >=\
    \ 0.7) {\n                letterGrades = letterGrades :+ \"D\"\n            }\
    \ else if (grade >= 0.0) {\n                letterGrades = letterGrades :+ \"\
    D-\"\n            } else {\n                letterGrades = letterGrades :+ \"\
    E\"\n            }\n        }\n        letterGrades", "        // Write your code\
    \ here\n        return List()", "        var letterGrades = List[String]()\n \
    \       for (grade <- grades) {\n            if (grade >= 4.0) {\n           \
    \     letterGrades = letterGrades :+ \"A+\"\n            } else if (grade >= 3.7)\
    \ {\n                letterGrades = letterGrades :+ \"A\"\n            } else\
    \ if (grade >= 3.3) {\n                letterGrades = letterGrades :+ \"A-\"\n\
    \            } else if (grade >= 3.0) {\n                letterGrades = letterGrades\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ = letterGrades :+ \"B\"\n            } else if (grade >= 2.3) {\n          \
    \      letterGrades = letterGrades :+ \"B-\"\n            } else if (grade >=\
    \ 2.0) {\n                letterGrades = letterGrades :+ \"C+\"\n            }\
    \ else if (grade >= 1.7) {\n                letterGrades = letterGrades :+ \"\
    C\"\n            } else if (grade >= 1.3) {\n                letterGrades = letterGrades\
    \ :+ \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ = letterGrades :+ \"D+\"\n            } else if (grade >= 0.7) {\n         \
    \       letterGrades = letterGrades :+ \"D\"\n            } else if (grade >=\
    \ 0.0) {\n                letterGrades = letterGrades :+ \"D-\"\n            }\
    \ else {\n                letterGrades = letterGrades :+ \"E\"\n            }\n\
    \        }\n        letterGrades", "        // Your code here\n        return\
    \ List()", "        def helper(g : Float) : String = {\n            if (g >= 4.0)\
    \ \"A+\"\n            else if (g >= 3.7) \"A\"\n            else if (g >= 3.3)\
    \ \"A-\"\n            else if (g >= 3.0) \"B+\"\n            else if (g >= 2.7)\
    \ \"B\"\n            else if (g >= 2.3) \"B-\"\n            else if (g >= 2.0)\
    \ \"C+\"\n            else if (g >= 1.7) \"C\"\n            else if (g >= 1.3)\
    \ \"C-\"\n            else if (g >= 1.0) \"D+\"\n            else if (g >= 0.7)\
    \ \"D\"\n            else if (g >= 0.0) \"D-\"\n            else \"E\"\n     \
    \   }\n        grades.map(helper)", "        // Write your code here\n       \
    \ return List()", "        // TODO: Implement this function\n        return List()",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        // Return a list\
    \ of letter grades\n        // Example:\n        // Input: List(3.0, 3.5, 3.7,\
    \ 2.0, 2.5, 2.8, 1.0, 1.5, 1.7, 0.0, 0.5, 0.8)\n        // Output: List(\"B+\"\
    , \"A-\", \"A\", \"C+\", \"B-\", \"B\", \"D+\", \"C-\", \"C\", \"E\", \"D-\",\
    \ \"D\")\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // TODO: Implement the function here\n        return List()", "        // Write\
    \ your code here\n        return List()", "        // Write your code here\n \
    \       return List()", "        // Write your code here\n        return List()",
  "        // Write your code here\n        return List()", "        // Your code\
    \ here\n        var result = List[String]()\n        for (grade <- grades) {\n\
    \            if (grade >= 4.0) result = result :+ \"A+\"\n            else if\
    \ (grade >= 3.7) result = result :+ \"A\"\n            else if (grade >= 3.3)\
    \ result = result :+ \"A-\"\n            else if (grade >= 3.0) result = result\
    \ :+ \"B+\"\n            else if (grade >= 2.7) result = result :+ \"B\"\n   \
    \         else if (grade >= 2.3) result = result :+ \"B-\"\n            else if\
    \ (grade >= 2.0) result = result :+ \"C+\"\n            else if (grade >= 1.7)\
    \ result = result :+ \"C\"\n            else if (grade >= 1.3) result = result\
    \ :+ \"C-\"\n            else if (grade >= 1.0) result = result :+ \"D+\"\n  \
    \          else if (grade >= 0.7) result = result :+ \"D\"\n            else if\
    \ (grade >= 0.0) result = result :+ \"D-\"\n            else result = result :+\
    \ \"E\"\n        }\n        result", "        var letterGrades = List[String]()\n\
    \        for (grade <- grades) {\n            if (grade == 4.0) letterGrades =\
    \ \"A+\" :: letterGrades\n            else if (grade > 3.7) letterGrades = \"\
    A\" :: letterGrades\n            else if (grade > 3.3) letterGrades = \"A-\" ::\
    \ letterGrades\n            else if (grade > 3.0) letterGrades = \"B+\" :: letterGrades\n\
    \            else if (grade > 2.7) letterGrades = \"B\" :: letterGrades\n    \
    \        else if (grade > 2.3) letterGrades = \"B-\" :: letterGrades\n       \
    \     else if (grade > 2.0) letterGrades = \"C+\" :: letterGrades\n          \
    \  else if (grade > 1.7) letterGrades = \"C\" :: letterGrades\n            else\
    \ if (grade > 1.3) letterGrades = \"C-\" :: letterGrades\n            else if\
    \ (grade > 1.0) letterGrades = \"D+\" :: letterGrades\n            else if (grade\
    \ > 0.7) letterGrades = \"D\" :: letterGrades\n            else if (grade > 0.0)\
    \ letterGrades = \"D-\" :: letterGrades\n            else letterGrades = \"E\"\
    \ :: letterGrades\n        }\n        letterGrades.reverse", "        var letterGrades\
    \ = List[String]()\n        for (grade <- grades) {\n            if (grade ==\
    \ 4.0) letterGrades = \"A+\" :: letterGrades\n            else if (grade > 3.7)\
    \ letterGrades = \"A\" :: letterGrades\n            else if (grade > 3.3) letterGrades\
    \ = \"A-\" :: letterGrades\n            else if (grade > 3.0) letterGrades = \"\
    B+\" :: letterGrades\n            else if (grade > 2.7) letterGrades = \"B\" ::\
    \ letterGrades\n            else if (grade > 2.3) letterGrades = \"B-\" :: letterGrades\n\
    \            else if (grade > 2.0) letterGrades = \"C+\" :: letterGrades\n   \
    \         else if (grade > 1.7) letterGrades = \"C\" :: letterGrades\n       \
    \     else if (grade > 1.3) letterGrades = \"C-\" :: letterGrades\n          \
    \  else if (grade > 1.0) letterGrades = \"D+\" :: letterGrades\n            else\
    \ if (grade > 0.7) letterGrades = \"D\" :: letterGrades\n            else if (grade\
    \ > 0.0) letterGrades = \"D-\" :: letterGrades\n            else letterGrades\
    \ = \"E\" :: letterGrades\n        }\n        letterGrades.reverse", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        var letterGrades = List[String]()\n \
    \       for (grade <- grades) {\n            if (grade == 4.0) letterGrades =\
    \ \"A+\" :: letterGrades\n            else if (grade > 3.7) letterGrades = \"\
    A\" :: letterGrades\n            else if (grade > 3.3) letterGrades = \"A-\" ::\
    \ letterGrades\n            else if (grade > 3.0) letterGrades = \"B+\" :: letterGrades\n\
    \            else if (grade > 2.7) letterGrades = \"B\" :: letterGrades\n    \
    \        else if (grade > 2.3) letterGrades = \"B-\" :: letterGrades\n       \
    \     else if (grade > 2.0) letterGrades = \"C+\" :: letterGrades\n          \
    \  else if (grade > 1.7) letterGrades = \"C\" :: letterGrades\n            else\
    \ if (grade > 1.3) letterGrades = \"C-\" :: letterGrades\n            else if\
    \ (grade > 1.0) letterGrades = \"D+\" :: letterGrades\n            else if (grade\
    \ > 0.7) letterGrades = \"D\" :: letterGrades\n            else if (grade > 0.0)\
    \ letterGrades = \"D-\" :: letterGrades\n            else letterGrades = \"E\"\
    \ :: letterGrades\n        }\n        letterGrades.reverse", "        // Write\
    \ your code here\n        return List()", "        var result = List[String]()\n\
    \        for (grade <- grades) {\n            if (grade >= 4.0) result = \"A+\"\
    \ :: result\n            else if (grade >= 3.7) result = \"A\" :: result\n   \
    \         else if (grade >= 3.3) result = \"A-\" :: result\n            else if\
    \ (grade >= 3.0) result = \"B+\" :: result\n            else if (grade >= 2.7)\
    \ result = \"B\" :: result\n            else if (grade >= 2.3) result = \"B-\"\
    \ :: result\n            else if (grade >= 2.0) result = \"C+\" :: result\n  \
    \          else if (grade >= 1.7) result = \"C\" :: result\n            else if\
    \ (grade >= 1.3) result = \"C-\" :: result\n            else if (grade >= 1.0)\
    \ result = \"D+\" :: result\n            else if (grade >= 0.7) result = \"D\"\
    \ :: result\n            else if (grade >= 0.0) result = \"D-\" :: result\n  \
    \          else result = \"E\" :: result\n        }\n        result.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        grades.map(x => {\n            if\
    \ (x == 4.0) \"A+\"\n            else if (x > 3.7) \"A\"\n            else if\
    \ (x > 3.3) \"A-\"\n            else if (x > 3.0) \"B+\"\n            else if\
    \ (x > 2.7) \"B\"\n            else if (x > 2.3) \"B-\"\n            else if (x\
    \ > 2.0) \"C+\"\n            else if (x > 1.7) \"C\"\n            else if (x >\
    \ 1.3) \"C-\"\n            else if (x > 1.0) \"D+\"\n            else if (x >\
    \ 0.7) \"D\"\n            else if (x > 0.0) \"D-\"\n            else \"E\"\n \
    \       })", "        // Write your code here\n        return List()", "     \
    \   var letterGrades = List[String]()\n        for (grade <- grades) {\n     \
    \       if (grade >= 4.0) letterGrades = \"A+\" :: letterGrades\n            else\
    \ if (grade >= 3.7) letterGrades = \"A\" :: letterGrades\n            else if\
    \ (grade >= 3.3) letterGrades = \"A-\" :: letterGrades\n            else if (grade\
    \ >= 3.0) letterGrades = \"B+\" :: letterGrades\n            else if (grade >=\
    \ 2.7) letterGrades = \"B\" :: letterGrades\n            else if (grade >= 2.3)\
    \ letterGrades = \"B-\" :: letterGrades\n            else if (grade >= 2.0) letterGrades\
    \ = \"C+\" :: letterGrades\n            else if (grade >= 1.7) letterGrades =\
    \ \"C\" :: letterGrades\n            else if (grade >= 1.3) letterGrades = \"\
    C-\" :: letterGrades\n            else if (grade >= 1.0) letterGrades = \"D+\"\
    \ :: letterGrades\n            else if (grade >= 0.7) letterGrades = \"D\" ::\
    \ letterGrades\n            else if (grade >= 0.0) letterGrades = \"D-\" :: letterGrades\n\
    \            else letterGrades = \"E\" :: letterGrades\n        }\n        letterGrades.reverse",
  "        // TODO: Implement this function\n        return List()", "        var\
    \ letterGrades = List[String]()\n        for (grade <- grades) {\n           \
    \ if (grade == 4.0) letterGrades = \"A+\" :: letterGrades\n            else if\
    \ (grade > 3.7) letterGrades = \"A\" :: letterGrades\n            else if (grade\
    \ > 3.3) letterGrades = \"A-\" :: letterGrades\n            else if (grade > 3.0)\
    \ letterGrades = \"B+\" :: letterGrades\n            else if (grade > 2.7) letterGrades\
    \ = \"B\" :: letterGrades\n            else if (grade > 2.3) letterGrades = \"\
    B-\" :: letterGrades\n            else if (grade > 2.0) letterGrades = \"C+\"\
    \ :: letterGrades\n            else if (grade > 1.7) letterGrades = \"C\" :: letterGrades\n\
    \            else if (grade > 1.3) letterGrades = \"C-\" :: letterGrades\n   \
    \         else if (grade > 1.0) letterGrades = \"D+\" :: letterGrades\n      \
    \      else if (grade > 0.7) letterGrades = \"D\" :: letterGrades\n          \
    \  else if (grade > 0.0) letterGrades = \"D-\" :: letterGrades\n            else\
    \ letterGrades = \"E\" :: letterGrades\n        }\n        letterGrades.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return null", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        var letterGrades = List[String]()\n        for (g\
    \ <- grades) {\n            if (g == 4.0) letterGrades = \"A+\" :: letterGrades\n\
    \            else if (g > 3.7) letterGrades = \"A\" :: letterGrades\n        \
    \    else if (g > 3.3) letterGrades = \"A-\" :: letterGrades\n            else\
    \ if (g > 3.0) letterGrades = \"B+\" :: letterGrades\n            else if (g >\
    \ 2.7) letterGrades = \"B\" :: letterGrades\n            else if (g > 2.3) letterGrades\
    \ = \"B-\" :: letterGrades\n            else if (g > 2.0) letterGrades = \"C+\"\
    \ :: letterGrades\n            else if (g > 1.7) letterGrades = \"C\" :: letterGrades\n\
    \            else if (g > 1.3) letterGrades = \"C-\" :: letterGrades\n       \
    \     else if (g > 1.0) letterGrades = \"D+\" :: letterGrades\n            else\
    \ if (g > 0.7) letterGrades = \"D\" :: letterGrades\n            else if (g >\
    \ 0.0) letterGrades = \"D-\" :: letterGrades\n            else letterGrades =\
    \ \"E\" :: letterGrades\n        }\n        letterGrades.reverse", "        //\
    \ Write your code here\n        return List()", "        // Write your code here\n\
    \        return List()", "        // TODO: Implement the function\n        return\
    \ List()", "        val gradeMap = Map(4.0f -> \"A+\", 3.7f -> \"A\", 3.3f ->\
    \ \"A-\", 3.0f -> \"B+\", 2.7f -> \"B\", 2.3f -> \"B-\", 2.0f -> \"C+\", 1.7f\
    \ -> \"C\", 1.3f -> \"C-\", 1.0f -> \"D+\", 0.7f -> \"D\", 0.0f -> \"D-\", -1.0f\
    \ -> \"E\")\n        val sortedGrades = gradeMap.keys.toList.sorted\n        def\
    \ getGrade(g : Float) : String = {\n            val index = sortedGrades.indexWhere(x\
    \ => x <= g)\n            if (index == -1) gradeMap(sortedGrades.last)\n     \
    \       else gradeMap(sortedGrades(index))\n        }\n        grades.map(getGrade)",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // TODO: Implement this function\n\
    \        return List()", "        // Write your code here\n        return List()",
  "        // Write your code here\n        return List()", "        var result =\
    \ List[String]()\n        for (grade <- grades) {\n            if (grade >= 4.0)\
    \ result = \"A+\" :: result\n            else if (grade >= 3.7) result = \"A\"\
    \ :: result\n            else if (grade >= 3.3) result = \"A-\" :: result\n  \
    \          else if (grade >= 3.0) result = \"B+\" :: result\n            else\
    \ if (grade >= 2.7) result = \"B\" :: result\n            else if (grade >= 2.3)\
    \ result = \"B-\" :: result\n            else if (grade >= 2.0) result = \"C+\"\
    \ :: result\n            else if (grade >= 1.7) result = \"C\" :: result\n   \
    \         else if (grade >= 1.3) result = \"C-\" :: result\n            else if\
    \ (grade >= 1.0) result = \"D+\" :: result\n            else if (grade >= 0.7)\
    \ result = \"D\" :: result\n            else if (grade >= 0.0) result = \"D-\"\
    \ :: result\n            else result = \"E\" :: result\n        }\n        result.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        var letterGrades = List[String]()\n        for (g\
    \ <- grades) {\n            if (g == 4.0) letterGrades = \"A+\" :: letterGrades\n\
    \            else if (g > 3.7) letterGrades = \"A\" :: letterGrades\n        \
    \    else if (g > 3.3) letterGrades = \"A-\" :: letterGrades\n            else\
    \ if (g > 3.0) letterGrades = \"B+\" :: letterGrades\n            else if (g >\
    \ 2.7) letterGrades = \"B\" :: letterGrades\n            else if (g > 2.3) letterGrades\
    \ = \"B-\" :: letterGrades\n            else if (g > 2.0) letterGrades = \"C+\"\
    \ :: letterGrades\n            else if (g > 1.7) letterGrades = \"C\" :: letterGrades\n\
    \            else if (g > 1.3) letterGrades = \"C-\" :: letterGrades\n       \
    \     else if (g > 1.0) letterGrades = \"D+\" :: letterGrades\n            else\
    \ if (g > 0.7) letterGrades = \"D\" :: letterGrades\n            else if (g >\
    \ 0.0) letterGrades = \"D-\" :: letterGrades\n            else letterGrades =\
    \ \"E\" :: letterGrades\n        }\n        letterGrades.reverse", "        //\
    \ Write your code here\n        return List()", "        // Write your code here\n\
    \        return List()", "        // TODO: Implement this function\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        // TODO: Implement\
    \ this function\n        return List()", "        // Write your code here\n  \
    \      return List()", "        var letterGrades = List[String]()\n        for\
    \ (grade <- grades) {\n            if (grade == 4.0) {\n                letterGrades\
    \ = letterGrades :+ \"A+\"\n            } else if (grade > 3.7) {\n          \
    \      letterGrades = letterGrades :+ \"A\"\n            } else if (grade > 3.3)\
    \ {\n                letterGrades = letterGrades :+ \"A-\"\n            } else\
    \ if (grade > 3.0) {\n                letterGrades = letterGrades :+ \"B+\"\n\
    \            } else if (grade > 2.7) {\n                letterGrades = letterGrades\
    \ :+ \"B\"\n            } else if (grade > 2.3) {\n                letterGrades\
    \ = letterGrades :+ \"B-\"\n            } else if (grade > 2.0) {\n          \
    \      letterGrades = letterGrades :+ \"C+\"\n            } else if (grade > 1.7)\
    \ {\n                letterGrades = letterGrades :+ \"C\"\n            } else\
    \ if (grade > 1.3) {\n                letterGrades = letterGrades :+ \"C-\"\n\
    \            } else if (grade > 1.0) {\n                letterGrades = letterGrades\
    \ :+ \"D+\"\n            } else if (grade > 0.7) {\n                letterGrades\
    \ = letterGrades :+ \"D\"\n            } else if (grade > 0.0) {\n           \
    \     letterGrades = letterGrades :+ \"D-\"\n            } else {\n          \
    \      letterGrades = letterGrades :+ \"E\"\n            }\n        }\n      \
    \  letterGrades", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        grades.map(x\
    \ => {\n            if (x >= 4.0) \"A+\"\n            else if (x >= 3.7) \"A\"\
    \n            else if (x >= 3.3) \"A-\"\n            else if (x >= 3.0) \"B+\"\
    \n            else if (x >= 2.7) \"B\"\n            else if (x >= 2.3) \"B-\"\n\
    \            else if (x >= 2.0) \"C+\"\n            else if (x >= 1.7) \"C\"\n\
    \            else if (x >= 1.3) \"C-\"\n            else if (x >= 1.0) \"D+\"\n\
    \            else if (x >= 0.7) \"D\"\n            else if (x >= 0.0) \"D-\"\n\
    \            else \"E\"\n        })", "        // Your code here\n        return\
    \ List()", "        // Your code goes here\n        return List()", "        //\
    \ Your code here\n        return List()", "        // Write your code here\n \
    \       return List()", "        // Your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // TODO: Implement me!\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        var result =\
    \ List[String]()\n        for (grade <- grades) {\n            if (grade >= 4.0)\
    \ result = \"A+\" :: result\n            else if (grade >= 3.7) result = \"A\"\
    \ :: result\n            else if (grade >= 3.3) result = \"A-\" :: result\n  \
    \          else if (grade >= 3.0) result = \"B+\" :: result\n            else\
    \ if (grade >= 2.7) result = \"B\" :: result\n            else if (grade >= 2.3)\
    \ result = \"B-\" :: result\n            else if (grade >= 2.0) result = \"C+\"\
    \ :: result\n            else if (grade >= 1.7) result = \"C\" :: result\n   \
    \         else if (grade >= 1.3) result = \"C-\" :: result\n            else if\
    \ (grade >= 1.0) result = \"D+\" :: result\n            else if (grade >= 0.7)\
    \ result = \"D\" :: result\n            else if (grade >= 0.0) result = \"D-\"\
    \ :: result\n            else result = \"E\" :: result\n        }\n        result.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        var result = List[String]()\n        for (grade <-\
    \ grades) {\n            if (grade == 4.0) result = \"A+\" :: result\n       \
    \     else if (grade > 3.7) result = \"A\" :: result\n            else if (grade\
    \ > 3.3) result = \"A-\" :: result\n            else if (grade > 3.0) result =\
    \ \"B+\" :: result\n            else if (grade > 2.7) result = \"B\" :: result\n\
    \            else if (grade > 2.3) result = \"B-\" :: result\n            else\
    \ if (grade > 2.0) result = \"C+\" :: result\n            else if (grade > 1.7)\
    \ result = \"C\" :: result\n            else if (grade > 1.3) result = \"C-\"\
    \ :: result\n            else if (grade > 1.0) result = \"D+\" :: result\n   \
    \         else if (grade > 0.7) result = \"D\" :: result\n            else if\
    \ (grade > 0.0) result = \"D-\" :: result\n            else result = \"E\" ::\
    \ result\n        }\n        result.reverse", "        // Write your code here\n\
    \        val gradeMap = Map(4.0f -> \"A+\", 3.7f -> \"A\", 3.3f -> \"A-\", 3.0f\
    \ -> \"B+\", 2.7f -> \"B\", 2.3f -> \"B-\", 2.0f -> \"C+\", 1.7f -> \"C\", 1.3f\
    \ -> \"C-\", 1.0f -> \"D+\", 0.7f -> \"D\", 0.0f -> \"D-\", -1.0f -> \"E\")\n\
    \        var result = List[String]()\n        for (grade <- grades) {\n      \
    \      var letterGrade = \"\"\n            for (key <- gradeMap.keys) {\n    \
    \            if (grade >= key) {\n                    letterGrade = gradeMap(key)\n\
    \                    break\n                }\n            }\n            result\
    \ = result :+ letterGrade\n        }\n        result", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return grades.map(x => {\n            if (x >= 4.0) \"A+\"\n            else\
    \ if (x >= 3.7) \"A\"\n            else if (x >= 3.3) \"A-\"\n            else\
    \ if (x >= 3.0) \"B+\"\n            else if (x >= 2.7) \"B\"\n            else\
    \ if (x >= 2.3) \"B-\"\n            else if (x >= 2.0) \"C+\"\n            else\
    \ if (x >= 1.7) \"C\"\n            else if (x >= 1.3) \"C-\"\n            else\
    \ if (x >= 1.0) \"D+\"\n            else if (x >= 0.7) \"D\"\n            else\
    \ if (x >= 0.0) \"D-\"\n            else \"E\"\n        })", "        // Write\
    \ your code here\n        return List()", "        // Write your code here\n \
    \       return grades.map(x => if (x >= 4.0) \"A+\" else if (x >= 3.7) \"A\" else\
    \ if (x >= 3.3) \"A-\" else if (x >= 3.0) \"B+\" else if (x >= 2.7) \"B\" else\
    \ if (x >= 2.3) \"B-\" else if (x >= 2.0) \"C+\" else if (x >= 1.7) \"C\" else\
    \ if (x >= 1.3) \"C-\" else if (x >= 1.0) \"D+\" else if (x >= 0.7) \"D\" else\
    \ if (x >= 0.0) \"D-\" else \"E\")", "        // Write your code here\n      \
    \  return List()", "        // Your code here\n        return List()", "     \
    \   // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // TODO: Implement the function here\n        val letterGrades\
    \ = ListBuffer[String]()\n        for (grade <- grades) {\n            if (grade\
    \ == 4.0) {\n                letterGrades += \"A+\"\n            } else if (grade\
    \ > 3.7) {\n                letterGrades += \"A\"\n            } else if (grade\
    \ > 3.3) {\n                letterGrades += \"A-\"\n            } else if (grade\
    \ > 3.0) {\n                letterGrades += \"B+\"\n            } else if (grade\
    \ > 2.7) {\n                letterGrades += \"B\"\n            } else if (grade\
    \ > 2.3) {\n                letterGrades += \"B-\"\n            } else if (grade\
    \ > 2.0) {\n                letterGrades += \"C+\"\n            } else if (grade\
    \ > 1.7) {\n                letterGrades += \"C\"\n            } else if (grade\
    \ > 1.3) {\n                letterGrades += \"C-\"\n            } else if (grade\
    \ > 1.0) {\n                letterGrades += \"D+\"\n            } else if (grade\
    \ > 0.7) {\n                letterGrades += \"D\"\n            } else if (grade\
    \ > 0.0) {\n                letterGrades += \"D-\"\n            } else {\n   \
    \             letterGrades += \"E\"\n            }\n        }\n        letterGrades.toList",
  "        // TODO: Implement this function\n        return List()", "        var\
    \ letterGrades = List[String]()\n        for (g <- grades) {\n            if (g\
    \ >= 4.0) letterGrades = \"A+\" :: letterGrades\n            else if (g >= 3.7)\
    \ letterGrades = \"A\" :: letterGrades\n            else if (g >= 3.3) letterGrades\
    \ = \"A-\" :: letterGrades\n            else if (g >= 3.0) letterGrades = \"B+\"\
    \ :: letterGrades\n            else if (g >= 2.7) letterGrades = \"B\" :: letterGrades\n\
    \            else if (g >= 2.3) letterGrades = \"B-\" :: letterGrades\n      \
    \      else if (g >= 2.0) letterGrades = \"C+\" :: letterGrades\n            else\
    \ if (g >= 1.7) letterGrades = \"C\" :: letterGrades\n            else if (g >=\
    \ 1.3) letterGrades = \"C-\" :: letterGrades\n            else if (g >= 1.0) letterGrades\
    \ = \"D+\" :: letterGrades\n            else if (g >= 0.7) letterGrades = \"D\"\
    \ :: letterGrades\n            else if (g >= 0.0) letterGrades = \"D-\" :: letterGrades\n\
    \            else letterGrades = \"E\" :: letterGrades\n        }\n        letterGrades.reverse",
  "        var result = List[String]()\n        for (grade <- grades) {\n        \
    \    if (grade >= 4.0) result = \"A+\" :: result\n            else if (grade >=\
    \ 3.7) result = \"A\" :: result\n            else if (grade >= 3.3) result = \"\
    A-\" :: result\n            else if (grade >= 3.0) result = \"B+\" :: result\n\
    \            else if (grade >= 2.7) result = \"B\" :: result\n            else\
    \ if (grade >= 2.3) result = \"B-\" :: result\n            else if (grade >= 2.0)\
    \ result = \"C+\" :: result\n            else if (grade >= 1.7) result = \"C\"\
    \ :: result\n            else if (grade >= 1.3) result = \"C-\" :: result\n  \
    \          else if (grade >= 1.0) result = \"D+\" :: result\n            else\
    \ if (grade >= 0.7) result = \"D\" :: result\n            else if (grade >= 0.0)\
    \ result = \"D-\" :: result\n            else result = \"E\" :: result\n     \
    \   }\n        result.reverse", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        grades.map(x => {\n\
    \            if (x == 4.0) \"A+\"\n            else if (x > 3.7) \"A\"\n     \
    \       else if (x > 3.3) \"A-\"\n            else if (x > 3.0) \"B+\"\n     \
    \       else if (x > 2.7) \"B\"\n            else if (x > 2.3) \"B-\"\n      \
    \      else if (x > 2.0) \"C+\"\n            else if (x > 1.7) \"C\"\n       \
    \     else if (x > 1.3) \"C-\"\n            else if (x > 1.0) \"D+\"\n       \
    \     else if (x > 0.7) \"D\"\n            else if (x > 0.0) \"D-\"\n        \
    \    else \"E\"\n        })", "        // Write your code here\n        return\
    \ List()", "        // TODO: Implement this function\n        return List()",
  "        // Write your code here\n        return List()", "        grades.map(g\
    \ => {\n            if (g >= 4.0) \"A+\"\n            else if (g >= 3.7) \"A\"\
    \n            else if (g >= 3.3) \"A-\"\n            else if (g >= 3.0) \"B+\"\
    \n            else if (g >= 2.7) \"B\"\n            else if (g >= 2.3) \"B-\"\n\
    \            else if (g >= 2.0) \"C+\"\n            else if (g >= 1.7) \"C\"\n\
    \            else if (g >= 1.3) \"C-\"\n            else if (g >= 1.0) \"D+\"\n\
    \            else if (g >= 0.7) \"D\"\n            else if (g >= 0.0) \"D-\"\n\
    \            else \"E\"\n        })", "        // Write your code here\n     \
    \   return List()", "        // Write your code here\n        return List()",
  "        // your code here\n        var result = List[String]()\n        for (i\
    \ <- grades) {\n            if (i == 4.0) result = result :+ \"A+\"\n        \
    \    else if (i > 3.7) result = result :+ \"A\"\n            else if (i > 3.3)\
    \ result = result :+ \"A-\"\n            else if (i > 3.0) result = result :+\
    \ \"B+\"\n            else if (i > 2.7) result = result :+ \"B\"\n           \
    \ else if (i > 2.3) result = result :+ \"B-\"\n            else if (i > 2.0) result\
    \ = result :+ \"C+\"\n            else if (i > 1.7) result = result :+ \"C\"\n\
    \            else if (i > 1.3) result = result :+ \"C-\"\n            else if\
    \ (i > 1.0) result = result :+ \"D+\"\n            else if (i > 0.7) result =\
    \ result :+ \"D\"\n            else if (i > 0.0) result = result :+ \"D-\"\n \
    \           else result = result :+ \"E\"\n        }\n        result", "     \
    \   // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ grades.map(x => {\n            if (x >= 4.0) \"A+\"\n            else if (x\
    \ >= 3.7) \"A\"\n            else if (x >= 3.3) \"A-\"\n            else if (x\
    \ >= 3.0) \"B+\"\n            else if (x >= 2.7) \"B\"\n            else if (x\
    \ >= 2.3) \"B-\"\n            else if (x >= 2.0) \"C+\"\n            else if (x\
    \ >= 1.7) \"C\"\n            else if (x >= 1.3) \"C-\"\n            else if (x\
    \ >= 1.0) \"D+\"\n            else if (x >= 0.7) \"D\"\n            else if (x\
    \ >= 0.0) \"D-\"\n            else \"E\"\n        })", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()", " \
    \       // Write your code here\n        return List()", "        // TODO: Implement\
    \ this function\n        return List()", "        // Write your code here\n  \
    \      var result = List[String]()\n        for (grade <- grades) {\n        \
    \    if (grade >= 4.0) result = result :+ \"A+\"\n            else if (grade >=\
    \ 3.7) result = result :+ \"A\"\n            else if (grade >= 3.3) result = result\
    \ :+ \"A-\"\n            else if (grade >= 3.0) result = result :+ \"B+\"\n  \
    \          else if (grade >= 2.7) result = result :+ \"B\"\n            else if\
    \ (grade >= 2.3) result = result :+ \"B-\"\n            else if (grade >= 2.0)\
    \ result = result :+ \"C+\"\n            else if (grade >= 1.7) result = result\
    \ :+ \"C\"\n            else if (grade >= 1.3) result = result :+ \"C-\"\n   \
    \         else if (grade >= 1.0) result = result :+ \"D+\"\n            else if\
    \ (grade >= 0.7) result = result :+ \"D\"\n            else if (grade >= 0.0)\
    \ result = result :+ \"D-\"\n            else result = result :+ \"E\"\n     \
    \   }\n        result", "        // Write your code here\n        return List()",
  "        // Write your code here\n        return List()", "        var letterGrades\
    \ = List[String]()\n        for (grade <- grades) {\n            if (grade >=\
    \ 4.0) letterGrades = \"A+\" :: letterGrades\n            else if (grade >= 3.7)\
    \ letterGrades = \"A\" :: letterGrades\n            else if (grade >= 3.3) letterGrades\
    \ = \"A-\" :: letterGrades\n            else if (grade >= 3.0) letterGrades =\
    \ \"B+\" :: letterGrades\n            else if (grade >= 2.7) letterGrades = \"\
    B\" :: letterGrades\n            else if (grade >= 2.3) letterGrades = \"B-\"\
    \ :: letterGrades\n            else if (grade >= 2.0) letterGrades = \"C+\" ::\
    \ letterGrades\n            else if (grade >= 1.7) letterGrades = \"C\" :: letterGrades\n\
    \            else if (grade >= 1.3) letterGrades = \"C-\" :: letterGrades\n  \
    \          else if (grade >= 1.0) letterGrades = \"D+\" :: letterGrades\n    \
    \        else if (grade >= 0.7) letterGrades = \"D\" :: letterGrades\n       \
    \     else if (grade >= 0.0) letterGrades = \"D-\" :: letterGrades\n         \
    \   else letterGrades = \"E\" :: letterGrades\n        }\n        letterGrades.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        grades.map(x => x match {\n            case x if x\
    \ >= 4.0 => \"A+\"\n            case x if x >= 3.7 => \"A\"\n            case\
    \ x if x >= 3.3 => \"A-\"\n            case x if x >= 3.0 => \"B+\"\n        \
    \    case x if x >= 2.7 => \"B\"\n            case x if x >= 2.3 => \"B-\"\n \
    \           case x if x >= 2.0 => \"C+\"\n            case x if x >= 1.7 => \"\
    C\"\n            case x if x >= 1.3 => \"C-\"\n            case x if x >= 1.0\
    \ => \"D+\"\n            case x if x >= 0.7 => \"D\"\n            case x if x\
    \ >= 0.0 => \"D-\"\n            case x if x < 0.0 => \"E\"\n        })", "   \
    \     var result = List[String]()\n        for (grade <- grades) {\n         \
    \   if (grade >= 4.0) result = \"A+\" :: result\n            else if (grade >=\
    \ 3.7) result = \"A\" :: result\n            else if (grade >= 3.3) result = \"\
    A-\" :: result\n            else if (grade >= 3.0) result = \"B+\" :: result\n\
    \            else if (grade >= 2.7) result = \"B\" :: result\n            else\
    \ if (grade >= 2.3) result = \"B-\" :: result\n            else if (grade >= 2.0)\
    \ result = \"C+\" :: result\n            else if (grade >= 1.7) result = \"C\"\
    \ :: result\n            else if (grade >= 1.3) result = \"C-\" :: result\n  \
    \          else if (grade >= 1.0) result = \"D+\" :: result\n            else\
    \ if (grade >= 0.7) result = \"D\" :: result\n            else if (grade >= 0.0)\
    \ result = \"D-\" :: result\n            else result = \"E\" :: result\n     \
    \   }\n        result.reverse", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        var result : List[String]\
    \ = List()\n        for (grade <- grades) {\n            if (grade >= 4.0) result\
    \ = result :+ \"A+\"\n            else if (grade >= 3.7) result = result :+ \"\
    A\"\n            else if (grade >= 3.3) result = result :+ \"A-\"\n          \
    \  else if (grade >= 3.0) result = result :+ \"B+\"\n            else if (grade\
    \ >= 2.7) result = result :+ \"B\"\n            else if (grade >= 2.3) result\
    \ = result :+ \"B-\"\n            else if (grade >= 2.0) result = result :+ \"\
    C+\"\n            else if (grade >= 1.7) result = result :+ \"C\"\n          \
    \  else if (grade >= 1.3) result = result :+ \"C-\"\n            else if (grade\
    \ >= 1.0) result = result :+ \"D+\"\n            else if (grade >= 0.7) result\
    \ = result :+ \"D\"\n            else if (grade >= 0.0) result = result :+ \"\
    D-\"\n            else result = result :+ \"E\"\n        }\n        return result",
  "        // Write your code here\n        return List()", "        var letterGrades\
    \ = List[String]()\n        for (grade <- grades) {\n            if (grade ==\
    \ 4.0) letterGrades ::= \"A+\"\n            else if (grade > 3.7) letterGrades\
    \ ::= \"A\"\n            else if (grade > 3.3) letterGrades ::= \"A-\"\n     \
    \       else if (grade > 3.0) letterGrades ::= \"B+\"\n            else if (grade\
    \ > 2.7) letterGrades ::= \"B\"\n            else if (grade > 2.3) letterGrades\
    \ ::= \"B-\"\n            else if (grade > 2.0) letterGrades ::= \"C+\"\n    \
    \        else if (grade > 1.7) letterGrades ::= \"C\"\n            else if (grade\
    \ > 1.3) letterGrades ::= \"C-\"\n            else if (grade > 1.0) letterGrades\
    \ ::= \"D+\"\n            else if (grade > 0.7) letterGrades ::= \"D\"\n     \
    \       else if (grade > 0.0) letterGrades ::= \"D-\"\n            else letterGrades\
    \ ::= \"E\"\n        }\n        letterGrades.reverse", "        grades.map(x =>\
    \ {\n            if (x == 4.0) \"A+\"\n            else if (x > 3.7) \"A\"\n \
    \           else if (x > 3.3) \"A-\"\n            else if (x > 3.0) \"B+\"\n \
    \           else if (x > 2.7) \"B\"\n            else if (x > 2.3) \"B-\"\n  \
    \          else if (x > 2.0) \"C+\"\n            else if (x > 1.7) \"C\"\n   \
    \         else if (x > 1.3) \"C-\"\n            else if (x > 1.0) \"D+\"\n   \
    \         else if (x > 0.7) \"D\"\n            else if (x > 0.0) \"D-\"\n    \
    \        else \"E\"\n        })", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ val gradeMap = Map(4.0f -> \"A+\", 3.7f -> \"A\", 3.3f -> \"A-\", 3.0f -> \"\
    B+\", 2.7f -> \"B\", 2.3f -> \"B-\", 2.0f -> \"C+\", 1.7f -> \"C\", 1.3f -> \"\
    C-\", 1.0f -> \"D+\", 0.7f -> \"D\", 0.0f -> \"D-\", -1.0f -> \"E\")\n       \
    \ val gradeList = gradeMap.toList.sortBy(_._1).reverse\n        grades.map(g =>\
    \ {\n            var grade = \"E\"\n            for (i <- 0 until gradeList.length)\
    \ {\n                if (g >= gradeList(i)._1) {\n                    grade =\
    \ gradeList(i)._2\n                    i = gradeList.length\n                }\n\
    \            }\n            grade\n        })", "        // Write your code here\n\
    \        return List()", "        // TODO: Implement this function\n        return\
    \ List()", "        var letterGrades = List[String]()\n        for (grade <- grades)\
    \ {\n            if (grade == 4.0) letterGrades = \"A+\" :: letterGrades\n   \
    \         else if (grade > 3.7) letterGrades = \"A\" :: letterGrades\n       \
    \     else if (grade > 3.3) letterGrades = \"A-\" :: letterGrades\n          \
    \  else if (grade > 3.0) letterGrades = \"B+\" :: letterGrades\n            else\
    \ if (grade > 2.7) letterGrades = \"B\" :: letterGrades\n            else if (grade\
    \ > 2.3) letterGrades = \"B-\" :: letterGrades\n            else if (grade > 2.0)\
    \ letterGrades = \"C+\" :: letterGrades\n            else if (grade > 1.7) letterGrades\
    \ = \"C\" :: letterGrades\n            else if (grade > 1.3) letterGrades = \"\
    C-\" :: letterGrades\n            else if (grade > 1.0) letterGrades = \"D+\"\
    \ :: letterGrades\n            else if (grade > 0.7) letterGrades = \"D\" :: letterGrades\n\
    \            else if (grade > 0.0) letterGrades = \"D-\" :: letterGrades\n   \
    \         else letterGrades = \"E\" :: letterGrades\n        }\n        letterGrades.reverse",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        var letterGrades = new ListBuffer[String]\n      \
    \  for (grade <- grades) {\n            if (grade >= 4.0) {\n                letterGrades\
    \ += \"A+\"\n            } else if (grade >= 3.7) {\n                letterGrades\
    \ += \"A\"\n            } else if (grade >= 3.3) {\n                letterGrades\
    \ += \"A-\"\n            } else if (grade >= 3.0) {\n                letterGrades\
    \ += \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ += \"B\"\n            } else if (grade >= 2.3) {\n                letterGrades\
    \ += \"B-\"\n            } else if (grade >= 2.0) {\n                letterGrades\
    \ += \"C+\"\n            } else if (grade >= 1.7) {\n                letterGrades\
    \ += \"C\"\n            } else if (grade >= 1.3) {\n                letterGrades\
    \ += \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ += \"D+\"\n            } else if (grade >= 0.7) {\n                letterGrades\
    \ += \"D\"\n            } else if (grade >= 0.0) {\n                letterGrades\
    \ += \"D-\"\n            } else {\n                letterGrades += \"E\"\n   \
    \         }\n        }\n        letterGrades.toList", "        // Write your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ // Write your code here\n        return List()", "        // Write your code\
    \ here\n        return List()", "        // TODO: Implement this function\n  \
    \      return List()", "        // Write your code here\n        return List()",
  "        var letterGrades = List[String]()\n        for (grade <- grades) {\n  \
    \          if (grade >= 4.0) {\n                letterGrades = letterGrades :+\
    \ \"A+\"\n            } else if (grade >= 3.7) {\n                letterGrades\
    \ = letterGrades :+ \"A\"\n            } else if (grade >= 3.3) {\n          \
    \      letterGrades = letterGrades :+ \"A-\"\n            } else if (grade >=\
    \ 3.0) {\n                letterGrades = letterGrades :+ \"B+\"\n            }\
    \ else if (grade >= 2.7) {\n                letterGrades = letterGrades :+ \"\
    B\"\n            } else if (grade >= 2.3) {\n                letterGrades = letterGrades\
    \ :+ \"B-\"\n            } else if (grade >= 2.0) {\n                letterGrades\
    \ = letterGrades :+ \"C+\"\n            } else if (grade >= 1.7) {\n         \
    \       letterGrades = letterGrades :+ \"C\"\n            } else if (grade >=\
    \ 1.3) {\n                letterGrades = letterGrades :+ \"C-\"\n            }\
    \ else if (grade >= 1.0) {\n                letterGrades = letterGrades :+ \"\
    D+\"\n            } else if (grade >= 0.7) {\n                letterGrades = letterGrades\
    \ :+ \"D\"\n            } else if (grade >= 0.0) {\n                letterGrades\
    \ = letterGrades :+ \"D-\"\n            } else {\n                letterGrades\
    \ = letterGrades :+ \"E\"\n            }\n        }\n        letterGrades", " \
    \       // Write your code here\n        return List()", "        // your code\
    \ here\n        return List()", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        return List()", "       \
    \ var result = List[String]()\n        for (grade <- grades) {\n            if\
    \ (grade >= 4.0) result = \"A+\" :: result\n            else if (grade >= 3.7)\
    \ result = \"A\" :: result\n            else if (grade >= 3.3) result = \"A-\"\
    \ :: result\n            else if (grade >= 3.0) result = \"B+\" :: result\n  \
    \          else if (grade >= 2.7) result = \"B\" :: result\n            else if\
    \ (grade >= 2.3) result = \"B-\" :: result\n            else if (grade >= 2.0)\
    \ result = \"C+\" :: result\n            else if (grade >= 1.7) result = \"C\"\
    \ :: result\n            else if (grade >= 1.3) result = \"C-\" :: result\n  \
    \          else if (grade >= 1.0) result = \"D+\" :: result\n            else\
    \ if (grade >= 0.7) result = \"D\" :: result\n            else if (grade >= 0.0)\
    \ result = \"D-\" :: result\n            else result = \"E\" :: result\n     \
    \   }\n        result.reverse", "        // Write your code here\n        return\
    \ null", "        // Write your code here\n        return List()", "        //\
    \ Write your code here\n        return List()", "        // Write your code here\n\
    \        return List()", "        // Write your code here\n        return List()",
  "        // Write your code here\n        return List()", "        // Write your\
    \ code here\n        return List()", "        // Write your code here\n      \
    \  return List()", "        // Write your code here\n        return List()"]
stop_tokens:
- "\n    }\n"

name: HumanEval_87_get_row
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a 2 dimensional data, as a nested lists,\n    // which is\
  \ similar to matrix, however, unlike matrices,\n    // each row may contain a different\
  \ number of columns.\n    // Given lst, and integer x, find integers x in the list,\n\
  \    // and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n    // each\
  \ tuple is a coordinate - (row, columns), starting with 0.\n    // Sort coordinates\
  \ initially by rows in ascending order.\n    // Also, sort coordinates of the row\
  \ by columns in descending order.\n    // Examples:\n    def getRow(lst : List[List[Long]],\
  \ x : Long) : List[Tuple2[Long, Long]] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 4l), (1l, 0l), (2l, 5l), (2l, 0l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))), (2l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 1l), (1l, 1l), (2l, 1l), (3l, 1l), (4l, 1l), (5l, 1l)))));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 1l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 1l.toLong, 5l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 1l.toLong, 6l.toLong), List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 1l.toLong))), (1l)).equals((List[Tuple2[Long,\
  \ Long]]((0l, 0l), (1l, 0l), (2l, 1l), (2l, 0l), (3l, 2l), (3l, 0l), (4l, 3l), (4l,\
  \ 0l), (5l, 4l), (5l, 0l), (6l, 5l), (6l, 0l)))));\n    assert(getRow((List[List[Long]]()),\
  \ (1l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](1l.toLong))),\
  \ (2l)).equals((List[Tuple2[Long, Long]]())));\n    assert(getRow((List[List[Long]](List[Long](),\
  \ List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong))), (3l)).equals((List[Tuple2[Long,\
  \ Long]]((2l, 2l)))));\n    }\n\n}\n"
completions: ["        var result = List[Tuple2[Long, Long]]()\n        for (i <-\
    \ 0 until lst.length) {\n            for (j <- 0 until lst(i).length) {\n    \
    \            if (lst(i)(j) == x) {\n                    result = result :+ (i,\
    \ j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var res = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) res = (i, j) :: res\n\
    \            }\n        }\n        res.sortWith((x, y) => x._1 < y._1 || (x._1\
    \ == y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       val result = new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until\
    \ lst.length) {\n            for (j <- 0 until lst(i).length) {\n            \
    \    if (lst(i)(j) == x) {\n                    result += Tuple2(i, j)\n     \
    \           }\n            }\n        }\n        result.toList.sortWith((a, b)\
    \ => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result += Tuple2(i, j)\n                }\n            }\n        }\n     \
    \   result.toList.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result = (i, j) :: result\n\
    \            }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1)\
    \ a._2 > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result += Tuple2(i, j)\n            }\n\
    \        }\n        result.toList.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 == b._1)\
    \ a._2 > b._2\n            else false\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 < b._1) true\n      \
    \      else if (a._1 > b._1) false\n            else a._2 > b._2\n        })",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1)\
    \ a._2 > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]\n        for (i <- 0 until lst.length) {\n            val row = lst(i)\n\
    \            for (j <- 0 until row.length) {\n                if (row(j) == x)\
    \ result += Tuple2(i, j)\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 > b._1) false\n            else a._2\
    \ > b._2\n        })", "        var result = List[Tuple2[Long, Long]]()\n    \
    \    for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((x,\
    \ y) => {\n            if (x._1 == y._1) {\n                x._2 > y._2\n    \
    \        } else {\n                x._1 < y._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((t1, t2) => t1._1 < t2._1 ||\
    \ (t1._1 == t2._1 && t1._2 > t2._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result = result :+ (i,\
    \ j)\n            }\n        }\n        result.sortWith((a, b) => a._1 < b._1\
    \ || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        val res = new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until\
    \ lst.length) {\n            for (j <- 0 until lst(i).length) {\n            \
    \    if (lst(i)(j) == x) {\n                    res += Tuple2(i, j)\n        \
    \        }\n            }\n        }\n        res.toList.sortWith((t1, t2) =>\
    \ t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result = result :+ (i,\
    \ j)\n            }\n        }\n        result.sortWith((a, b) => if (a._1 ==\
    \ b._1) a._2 > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1)\
    \ a._2 > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) a._2 > b._2\n            else a._1 < b._1\n        })", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => if (a._1 != b._1) a._1\
    \ < b._1 else a._2 > b._2)", "        var res = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) res = (i, j) :: res\n            }\n\
    \        }\n        res.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2 else\
    \ a._1 < b._1)", "        val result = new ListBuffer[Tuple2[Long, Long]]\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result += Tuple2(i,\
    \ j)\n                }\n            }\n        }\n        result.toList.sortWith((t1,\
    \ t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ ListBuffer[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result += Tuple2(i, j)\n            }\n        }\n        result.toList.sortWith((t1,\
    \ t2) => if (t1._1 == t2._1) t1._2 > t2._2 else t1._1 < t2._1)", "        var\
    \ result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = result :+ (i, j)\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 < b._1) true\n      \
    \      else if (a._1 == b._1) a._2 > b._2\n            else false\n        })",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        val row = lst.zipWithIndex.filter(x => x._1.contains(x)).map(x\
    \ => (x._2, x._1.indexOf(x))).sortBy(x => (x._1, -x._2))\n        row", "    \
    \    var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 < b._1) {\n                true\n            } else if (a._1 == b._1)\
    \ {\n                a._2 > b._2\n            } else {\n                false\n\
    \            }\n        })", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((t1, t2) => {\n            if (t1._1\
    \ < t2._1) true\n            else if (t1._1 > t2._1) false\n            else t1._2\
    \ > t2._2\n        })", "        var result = List[Tuple2[Long, Long]]()\n   \
    \     for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) true\n            else if (a._1 > b._1)\
    \ false\n            else a._2 > b._2\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result = result :+ (i,\
    \ j)\n            }\n        }\n        result.sortWith((a, b) => a._1 < b._1\
    \ || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((x,\
    \ y) => (x._1 < y._1) || (x._1 == y._1 && x._2 > y._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((x,\
    \ y) => if (x._1 < y._1) true else if (x._1 == y._1) x._2 > y._2 else false)",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 > b._1) false\n            else a._2\
    \ > b._2\n        })", "        var result = List[Tuple2[Long, Long]]()\n    \
    \    for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((t1,\
    \ t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        val row = lst.zipWithIndex.filter(x\
    \ => x._1.contains(x)).map(x => (x._2, x._1.indexOf(x._1.find(x => x == x).get))).sortBy(x\
    \ => x._1)\n        val row2 = row.groupBy(x => x._1).map(x => (x._1, x._2.sortBy(x\
    \ => -x._2))).toList.sortBy(x => x._1).map(x => x._2).flatten\n        row2",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n       \
    \     else false\n        })", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((t1,\
    \ t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => {\n            if (x._1\
    \ < y._1) true\n            else if (x._1 == y._1) x._2 > y._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2\
    \ > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((t1,\
    \ t2) => t1._1 < t2._1 || (t1._1 == t2._1 && t1._2 > t2._2))", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2\
    \ else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => if (a._1 < b._1) true else\
    \ if (a._1 == b._1) a._2 > b._2 else false)", "        val result = new ListBuffer[Tuple2[Long,\
    \ Long]]\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result += Tuple2(i, j)\n                }\n            }\n        }\n     \
    \   result.toList.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((x, y) => x._1 < y._1 || (x._1 ==\
    \ y._1 && x._2 > y._2))", "        val row = lst.zipWithIndex.filter(x => x._1.contains(x)).map(x\
    \ => (x._2, x._1.indexOf(x._1.find(y => y == x).get))).sortBy(x => x._1)\n   \
    \     val row2 = row.groupBy(x => x._1).map(x => (x._1, x._2.sortBy(y => -y._2))).toList.sortBy(x\
    \ => x._1).map(x => x._2).flatten\n        row2", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val row = lst.zipWithIndex.filter(x\
    \ => x._1.contains(x)).map(x => (x._2, x._1.indexOf(x._1.find(x => x == x).get))).sortBy(x\
    \ => x._1)\n        row.map(x => (x._1, x._2)).sortBy(x => x._2)", "        var\
    \ result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            var row = lst(i)\n     \
    \       for (j <- 0 until row.length) {\n                if (row(j) == x) {\n\
    \                    result = result :+ (i, j)\n                }\n          \
    \  }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) a._2 > b._2\n            else a._1 < b._1\n        })", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until lst.length) {\n\
    \            val row = lst(i)\n            for (j <- 0 until row.length) {\n \
    \               if (row(j) == x) result += Tuple2(i, j)\n            }\n     \
    \   }\n        result.toList.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 &&\
    \ a._2 > b._2))", "        val result = new ListBuffer[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result += Tuple2(i,\
    \ j)\n                }\n            }\n        }\n        result.toList.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val row = lst.zipWithIndex.filter(x\
    \ => x._1.contains(x)).map(x => (x._2, x._1.indexOf(x._1.find(x => x == x).get)))\n\
    \        row.sortBy(x => x._1).map(x => (x._1, x._2)).sortBy(x => x._2).reverse",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((t1, t2) => if (t1._1 == t2._1) t1._2\
    \ > t2._2 else t1._1 < t2._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      val row = lst(i)\n            for (j <- 0 until row.length) {\n       \
    \         if (row(j) == x) {\n                    result = (i, j) :: result\n\
    \                }\n            }\n        }\n        result.sortWith((a, b) =>\
    \ a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((x, y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))",
  "        var res = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) res = (i, j) :: res\n            }\n        }\n        res.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) a._2 > b._2\n            else a._1 <\
    \ b._1\n        })", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1) a._2 > b._2\
    \ else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        def getRowHelper(lst : List[List[Long]], x : Long,\
    \ row : Long, col : Long, result : List[Tuple2[Long, Long]]) : List[Tuple2[Long,\
    \ Long]] = {\n            if (lst == Nil) result\n            else if (lst.head.contains(x))\
    \ getRowHelper(lst.tail, x, row + 1, col, result ::: List((row, lst.head.indexOf(x))))\n\
    \            else getRowHelper(lst.tail, x, row + 1, col, result)\n        }\n\
    \        getRowHelper(lst, x, 0, 0, Nil).sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => {\n            if (a._1 ==\
    \ b._1) a._2 > b._2\n            else a._1 < b._1\n        })", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n      \
    \          a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) result = (i, j) :: result\n\
    \            }\n        }\n        result.sortWith((a, b) => if (a._1 == b._1)\
    \ a._2 > b._2 else a._1 < b._1)", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 ==\
    \ b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n \
    \       for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = result :+ (i, j)\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => {\n            if\
    \ (a._1 < b._1) {\n                true\n            } else if (a._1 == b._1)\
    \ {\n                a._2 > b._2\n            } else {\n                false\n\
    \            }\n        })", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) {\n                a._2 > b._2\n    \
    \        } else {\n                a._1 < b._1\n            }\n        })", " \
    \       var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((t1, t2) => t1._1 < t2._1 || (t1._1\
    \ == t2._1 && t1._2 > t2._2))", "        def getRowHelper(lst : List[List[Long]],\
    \ x : Long, row : Long, col : Long, acc : List[Tuple2[Long, Long]]) : List[Tuple2[Long,\
    \ Long]] = {\n            if (lst.isEmpty) acc\n            else {\n         \
    \       val (head, tail) = (lst.head, lst.tail)\n                val (head1, tail1)\
    \ = (head.head, head.tail)\n                if (head1 == x) getRowHelper(tail,\
    \ x, row + 1, col, (row, col) :: acc)\n                else if (tail1.isEmpty)\
    \ getRowHelper(tail, x, row + 1, col, acc)\n                else getRowHelper(lst,\
    \ x, row, col + 1, acc)\n            }\n        }\n        getRowHelper(lst, x,\
    \ 0, 0, Nil).sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ result = (i, j) :: result\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val row = lst.zipWithIndex.filter(x\
    \ => x._1.contains(x)).map(x => (x._2, x._1.indexOf(x._1.find(y => y == x).get))).sortBy(x\
    \ => (x._1, -x._2))\n        row", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => {\n            if (a._1 <\
    \ b._1) true\n            else if (a._1 > b._1) false\n            else a._2 >\
    \ b._2\n        })", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = result :+ (i, j)\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 < b._1) {\n                true\n            }\
    \ else if (a._1 == b._1) {\n                a._2 > b._2\n            } else {\n\
    \                false\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => {\n            if (a._1 == b._1) {\n        \
    \        a._2 > b._2\n            } else {\n                a._1 < b._1\n    \
    \        }\n        })", "        var result = List[Tuple2[Long, Long]]()\n  \
    \      for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 > b._1) false\n            else a._2\
    \ > b._2\n        })", "        var result = List[Tuple2[Long, Long]]()\n    \
    \    for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ new ListBuffer[Tuple2[Long, Long]]\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result += Tuple2(i, j)\n                }\n   \
    \         }\n        }\n        result.toList.sortWith((a, b) => a._1 < b._1 ||\
    \ (a._1 == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => (a._1 < b._1) || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = (i, j) :: result\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) result = result :+ (i, j)\n         \
    \   }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1\
    \ && a._2 > b._2))", "        val row = lst.zipWithIndex.filter(x => x._1.contains(x)).map(x\
    \ => (x._2, x._1.indexOf(x._1.find(x => x == x).get))).sortBy(x => x._1).sortBy(x\
    \ => -x._2)\n        row", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        val result =\
    \ ListBuffer[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n\
    \            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result += Tuple2(i, j)\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2)).toList", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = result :+ (i, j)\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ < b._1) true\n            else if (a._1 == b._1) a._2 > b._2\n            else\
    \ false\n        })", "        var result = List[Tuple2[Long, Long]]()\n     \
    \   for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = result\
    \ :+ (i, j)\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => {\n            if (a._1 == b._1) a._2 > b._2\n            else a._1 <\
    \ b._1\n        })", "        var result = List[Tuple2[Long, Long]]()\n      \
    \  for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)", "        var result\
    \ = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n    \
    \        for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) ==\
    \ x) {\n                    result = (i, j) :: result\n                }\n   \
    \         }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((a, b) => a._1 < b._1 || (a._1 == b._1 && a._2 > b._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) result = result :+ (i, j)\n            }\n        }\n        result.sortWith((x,\
    \ y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))", "        var result =\
    \ List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length) {\n      \
    \      for (j <- 0 until lst(i).length) {\n                if (lst(i)(j) == x)\
    \ {\n                    result = (i, j) :: result\n                }\n      \
    \      }\n        }\n        result.sortWith((a, b) => {\n            if (a._1\
    \ == b._1) {\n                a._2 > b._2\n            } else {\n            \
    \    a._1 < b._1\n            }\n        })", "        var result = List[Tuple2[Long,\
    \ Long]]()\n        for (i <- 0 until lst.length) {\n            for (j <- 0 until\
    \ lst(i).length) {\n                if (lst(i)(j) == x) {\n                  \
    \  result = (i, j) :: result\n                }\n            }\n        }\n  \
    \      result.sortWith((x, y) => x._1 < y._1 || (x._1 == y._1 && x._2 > y._2))",
  "        var result = List[Tuple2[Long, Long]]()\n        for (i <- 0 until lst.length)\
    \ {\n            for (j <- 0 until lst(i).length) {\n                if (lst(i)(j)\
    \ == x) {\n                    result = (i, j) :: result\n                }\n\
    \            }\n        }\n        result.sortWith((a, b) => a._1 < b._1 || (a._1\
    \ == b._1 && a._2 > b._2))", "        var result = List[Tuple2[Long, Long]]()\n\
    \        for (i <- 0 until lst.length) {\n            for (j <- 0 until lst(i).length)\
    \ {\n                if (lst(i)(j) == x) {\n                    result = (i, j)\
    \ :: result\n                }\n            }\n        }\n        result.sortWith((a,\
    \ b) => if (a._1 == b._1) a._2 > b._2 else a._1 < b._1)"]
stop_tokens:
- "\n    }\n"

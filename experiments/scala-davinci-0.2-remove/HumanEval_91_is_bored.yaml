name: HumanEval_91_is_bored
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You'll be given a string of words, and your task is to count the number\n\
  \    // of boredoms. A boredom is a sentence that starts with the word \"I\".\n\
  \    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n    def\
  \ isBored(S : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isBored((\"Hello\
  \ world\")) == (0l));\n    assert(isBored((\"Is the sky blue?\")) == (0l));\n  \
  \  assert(isBored((\"I love It !\")) == (1l));\n    assert(isBored((\"bIt\")) ==\
  \ (0l));\n    assert(isBored((\"I feel good today. I will be productive. will kill\
  \ It\")) == (2l));\n    assert(isBored((\"You and I are going for a walk\")) ==\
  \ (0l));\n    }\n\n}\n"
completions: ["        var bored = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                bored += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        bored", "        val words\
    \ = S.split(\"[.?!]\")\n        var count = 0\n        for (word <- words) {\n\
    \            if (word.startsWith(\"I\")) {\n                count += 1\n     \
    \       }\n        }\n        return count", "        var bored = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            var j = i + 1\n                while (j < S.length && S(j) != '.'\
    \ && S(j) != '?' && S(j) != '!') j += 1\n                bored += 1\n        \
    \        i = j\n            }\n            else i += 1\n        }\n        bored",
  "        var bored = 0L\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                bored += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n            \
    \        i += 1\n                }\n            }\n            i += 1\n      \
    \  }\n        bored", "        var count = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                count += 1\n\
    \                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) !=\
    \ '!') i += 1\n            }\n            i += 1\n        }\n        count", " \
    \       var count = 0L\n        var i = 0\n        while (i < S.length) {\n  \
    \          if (S(i) == 'I') {\n                var j = i + 1\n               \
    \ while (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j += 1\n \
    \               count += 1\n                i = j\n            } else i += 1\n\
    \        }\n        count", "        val words = S.split(\" \")\n        var bored\
    \ = 0\n        for (i <- 0 until words.length) {\n            if (words(i) ==\
    \ \"I\") {\n                if (i == 0) {\n                    bored += 1\n  \
    \              } else {\n                    if (words(i - 1).endsWith(\".\"))\
    \ {\n                        bored += 1\n                    }\n             \
    \   }\n            }\n        }\n        bored", "        val words = S.split(\"\
    \ \")\n        var boredoms = 0\n        for (i <- 0 until words.length) {\n \
    \           if (words(i) == \"I\") {\n                boredoms += 1\n        \
    \    }\n        }\n        boredoms", "        var bored = 0\n        var i =\
    \ 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n        \
    \        bored += 1\n                while (i < S.length && S(i) != '.' && S(i)\
    \ != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n\
    \        bored", "        val words = S.split(\"[.?!]\")\n        var count =\
    \ 0\n        for (word <- words) {\n            if (word.startsWith(\"I\")) count\
    \ += 1\n        }\n        count", "        val words = S.split(\"[.?!]\")\n \
    \       var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val s = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (s(i).startsWith(\"I\")) count += 1\n        }\n        count", "        var\
    \ count = 0L\n        var i = 0\n        while (i < S.length) {\n            if\
    \ (S(i) == 'I') {\n                count += 1\n                while (i < S.length\
    \ && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n      \
    \      i += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.length\
    \ > 0 && word(0) == 'I') count += 1\n        }\n        count", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                count += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        words.filter(x => x.startsWith(\"I\")).size", "        val words =\
    \ S.split(\"[.?!]\")\n        words.filter(x => x.startsWith(\"I\")).size", " \
    \       val words = S.split(\"[.?!]\")\n        var count = 0\n        for (word\
    \ <- words) {\n            if (word.startsWith(\"I\")) {\n                count\
    \ += 1\n            }\n        }\n        return count", "        var count =\
    \ 0\n        var isBored = false\n        for (c <- S) {\n            if (c ==\
    \ '.' || c == '?' || c == '!') {\n                if (isBored) count += 1\n  \
    \              isBored = false\n            } else if (c == 'I') {\n         \
    \       isBored = true\n            }\n        }\n        return count", "   \
    \     var bored = 0\n        var i = 0\n        while (i < S.length) {\n     \
    \       if (S(i) == 'I') {\n                bored += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        bored", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        count", "        var count = 0\n        var i = 0\n      \
    \  while (i < S.length) {\n            if (S(i) == 'I') {\n                count\
    \ += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') {\n                    i += 1\n                }\n            }\n  \
    \          i += 1\n        }\n        return count", "        val words = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (word <- words) {\n            if\
    \ (word.startsWith(\"I\")) count += 1\n        }\n        count", "        var\
    \ count = 0\n        var i = 0\n        while (i < S.length) {\n            if\
    \ (S(i) == 'I') {\n                count += 1\n                while (i < S.length\
    \ && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n                    i += 1\n\
    \                }\n            }\n            i += 1\n        }\n        return\
    \ count", "        var bored = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                bored += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        bored", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                count += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        count", "        var count = 0\n        var isBored\
    \ = false\n        for (c <- S) {\n            if (c == '.' || c == '?' || c ==\
    \ '!') {\n                if (isBored) count += 1\n                isBored = false\n\
    \            } else if (c == 'I') {\n                isBored = true\n        \
    \    }\n        }\n        count", "        val words = S.split(\"[\\\\.\\\\?!]\"\
    )\n        words.filter(w => w.startsWith(\"I\")).length", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                var j = i\n                while (j < S.length &&\
    \ S(j) != '.' && S(j) != '?' && S(j) != '!') {\n                    j += 1\n \
    \               }\n                if (j - i > 1) {\n                    count\
    \ += 1\n                }\n                i = j\n            }\n            i\
    \ += 1\n        }\n        return count", "        val words = S.split(\"[.?!]\"\
    )\n        words.filter(x => x.startsWith(\"I\")).size", "        var bored =\
    \ 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i) ==\
    \ 'I') {\n                bored += 1\n                while (i < S.length && S(i)\
    \ != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i +=\
    \ 1\n        }\n        bored", "        var count = 0\n        var i = 0\n  \
    \      while (i < S.length) {\n            if (S(i) == 'I') {\n              \
    \  count += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?'\
    \ && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n     \
    \   count", "        val words = S.split(\"[.?!]\")\n        var count = 0\n \
    \       for (word <- words) {\n            if (word.trim().startsWith(\"I\"))\
    \ count += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.trim().startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        count", "        var count\
    \ = 0\n        for (s <- S.split(\"[.?!]\")) {\n            if (s.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val words = S.split(\" \"\
    )\n        var count = 0\n        for (i <- 0 until words.length) {\n        \
    \    if (words(i) == \"I\") {\n                count += 1\n            }\n   \
    \     }\n        return count", "        var boredoms = 0\n        var isBored\
    \ = false\n        for (c <- S) {\n            if (c == 'I') {\n             \
    \   isBored = true\n            } else if (isBored && (c == '.' || c == '?' ||\
    \ c == '!')) {\n                boredoms += 1\n                isBored = false\n\
    \            }\n        }\n        boredoms", "        val words = S.split(\"\
    \ \")\n        var count = 0\n        for (i <- 0 until words.length) {\n    \
    \        if (words(i) == \"I\") {\n                count += 1\n            }\n\
    \        }\n        return count", "        var count = 0\n        var i = 0\n\
    \        while (i < S.length) {\n            if (S(i) == 'I') {\n            \
    \    count += 1\n                while (i < S.length && S(i) != '.' && S(i) !=\
    \ '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n \
    \       count", "        val words = S.split(\"[.?!]\")\n        val bored = words.filter(w\
    \ => w.startsWith(\"I\"))\n        bored.length", "        var bored = 0\n   \
    \     var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                bored += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        bored", "        var count = 0\n        var bored = false\n\
    \        for (c <- S) {\n            if (c == 'I') {\n                bored =\
    \ true\n            } else if (bored && (c == '.' || c == '?' || c == '!')) {\n\
    \                count += 1\n                bored = false\n            }\n  \
    \      }\n        return count", "        val words = S.split(\" \")\n       \
    \ var boredoms = 0\n        for (i <- 0 until words.length) {\n            if\
    \ (words(i) == \"I\") {\n                boredoms += 1\n            }\n      \
    \  }\n        boredoms", "        var c = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                c += 1\n \
    \               while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!')\
    \ i += 1\n            }\n            i += 1\n        }\n        c", "        var\
    \ count = 0\n        var i = 0\n        var j = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') {\n   \
    \                 j += 1\n                }\n                i = j\n         \
    \   }\n            else {\n                while (j < S.length && S(j) != '.'\
    \ && S(j) != '?' && S(j) != '!') {\n                    j += 1\n             \
    \   }\n                i = j\n            }\n        }\n        return count",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var isBored = false\n        for (c <- S) {\n            if (c == 'I')\
    \ {\n                isBored = true\n            } else if (c == '.' || c == '?'\
    \ || c == '!') {\n                if (isBored) count += 1\n                isBored\
    \ = false\n            }\n        }\n        return count", "        val words\
    \ = S.split(\"[.?!]\")\n        words.map(x => x.split(\" \")).filter(x => x.length\
    \ > 0 && x(0) == \"I\").length", "        val words = S.split(\"[.?!]\").map(_.trim)\n\
    \        words.count(_.startsWith(\"I\"))", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var bored = 0\n        var\
    \ words = S.split(\" \")\n        for (i <- 0 until words.length) {\n        \
    \    if (words(i) == \"I\") {\n                bored += 1\n            }\n   \
    \     }\n        return bored", "        val s = S.split(\"[.?!]\")\n        var\
    \ count = 0\n        for (i <- 0 until s.length) {\n            if (s(i).startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.trim.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var count = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            count += 1\n                while (i < S.length && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n    \
    \    }\n        count", "        val words = S.split(\"[.?!]\")\n        words.filter(x\
    \ => x.startsWith(\"I\")).size", "        val words = S.split(\"[.?!]\")\n   \
    \     var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        val words = S.split(\"[.?!]\")\n        words.map(x => x.split(\"\
    \ \")).filter(x => x.length > 0 && x(0) == \"I\").length", "        val sentences\
    \ = S.split(\"[.?!]\")\n        var count = 0\n        for (sentence <- sentences)\
    \ {\n            if (sentence.startsWith(\"I\")) {\n                count += 1\n\
    \            }\n        }\n        return count", "        val sentences = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (sentence <- sentences) {\n     \
    \       if (sentence.startsWith(\"I\")) count += 1\n        }\n        count",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        val s = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i).startsWith(\"I\")) count += 1\n        }\n        count", " \
    \       val words = S.split(\"[.?!]\")\n        var count = 0\n        for (word\
    \ <- words) {\n            if (word.startsWith(\"I\")) count += 1\n        }\n\
    \        count", "        var count = 0\n        var isBored = false\n       \
    \ for (i <- 0 until S.length) {\n            if (S(i) == 'I') isBored = true\n\
    \            else if (S(i) == '.' || S(i) == '?' || S(i) == '!') {\n         \
    \       if (isBored) count += 1\n                isBored = false\n           \
    \ }\n        }\n        return count", "        var bored = 0\n        var i =\
    \ 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n        \
    \        bored += 1\n                while (i < S.length && S(i) != '.' && S(i)\
    \ != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n\
    \        bored", "        var count = 0\n        var i = 0\n        while (i <\
    \ S.length) {\n            if (S(i) == 'I') {\n                count += 1\n  \
    \              while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!')\
    \ i += 1\n            }\n            i += 1\n        }\n        count", "    \
    \    var count = 0\n        var i = 0\n        while (i < S.length) {\n      \
    \      if (S(i) == 'I') {\n                count += 1\n                while (i\
    \ < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n          \
    \  }\n            i += 1\n        }\n        count", "        var bored = 0L\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                bored += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        bored", "        var count = 0\n        var i = 0\n      \
    \  while (i < S.length) {\n            if (S(i) == 'I') {\n                count\
    \ += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') {\n                    i += 1\n                }\n            }\n  \
    \          i += 1\n        }\n        return count", "        var boredoms = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                boredoms += 1\n                while (i < S.length && S(i)\
    \ != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i +=\
    \ 1\n        }\n        boredoms", "        val s = S.split(\"[.?!]\")\n     \
    \   s.map(x => if (x.startsWith(\"I\")) 1 else 0).sum", "        var bored = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                var j = i + 1\n                while (j < S.length && S(j)\
    \ != '.' && S(j) != '?' && S(j) != '!') j += 1\n                bored += 1\n \
    \               i = j\n            }\n            else i += 1\n        }\n   \
    \     bored", "        val words = S.split(\"[.?!]\")\n        words.filter(x\
    \ => x.startsWith(\"I\")).length", "        var count = 0\n        var i = 0\n\
    \        while (i < S.length) {\n            if (S(i) == 'I') {\n            \
    \    var j = i + 1\n                while (j < S.length && S(j) != '.' && S(j)\
    \ != '?' && S(j) != '!') j += 1\n                count += 1\n                i\
    \ = j\n            }\n            else i += 1\n        }\n        count", "  \
    \      var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        val words = S.split(\"\
    [.?!]\")\n        var count = 0L\n        for (word <- words) {\n            if\
    \ (word.startsWith(\"I\")) count += 1\n        }\n        count", "        val\
    \ words = S.split(\"[.?!]\")\n        var count = 0\n        for (word <- words)\
    \ {\n            if (word.startsWith(\"I\")) {\n                count += 1\n \
    \           }\n        }\n        return count", "        var count = 0\n    \
    \    var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n\
    \                count += 1\n                while (i < S.length && S(i) != '.'\
    \ && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n \
    \       }\n        count", "        var count = 0\n        for (i <- 0 until S.length)\
    \ {\n            if (S(i) == 'I') {\n                var j = i + 1\n         \
    \       while (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j +=\
    \ 1\n                count += 1\n                i = j\n            }\n      \
    \  }\n        count", "        val words = S.split(\"[.?!]\")\n        var count\
    \ = 0\n        for (word <- words) {\n            if (word.startsWith(\"I\"))\
    \ count += 1\n        }\n        count", "        var count = 0\n        var i\
    \ = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n      \
    \          count += 1\n                while (i < S.length && S(i) != '.' && S(i)\
    \ != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n\
    \        count", "        var boredoms = 0\n        var isBored = false\n    \
    \    for (c <- S) {\n            if (c == '.' || c == '?' || c == '!') {\n   \
    \             isBored = false\n            } else if (c == 'I') {\n          \
    \      isBored = true\n            } else if (isBored) {\n                boredoms\
    \ += 1\n            }\n        }\n        boredoms", "        var count = 0L\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        count", "        val words = S.split(\"[.?!]\")\n        words.filter(s\
    \ => s.startsWith(\"I\")).size", "        val sentences = S.split(\"[.?!]\")\n\
    \        var count = 0L\n        for (s <- sentences) {\n            if (s.trim().startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var count = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            count += 1\n                while (i < S.length && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n    \
    \    }\n        count", "        var bored = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                var j = i\
    \ + 1\n                while (j < S.length && S(j) != '.' && S(j) != '?' && S(j)\
    \ != '!') j += 1\n                bored += 1\n                i = j\n        \
    \    }\n            else i += 1\n        }\n        bored", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                count += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        val words = S.split(\"[.?!]\")\n        var count = 0\n   \
    \     for (word <- words) {\n            if (word.startsWith(\"I\")) count +=\
    \ 1\n        }\n        count", "        val words = S.split(\"[.?!]\")\n    \
    \    var boredoms = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) boredoms += 1\n        }\n        boredoms", "        val words = S.split(\"\
    [.?!]\")\n        words.filter(x => x.startsWith(\"I\")).length", "        var\
    \ count = 0L\n        var i = 0\n        while (i < S.length) {\n            if\
    \ (S(i) == 'I') {\n                count += 1\n                while (i < S.length\
    \ && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n      \
    \      i += 1\n        }\n        count", "        var count = 0\n        var\
    \ isBored = false\n        for (i <- 0 until S.length) {\n            if (S(i)\
    \ == 'I') isBored = true\n            else if (S(i) == '.' || S(i) == '?' || S(i)\
    \ == '!') {\n                if (isBored) count += 1\n                isBored\
    \ = false\n            }\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') {\n                    i += 1\n         \
    \       }\n            }\n            i += 1\n        }\n        return count",
  "        var count = 0\n        var start = 0\n        var end = 0\n        while\
    \ (end < S.length) {\n            if (S(end) == '.' || S(end) == '?' || S(end)\
    \ == '!') {\n                if (S.substring(start, end).startsWith(\"I\")) count\
    \ += 1\n                start = end + 1\n            }\n            end += 1\n\
    \        }\n        count", "        var count = 0\n        var i = 0\n      \
    \  while (i < S.length) {\n            if (S(i) == 'I') {\n                count\
    \ += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') i += 1\n            }\n            i += 1\n        }\n        count",
  "        val words = S.split(\"[.?!]\")\n        words.filter(x => x.startsWith(\"\
    I\")).length", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        count", "        val words\
    \ = S.split(\"[\\\\.\\\\?!]\")\n        words.filter(x => x.startsWith(\"I\")).size",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                var j = i + 1\n                while\
    \ (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j += 1\n       \
    \         count += 1\n                i = j\n            } else i += 1\n     \
    \   }\n        count", "        var count = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                count += 1\n\
    \                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) !=\
    \ '!') i += 1\n            }\n            i += 1\n        }\n        count", " \
    \       var bored = 0\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                var j = i + 1\n                while\
    \ (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j += 1\n       \
    \         if (j == S.length || S(j) == '.') bored += 1\n            }\n      \
    \      i += 1\n        }\n        bored", "        val sentences = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (sentence <- sentences) {\n     \
    \       if (sentence.startsWith(\"I\")) count += 1\n        }\n        count",
  "        var count = 0\n        var isBored = false\n        for (i <- 0 until S.length)\
    \ {\n            if (S(i) == 'I') {\n                isBored = true\n        \
    \    } else if (S(i) == '.' || S(i) == '?' || S(i) == '!') {\n               \
    \ if (isBored) {\n                    count += 1\n                }\n        \
    \        isBored = false\n            }\n        }\n        return count", " \
    \       var count = 0\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var start = 0\n        var end = 0\n        while (end < S.length) {\n\
    \            if (S(end) == '.' || S(end) == '?' || S(end) == '!') {\n        \
    \        if (S.substring(start, end).startsWith(\"I\")) count += 1\n         \
    \       start = end + 1\n            }\n            end += 1\n        }\n    \
    \    count", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n   \
    \                 i += 1\n                }\n            }\n            i += 1\n\
    \        }\n        return count", "        var count = 0\n        var i = 0\n\
    \        while (i < S.length) {\n            if (S(i) == 'I') {\n            \
    \    count += 1\n                while (i < S.length && S(i) != '.' && S(i) !=\
    \ '?' && S(i) != '!') i += 1\n            }\n            else i += 1\n       \
    \ }\n        count", "        var boredoms = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                boredoms +=\
    \ 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') i += 1\n            }\n            i += 1\n        }\n        boredoms",
  "        var bored = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                bored += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        bored", "        val words = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (word <- words) {\n            if\
    \ (word.startsWith(\"I\")) count += 1\n        }\n        count", "        val\
    \ words = S.split(\"[.?!]\")\n        var count = 0\n        for (word <- words)\
    \ {\n            if (word.startsWith(\"I\")) count += 1\n        }\n        count",
  "        val words = S.split(\"[.?!]\")\n        words.map(w => w.split(\" \")).filter(w\
    \ => w.length > 0 && w(0) == \"I\").length", "        val words = S.split(\"[.?!]\"\
    )\n        words.map(x => x.trim).filter(x => x.startsWith(\"I\")).size", "  \
    \      val words = S.split(\"[.?!]\")\n        words.filter(x => x.startsWith(\"\
    I\")).length", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        count", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                count += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        count", "        var count = 0\n        var i =\
    \ 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n        \
    \        count += 1\n                while (i < S.length && S(i) != '.' && S(i)\
    \ != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n\
    \        count", "        val words = S.split(\"[.?!]\")\n        var count =\
    \ 0\n        for (word <- words) {\n            if (word.startsWith(\"I\")) count\
    \ += 1\n        }\n        count", "        val words = S.split(\"[.?!]\")\n \
    \       words.map(word => word.trim).filter(word => word.startsWith(\"I\")).size",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                var j = i + 1\n                while (j < S.length && S(j)\
    \ != '.' && S(j) != '?' && S(j) != '!') j += 1\n                count += 1\n \
    \               i = j\n            }\n            else i += 1\n        }\n   \
    \     count", "        var count = 0L\n        var isBored = false\n        for\
    \ (c <- S) {\n            if (c == 'I') isBored = true\n            else if (c\
    \ == '.' || c == '?' || c == '!') {\n                if (isBored) count += 1\n\
    \                isBored = false\n            }\n        }\n        return count",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') {\n                    i += 1\n         \
    \       }\n            }\n            i += 1\n        }\n        return count",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        val words = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (word <- words) {\n            if\
    \ (word.startsWith(\"I\")) count += 1\n        }\n        count", "        val\
    \ words = S.split(\"[.?!]\")\n        words.filter(x => x.startsWith(\"I\")).length",
  "        var bored = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                bored += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        bored", "        var count = 0\n\
    \        for (i <- 0 until S.length) {\n            if (S(i) == 'I') {\n     \
    \           count += 1\n            }\n        }\n        return count", "   \
    \     val words = S.split(\"[.?!]\")\n        var count = 0\n        for (word\
    \ <- words) {\n            if (word.startsWith(\"I\")) count += 1\n        }\n\
    \        count", "        var bored = 0\n        var i = 0\n        while (i <\
    \ S.length) {\n            if (S(i) == 'I') {\n                bored += 1\n  \
    \              while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!')\
    \ i += 1\n            }\n            i += 1\n        }\n        bored", "    \
    \    var count = 0\n        var i = 0\n        while (i < S.length) {\n      \
    \      if (S(i) == 'I') {\n                count += 1\n                while (i\
    \ < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n               \
    \     i += 1\n                }\n            }\n            i += 1\n        }\n\
    \        return count", "        var count = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                count += 1\n\
    \                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) !=\
    \ '!') i += 1\n            }\n            i += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        val s = S.split(\"\
    [.?!]\")\n        var cnt = 0\n        for (i <- 0 until s.length) {\n       \
    \     if (s(i).startsWith(\"I\")) cnt += 1\n        }\n        cnt", "       \
    \ val words = S.split(\"[.?!]\")\n        var count = 0\n        for (word <-\
    \ words) {\n            if (word.startsWith(\"I\")) {\n                count +=\
    \ 1\n            }\n        }\n        return count", "        val bored = S.split(\"\
    [.?!]\").filter(x => x.startsWith(\"I\")).size\n        bored", "        val s\
    \ = S.split(\"[.?!]\")\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).startsWith(\"I\")) {\n                count += 1\n \
    \           }\n        }\n        return count", "        var bored = 0\n    \
    \    var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n\
    \                var j = i + 1\n                while (j < S.length && S(j) !=\
    \ '.' && S(j) != '?' && S(j) != '!') j += 1\n                bored += 1\n    \
    \            i = j\n            }\n            else i += 1\n        }\n      \
    \  bored", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                var j = i + 1\n         \
    \       while (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j +=\
    \ 1\n                count += 1\n                i = j\n            }\n      \
    \      else i += 1\n        }\n        count", "        var count = 0\n      \
    \  var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n\
    \                count += 1\n                while (i < S.length && S(i) != '.'\
    \ && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n \
    \       }\n        count", "        val words = S.split(\"[.?!]\")\n        var\
    \ count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) {\n                count += 1\n            }\n        }\n        return\
    \ count", "        val words = S.split(\"[.?!]\")\n        var count = 0\n   \
    \     for (word <- words) {\n            if (word.startsWith(\"I\")) {\n     \
    \           count += 1\n            }\n        }\n        return count", "   \
    \     var count = 0\n        var i = 0\n        while (i < S.length) {\n     \
    \       if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                var j = i + 1\n                while (j < S.length && S(j)\
    \ != '.' && S(j) != '?' && S(j) != '!') j += 1\n                count += 1\n \
    \               i = j\n            }\n            else i += 1\n        }\n   \
    \     count", "        var count = 0\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                count += 1\n            \
    \    while (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n\
    \            }\n            i += 1\n        }\n        count", "        var count\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                count += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var bored = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            var j = i\n                while (j < S.length && S(j) != '.' &&\
    \ S(j) != '?' && S(j) != '!') j += 1\n                if (j == S.length || S(j)\
    \ == '.') bored += 1\n            }\n            i += 1\n        }\n        bored",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        val words = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (word <- words) {\n            if\
    \ (word.trim.startsWith(\"I\")) {\n                count += 1\n            }\n\
    \        }\n        return count", "        var count = 0\n        var i = 0\n\
    \        while (i < S.length) {\n            if (S(i) == 'I') {\n            \
    \    count += 1\n                while (i < S.length && S(i) != '.' && S(i) !=\
    \ '?' && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n \
    \       count", "        val words = S.split(\"[.?!]\")\n        words.filter(x\
    \ => x.startsWith(\"I\")).size", "        var bored = 0\n        var i = 0\n \
    \       while (i < S.length) {\n            if (S(i) == 'I') {\n             \
    \   var j = i\n                while (j < S.length && S(j) != '.' && S(j) != '?'\
    \ && S(j) != '!') j += 1\n                if (j == S.length || S(j) == '.') bored\
    \ += 1\n            }\n            i += 1\n        }\n        bored", "      \
    \  var count = 0\n        var i = 0\n        while (i < S.length) {\n        \
    \    if (S(i) == 'I') {\n                count += 1\n                while (i\
    \ < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n               \
    \     i += 1\n                }\n            }\n            i += 1\n        }\n\
    \        return count", "        var boredoms = 0\n        var i = 0\n       \
    \ while (i < S.length) {\n            if (S(i) == 'I') {\n                boredoms\
    \ += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') i += 1\n            }\n            i += 1\n        }\n        boredoms",
  "        var count = 0L\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') {\n                    i += 1\n         \
    \       }\n            }\n            i += 1\n        }\n        return count",
  "        var count = 0\n        var isBored = false\n        for (i <- 0 until S.length)\
    \ {\n            if (S(i) == 'I') isBored = true\n            else if (S(i) ==\
    \ '.' || S(i) == '?' || S(i) == '!') {\n                if (isBored) count +=\
    \ 1\n                isBored = false\n            }\n        }\n        count",
  "        val words = S.split(\"[.?!]\")\n        words.filter(x => x.startsWith(\"\
    I\")).length", "        val words = S.split(\"[.?!]\")\n        var count = 0\n\
    \        for (word <- words) {\n            if (word.trim().startsWith(\"I\"))\
    \ count += 1\n        }\n        count", "        val words = S.split(\" \")\n\
    \        var bored = 0\n        for (i <- 0 until words.length) {\n          \
    \  if (words(i) == \"I\") {\n                bored += 1\n            }\n     \
    \   }\n        bored", "        val sentences = S.split(\"[.?!]\")\n        sentences.filter(_.startsWith(\"\
    I\")).size", "        var count = 0L\n        var i = 0\n        while (i < S.length)\
    \ {\n            if (S(i) == 'I') {\n                var j = i + 1\n         \
    \       while (j < S.length && S(j) != '.' && S(j) != '?' && S(j) != '!') j +=\
    \ 1\n                count += 1\n                i = j\n            } else i +=\
    \ 1\n        }\n        count", "        var bored = 0\n        var i = 0\n  \
    \      while (i < S.length) {\n            if (S(i) == 'I') {\n              \
    \  bored += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?'\
    \ && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n     \
    \   bored", "        val words = S.split(\"[.?!]\")\n        var count = 0\n \
    \       for (word <- words) {\n            if (word.startsWith(\"I\")) count +=\
    \ 1\n        }\n        count", "        var count = 0\n        var i = 0\n  \
    \      while (i < S.length) {\n            if (S(i) == 'I') {\n              \
    \  count += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?'\
    \ && S(i) != '!') i += 1\n            }\n            i += 1\n        }\n     \
    \   count", "        val str = S.split(\"[.?!]\")\n        var count = 0\n   \
    \     for (i <- 0 until str.length) {\n            if (str(i).startsWith(\"I\"\
    )) count += 1\n        }\n        count", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        val sentences = S.split(\"\
    [.?!]\")\n        var boredoms = 0\n        for (sentence <- sentences) {\n  \
    \          if (sentence.startsWith(\"I\")) boredoms += 1\n        }\n        boredoms",
  "        var bored = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                bored += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        bored", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        count", "        var count = 0\n        var i = 0\n      \
    \  while (i < S.length) {\n            if (S(i) == 'I') {\n                count\
    \ += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?' && S(i)\
    \ != '!') {\n                    i += 1\n                }\n            }\n  \
    \          i += 1\n        }\n        return count", "        var bored = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                var j = i + 1\n                while (j < S.length && S(j)\
    \ != '.' && S(j) != '?' && S(j) != '!') {\n                    j += 1\n      \
    \          }\n                if (j == S.length || S(j) == '.') {\n          \
    \          bored += 1\n                }\n                i = j\n            }\n\
    \            i += 1\n        }\n        bored", "        var count = 0\n     \
    \   var isBored = false\n        for (c <- S) {\n            if (c == 'I') {\n\
    \                isBored = true\n            } else if (c == '.' || c == '?' ||\
    \ c == '!') {\n                if (isBored) count += 1\n                isBored\
    \ = false\n            }\n        }\n        return count", "        var bored\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                bored += 1\n                while (i < S.length &&\
    \ S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n         \
    \   i += 1\n        }\n        bored", "        val words = S.split(\"[.?!]\"\
    )\n        var count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var count = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            count += 1\n                while (i < S.length && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n    \
    \    }\n        count", "        var bored = 0\n        var i = 0\n        while\
    \ (i < S.length) {\n            if (S(i) == 'I') {\n                var j = i\
    \ + 1\n                while (j < S.length && S(j) != '.' && S(j) != '?' && S(j)\
    \ != '!') j += 1\n                bored += 1\n                i = j\n        \
    \    }\n            else i += 1\n        }\n        bored", "        val s = S.split(\"\
    [.?!]\")\n        var count = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i).startsWith(\"I\")) count += 1\n        }\n        count", " \
    \       var count = 0\n        var i = 0\n        while (i < S.length) {\n   \
    \         if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var boredoms\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                boredoms += 1\n                while (i < S.length\
    \ && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n      \
    \      i += 1\n        }\n        boredoms", "        var count = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            count += 1\n                while (i < S.length && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') {\n                    i += 1\n                }\n\
    \            }\n            i += 1\n        }\n        return count", "      \
    \  var count = 0\n        var i = 0\n        while (i < S.length) {\n        \
    \    if (S(i) == 'I') {\n                count += 1\n                while (i\
    \ < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') {\n               \
    \     i += 1\n                }\n            }\n            i += 1\n        }\n\
    \        return count", "        val words = S.split(\"[.?!]\")\n        var count\
    \ = 0\n        for (word <- words) {\n            if (word.startsWith(\"I\"))\
    \ count += 1\n        }\n        count", "        val words = S.split(\" \")\n\
    \        var boredoms = 0\n        for (i <- 0 until words.length) {\n       \
    \     if (words(i) == \"I\") {\n                boredoms += 1\n            }\n\
    \        }\n        boredoms", "        val n = S.length\n        var count =\
    \ 0\n        var i = 0\n        while (i < n) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < n && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') i += 1\n            }\n            while (i < n\
    \ && S(i) != 'I') i += 1\n        }\n        count", "        var count = 0\n\
    \        var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I')\
    \ {\n                count += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        count", "        val words = S.split(\"[.?!]\")\n        var\
    \ count = 0\n        for (word <- words) {\n            if (word.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var count = 0\n        var\
    \ i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n    \
    \            count += 1\n                while (i < S.length && S(i) != '.' &&\
    \ S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n    \
    \    }\n        count", "        val s = S.split(\"[.?!]\")\n        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i).trim.startsWith(\"\
    I\")) count += 1\n        }\n        count", "        var boredoms = 0\n     \
    \   var i = 0\n        while (i < S.length) {\n            if (S(i) == 'I') {\n\
    \                boredoms += 1\n                while (i < S.length && S(i) !=\
    \ '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n            i += 1\n\
    \        }\n        boredoms", "        var count = 0\n        var i = 0\n   \
    \     while (i < S.length) {\n            if (S(i) == 'I') {\n               \
    \ count += 1\n                while (i < S.length && S(i) != '.' && S(i) != '?'\
    \ && S(i) != '!') {\n                    i += 1\n                }\n         \
    \   }\n            i += 1\n        }\n        return count", "        val words\
    \ = S.split(\"[.?!]\")\n        var count = 0\n        for (word <- words) {\n\
    \            if (word.startsWith(\"I\")) count += 1\n        }\n        count",
  "        var count = 0\n        var i = 0\n        while (i < S.length) {\n    \
    \        if (S(i) == 'I') {\n                count += 1\n                while\
    \ (i < S.length && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n       \
    \     }\n            i += 1\n        }\n        count", "        var boredoms\
    \ = 0\n        var i = 0\n        while (i < S.length) {\n            if (S(i)\
    \ == 'I') {\n                boredoms += 1\n                while (i < S.length\
    \ && S(i) != '.' && S(i) != '?' && S(i) != '!') i += 1\n            }\n      \
    \      i += 1\n        }\n        boredoms"]
stop_tokens:
- "\n    }\n"

name: HumanEval_138_is_equal_to_sum_even
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n    // Example\n    def isEqualToSumEven(n : Long) :\
  \ Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isEqualToSumEven((4l))\
  \ == (false));\n    assert(isEqualToSumEven((6l)) == (false));\n    assert(isEqualToSumEven((8l))\
  \ == (true));\n    assert(isEqualToSumEven((10l)) == (true));\n    assert(isEqualToSumEven((11l))\
  \ == (false));\n    assert(isEqualToSumEven((12l)) == (true));\n    assert(isEqualToSumEven((13l))\
  \ == (false));\n    assert(isEqualToSumEven((16l)) == (true));\n    }\n\n}\n"
completions: ["        var result = false\n        for (i <- 1 to n.toInt / 2) {\n\
    \            for (j <- 1 to n.toInt / 2) {\n                for (k <- 1 to n.toInt\
    \ / 2) {\n                    for (l <- 1 to n.toInt / 2) {\n                \
    \        if (i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l\
    \ % 2 == 0) {\n                            result = true\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        result", "        val m = n / 2\n        val limit = sqrt(m).toLong\n\
    \        for (i <- 1L to limit) {\n            val j = m - i * i\n           \
    \ if (j % 2 == 0) {\n                val k = j / 2\n                val l = sqrt(k).toLong\n\
    \                if (l * l == k) return true\n            }\n        }\n     \
    \   return false", "        if (n % 2 != 0) return false\n        val m = n /\
    \ 2\n        val limit = sqrt(m).toLong\n        for (i <- 2 to limit) {\n   \
    \         if (m % i == 0) {\n                val j = m / i\n                if\
    \ (i % 2 == 0 && j % 2 == 0) return true\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        val a = m / 2\n        val b = m - a\n\
    \        val c = a / 2\n        val d = a - c\n        val e = b / 2\n       \
    \ val f = b - e\n        val g = c / 2\n        val h = c - g\n        val i =\
    \ d / 2\n        val j = d - i\n        val k = e / 2\n        val l = e - k\n\
    \        val m1 = f / 2\n        val n1 = f - m1\n        val o = g / 2\n    \
    \    val p = g - o\n        val q = h / 2\n        val r = h - q\n        val\
    \ s = i / 2\n        val t = i - s\n        val u = j / 2\n        val v = j -\
    \ u\n        val w = k / 2\n        val x = k - w\n        val y = l / 2\n   \
    \     val z = l - y\n        val a1 = m1 / 2\n        val b1 = m1 - a1\n     \
    \   val c1 = n1 / 2\n        val d1 = n1 - c1\n        val e1 = o / 2\n      \
    \  val f1 = o - e1\n        val g1 = p / 2\n        val h1 = p - g1\n        val\
    \ i1 = q / 2\n        val j1 = q - i1\n        val k1 = r / 2\n        val l1\
    \ = r - k1\n        val m2 = s / 2\n        val n2 = s - m2\n        val o1 =\
    \ t / 2\n        val p1 = t - o1\n        val q1 = u / 2\n        val r1 = u -\
    \ q1\n        val s1 = v / 2\n        val t1 = v - s1\n        val u1 = w / 2\n\
    \        val v1 = w - u1\n        val w1 = x / 2\n        val x1 = x - w1\n  \
    \      val y1 = y / 2\n        val z1 = y - y1\n        val a2 = z / 2\n     \
    \   val b2 = z - a2\n        val c2 = a1 / 2\n        val d2 = a1 - c2\n     \
    \  ", "        val limit = n / 4\n        val limit2 = limit * 2\n        val\
    \ limit3 = limit * 3\n        val limit4 = limit * 4\n        for (i <- 1 to limit.toInt)\
    \ {\n            val i2 = i * 2\n            for (j <- i to limit.toInt) {\n \
    \               val j2 = j * 2\n                for (k <- j to limit.toInt) {\n\
    \                    val k2 = k * 2\n                    for (l <- k to limit.toInt)\
    \ {\n                        val l2 = l * 2\n                        if (i2 +\
    \ j2 + k2 + l2 == n) return true\n                    }\n                }\n \
    \           }\n        }\n        false", "        val m = n / 2\n        val\
    \ a = m / 2\n        val b = m - a\n        val c = b / 2\n        val d = b -\
    \ c\n        val e = d / 2\n        val f = d - e\n        val g = f / 2\n   \
    \     val h = f - g\n        val i = h / 2\n        val j = h - i\n        val\
    \ k = j / 2\n        val l = j - k\n        val o = l / 2\n        val p = l -\
    \ o\n        val q = p / 2\n        val r = p - q\n        val s = r / 2\n   \
    \     val t = r - s\n        val u = t / 2\n        val v = t - u\n        val\
    \ w = v / 2\n        val x = v - w\n        val y = x / 2\n        val z = x -\
    \ y\n        val aa = z / 2\n        val bb = z - aa\n        val cc = bb / 2\n\
    \        val dd = bb - cc\n        val ee = dd / 2\n        val ff = dd - ee\n\
    \        val gg = ff / 2\n        val hh = ff - gg\n        val ii = hh / 2\n\
    \        val jj = hh - ii\n        val kk = jj / 2\n        val ll = jj - kk\n\
    \        val mm = ll / 2\n        val nn = ll - mm\n        val oo = nn / 2\n\
    \        val pp = nn - oo\n        val qq = pp / 2\n        val rr = pp - qq\n\
    \        val ss = rr / 2\n        val tt = rr - ss\n        val uu = tt / 2\n\
    \        val vv = tt - uu\n        val ww = vv / 2\n        val xx = vv - ww\n\
    \        val yy = xx / 2\n        val zz = xx - yy\n        val aaa = zz / 2\n\
    \        val bbb = zz - aaa\n        val ccc = bbb / 2\n        val ddd = bbb\
    \ - ccc\n        val eee = ddd / 2\n        val fff = ddd - eee\n", "        val\
    \ m = n / 2\n        for (i <- 1L to m) {\n            for (j <- 1L to m) {\n\
    \                for (k <- 1L to m) {\n                    for (l <- 1L to m)\
    \ {\n                        if (i + j + k + l == m) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        // If n is odd, then it cannot be written as the sum of 4 positive even\
    \ numbers\n        if (n % 2 == 1) return false\n        // If n is even, then\
    \ it can be written as the sum of 4 positive even numbers if and only if\n   \
    \     // n is divisible by 4\n        if (n % 4 == 0) return true\n        //\
    \ Otherwise, it cannot be written as the sum of 4 positive even numbers\n    \
    \    return false", "        val m = n / 2\n        for (i <- 1L to m) {\n   \
    \         for (j <- 1L to m) {\n                for (k <- 1L to m) {\n       \
    \             for (l <- 1L to m) {\n                        if (i + j + k + l\
    \ == m) return true\n                    }\n                }\n            }\n\
    \        }\n        return false", "        val m = n / 2\n        val sqrt =\
    \ sqrt(m).toLong\n        for (i <- 2 to sqrt) {\n            if (m % i == 0)\
    \ {\n                val j = m / i\n                if (i % 2 == 0 && j % 2 ==\
    \ 0) return true\n            }\n        }\n        return false", "        if\
    \ (n % 2 != 0) return false\n        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n\
    \        for (i <- 1L to sqrtm) {\n            val j = m - i * i\n           \
    \ if (j > 0 && j % 2 == 0) {\n                val k = sqrt(j).toLong\n       \
    \         if (k * k == j) return true\n            }\n        }\n        return\
    \ false", "        var sum = 0L\n        var count = 0\n        var i = 2\n  \
    \      while (sum < n && count < 4) {\n            if (i % 2 == 0) {\n       \
    \         sum += i\n                count += 1\n            }\n            i +=\
    \ 1\n        }\n        if (sum == n) true else false", "        val limit = n\
    \ / 4\n        for (i <- 2 to limit by 2) {\n            for (j <- i to limit\
    \ by 2) {\n                for (k <- j to limit by 2) {\n                    for\
    \ (l <- k to limit by 2) {\n                        if (i + j + k + l == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        var result = false\n        for (i <- 2 to n.toInt\
    \ by 2) {\n            for (j <- 2 to n.toInt by 2) {\n                for (k\
    \ <- 2 to n.toInt by 2) {\n                    for (l <- 2 to n.toInt by 2) {\n\
    \                        if (i + j + k + l == n) {\n                         \
    \   result = true\n                        }\n                    }\n        \
    \        }\n            }\n        }\n        result", "        val m = n / 2\n\
    \        val s = (1 to m).toSet\n        val s2 = s.map(x => x * x)\n        val\
    \ s3 = s2.map(x => x * x)\n        val s4 = s3.map(x => x * x)\n        val s5\
    \ = s4.map(x => x * x)\n        val s6 = s5.map(x => x * x)\n        val s7 =\
    \ s6.map(x => x * x)\n        val s8 = s7.map(x => x * x)\n        val s9 = s8.map(x\
    \ => x * x)\n        val s10 = s9.map(x => x * x)\n        val s11 = s10.map(x\
    \ => x * x)\n        val s12 = s11.map(x => x * x)\n        val s13 = s12.map(x\
    \ => x * x)\n        val s14 = s13.map(x => x * x)\n        val s15 = s14.map(x\
    \ => x * x)\n        val s16 = s15.map(x => x * x)\n        val s17 = s16.map(x\
    \ => x * x)\n        val s18 = s17.map(x => x * x)\n        val s19 = s18.map(x\
    \ => x * x)\n        val s20 = s19.map(x => x * x)\n        val s21 = s20.map(x\
    \ => x * x)\n        val s22 = s21.map(x => x * x)\n        val s23 = s22.map(x\
    \ => x * x)\n        val s24 = s23.map(x => x * x)\n        val s25 = s24.map(x\
    \ => x * x)\n        val s26 = s25.map(x => x * x)\n        val s27 = s26.map(x\
    \ => x * x)\n        val s28 = s27.map(x => x * x)\n        val s29 = s28.map(x\
    \ => x * x)\n        val s30 = s29.map(x => x * x)", "        val half = n / 2\n\
    \        val sqrt = sqrt(half).toLong\n        for (a <- 2 to sqrt) {\n      \
    \      val b = half / a\n            if (a * b == half && (a + b) % 2 == 0) return\
    \ true\n        }\n        return false", "        val m = n / 2\n        for\
    \ (i <- 1L to m) {\n            for (j <- i to m) {\n                for (k <-\
    \ j to m) {\n                    for (l <- k to m) {\n                       \
    \ if (i + j + k + l == m) return true\n                    }\n               \
    \ }\n            }\n        }\n        return false", "        val m = n / 2\n\
    \        val a = m / 2\n        val b = m - a\n        val c = a / 2\n       \
    \ val d = a - c\n        val e = b / 2\n        val f = b - e\n        val g =\
    \ c / 2\n        val h = c - g\n        val i = d / 2\n        val j = d - i\n\
    \        val k = e / 2\n        val l = e - k\n        val m = f / 2\n       \
    \ val o = f - m\n        val p = g / 2\n        val q = g - p\n        val r =\
    \ h / 2\n        val s = h - r\n        val t = i / 2\n        val u = i - t\n\
    \        val v = j / 2\n        val w = j - v\n        val x = k / 2\n       \
    \ val y = k - x\n        val z = l / 2\n        val aa = l - z\n        val bb\
    \ = m / 2\n        val cc = m - bb\n        val dd = o / 2\n        val ee = o\
    \ - dd\n        val ff = p / 2\n        val gg = p - ff\n        val hh = q /\
    \ 2\n        val ii = q - hh\n        val jj = r / 2\n        val kk = r - jj\n\
    \        val ll = s / 2\n        val mm = s - ll\n        val nn = t / 2\n   \
    \     val oo = t - nn\n        val pp = u / 2\n        val qq = u - pp\n     \
    \   val rr = v / 2\n        val ss = v - rr\n        val tt = w / 2\n        val\
    \ uu = w - tt\n        val vv = x / 2\n        val ww = x - vv\n        val xx\
    \ = y / 2\n        val yy = y - xx\n        val zz = z / 2\n        val aaa =\
    \ z - zz\n        val bbb = aa / 2\n        val ccc = aa - bbb\n        val ddd\
    \ = bb / 2\n        val eee = bb - ddd\n        val fff = cc / 2\n        val\
    \ ggg = cc - fff\n", "        var result = false\n        for (i <- 1L to n /\
    \ 4) {\n            for (j <- i to n / 3) {\n                for (k <- j to n\
    \ / 2) {\n                    val l = n - i - j - k\n                    if (l\
    \ >= k && l % 2 == 0) {\n                        result = true\n             \
    \           println(i + \" \" + j + \" \" + k + \" \" + l)\n                 \
    \   }\n                }\n            }\n        }\n        result", "       \
    \ var sum = 0L\n        var count = 0\n        var i = 2\n        while (sum <\
    \ n && count < 4) {\n            if (n - sum >= i) {\n                sum += i\n\
    \                count += 1\n            }\n            i += 2\n        }\n  \
    \      if (sum == n && count == 4) true else false", "        val max = n / 4\n\
    \        for (i <- 1L to max) {\n            for (j <- i to max) {\n         \
    \       for (k <- j to max) {\n                    for (l <- k to max) {\n   \
    \                     if (i + j + k + l == n) {\n                            return\
    \ true\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return false", "        val m = n / 2\n   \
    \     for (i <- 1L to m) {\n            val j = n - i\n            if (i % 2 ==\
    \ 0 && j % 2 == 0) return true\n        }\n        return false", "        val\
    \ max = n / 4\n        val min = n / 2\n        for (i <- min to max) {\n    \
    \        for (j <- i to max) {\n                for (k <- j to max) {\n      \
    \              for (l <- k to max) {\n                        if (i + j + k +\
    \ l == n) return true\n                    }\n                }\n            }\n\
    \        }\n        return false", "        val max = n / 4\n        for (i <-\
    \ 1 to max.toInt) {\n            for (j <- i to max.toInt) {\n               \
    \ for (k <- j to max.toInt) {\n                    for (l <- k to max.toInt) {\n\
    \                        if (i + j + k + l == n) return true\n               \
    \     }\n                }\n            }\n        }\n        return false", " \
    \       val limit = n / 4\n        for (i <- 2 to limit by 2) {\n            for\
    \ (j <- 2 to limit by 2) {\n                for (k <- 2 to limit by 2) {\n   \
    \                 for (l <- 2 to limit by 2) {\n                        if (i\
    \ + j + k + l == n) return true\n                    }\n                }\n  \
    \          }\n        }\n        return false", "        val half = n / 2\n  \
    \      for (i <- 1 to half.toInt) {\n            val j = n - i\n            if\
    \ (i % 2 == 0 && j % 2 == 0) return true\n        }\n        return false", " \
    \       val m = n / 2\n        val max = (m - 1) / 2\n        for (i <- 1 to max)\
    \ {\n            val j = m - i\n            if (j % 2 == 0) {\n              \
    \  val k = j / 2\n                val l = m - k\n                if (l % 2 ==\
    \ 0) return true\n            }\n        }\n        return false", "        val\
    \ m = n / 2\n        for (i <- 1L to m) {\n            for (j <- 1L to m) {\n\
    \                for (k <- 1L to m) {\n                    for (l <- 1L to m)\
    \ {\n                        if (i + j + k + l == m) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        val limit = n / 4\n        var sum = 0L\n        for (i <- 1 to limit.toInt)\
    \ {\n            if (i % 2 == 0) {\n                sum += i\n               \
    \ if (sum == n) return true\n            }\n        }\n        return false",
  "        if (n % 2 != 0) return false\n        val limit = n / 2\n        for (i\
    \ <- 1L to limit) {\n            if (i % 2 == 0) {\n                val j = n\
    \ - i\n                if (j % 2 == 0) {\n                    val k = j / 2\n\
    \                    if (k % 2 == 0) {\n                        val l = k / 2\n\
    \                        if (l % 2 == 0) {\n                            val m\
    \ = l / 2\n                            if (m % 2 == 0) {\n                   \
    \             return true\n                            }\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        return false", "        if (n % 2 != 0) return false\n        val half\
    \ = n / 2\n        val sqrt = sqrt(half).toLong\n        for (i <- 2L to sqrt)\
    \ {\n            if (half % i == 0) {\n                val j = half / i\n    \
    \            if (i % 2 == 0 && j % 2 == 0) return true\n            }\n      \
    \  }\n        return false", "        var sum = 0L\n        for (i <- 1 to n.toInt)\
    \ {\n            if (i % 2 == 0) {\n                sum += i\n               \
    \ if (sum == n) return true\n            }\n        }\n        return false",
  "        val limit = n / 4\n        def isEqualToSumEven(n : Long, sum : Long, count\
    \ : Int) : Boolean = {\n            if (sum == n && count == 4) true\n       \
    \     else if (sum > n || count > 4) false\n            else {\n             \
    \   var found = false\n                for (i <- 2 to limit by 2) {\n        \
    \            if (isEqualToSumEven(n, sum + i, count + 1)) {\n                \
    \        found = true\n                        return true\n                 \
    \   }\n                }\n                found\n            }\n        }\n  \
    \      isEqualToSumEven(n, 0, 0)", "        val n2 = n / 2\n        val n4 = n2\
    \ / 2\n        val n8 = n4 / 2\n        val n16 = n8 / 2\n        val n32 = n16\
    \ / 2\n        val n64 = n32 / 2\n        val n128 = n64 / 2\n        val n256\
    \ = n128 / 2\n        val n512 = n256 / 2\n        val n1024 = n512 / 2\n    \
    \    val n2048 = n1024 / 2\n        val n4096 = n2048 / 2\n        val n8192 =\
    \ n4096 / 2\n        val n16384 = n8192 / 2\n        val n32768 = n16384 / 2\n\
    \        val n65536 = n32768 / 2\n        val n131072 = n65536 / 2\n        val\
    \ n262144 = n131072 / 2\n        val n524288 = n262144 / 2\n        val n1048576\
    \ = n524288 / 2\n        val n2097152 = n1048576 / 2\n        val n4194304 = n2097152\
    \ / 2\n        val n8388608 = n4194304 / 2\n        val n16777216 = n8388608 /\
    \ 2\n        val n33554432 = n16777216 / 2\n        val n67108864 = n33554432\
    \ / 2\n        val n134217728 = n67108864 / 2\n        val n268435456 = n134217728\
    \ / 2\n        val n536870912 = n268435456 / 2\n        val n1073741824 = n536870912\
    \ / 2\n        val n2147483648L = n1073741824 / 2\n        val n4294967296L =\
    \ n2147483648L / 2\n        val n8589934592L = n4294967296L / 2\n        val n17179869184L\
    \ = n8589934592L / 2\n        val n34359738368L = n17179869184L / 2\n        val\
    \ n68719476736L = n34359738368L / 2\n        val n137438953472L = n68719476736L\
    \ / 2\n", "        if (n % 2 != 0) return false\n        val m = n / 2\n     \
    \   val a = m / 2\n        val b = m - a\n        val c = a / 2\n        val d\
    \ = a - c\n        val e = b / 2\n        val f = b - e\n        if (c % 2 !=\
    \ 0 || d % 2 != 0 || e % 2 != 0 || f % 2 != 0) return false\n        val g = c\
    \ / 2\n        val h = c - g\n        val i = d / 2\n        val j = d - i\n \
    \       val k = e / 2\n        val l = e - k\n        val o = f / 2\n        val\
    \ p = f - o\n        if (g % 2 != 0 || h % 2 != 0 || i % 2 != 0 || j % 2 != 0\
    \ || k % 2 != 0 || l % 2 != 0 || o % 2 != 0 || p % 2 != 0) return false\n    \
    \    val q = g / 2\n        val r = g - q\n        val s = h / 2\n        val\
    \ t = h - s\n        val u = i / 2\n        val v = i - u\n        val w = j /\
    \ 2\n        val x = j - w\n        val y = k / 2\n        val z = k - y\n   \
    \     val aa = l / 2\n        val bb = l - aa\n        val cc = o / 2\n      \
    \  val dd = o - cc\n        val ee = p / 2\n        val ff = p - ee\n        if\
    \ (q % 2 != 0 || r % 2 != 0 || s % 2 != 0 || t % 2 != 0 || u % 2 != 0 || v % 2\
    \ != 0 || w % 2 != 0 || x % 2 != 0 || y % 2 != 0 || z % 2 != 0 || aa % 2 != 0\
    \ || bb % 2 != 0 || cc % 2 != 0 || dd % 2 != 0 || ee % 2 != 0 || ff % 2 != 0)\
    \ return false\n        val gg = q / 2\n        val hh = q - gg\n        val ii\
    \ = r / 2\n        val jj = r - ii\n        val kk = s / 2\n        val ll = s\
    \ - kk\n        val mm", "        val sqrt = sqrt(n).toLong\n        for (i <-\
    \ 2 to sqrt) {\n            if (n % i == 0) {\n                val j = n / i\n\
    \                if (i % 2 == 0 && j % 2 == 0) return true\n            }\n  \
    \      }\n        false", "        val m = n / 2\n        val limit = sqrt(m).toLong\n\
    \        for (i <- 2 to limit) {\n            val j = m / i\n            if (i\
    \ * j == m && (i + j) % 2 == 0) return true\n        }\n        return false",
  "        val limit = n / 4\n        for (i <- 1L to limit) {\n            val remain\
    \ = n - i\n            if (remain % 2 == 0) {\n                val remain2 = remain\
    \ / 2\n                val limit2 = remain2 / 2\n                for (j <- i +\
    \ 1L to limit2) {\n                    val remain3 = remain2 - j\n           \
    \         if (remain3 % 2 == 0) {\n                        val remain4 = remain3\
    \ / 2\n                        val limit3 = remain4 / 2\n                    \
    \    for (k <- j + 1L to limit3) {\n                            val remain5 =\
    \ remain4 - k\n                            if (remain5 % 2 == 0) {\n         \
    \                       val remain6 = remain5 / 2\n                          \
    \      val limit4 = remain6 / 2\n                                for (l <- k +\
    \ 1L to limit4) {\n                                    val remain7 = remain6 -\
    \ l\n                                    if (remain7 % 2 == 0) {\n           \
    \                             val remain8 = remain7 / 2\n                    \
    \                    if (remain8 % 2 == 0) {\n                               \
    \             val remain9 = remain8 / 2\n                                    \
    \        if (remain9 % 2 == 0) {\n                                           \
    \     val remain10 = remain9 / 2\n                                           \
    \     if (remain10 % 2 == 0) {\n                                             \
    \       val remain11 = remain10 / 2\n                                        \
    \            if (remain11 % 2 == 0) {\n                                      \
    \                  val remain12 = remain11 / 2\n                             \
    \                           if (remain12 % 2 == 0) {\n                       \
    \                                     val remain13 = remain12 / 2\n          \
    \                                                  if (remain13 % 2 == 0) {\n\
    \                                                                val remain14\
    \ = remain13 / 2\n                                                           \
    \     if (remain14 % 2 == 0) {\n                                             \
    \                       val remain15 = remain14 / 2\n                        \
    \                                            if (remain15 % 2 == 0) {\n      \
    \                                                                  val remain16\
    \ = remain15 / 2\n                                                           \
    \             if (remain16 % 2 == 0) {\n                                     \
    \                                       val remain17 = remain16 / 2\n        \
    \                                                                    if (remain17\
    \ % 2 == 0) {\n                                                              \
    \                  val remain18 = remain17", "        val limit = n / 4\n    \
    \    for (i <- 1L to limit) {\n            val j = n - i\n            val k =\
    \ j / 2\n            val l = k - i\n            if (l > 0 && l % 2 == 0) return\
    \ true\n        }\n        return false", "        val limit = n / 4\n       \
    \ for (i <- 1L to limit) {\n            val a = i\n            val b = (n - a)\
    \ / 2\n            val c = b - a\n            val d = b + a\n            if (a\
    \ % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0) return true\n        }\n\
    \        return false", "        val limit = n / 4\n        var count = 0\n  \
    \      for (i <- 2 to limit by 2) {\n            if (n - i > 0 && isEqualToSumEven(n\
    \ - i)) count += 1\n        }\n        return count == 4", "        val n2 = n\
    \ / 2\n        val n2_sqrt = sqrt(n2).toLong\n        for (i <- 1L to n2_sqrt)\
    \ {\n            val j = n2 - i * i\n            val j_sqrt = sqrt(j).toLong\n\
    \            for (k <- 1L to j_sqrt) {\n                val l = j - k * k\n  \
    \              val l_sqrt = sqrt(l).toLong\n                for (m <- 1L to l_sqrt)\
    \ {\n                    val m2 = m * m\n                    if (m2 + k * k +\
    \ i * i + l == n) return true\n                }\n            }\n        }\n \
    \       false", "        val limit = n / 4\n        var found = false\n      \
    \  var i = 0\n        while (i <= limit && !found) {\n            val j = n -\
    \ i\n            var k = 0\n            while (k <= j && !found) {\n         \
    \       val l = j - k\n                var m = 0\n                while (m <=\
    \ l && !found) {\n                    val o = l - m\n                    if (i\
    \ + k + m + o == n && i % 2 == 0 && k % 2 == 0 && m % 2 == 0 && o % 2 == 0) {\n\
    \                        found = true\n                    }\n               \
    \     m += 2\n                }\n                k += 2\n            }\n     \
    \       i += 2\n        }\n        found", "        var result = false\n     \
    \   for (i <- 1L to n / 4) {\n            for (j <- i to n / 3) {\n          \
    \      for (k <- j to n / 2) {\n                    val l = n - i - j - k\n  \
    \                  if (l >= k && l % 2 == 0) {\n                        result\
    \ = true\n                    }\n                }\n            }\n        }\n\
    \        result", "        if (n % 2 != 0) return false\n        val m = n / 2\n\
    \        for (i <- 1 to m) {\n            val j = m - i\n            if (i % 2\
    \ == 0 && j % 2 == 0) return true\n        }\n        return false", "       \
    \ val m = n / 2\n        for (i <- 1L to m) {\n            val j = n - i\n   \
    \         if (j % 2 == 0) {\n                val k = j / 2\n                for\
    \ (l <- 1L to k) {\n                    val o = k - l\n                    if\
    \ (o % 2 == 0) {\n                        val p = o / 2\n                    \
    \    for (q <- 1L to p) {\n                            val r = p - q\n       \
    \                     if (r % 2 == 0) {\n                                val s\
    \ = r / 2\n                                if (i + l + q + s == n) return true\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return false", "  \
    \      val limit = n / 4\n        for (i <- 1L to limit) {\n            val a\
    \ = i * 2\n            for (j <- i + 1L to limit) {\n                val b = j\
    \ * 2\n                for (k <- j + 1L to limit) {\n                    val c\
    \ = k * 2\n                    for (l <- k + 1L to limit) {\n                \
    \        val d = l * 2\n                        if (a + b + c + d == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val limit = n / 4\n        for (i <- 2 to limit.toInt\
    \ by 2) {\n            for (j <- 2 to limit.toInt by 2) {\n                for\
    \ (k <- 2 to limit.toInt by 2) {\n                    for (l <- 2 to limit.toInt\
    \ by 2) {\n                        if (i + j + k + l == n) return true\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ false", "        val limit = n / 4\n        var count = 0\n        for (i <-\
    \ 2 to limit by 2) {\n            if (n - i >= 2 && isEqualToSumEven(n - i)) {\n\
    \                count += 1\n            }\n        }\n        if (count == 4)\
    \ true else false", "        val limit = n / 4\n        for (i <- 1L to limit)\
    \ {\n            for (j <- i to limit) {\n                for (k <- j to limit)\
    \ {\n                    for (l <- k to limit) {\n                        if (i\
    \ + j + k + l == n) return true\n                    }\n                }\n  \
    \          }\n        }\n        return false", "        val sqrt = sqrt(n).toLong\n\
    \        for (i <- 2 to sqrt by 2) {\n            val j = n - i\n            val\
    \ sqrtj = sqrt(j).toLong\n            for (k <- 2 to sqrtj by 2) {\n         \
    \       val l = j - k\n                val sqrtl = sqrt(l).toLong\n          \
    \      for (m <- 2 to sqrtl by 2) {\n                    val o = l - m\n     \
    \               if (o % 2 == 0 && o > 0) return true\n                }\n    \
    \        }\n        }\n        false", "        if (n % 2 != 0) return false\n\
    \        val n2 = n / 2\n        for (i <- 1L to n2) {\n            val j = n2\
    \ - i\n            if (j % 2 == 0) {\n                val k = j / 2\n        \
    \        val l = n - i - j\n                if (l % 2 == 0) {\n              \
    \      val m = l / 2\n                    if (i + j + k + m == n) return true\n\
    \                }\n            }\n        }\n        return false", "       \
    \ var sum = 0L\n        for (i <- 2L to n / 4) {\n            if (n - i - i -\
    \ i - i == 0) return true\n        }\n        return false", "        val limit\
    \ = n / 4\n        for (i <- 1 to limit.toInt) {\n            val a = i * 2\n\
    \            for (j <- i to limit.toInt) {\n                val b = j * 2\n  \
    \              for (k <- j to limit.toInt) {\n                    val c = k *\
    \ 2\n                    for (l <- k to limit.toInt) {\n                     \
    \   val d = l * 2\n                        if (a + b + c + d == n) return true\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        var i = 2\n        while (i <= m) {\n\
    \            val j = n - i\n            if (j % 2 == 0) {\n                val\
    \ k = j / 2\n                var l = 2\n                while (l <= k) {\n   \
    \                 val p = k - l\n                    if (p % 2 == 0) {\n     \
    \                   val q = p / 2\n                        if (q % 2 == 0) return\
    \ true\n                    }\n                    l += 2\n                }\n\
    \            }\n            i += 2\n        }\n        return false", "      \
    \  val m = n / 2\n        val limit = sqrt(m).toLong\n        for (i <- 2L to\
    \ limit) {\n            if (m % i == 0) {\n                val j = m / i\n   \
    \             if (i % 2 == 0 && j % 2 == 0) return true\n            }\n     \
    \   }\n        return false", "        val m = n / 2\n        val a = m / 2\n\
    \        val b = m - a\n        val c = b / 2\n        val d = b - c\n       \
    \ if (a + b + c + d == n) true else false", "        var result = false\n    \
    \    for (i <- 1L to n / 4) {\n            for (j <- i to n / 3) {\n         \
    \       for (k <- j to n / 2) {\n                    val l = n - i - j - k\n \
    \                   if (l >= k && l % 2 == 0) {\n                        result\
    \ = true\n                        println(i + \" \" + j + \" \" + k + \" \" +\
    \ l)\n                    }\n                }\n            }\n        }\n   \
    \     result", "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n    \
    \        if (i % 2 == 0) {\n                sum += i\n                if (sum\
    \ == n) return true\n            }\n        }\n        return false", "      \
    \  val half = n / 2\n        val sqrt = sqrt(half).toLong\n        val evens =\
    \ (2 to sqrt by 2).toList\n        evens.exists(x => evens.exists(y => evens.exists(z\
    \ => evens.exists(w => x + y + z + w == half))))", "        val limit = n / 4\n\
    \        for (i <- 2L to limit by 2) {\n            for (j <- i to limit by 2)\
    \ {\n                for (k <- j to limit by 2) {\n                    for (l\
    \ <- k to limit by 2) {\n                        if (i + j + k + l == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val limit = n / 4\n        for (i <- 2 to limit\
    \ by 2) {\n            for (j <- i to limit by 2) {\n                for (k <-\
    \ j to limit by 2) {\n                    for (l <- k to limit by 2) {\n     \
    \                   if (i + j + k + l == n) return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ var result = false\n        var i = 2\n        while (i <= n / 4) {\n      \
    \      val j = n - i\n            if (j % 2 == 0) {\n                val k = j\
    \ / 2\n                val l = k - i\n                if (l % 2 == 0) {\n    \
    \                val m = l / 2\n                    if (m > 0) {\n           \
    \             result = true\n                        println(i + \" \" + k + \"\
    \ \" + l + \" \" + m)\n                    }\n                }\n            }\n\
    \            i += 2\n        }\n        result", "        val limit = (n / 4)\
    \ + 1\n        for (i <- 1L to limit) {\n            for (j <- 1L to limit) {\n\
    \                for (k <- 1L to limit) {\n                    for (l <- 1L to\
    \ limit) {\n                        if (i + j + k + l == n) return true\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ false", "        val limit = n / 4\n        for (a <- 2 to limit by 2) {\n \
    \           for (b <- 2 to limit by 2) {\n                for (c <- 2 to limit\
    \ by 2) {\n                    for (d <- 2 to limit by 2) {\n                \
    \        if (a + b + c + d == n) return true\n                    }\n        \
    \        }\n            }\n        }\n        return false", "        var sum\
    \ = 0L\n        for (i <- 2 to n.toInt by 2) {\n            sum += i\n       \
    \     if (sum == n) return true\n            if (sum > n) return false\n     \
    \   }\n        return false", "        val limit = n / 4\n        for (i <- 1L\
    \ to limit) {\n            for (j <- i to limit) {\n                for (k <-\
    \ j to limit) {\n                    for (l <- k to limit) {\n               \
    \         if (i + j + k + l == n) return true\n                    }\n       \
    \         }\n            }\n        }\n        return false", "        var result\
    \ = false\n        for (a <- 2 to n.toInt by 2) {\n            for (b <- 2 to\
    \ n.toInt by 2) {\n                for (c <- 2 to n.toInt by 2) {\n          \
    \          for (d <- 2 to n.toInt by 2) {\n                        if (a + b +\
    \ c + d == n) {\n                            result = true\n                 \
    \       }\n                    }\n                }\n            }\n        }\n\
    \        result", "        var result = false\n        var i = 2L\n        while\
    \ (i <= n / 4) {\n            var j = 2L\n            while (j <= n / 3) {\n \
    \               var k = 2L\n                while (k <= n / 2) {\n           \
    \         var l = 2L\n                    while (l <= n) {\n                 \
    \       if (i + j + k + l == n) {\n                            result = true\n\
    \                            println(i + \" \" + j + \" \" + k + \" \" + l)\n\
    \                        }\n                        l += 2\n                 \
    \   }\n                    k += 2\n                }\n                j += 2\n\
    \            }\n            i += 2\n        }\n        result", "        val m\
    \ = n / 2\n        val sqrtm = sqrt(m).toLong\n        for (i <- 1L to sqrtm)\
    \ {\n            val j = m - i * i\n            val sqrtj = sqrt(j).toLong\n \
    \           if (sqrtj * sqrtj == j) return true\n        }\n        return false",
  "        if (n % 2 != 0) return false\n        val m = n / 2\n        for (i <-\
    \ 1 to m) {\n            val j = m - i\n            if (i % 2 == 0 && j % 2 ==\
    \ 0) return true\n        }\n        return false", "        val sqrt = sqrt(n).toLong\n\
    \        for (a <- 0L to sqrt) {\n            for (b <- 0L to sqrt) {\n      \
    \          for (c <- 0L to sqrt) {\n                    for (d <- 0L to sqrt)\
    \ {\n                        if (a + b + c + d == n) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        if (n % 2 != 0) return false\n        for (a <- 2 to n.toInt / 4) {\n \
    \           for (b <- a to n.toInt / 3) {\n                for (c <- b to n.toInt\
    \ / 2) {\n                    val d = n - a - b - c\n                    if (d\
    \ >= c && d % 2 == 0) return true\n                }\n            }\n        }\n\
    \        return false", "        if (n % 2 != 0) return false\n        for (i\
    \ <- 1L to n / 4) {\n            if (n - 4 * i == 0) return true\n           \
    \ if (n - 4 * i > 0 && isEqualToSumEven(n - 4 * i)) return true\n        }\n \
    \       return false", "        val max = n / 4\n        val min = n / 2\n   \
    \     for (a <- min to max) {\n            for (b <- a to max) {\n           \
    \     for (c <- b to max) {\n                    for (d <- c to max) {\n     \
    \                   if (a + b + c + d == n) return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ val sqrt = sqrt(n).toLong\n        for (i <- 2 to sqrt by 2) {\n           \
    \ val j = n - i\n            val sqrtj = sqrt(j).toLong\n            for (k <-\
    \ 2 to sqrtj by 2) {\n                val l = j - k\n                val sqrtl\
    \ = sqrt(l).toLong\n                for (m <- 2 to sqrtl by 2) {\n           \
    \         val o = l - m\n                    if (o % 2 == 0 && o > 0) return true\n\
    \                }\n            }\n        }\n        false", "        val limit\
    \ = n / 4\n        for (i <- 2 to limit by 2) {\n            val j = n - i\n \
    \           for (k <- i to limit by 2) {\n                val l = j - k\n    \
    \            for (m <- k to limit by 2) {\n                    val o = l - m\n\
    \                    if (o % 2 == 0 && o >= m) return true\n                }\n\
    \            }\n        }\n        return false", "        if (n % 2 != 0) return\
    \ false\n        val half = n / 2\n        val limit = sqrt(half).toLong\n   \
    \     for (i <- 2 to limit) {\n            if (half % i == 0) {\n            \
    \    val j = half / i\n                if (i % 2 == 0 && j % 2 == 0) return true\n\
    \            }\n        }\n        return false", "        val limit = n / 4\n\
    \        for (i <- 2 to limit.toInt by 2) {\n            for (j <- i to limit.toInt\
    \ by 2) {\n                for (k <- j to limit.toInt by 2) {\n              \
    \      for (l <- k to limit.toInt by 2) {\n                        if (i + j +\
    \ k + l == n) return true\n                    }\n                }\n        \
    \    }\n        }\n        return false", "        var s = 0L\n        for (i\
    \ <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n                s += i\n\
    \                if (s == n) return true\n            }\n        }\n        false",
  "        val m = n / 2\n        val r = m % 2\n        if (r == 1) return false\n\
    \        val s = m / 2\n        val t = s % 2\n        if (t == 1) return false\n\
    \        val u = s / 2\n        val v = u % 2\n        if (v == 1) return false\n\
    \        val w = u / 2\n        val x = w % 2\n        if (x == 1) return false\n\
    \        val y = w / 2\n        val z = y % 2\n        if (z == 1) return false\n\
    \        return true", "        val limit = n / 4\n        for (i <- 2 to limit\
    \ by 2) {\n            for (j <- 2 to limit by 2) {\n                for (k <-\
    \ 2 to limit by 2) {\n                    for (l <- 2 to limit by 2) {\n     \
    \                   if (i + j + k + l == n) return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ if (n % 2 != 0) return false\n        val n2 = n / 2\n        val n2Sqrt = sqrt(n2).toLong\n\
    \        for (i <- 1L to n2Sqrt) {\n            val j = n2 - i * i\n         \
    \   if (j % 2 == 0) {\n                val k = j / 2\n                val kSqrt\
    \ = sqrt(k).toLong\n                for (l <- 1L to kSqrt) {\n               \
    \     val m = k - l * l\n                    if (m % 2 == 0) {\n             \
    \           val o = m / 2\n                        if (i + l + o + sqrt(i * i\
    \ + l * l + o * o) == n2Sqrt) return true\n                    }\n           \
    \     }\n            }\n        }\n        return false", "        val limit =\
    \ n / 4\n        for (i <- 2 to limit by 2) {\n            val remain = n - i\n\
    \            if (remain % 2 == 0) {\n                val limit2 = remain / 2\n\
    \                for (j <- 2 to limit2 by 2) {\n                    val remain2\
    \ = remain - j\n                    if (remain2 % 2 == 0) {\n                \
    \        val limit3 = remain2 / 2\n                        for (k <- 2 to limit3\
    \ by 2) {\n                            val remain3 = remain2 - k\n           \
    \                 if (remain3 % 2 == 0) {\n                                val\
    \ limit4 = remain3 / 2\n                                for (l <- 2 to limit4\
    \ by 2) {\n                                    val remain4 = remain3 - l\n   \
    \                                 if (remain4 % 2 == 0) {\n                  \
    \                      val m = remain4 / 2\n                                 \
    \       if (i + j + k + l + m == n) return true\n                            \
    \        }\n                                }\n                            }\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        false", "        val limit = n / 4\n        for (i\
    \ <- 1L to limit) {\n            val remainder = n - i\n            val limit2\
    \ = remainder / 3\n            for (j <- i to limit2) {\n                val remainder2\
    \ = remainder - j\n                val limit3 = remainder2 / 2\n             \
    \   for (k <- j to limit3) {\n                    val l = remainder2 - k\n   \
    \                 if (l >= k && l % 2 == 0) return true\n                }\n \
    \           }\n        }\n        return false", "        var sum = 0L\n     \
    \   for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n               \
    \ sum += i\n                if (sum == n) return true\n            }\n       \
    \ }\n        return false", "        val limit = n / 4\n        for (i <- 1L to\
    \ limit) {\n            val a = i * 2\n            for (j <- i to limit) {\n \
    \               val b = j * 2\n                for (k <- j to limit) {\n     \
    \               val c = k * 2\n                    for (l <- k to limit) {\n \
    \                       val d = l * 2\n                        if (a + b + c +\
    \ d == n) return true\n                    }\n                }\n            }\n\
    \        }\n        return false", "        val limit = n / 4\n        for (i\
    \ <- 2 to limit by 2) {\n            for (j <- i to limit by 2) {\n          \
    \      for (k <- j to limit by 2) {\n                    for (l <- k to limit\
    \ by 2) {\n                        if (i + j + k + l == n) return true\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ false", "        for (a <- 2 to n.toInt / 4) {\n            for (b <- a to n.toInt\
    \ / 3) {\n                for (c <- b to n.toInt / 2) {\n                    val\
    \ d = n - a - b - c\n                    if (d >= c && d % 2 == 0) return true\n\
    \                }\n            }\n        }\n        return false", "       \
    \ val m = n / 2\n        val sqrt = sqrt(m).toLong\n        val evens = (2 to\
    \ sqrt by 2).toList\n        val evens2 = evens.map(x => x * x)\n        val evens3\
    \ = evens.map(x => x * x * x)\n        val evens4 = evens.map(x => x * x * x *\
    \ x)\n        val evens2Set = evens2.toSet\n        val evens3Set = evens3.toSet\n\
    \        val evens4Set = evens4.toSet\n        for (i <- evens2) {\n         \
    \   for (j <- evens3) {\n                if (evens2Set.contains(m - i - j)) return\
    \ true\n            }\n        }\n        for (i <- evens3) {\n            for\
    \ (j <- evens2) {\n                if (evens3Set.contains(m - i - j)) return true\n\
    \            }\n        }\n        for (i <- evens4) {\n            if (evens4Set.contains(m\
    \ - i)) return true\n        }\n        false", "        val limit = n / 4\n \
    \       for (a <- 2 to limit by 2) {\n            for (b <- 2 to limit by 2) {\n\
    \                for (c <- 2 to limit by 2) {\n                    for (d <- 2\
    \ to limit by 2) {\n                        if (a + b + c + d == n) return true\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        val half = m / 2\n        val half2\
    \ = m - half\n        val half3 = half - 1\n        val half4 = half2 - 1\n  \
    \      val half5 = half3 - 1\n        val half6 = half4 - 1\n        val half7\
    \ = half5 - 1\n        val half8 = half6 - 1\n        val half9 = half7 - 1\n\
    \        val half10 = half8 - 1\n        val half11 = half9 - 1\n        val half12\
    \ = half10 - 1\n        val half13 = half11 - 1\n        val half14 = half12 -\
    \ 1\n        val half15 = half13 - 1\n        val half16 = half14 - 1\n      \
    \  val half17 = half15 - 1\n        val half18 = half16 - 1\n        val half19\
    \ = half17 - 1\n        val half20 = half18 - 1\n        val half21 = half19 -\
    \ 1\n        val half22 = half20 - 1\n        val half23 = half21 - 1\n      \
    \  val half24 = half22 - 1\n        val half25 = half23 - 1\n        val half26\
    \ = half24 - 1\n        val half27 = half25 - 1\n        val half28 = half26 -\
    \ 1\n        val half29 = half27 - 1\n        val half30 = half28 - 1\n      \
    \  val half31 = half29 - 1\n        val half32 = half30 - 1\n        val half33\
    \ = half31 - 1\n        val half34 = half32 - 1\n        val half35 = half33 -\
    \ 1\n        val half36 = half34 - 1\n        val half37 = half35 - 1\n      \
    \  val half38 = half36 - 1\n        val half39 = half37 - 1\n        val half40\
    \ = half38 - 1\n        val half41 = half39 - 1\n        val half42 = half40 -\
    \ 1\n        val half43 = half41 - 1\n        val half44 = half42 - 1\n      \
    \  val half45 = half43 - 1\n        val half46 = half44 - 1\n        val half47\
    \ = half45 - 1\n        val half48 = half46 - 1\n        val half49 = half47 -\
    \ 1\n        val half50 = half48 - 1\n        val half51 = half49", "        val\
    \ m = n / 2\n        val x = m / 2\n        val y = m - x\n        val z = y /\
    \ 2\n        val w = y - z\n        if (x + y + z + w == m) true else false",
  "        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n        for (i <- 2\
    \ to sqrtm) {\n            if (m % i == 0) {\n                val j = m / i\n\
    \                if (i % 2 == 0 && j % 2 == 0) return true\n            }\n  \
    \      }\n        return false", "        val limit = n / 4\n        for (i <-\
    \ 1L to limit) {\n            for (j <- 1L to limit) {\n                for (k\
    \ <- 1L to limit) {\n                    for (l <- 1L to limit) {\n          \
    \              if (i + j + k + l == n) return true\n                    }\n  \
    \              }\n            }\n        }\n        return false", "        if\
    \ (n % 2 != 0) return false\n        for (i <- 0 to n / 2) {\n            for\
    \ (j <- 0 to n / 2) {\n                for (k <- 0 to n / 2) {\n             \
    \       for (l <- 0 to n / 2) {\n                        if (i + j + k + l ==\
    \ n) return true\n                    }\n                }\n            }\n  \
    \      }\n        return false", "        val limit = n / 4\n        for (i <-\
    \ 1 to limit.toInt) {\n            for (j <- i to limit.toInt) {\n           \
    \     for (k <- j to limit.toInt) {\n                    for (l <- k to limit.toInt)\
    \ {\n                        if (i + j + k + l == n) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        val m = n / 2\n        for (i <- 1L to m) {\n            for (j <- 1L to\
    \ m) {\n                for (k <- 1L to m) {\n                    for (l <- 1L\
    \ to m) {\n                        if (i + j + k + l == m) return true\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n       \
    \ for (i <- 2 to sqrtm) {\n            val j = m - i * i\n            if (j %\
    \ 2 == 0) {\n                val k = j / 2\n                val sqrtk = sqrt(k).toLong\n\
    \                for (l <- 2 to sqrtk) {\n                    val r = k - l *\
    \ l\n                    if (r % 2 == 0) {\n                        val s = r\
    \ / 2\n                        if (s * s + l * l + i * i == m) return true\n \
    \                   }\n                }\n            }\n        }\n        false",
  "        val max = n / 4\n        for (i <- 2 to max.toInt by 2) {\n           \
    \ for (j <- i to max.toInt by 2) {\n                for (k <- j to max.toInt by\
    \ 2) {\n                    for (l <- k to max.toInt by 2) {\n               \
    \         if (i + j + k + l == n) return true\n                    }\n       \
    \         }\n            }\n        }\n        return false", "        val limit\
    \ = n / 4\n        for (i <- 1 to limit.toInt) {\n            val a = i * 2\n\
    \            for (j <- 1 to limit.toInt) {\n                val b = j * 2\n  \
    \              for (k <- 1 to limit.toInt) {\n                    val c = k *\
    \ 2\n                    for (l <- 1 to limit.toInt) {\n                     \
    \   val d = l * 2\n                        if (a + b + c + d == n) return true\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false", "        val limit = n / 4\n        for (i <- 1 to limit.toInt) {\n\
    \            val j = n - i\n            if (j % 2 == 0) {\n                val\
    \ k = j / 2\n                val l = k - i\n                if (l % 2 == 0) {\n\
    \                    val m = l / 2\n                    val o = m - i\n      \
    \              if (o % 2 == 0) {\n                        val p = o / 2\n    \
    \                    if (p - i > 0) {\n                            val q = p -\
    \ i\n                            if (q % 2 == 0) {\n                         \
    \       val r = q / 2\n                                if (r - i > 0) {\n    \
    \                                val s = r - i\n                             \
    \       if (s % 2 == 0) {\n                                        val t = s /\
    \ 2\n                                        if (t - i > 0) {\n              \
    \                              val u = t - i\n                               \
    \             if (u % 2 == 0) {\n                                            \
    \    val v = u / 2\n                                                if (v - i\
    \ > 0) {\n                                                    val w = v - i\n\
    \                                                    if (w % 2 == 0) {\n     \
    \                                                   val x = w / 2\n          \
    \                                              if (x - i > 0) {\n            \
    \                                                val y = x - i\n             \
    \                                               if (y % 2 == 0) {\n          \
    \                                                      val z = y / 2\n       \
    \                                                         if (z - i > 0) {\n \
    \                                                                   val a = z\
    \ - i\n                                                                    if\
    \ (a % 2 == 0) {\n                                                           \
    \             val b = a / 2\n                                                \
    \                        if (b - i > 0) {\n                                  \
    \                                          val c = b - i\n                   \
    \                                                         if (c % 2 == 0) {\n\
    \                                                                            \
    \    val d = c / 2\n                                                         \
    \                       if (d - i > 0) {\n                                   \
    \                                                 val e = d - i\n            \
    \                                                                        if (e\
    \ % 2 == 0) {\n                                                              \
    \                          val f = e / 2\n                                   \
    \                                                     if (f - i > 0) {\n     \
    \                                                                            \
    \           val g = f - i\n", "        val m = n / 2\n        val limit = sqrt(m).toLong\n\
    \        for (i <- 2 to limit) {\n            if (m % i == 0) {\n            \
    \    val j = m / i\n                if (i % 2 == 0 && j % 2 == 0) {\n        \
    \            val a = i / 2\n                    val b = j / 2\n              \
    \      val c = (n - i - j) / 2\n                    if (c > 0 && a + b + c ==\
    \ n / 2) return true\n                }\n            }\n        }\n        return\
    \ false", "        var result = false\n        for (i <- 1 to n / 2) {\n     \
    \       for (j <- 1 to n / 2) {\n                for (k <- 1 to n / 2) {\n   \
    \                 for (l <- 1 to n / 2) {\n                        if (i + j +\
    \ k + l == n && i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0) {\n    \
    \                        result = true\n                        }\n          \
    \          }\n                }\n            }\n        }\n        result", " \
    \       val limit = n / 4\n        val evens = (2 to limit by 2).toList\n    \
    \    evens.combinations(4).exists(x => x.sum == n)", "        val m = n / 2\n\
    \        val limit = sqrt(m).toLong\n        for (i <- 1L to limit) {\n      \
    \      val j = m - i * i\n            if (j % 2 == 0) {\n                val k\
    \ = j / 2\n                val l = sqrt(k).toLong\n                if (l * l ==\
    \ k) return true\n            }\n        }\n        return false", "        val\
    \ n2 = n / 2\n        val n2sqrt = sqrt(n2).toLong\n        for (i <- 1L to n2sqrt)\
    \ {\n            val j = n2 - i * i\n            val jsqrt = sqrt(j).toLong\n\
    \            if (j == jsqrt * jsqrt) {\n                val k = jsqrt - i\n  \
    \              val l = jsqrt + i\n                if (k % 2 == 0 && l % 2 == 0)\
    \ return true\n            }\n        }\n        return false", "        val m\
    \ = n / 2\n        var found = false\n        for (a <- 1 to m.toInt) {\n    \
    \        for (b <- a to m.toInt) {\n                for (c <- b to m.toInt) {\n\
    \                    for (d <- c to m.toInt) {\n                        if (a\
    \ + b + c + d == m) {\n                            found = true\n            \
    \                println(a + \" \" + b + \" \" + c + \" \" + d)\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        found", "        val limit = n / 4\n        for (i <- 2L to limit\
    \ by 2) {\n            for (j <- i to limit by 2) {\n                for (k <-\
    \ j to limit by 2) {\n                    for (l <- k to limit by 2) {\n     \
    \                   if (i + j + k + l == n) return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ var result = false\n        for (i <- 1L to n / 2) {\n            for (j <-\
    \ i to n / 2) {\n                for (k <- j to n / 2) {\n                   \
    \ for (l <- k to n / 2) {\n                        if (i + j + k + l == n && i\
    \ % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0) {\n                    \
    \        result = true\n                        }\n                    }\n   \
    \             }\n            }\n        }\n        result", "        val limit\
    \ = n / 4\n        for (i <- 2 to limit by 2) {\n            for (j <- 2 to limit\
    \ by 2) {\n                for (k <- 2 to limit by 2) {\n                    for\
    \ (l <- 2 to limit by 2) {\n                        if (i + j + k + l == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        var sum = 0L\n        var count = 0\n        for\
    \ (i <- 2 to n) {\n            if (i % 2 == 0) {\n                sum += i\n \
    \               count += 1\n            }\n            if (sum == n && count ==\
    \ 4) return true\n            if (sum > n) return false\n        }\n        return\
    \ false", "        val limit = n / 4\n        var result = false\n        for\
    \ (i <- 2 to limit by 2) {\n            for (j <- i to limit by 2) {\n       \
    \         for (k <- j to limit by 2) {\n                    for (l <- k to limit\
    \ by 2) {\n                        if (i + j + k + l == n) {\n               \
    \             result = true\n                        }\n                    }\n\
    \                }\n            }\n        }\n        result", "        val limit\
    \ = n / 4\n        for (i <- 1L to limit) {\n            for (j <- i to limit)\
    \ {\n                for (k <- j to limit) {\n                    for (l <- k\
    \ to limit) {\n                        if (i + j + k + l == n) return true\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        for (i <- 1L to m) {\n            for\
    \ (j <- 1L to m) {\n                for (k <- 1L to m) {\n                   \
    \ for (l <- 1L to m) {\n                        if (i + j + k + l == m) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val m = n / 2\n        var a = 0\n        var\
    \ b = 0\n        var c = 0\n        var d = 0\n        var found = false\n   \
    \     for (a <- 2 to m.toInt by 2) {\n            for (b <- 2 to m.toInt by 2)\
    \ {\n                for (c <- 2 to m.toInt by 2) {\n                    for (d\
    \ <- 2 to m.toInt by 2) {\n                        if (a + b + c + d == n) {\n\
    \                            found = true\n                            return\
    \ found\n                        }\n                    }\n                }\n\
    \            }\n        }\n        found", "        val m = n / 2\n        val\
    \ sqrt = sqrt(m).toLong\n        for (i <- 2 to sqrt) {\n            if (m % i\
    \ == 0) {\n                val j = m / i\n                if (i % 2 == 0 && j\
    \ % 2 == 0) return true\n            }\n        }\n        return false", "  \
    \      var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2\
    \ == 0) {\n                sum += i\n                if (sum == n) return true\n\
    \            }\n        }\n        return false", "        if (n % 2 != 0) return\
    \ false\n        val m = n / 2\n        for (i <- 1L to m) {\n            val\
    \ a = i\n            val b = m - i\n            if (a % 2 == 0 && b % 2 == 0)\
    \ return true\n        }\n        return false", "        if (n % 2 != 0) return\
    \ false\n        val m = n / 2\n        for (i <- 1 to m) {\n            val j\
    \ = m - i\n            if (i % 2 == 0 && j % 2 == 0) return true\n        }\n\
    \        return false", "        if (n % 2 != 0) return false\n        val m =\
    \ n / 2\n        var i = 2\n        while (i <= m) {\n            val j = m -\
    \ i\n            if (j % 2 == 0) return true\n            i += 2\n        }\n\
    \        return false", "        val m = n / 2\n        val a = m / 2\n      \
    \  val b = m - a\n        val c = b / 2\n        val d = b - c\n        val e\
    \ = d / 2\n        val f = d - e\n        val g = f / 2\n        val h = f - g\n\
    \        val i = h / 2\n        val j = h - i\n        val k = j / 2\n       \
    \ val l = j - k\n        val o = l / 2\n        val p = l - o\n        val q =\
    \ p / 2\n        val r = p - q\n        val s = r / 2\n        val t = r - s\n\
    \        val u = t / 2\n        val v = t - u\n        val w = v / 2\n       \
    \ val x = v - w\n        val y = x / 2\n        val z = x - y\n        val aa\
    \ = z / 2\n        val bb = z - aa\n        val cc = bb / 2\n        val dd =\
    \ bb - cc\n        val ee = dd / 2\n        val ff = dd - ee\n        val gg =\
    \ ff / 2\n        val hh = ff - gg\n        val ii = hh / 2\n        val jj =\
    \ hh - ii\n        val kk = jj / 2\n        val ll = jj - kk\n        val mm =\
    \ ll / 2\n        val nn = ll - mm\n        val oo = nn / 2\n        val pp =\
    \ nn - oo\n        val qq = pp / 2\n        val rr = pp - qq\n        val ss =\
    \ rr / 2\n        val tt = rr - ss\n        val uu = tt / 2\n        val vv =\
    \ tt - uu\n        val ww = vv / 2\n        val xx = vv - ww\n        val yy =\
    \ xx / 2\n        val zz = xx - yy\n        val aaa = zz / 2\n        val bbb\
    \ = zz - aaa\n        val ccc = bbb / 2\n        val ddd = bbb - ccc\n       \
    \ val eee = ddd / 2\n        val fff = ddd - eee\n", "        var sum = 0L\n \
    \       for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n           \
    \     sum += i\n                if (sum == n) return true\n            }\n   \
    \     }\n        return false", "        val limit = n / 4\n        for (i <-\
    \ 2L to limit by 2) {\n            for (j <- 2L to limit by 2) {\n           \
    \     for (k <- 2L to limit by 2) {\n                    for (l <- 2L to limit\
    \ by 2) {\n                        if (i + j + k + l == n) return true\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ false", "        var result = false\n        for (i <- 1L to n / 4L) {\n   \
    \         for (j <- i to n / 3L) {\n                for (k <- j to n / 2L) {\n\
    \                    val l = n - i - j - k\n                    if (l >= k &&\
    \ l % 2 == 0) {\n                        result = true\n                     \
    \   println(i + \" \" + j + \" \" + k + \" \" + l)\n                    }\n  \
    \              }\n            }\n        }\n        result", "        val m =\
    \ n / 2\n        val limit = sqrt(m).toLong\n        var found = false\n     \
    \   for (i <- 1L to limit) {\n            if (m % i == 0) {\n                val\
    \ j = m / i\n                if (i % 2 == 0 && j % 2 == 0) {\n               \
    \     found = true\n                    println(i + \" \" + j)\n             \
    \   }\n            }\n        }\n        found", "        val m = n / 2\n    \
    \    for (i <- 1L to m) {\n            val j = n - i\n            if (i % 2 ==\
    \ 0 && j % 2 == 0) return true\n        }\n        return false", "        if\
    \ (n % 2 != 0) return false\n        val m = n / 2\n        val s = sqrt(m).toLong\n\
    \        for (i <- 1 to s) {\n            val j = m - i * i\n            if (j\
    \ % 2 == 0) {\n                val k = j / 2\n                val l = sqrt(k).toLong\n\
    \                if (l * l == k) return true\n            }\n        }\n     \
    \   return false", "        val max = n / 4\n        for (i <- 2 to max.toInt\
    \ by 2) {\n            for (j <- 2 to max.toInt by 2) {\n                for (k\
    \ <- 2 to max.toInt by 2) {\n                    for (l <- 2 to max.toInt by 2)\
    \ {\n                        if (i + j + k + l == n) return true\n           \
    \         }\n                }\n            }\n        }\n        return false",
  "        val m = n / 2\n        val s = (1 to m).filter(i => i % 2 == 0).toSet\n\
    \        val t = s.subsets(4).filter(x => x.sum == n).toList\n        t.length\
    \ > 0", "        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n        for\
    \ (i <- 2 to sqrtm) {\n            val j = m - i * i\n            if (j % 2 ==\
    \ 0) {\n                val k = j / 2\n                val sqrtk = sqrt(k).toLong\n\
    \                for (l <- 2 to sqrtk) {\n                    val m = k - l *\
    \ l\n                    if (m % 2 == 0) {\n                        val o = m\
    \ / 2\n                        val sqrto = sqrt(o).toLong\n                  \
    \      for (p <- 2 to sqrto) {\n                            val q = o - p * p\n\
    \                            if (q % 2 == 0) {\n                             \
    \   val r = q / 2\n                                val sqrtr = sqrt(r).toLong\n\
    \                                for (s <- 2 to sqrtr) {\n                   \
    \                 val t = r - s * s\n                                    if (t\
    \ % 2 == 0) {\n                                        val u = t / 2\n       \
    \                                 val sqrtu = sqrt(u).toLong\n               \
    \                         for (v <- 2 to sqrtu) {\n                          \
    \                  val w = u - v * v\n                                       \
    \     if (w % 2 == 0) {\n                                                val x\
    \ = w / 2\n                                                val sqrtx = sqrt(x).toLong\n\
    \                                                for (y <- 2 to sqrtx) {\n   \
    \                                                 val z = x - y * y\n        \
    \                                            if (z % 2 == 0) {\n             \
    \                                           val a = z / 2\n                  \
    \                                      val sqrta = sqrt(a).toLong\n          \
    \                                              for (b <- 2 to sqrta) {\n     \
    \                                                       val c = a - b * b\n  \
    \                                                          if (c % 2 == 0) {\n\
    \                                                                val d = c / 2\n\
    \                                                                val sqrtd = sqrt(d).toLong\n\
    \                                                                for (e <- 2 to\
    \ sqrtd) {\n                                                                 \
    \   val f = d - e * e\n                                                      \
    \              if (f % 2 == 0) {\n                                           \
    \                             val g = f / 2\n                ", "        val limit\
    \ = n / 4\n        for (i <- 1L to limit) {\n            val x = n - 2 * i\n \
    \           if (x % 2 == 0) {\n                val y = x / 2\n               \
    \ val z = y - i\n                if (z % 2 == 0) {\n                    val w\
    \ = z / 2\n                    if (w >= i) {\n                        return true\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ false", "        val m = n / 2\n        val limit = sqrt(m).toLong\n       \
    \ for (i <- 1L to limit) {\n            val j = m - i * i\n            if (j %\
    \ 2 == 0) {\n                val k = j / 2\n                val l = sqrt(k).toLong\n\
    \                if (l * l == k) return true\n            }\n        }\n     \
    \   return false", "        val limit = n / 4\n        for (i <- 2 to limit by\
    \ 2) {\n            val remain = n - i\n            val limit2 = remain / 2\n\
    \            for (j <- 2 to limit2 by 2) {\n                val remain2 = remain\
    \ - j\n                val limit3 = remain2 / 2\n                for (k <- 2 to\
    \ limit3 by 2) {\n                    val remain3 = remain2 - k\n            \
    \        val limit4 = remain3 / 2\n                    for (l <- 2 to limit4 by\
    \ 2) {\n                        if (i + j + k + l == n) return true\n        \
    \            }\n                }\n            }\n        }\n        false", " \
    \       val limit = n / 4\n        for (i <- 2 to limit by 2) {\n            for\
    \ (j <- i to limit by 2) {\n                for (k <- j to limit by 2) {\n   \
    \                 for (l <- k to limit by 2) {\n                        if (i\
    \ + j + k + l == n) return true\n                    }\n                }\n  \
    \          }\n        }\n        return false", "        var sum = 0L\n      \
    \  var count = 0\n        for (i <- 2 to n by 2) {\n            sum += i\n   \
    \         count += 1\n            if (sum == n && count == 4) return true\n  \
    \          if (sum > n) return false\n        }\n        return false", "    \
    \    if (n % 2 != 0) return false\n        val limit = n / 2\n        for (i <-\
    \ 2 to limit) {\n            if (i % 2 != 0) return false\n            val j =\
    \ n - i\n            if (j % 2 != 0) return false\n            val k = j / 2\n\
    \            if (k % 2 != 0) return false\n            val l = k / 2\n       \
    \     if (l % 2 != 0) return false\n            if (i + j + k + l == n) return\
    \ true\n        }\n        return false", "        val m = n / 2\n        val\
    \ max = (m - 1) / 2\n        for (i <- 1 to max.toInt) {\n            val j =\
    \ m - i\n            if (j % 2 == 0) {\n                val k = j / 2\n      \
    \          val l = k - 1\n                if (l % 2 == 0) return true\n      \
    \      }\n        }\n        return false", "        val m = n / 2\n        val\
    \ limit = sqrt(m).toLong\n        for (i <- 1L to limit) {\n            if (m\
    \ % i == 0) {\n                val j = m / i\n                if (i % 2 == 0 &&\
    \ j % 2 == 0) return true\n            }\n        }\n        return false", " \
    \       val m = n / 2\n        val sqrt = sqrt(m).toLong\n        for (i <- 2L\
    \ to sqrt) {\n            val j = m / i\n            if (i * j == m && (i + j)\
    \ % 2 == 0) return true\n        }\n        return false", "        if (n % 2\
    \ != 0) return false\n        val m = n / 2\n        val a = Array.fill(m.toInt\
    \ + 1)(false)\n        a(0) = true\n        for (i <- 2 to m.toInt by 2) {\n \
    \           for (j <- m.toInt to i by -1) {\n                if (a(j - i)) a(j)\
    \ = true\n            }\n        }\n        return a(m.toInt)", "        var sum\
    \ = 0L\n        var count = 0\n        for (i <- 2 to n) {\n            if (i\
    \ % 2 == 0) {\n                sum += i\n                count += 1\n        \
    \    }\n            if (sum == n && count == 4) return true\n            if (sum\
    \ > n) return false\n        }\n        return false", "        val m = n / 2\n\
    \        val sqrtm = sqrt(m).toLong\n        for (i <- 2L to sqrtm) {\n      \
    \      if (m % i == 0) {\n                val j = m / i\n                if (i\
    \ % 2 == 0 && j % 2 == 0) return true\n            }\n        }\n        return\
    \ false", "        var sum = 0L\n        var count = 0\n        var i = 2\n  \
    \      while (sum < n && count < 4) {\n            if (i % 2 == 0) {\n       \
    \         sum += i\n                count += 1\n            }\n            i +=\
    \ 1\n        }\n        sum == n", "        val max = n / 4\n        for (i <-\
    \ 1L to max) {\n            for (j <- i to max) {\n                for (k <- j\
    \ to max) {\n                    for (l <- k to max) {\n                     \
    \   if (i + j + k + l == n) return true\n                    }\n             \
    \   }\n            }\n        }\n        return false", "        val m = n / 2\n\
    \        val sqrtm = sqrt(m).toLong\n        for (i <- 1L to sqrtm) {\n      \
    \      val j = m - i * i\n            val sqrtj = sqrt(j).toLong\n           \
    \ for (k <- 1L to sqrtj) {\n                val l = j - k * k\n              \
    \  val sqrtl = sqrt(l).toLong\n                for (p <- 1L to sqrtl) {\n    \
    \                val q = l - p * p\n                    val sqrtq = sqrt(q).toLong\n\
    \                    for (r <- 1L to sqrtq) {\n                        val s =\
    \ q - r * r\n                        if (s == 0) return true\n               \
    \     }\n                }\n            }\n        }\n        false", "      \
    \  var result = false\n        for (i <- 1 to n.toInt / 2) {\n            for\
    \ (j <- 1 to n.toInt / 2) {\n                for (k <- 1 to n.toInt / 2) {\n \
    \                   for (l <- 1 to n.toInt / 2) {\n                        if\
    \ (i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k % 2 == 0 && l % 2 == 0)\
    \ {\n                            result = true\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        result",
  "        val a = (n - 2) / 2\n        val b = (n - 4) / 2\n        val c = (n -\
    \ 6) / 2\n        val d = (n - 8) / 2\n        if (a % 2 == 0 && b % 2 == 0 &&\
    \ c % 2 == 0 && d % 2 == 0) true else false", "        val m = n / 2\n       \
    \ for (i <- 1L to m) {\n            for (j <- i to m) {\n                for (k\
    \ <- j to m) {\n                    for (l <- k to m) {\n                    \
    \    if (i + j + k + l == m) return true\n                    }\n            \
    \    }\n            }\n        }\n        return false", "        val m = n /\
    \ 2\n        val upperBound = sqrt(m).toLong\n        for (i <- 1L to upperBound)\
    \ {\n            val j = m - i * i\n            if (j % 2 == 0) {\n          \
    \      val k = j / 2\n                val l = sqrt(k).toLong\n               \
    \ if (l * l == k) return true\n            }\n        }\n        return false",
  "        val limit = n / 4\n        var sum = 0L\n        var count = 0\n      \
    \  for (i <- 2 to limit by 2) {\n            sum += i\n            count += 1\n\
    \            if (sum == n) return true\n            if (sum > n) return false\n\
    \        }\n        false", "        var sum = 0L\n        for (i <- 2 to n by\
    \ 2) {\n            sum += i\n            if (sum == n) return true\n        \
    \    if (sum > n) return false\n        }\n        return false", "        val\
    \ sqrt = sqrt(n).toLong\n        for (i <- 2 to sqrt by 2) {\n            val\
    \ j = n - i\n            val sqrtj = sqrt(j).toLong\n            for (k <- 2 to\
    \ sqrtj by 2) {\n                val l = j - k\n                val sqrtl = sqrt(l).toLong\n\
    \                for (m <- 2 to sqrtl by 2) {\n                    val o = l -\
    \ m\n                    if (o % 2 == 0 && o > 0) return true\n              \
    \  }\n            }\n        }\n        false", "        val limit = n / 4\n \
    \       for (i <- 1 to limit.toInt) {\n            val a = i * 2\n           \
    \ for (j <- 1 to limit.toInt) {\n                val b = j * 2\n             \
    \   for (k <- 1 to limit.toInt) {\n                    val c = k * 2\n       \
    \             for (l <- 1 to limit.toInt) {\n                        val d = l\
    \ * 2\n                        if (a + b + c + d == n) return true\n         \
    \           }\n                }\n            }\n        }\n        return false",
  "        if (n % 2 != 0) return false\n        val limit = n / 2\n        for (i\
    \ <- 1L to limit) {\n            val j = n - i\n            if (i % 2 == 0 &&\
    \ j % 2 == 0) return true\n        }\n        return false", "        val m =\
    \ n / 2\n        var i = 2\n        while (i <= m) {\n            var j = 2\n\
    \            while (j <= m) {\n                var k = 2\n                while\
    \ (k <= m) {\n                    var l = 2\n                    while (l <= m)\
    \ {\n                        if (i + j + k + l == n) return true\n           \
    \             l += 2\n                    }\n                    k += 2\n    \
    \            }\n                j += 2\n            }\n            i += 2\n  \
    \      }\n        return false", "        val limit = n / 4\n        for (i <-\
    \ 1 to limit.toInt) {\n            val x = n - i\n            val y = x / 2\n\
    \            val z = y / 2\n            if (x % 2 == 0 && y % 2 == 0 && z % 2\
    \ == 0) return true\n        }\n        return false", "        for (a <- 2 to\
    \ n.toInt / 4) {\n            for (b <- a to n.toInt / 3) {\n                for\
    \ (c <- b to n.toInt / 2) {\n                    val d = n - a - b - c\n     \
    \               if (d >= c && d % 2 == 0) return true\n                }\n   \
    \         }\n        }\n        return false", "        if (n % 2 != 0) false\n\
    \        else {\n            val m = n / 2\n            val sqrtm = sqrt(m).toLong\n\
    \            for (i <- 2 to sqrtm) {\n                if (m % i == 0) {\n    \
    \                val j = m / i\n                    if (i % 2 == 0 && j % 2 ==\
    \ 0) return true\n                }\n            }\n            false\n      \
    \  }", "        val sqrt = sqrt(n).toLong\n        for (i <- 2 to sqrt by 2) {\n\
    \            val remain = n - i\n            val sqrt2 = sqrt(remain).toLong\n\
    \            for (j <- 2 to sqrt2 by 2) {\n                val remain2 = remain\
    \ - j\n                val sqrt3 = sqrt(remain2).toLong\n                for (k\
    \ <- 2 to sqrt3 by 2) {\n                    val remain3 = remain2 - k\n     \
    \               val sqrt4 = sqrt(remain3).toLong\n                    for (l <-\
    \ 2 to sqrt4 by 2) {\n                        if (remain3 - l == 0) return true\n\
    \                    }\n                }\n            }\n        }\n        false",
  "        val limit = n / 4\n        for (a <- 2 to limit by 2) {\n            for\
    \ (b <- 2 to limit by 2) {\n                for (c <- 2 to limit by 2) {\n   \
    \                 for (d <- 2 to limit by 2) {\n                        if (a\
    \ + b + c + d == n) return true\n                    }\n                }\n  \
    \          }\n        }\n        return false", "        val limit = n / 4\n \
    \       var found = false\n        var i = 2\n        while (i <= limit && !found)\
    \ {\n            var j = 2\n            while (j <= limit && !found) {\n     \
    \           var k = 2\n                while (k <= limit && !found) {\n      \
    \              var l = 2\n                    while (l <= limit && !found) {\n\
    \                        if (i + j + k + l == n) found = true\n              \
    \          l += 2\n                    }\n                    k += 2\n       \
    \         }\n                j += 2\n            }\n            i += 2\n     \
    \   }\n        found", "        var result = false\n        for (i <- 2 to n.toInt\
    \ / 2) {\n            for (j <- 2 to n.toInt / 2) {\n                for (k <-\
    \ 2 to n.toInt / 2) {\n                    for (l <- 2 to n.toInt / 2) {\n   \
    \                     if (i + j + k + l == n && i % 2 == 0 && j % 2 == 0 && k\
    \ % 2 == 0 && l % 2 == 0) {\n                            result = true\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        result", "        val m = n / 2\n        for (a <- 1 to m.toInt)\
    \ {\n            for (b <- 1 to m.toInt) {\n                for (c <- 1 to m.toInt)\
    \ {\n                    for (d <- 1 to m.toInt) {\n                        if\
    \ (a + b + c + d == m && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0)\
    \ return true\n                    }\n                }\n            }\n     \
    \   }\n        return false", "        var sum = 0L\n        var count = 0\n \
    \       var i = 2\n        while (sum < n && count < 4) {\n            if (i %\
    \ 2 == 0) {\n                sum += i\n                count += 1\n          \
    \  }\n            i += 1\n        }\n        if (sum == n) true else false", " \
    \       val limit = n / 4\n        for (i <- 1 to limit.toInt) {\n           \
    \ val a = i\n            val b = (n - a) / 2\n            val c = b - a\n    \
    \        val d = b + a\n            if (a % 2 == 0 && b % 2 == 0 && c % 2 == 0\
    \ && d % 2 == 0) return true\n        }\n        return false", "        val limit\
    \ = n / 4\n        for (a <- 2 to limit by 2) {\n            for (b <- 2 to limit\
    \ by 2) {\n                for (c <- 2 to limit by 2) {\n                    for\
    \ (d <- 2 to limit by 2) {\n                        if (a + b + c + d == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val limit = n / 4\n        for (i <- 1 to limit.toInt)\
    \ {\n            for (j <- i to limit.toInt) {\n                for (k <- j to\
    \ limit.toInt) {\n                    for (l <- k to limit.toInt) {\n        \
    \                if (i + j + k + l == n) return true\n                    }\n\
    \                }\n            }\n        }\n        return false", "       \
    \ val m = n / 2\n        val a = m / 2\n        val b = m - a\n        val c =\
    \ b / 2\n        val d = b - c\n        val e = d / 2\n        val f = d - e\n\
    \        val g = f / 2\n        val h = f - g\n        val i = h / 2\n       \
    \ val j = h - i\n        val k = j / 2\n        val l = j - k\n        val o =\
    \ l / 2\n        val p = l - o\n        val q = p / 2\n        val r = p - q\n\
    \        val s = r / 2\n        val t = r - s\n        val u = t / 2\n       \
    \ val v = t - u\n        val w = v / 2\n        val x = v - w\n        val y =\
    \ x / 2\n        val z = x - y\n        val aa = z / 2\n        val bb = z - aa\n\
    \        val cc = bb / 2\n        val dd = bb - cc\n        val ee = dd / 2\n\
    \        val ff = dd - ee\n        val gg = ff / 2\n        val hh = ff - gg\n\
    \        val ii = hh / 2\n        val jj = hh - ii\n        val kk = jj / 2\n\
    \        val ll = jj - kk\n        val mm = ll / 2\n        val nn = ll - mm\n\
    \        val oo = nn / 2\n        val pp = nn - oo\n        val qq = pp / 2\n\
    \        val rr = pp - qq\n        val ss = rr / 2\n        val tt = rr - ss\n\
    \        val uu = tt / 2\n        val vv = tt - uu\n        val ww = vv / 2\n\
    \        val xx = vv - ww\n        val yy = xx / 2\n        val zz = xx - yy\n\
    \        val aaa = zz / 2\n        val bbb = zz - aaa\n        val ccc = bbb /\
    \ 2\n        val ddd = bbb - ccc\n        val eee = ddd / 2\n        val fff =\
    \ ddd - eee\n", "        val limit = n / 4\n        for (i <- 1 to limit.toInt)\
    \ {\n            val a = i\n            val b = (n - a) / 2\n            val c\
    \ = b - a\n            val d = b + a\n            if (a % 2 == 0 && b % 2 == 0\
    \ && c % 2 == 0 && d % 2 == 0) return true\n        }\n        return false",
  "        if (n % 2 != 0) return false\n        val limit = n / 2\n        for (i\
    \ <- 1L to limit) {\n            val j = n - i\n            if (i % 2 == 0 &&\
    \ j % 2 == 0) return true\n        }\n        return false", "        val limit\
    \ = (n / 4)\n        for (i <- 1L to limit) {\n            val j = n - i\n   \
    \         if (j % 2 == 0) {\n                val k = j / 2\n                val\
    \ l = k - i\n                if (l % 2 == 0) {\n                    val m = l\
    \ / 2\n                    val o = m - i\n                    if (o % 2 == 0)\
    \ {\n                        val p = o / 2\n                        if (p - i\
    \ == 0) return true\n                    }\n                }\n            }\n\
    \        }\n        return false", "        val m = n / 2\n        val a = m /\
    \ 2\n        val b = m - a\n        val c = b / 2\n        val d = b - c\n   \
    \     if (a + b + c + d == n) {\n            if (a % 2 == 0 && b % 2 == 0 && c\
    \ % 2 == 0 && d % 2 == 0) {\n                true\n            } else {\n    \
    \            false\n            }\n        } else {\n            false\n     \
    \   }", "        val m = n / 2\n        val a = m / 2\n        val b = m - a\n\
    \        val c = m - a - b\n        val d = m - a - b - c\n        if (a + b +\
    \ c + d == m && a > 0 && b > 0 && c > 0 && d > 0 && a % 2 == 0 && b % 2 == 0 &&\
    \ c % 2 == 0 && d % 2 == 0) true else false", "        val m = n / 2\n       \
    \ val limit = sqrt(m).toLong\n        for (i <- 2L to limit) {\n            if\
    \ (m % i == 0) {\n                val j = m / i\n                if (i % 2 ==\
    \ 0 && j % 2 == 0) {\n                    val a = i / 2\n                    val\
    \ b = j / 2\n                    val c = n - a - b\n                    if (a\
    \ != b && a != c && b != c) {\n                        println(a + \" \" + b +\
    \ \" \" + c)\n                        return true\n                    }\n   \
    \             }\n            }\n        }\n        false", "        val m = n\
    \ / 2\n        val sqrt = math.sqrt(m).toLong\n        for (i <- 1L to sqrt) {\n\
    \            val j = m - i * i\n            val sqrtj = math.sqrt(j).toLong\n\
    \            if (sqrtj * sqrtj == j) {\n                val k = sqrtj - i\n  \
    \              if (k > 0 && k % 2 == 0) return true\n            }\n        }\n\
    \        return false", "        var result = false\n        for (a <- 2 to n.toInt\
    \ by 2) {\n            for (b <- 2 to n.toInt by 2) {\n                for (c\
    \ <- 2 to n.toInt by 2) {\n                    for (d <- 2 to n.toInt by 2) {\n\
    \                        if (a + b + c + d == n) {\n                         \
    \   result = true\n                        }\n                    }\n        \
    \        }\n            }\n        }\n        result", "        val n2 = n / 2\n\
    \        val n2Sqrt = sqrt(n2).toLong\n        for (a <- 2L to n2Sqrt) {\n   \
    \         val b = n2 - a * a\n            val bSqrt = sqrt(b).toLong\n       \
    \     for (c <- 2L to bSqrt) {\n                val d = b - c * c\n          \
    \      val dSqrt = sqrt(d).toLong\n                for (e <- 2L to dSqrt) {\n\
    \                    val f = d - e * e\n                    val fSqrt = sqrt(f).toLong\n\
    \                    for (g <- 2L to fSqrt) {\n                        val h =\
    \ f - g * g\n                        val hSqrt = sqrt(h).toLong\n            \
    \            for (i <- 2L to hSqrt) {\n                            val j = h -\
    \ i * i\n                            val jSqrt = sqrt(j).toLong\n            \
    \                for (k <- 2L to jSqrt) {\n                                val\
    \ l = j - k * k\n                                val lSqrt = sqrt(l).toLong\n\
    \                                for (m <- 2L to lSqrt) {\n                  \
    \                  val o = l - m * m\n                                    val\
    \ oSqrt = sqrt(o).toLong\n                                    for (p <- 2L to\
    \ oSqrt) {\n                                        val q = o - p * p\n      \
    \                                  val qSqrt = sqrt(q).toLong\n              \
    \                          for (r <- 2L to qSqrt) {\n                        \
    \                    val s = q - r * r\n                                     \
    \       val sSqrt = sqrt(s).toLong\n                                         \
    \   for (t <- 2L to sSqrt) {\n                                               \
    \ val u = s - t * t\n                                                val uSqrt\
    \ = sqrt(u).toLong\n                                                for (v <-\
    \ 2L to uSqrt) {\n                                                    val w =\
    \ u - v * v\n                                                    val wSqrt = sqrt(w).toLong\n\
    \                                                    for (x <- 2L to wSqrt)",
  "        val m = n / 2\n        var count = 0\n        for (i <- 1 to m.toInt) {\n\
    \            if (i % 2 == 0) {\n                val j = n - i\n              \
    \  if (j % 2 == 0) {\n                    count += 1\n                }\n    \
    \        }\n        }\n        return count == 4", "        var result = false\n\
    \        for (i <- 1L to n / 4) {\n            for (j <- i to n / 3) {\n     \
    \           for (k <- j to n / 2) {\n                    val l = n - i - j - k\n\
    \                    if (l >= k && l % 2 == 0) result = true\n               \
    \ }\n            }\n        }\n        result", "        val n2 = n / 2\n    \
    \    val max = (n2 - 1) / 2\n        val min = n2 / 2\n        val max2 = max\
    \ * max\n        val min2 = min * min\n        val max3 = max2 * max\n       \
    \ val min3 = min2 * min\n        val max4 = max3 * max\n        val min4 = min3\
    \ * min\n        val max5 = max4 * max\n        val min5 = min4 * min\n      \
    \  val max6 = max5 * max\n        val min6 = min5 * min\n        val max7 = max6\
    \ * max\n        val min7 = min6 * min\n        val max8 = max7 * max\n      \
    \  val min8 = min7 * min\n        val max9 = max8 * max\n        val min9 = min8\
    \ * min\n        val max10 = max9 * max\n        val min10 = min9 * min\n    \
    \    val max11 = max10 * max\n        val min11 = min10 * min\n        val max12\
    \ = max11 * max\n        val min12 = min11 * min\n        val max13 = max12 *\
    \ max\n        val min13 = min12 * min\n        val max14 = max13 * max\n    \
    \    val min14 = min13 * min\n        val max15 = max14 * max\n        val min15\
    \ = min14 * min\n        val max16 = max15 * max\n        val min16 = min15 *\
    \ min\n        val max17 = max16 * max\n        val min17 = min16 * min\n    \
    \    val max18 = max17 * max\n        val min18 = min17 * min\n        val max19\
    \ = max18 * max\n        val min19 = min18 * min\n        val max20 = max19 *\
    \ max\n        val min20 = min19 * min\n        val max21 = max20 * max\n    \
    \    val min21 = min20 * min\n        val max22 = max21 * max\n        val min22\
    \ = min21 * min\n        val max23 = max22 * max\n        val min23 = min22 *\
    \ min\n        val max24 = max23 * max\n        val min24 = min23 * min\n    \
    \    val max25 = max24 * max\n        val min25 = min24 * min\n        val", " \
    \       val m = n / 2\n        var a = 0\n        var b = 0\n        var c = 0\n\
    \        var d = 0\n        var found = false\n        while (a <= m && !found)\
    \ {\n            b = 0\n            while (b <= m && !found) {\n             \
    \   c = 0\n                while (c <= m && !found) {\n                    d =\
    \ 0\n                    while (d <= m && !found) {\n                        if\
    \ (a + b + c + d == m && a % 2 == 0 && b % 2 == 0 && c % 2 == 0 && d % 2 == 0)\
    \ {\n                            found = true\n                        }\n   \
    \                     d += 1\n                    }\n                    c +=\
    \ 1\n                }\n                b += 1\n            }\n            a +=\
    \ 1\n        }\n        found", "        val limit = n / 4\n        var found\
    \ = false\n        for (i <- 2 to limit by 2) {\n            for (j <- i to limit\
    \ by 2) {\n                for (k <- j to limit by 2) {\n                    for\
    \ (l <- k to limit by 2) {\n                        if (i + j + k + l == n) {\n\
    \                            found = true\n                            println(i\
    \ + \" \" + j + \" \" + k + \" \" + l)\n                        }\n          \
    \          }\n                }\n            }\n        }\n        found", " \
    \       var result = false\n        for (a <- 2 to n.toInt by 2) {\n         \
    \   for (b <- 2 to n.toInt by 2) {\n                for (c <- 2 to n.toInt by\
    \ 2) {\n                    for (d <- 2 to n.toInt by 2) {\n                 \
    \       if (a + b + c + d == n) {\n                            result = true\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        result", "        var sum = 0L\n        var count\
    \ = 0\n        for (i <- 2 to n.toInt by 2) {\n            if (sum + i <= n) {\n\
    \                sum += i\n                count += 1\n            }\n       \
    \ }\n        return count == 4", "        var result = false\n        for (a <-\
    \ 2 to n.toInt by 2) {\n            for (b <- 2 to n.toInt by 2) {\n         \
    \       for (c <- 2 to n.toInt by 2) {\n                    for (d <- 2 to n.toInt\
    \ by 2) {\n                        if (a + b + c + d == n) {\n               \
    \             result = true\n                        }\n                    }\n\
    \                }\n            }\n        }\n        result", "        val limit\
    \ = n / 4\n        for (a <- 2 to limit by 2) {\n            for (b <- 2 to limit\
    \ by 2) {\n                for (c <- 2 to limit by 2) {\n                    for\
    \ (d <- 2 to limit by 2) {\n                        if (a + b + c + d == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val m = n / 2\n        val a = m / 2\n       \
    \ val b = m - a\n        val c = b / 2\n        val d = b - c\n        if (a +\
    \ b + c + d == n) {\n            if (a % 2 == 0 && b % 2 == 0 && c % 2 == 0 &&\
    \ d % 2 == 0) {\n                return true\n            }\n        }\n     \
    \   return false", "        val limit = n / 4\n        for (i <- 1L to limit)\
    \ {\n            val j = n - i\n            if (j % 2 == 0) {\n              \
    \  val k = j / 2\n                val l = k - i\n                if (l % 2 ==\
    \ 0) return true\n            }\n        }\n        return false", "        if\
    \ (n % 2 != 0) return false\n        var sum = 0L\n        for (i <- 1L to n /\
    \ 2) {\n            if (i % 2 == 0) {\n                sum += i\n            \
    \    if (sum == n) return true\n            }\n        }\n        return false",
  "        val sqrt = sqrt(n).toLong\n        for (i <- 2 to sqrt) {\n           \
    \ if (n % i == 0) {\n                val j = n / i\n                if (i % 2\
    \ == 0 && j % 2 == 0) return true\n            }\n        }\n        return false",
  "        val limit = n / 4\n        for (i <- 1L to limit) {\n            val j\
    \ = n - i\n            if (j % 2 == 0) {\n                val k = j / 2\n    \
    \            if (k % 2 == 0) {\n                    val l = k / 2\n          \
    \          if (l % 2 == 0) {\n                        val m = l / 2\n        \
    \                if (m % 2 == 0) {\n                            return true\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return false", "        val m = n / 2\n        for\
    \ (i <- 1 to m.toInt) {\n            val a = i\n            val b = m - i\n  \
    \          if (a % 2 == 0 && b % 2 == 0) return true\n        }\n        return\
    \ false", "        val m = n / 2\n        for (i <- 1 to m.toInt) {\n        \
    \    val j = n - i\n            if (j % 2 == 0) {\n                val k = j /\
    \ 2\n                for (l <- 1 to k.toInt) {\n                    val m = k\
    \ - l\n                    if (m % 2 == 0) {\n                        val o =\
    \ m / 2\n                        for (p <- 1 to o.toInt) {\n                 \
    \           val q = o - p\n                            if (q % 2 == 0) {\n   \
    \                             val r = q / 2\n                                if\
    \ (i + l + p + r == n) {\n                                    println(i + \" \"\
    \ + l + \" \" + p + \" \" + r)\n                                    return true\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n        return false", "        val limit = n / 4\n        val evens\
    \ = (2 to limit by 2).toArray\n        val dp = Array.fill(n + 1)(false)\n   \
    \     dp(0) = true\n        for (i <- evens) {\n            for (j <- n to i by\
    \ -1) {\n                dp(j) = dp(j) || dp(j - i)\n            }\n        }\n\
    \        dp(n)", "        val m = n / 2\n        val sqrtm = sqrt(m).toLong\n\
    \        val evens = (2 to sqrtm).filter(x => x % 2 == 0).toList\n        val\
    \ evens2 = evens.map(x => x * x)\n        val evens3 = evens.map(x => x * x *\
    \ x)\n        val evens4 = evens.map(x => x * x * x * x)\n        val evens2Set\
    \ = evens2.toSet\n        val evens3Set = evens3.toSet\n        val evens4Set\
    \ = evens4.toSet\n        for (a <- evens) {\n            for (b <- evens) {\n\
    \                for (c <- evens) {\n                    for (d <- evens) {\n\
    \                        if (a + b + c + d == n) return true\n               \
    \     }\n                }\n            }\n        }\n        for (a <- evens2)\
    \ {\n            for (b <- evens2) {\n                for (c <- evens) {\n   \
    \                 if (a + b + c == n) return true\n                }\n       \
    \     }\n        }\n        for (a <- evens3) {\n            for (b <- evens)\
    \ {\n                if (a + b == n) return true\n            }\n        }\n \
    \       for (a <- evens4) {\n            if (a == n) return true\n        }\n\
    \        return false", "        val limit = n / 4\n        for (i <- 1 to limit.toInt)\
    \ {\n            val x = n - 2 * i\n            if (x % 2 == 0) {\n          \
    \      val y = x / 2\n                val z = y - i\n                if (z % 2\
    \ == 0) {\n                    val w = z / 2\n                    if (w > 0) {\n\
    \                        return true\n                    }\n                }\n\
    \            }\n        }\n        return false", "        val limit = n / 4\n\
    \        for (a <- 2 to limit by 2) {\n            for (b <- 2 to limit by 2)\
    \ {\n                for (c <- 2 to limit by 2) {\n                    for (d\
    \ <- 2 to limit by 2) {\n                        if (a + b + c + d == n) return\
    \ true\n                    }\n                }\n            }\n        }\n \
    \       return false", "        val x = (n - 2) / 2\n        if (x % 2 == 0) true\
    \ else false", "        val m = n / 2\n        var count = 0\n        for (i <-\
    \ 1 to m.toInt) {\n            if (i % 2 == 0) {\n                val j = n -\
    \ i\n                if (j % 2 == 0) {\n                    count += 1\n     \
    \           }\n            }\n        }\n        return count == 4"]
stop_tokens:
- "\n    }\n"

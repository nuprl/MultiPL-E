name: HumanEval_90_next_smallest
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a list of integers.\n    // Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n    // Return None if there\
  \ is no such element.\n    def nextSmallest(lst : List[Long]) : Option[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(nextSmallest((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long](5l.toLong,\
  \ 1l.toLong, 4l.toLong, 3l.toLong, 2l.toLong))).equals(2l));\n    assert(nextSmallest((List[Long]())).equals(None));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 0l.toLong))).equals(1l));\n\
  \    assert(nextSmallest((List[Long](1l.toLong, 1l.toLong))).equals(None));\n  \
  \  assert(nextSmallest((List[Long](-35l.toLong, 34l.toLong, 12l.toLong, -45l.toLong))).equals(-35l));\n\
  \    }\n\n}\n"
completions: ["        val sorted = lst.sorted\n        if (sorted.length < 2) None\n\
    \        else Some(sorted(1))", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var next = Long.MaxValue\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   next = min\n                min = lst(i)\n            } else if (lst(i) <\
    \ next) {\n                next = lst(i)\n            }\n        }\n        if\
    \ (next == Long.MaxValue) return None\n        return Some(next)", "        val\
    \ sorted = lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ nextMin = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                nextMin = min\n                min = lst(i)\n    \
    \        }\n            else if (lst(i) < nextMin) {\n                nextMin\
    \ = lst(i)\n            }\n        }\n        if (nextMin == min) return None\n\
    \        return Some(nextMin)", "        var min = Long.MaxValue\n        var\
    \ min2 = Long.MaxValue\n        for (x <- lst) {\n            if (x < min) {\n\
    \                min2 = min\n                min = x\n            } else if (x\
    \ < min2) {\n                min2 = x\n            }\n        }\n        if (min2\
    \ == Long.MaxValue) None else Some(min2)", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var nextMin = lst(1)\n        if (min\
    \ > nextMin) {\n            val temp = min\n            min = nextMin\n      \
    \      nextMin = temp\n        }\n        for (i <- 2 until lst.length) {\n  \
    \          if (lst(i) < min) {\n                nextMin = min\n              \
    \  min = lst(i)\n            } else if (lst(i) < nextMin) {\n                nextMin\
    \ = lst(i)\n            }\n        }\n        return Some(nextMin)", "       \
    \ if (lst.length < 2) return None\n        val sorted = lst.sorted\n        return\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ val tmp = min\n            min = min2\n            min2 = tmp\n        }\n \
    \       for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n   \
    \             min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        if (min2 == min) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var nextMin = lst(1)\n        for (i\
    \ <- 2 until lst.length) {\n            if (lst(i) < min) {\n                nextMin\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < nextMin)\
    \ {\n                nextMin = lst(i)\n            }\n        }\n        return\
    \ Some(nextMin)", "        if (lst.length < 2) return None\n        var min =\
    \ lst(0)\n        var next = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                next = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < next) {\n                next\
    \ = lst(i)\n            }\n        }\n        if (next == min) return None\n \
    \       return Some(next)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        val sorted = lst.sorted\n\
    \        if (sorted.size < 2) None\n        else Some(sorted(1))", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        if (min2 == min) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        if (min == min2) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ nextMin = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                nextMin = min\n                min = lst(i)\n    \
    \        }\n            else if (lst(i) < nextMin) {\n                nextMin\
    \ = lst(i)\n            }\n        }\n        if (nextMin == min) return None\n\
    \        return Some(nextMin)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            val temp =\
    \ min\n            min = min2\n            min2 = temp\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            } else if (lst(i) <\
    \ min2) {\n                min2 = lst(i)\n            }\n        }\n        if\
    \ (min2 == min) return None\n        return Some(min2)", "        val sorted =\
    \ lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.size < 2) return None\n        var min =\
    \ lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.size) {\n \
    \           if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            val temp =\
    \ min\n            min = min2\n            min2 = temp\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            } else if (lst(i) <\
    \ min2) {\n                min2 = lst(i)\n            }\n        }\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n\
    \            min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n   \
    \         min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.size < 2) None\n        else Some(sorted(1))", "        val\
    \ sorted = lst.sorted\n        if (sorted.length < 2) return None\n        return\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.size < 2) None\n        else Some(sorted(1))", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        if (min2 == min) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) return None\n        val sorted = lst.sorted\n        return\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.size < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n   \
    \         min = min2\n            min2 = lst(0)\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            val x = lst(i)\n            if (x < min)\
    \ {\n                min2 = min\n                min = x\n            } else if\
    \ (x < min2) {\n                min2 = x\n            }\n        }\n        Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ var min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (x <-\
    \ lst) {\n            if (x < min) {\n                min2 = min\n           \
    \     min = x\n            } else if (x < min2) {\n                min2 = x\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) None else Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ if (lst.length < 2) None\n        else {\n            var min = lst(0)\n   \
    \         var min2 = lst(1)\n            if (min > min2) {\n                val\
    \ temp = min\n                min = min2\n                min2 = temp\n      \
    \      }\n            for (i <- 2 until lst.length) {\n                if (lst(i)\
    \ < min) {\n                    min2 = min\n                    min = lst(i)\n\
    \                }\n                else if (lst(i) < min2) {\n              \
    \      min2 = lst(i)\n                }\n            }\n            Some(min2)\n\
    \        }", "        val sorted = lst.sorted\n        if (sorted.length < 2)\
    \ None\n        else Some(sorted(1))", "        val sorted = lst.sorted\n    \
    \    if (sorted.size < 2) None\n        else Some(sorted(1))", "        if (lst.length\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ if (sorted(0) == sorted(1)) nextSmallest(sorted.tail)\n            else Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var secondMin = lst(1)\n        if (min > secondMin) {\n            val\
    \ temp = min\n            min = secondMin\n            secondMin = temp\n    \
    \    }\n        for (i <- 2 until lst.length) {\n            if (lst(i) < min)\
    \ {\n                secondMin = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n   \
    \         }\n        }\n        return Some(secondMin)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        return Some(min2)", "        val sorted = lst.sorted\n   \
    \     if (sorted.length < 2) None\n        else Some(sorted(1))", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        if (min2 == min) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) None\n        else {\n            var min = lst(0)\n      \
    \      var min2 = lst(1)\n            for (i <- 1 until lst.length) {\n      \
    \          if (lst(i) < min) {\n                    min2 = min\n             \
    \       min = lst(i)\n                }\n                else if (lst(i) < min2)\
    \ min2 = lst(i)\n            }\n            if (min2 == min) None\n          \
    \  else Some(min2)\n        }", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            Some(sorted(1))\n      \
    \  }", "        if (lst.length < 2) return None\n        val sorted = lst.sorted\n\
    \        return Some(sorted(1))", "        if (lst.length < 2) return None\n \
    \       val sorted = lst.sorted\n        return Some(sorted(1))", "        val\
    \ sorted = lst.sorted\n        if (sorted.size < 2) None\n        else Some(sorted(1))",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var next = Long.MaxValue\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                next = min\n\
    \                min = lst(i)\n            } else if (lst(i) < next) {\n     \
    \           next = lst(i)\n            }\n        }\n        if (next == Long.MaxValue)\
    \ return None\n        return Some(next)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        Some(min2)", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ if (lst.size < 2) return None\n        var min = lst(0)\n        var min2 =\
    \ lst(1)\n        if (min > min2) {\n            val temp = min\n            min\
    \ = min2\n            min2 = temp\n        }\n        for (i <- 2 until lst.size)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        return Some(min2)", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        if (min > min2) {\n            val temp = min\n            min = min2\n\
    \            min2 = temp\n        }\n        for (i <- 2 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        var min = Long.MaxValue\n        var min2\
    \ = Long.MaxValue\n        for (i <- lst) {\n            if (i < min) {\n    \
    \            min2 = min\n                min = i\n            } else if (i < min2)\
    \ {\n                min2 = i\n            }\n        }\n        if (min2 == Long.MaxValue)\
    \ None else Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n       \
    \     val tmp = min\n            min = min2\n            min2 = tmp\n        }\n\
    \        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            var min = lst(0)\n            var min2 = lst(1)\n            for\
    \ (i <- 1 until lst.length) {\n                if (lst(i) < min) {\n         \
    \           min2 = min\n                    min = lst(i)\n                }\n\
    \                else if (lst(i) < min2) min2 = lst(i)\n            }\n      \
    \      if (min2 == min) None\n            else Some(min2)\n        }", "     \
    \   if (lst.length < 2) return None\n        val sorted = lst.sorted\n       \
    \ return Some(sorted(1))", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n   \
    \         min = min2\n            min2 = lst(0)\n        }\n        for (i <-\
    \ 2 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) None\n        else {\n      \
    \      var min = lst(0)\n            var min2 = lst(1)\n            for (i <-\
    \ 1 until lst.length) {\n                if (lst(i) < min) {\n               \
    \     min2 = min\n                    min = lst(i)\n                }\n      \
    \          else if (lst(i) < min2) min2 = lst(i)\n            }\n            if\
    \ (min2 == min) None\n            else Some(min2)\n        }", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n    \
    \    if (min > min2) {\n            val temp = min\n            min = min2\n \
    \           min2 = temp\n        }\n        for (i <- 2 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        Some(min2)", "        val sorted\
    \ = lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        val sorted = lst.sorted\n    \
    \    return Some(sorted(1))", "        if (lst.length < 2) return None\n     \
    \   var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ if (lst.length < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        if (min > min2) {\n            val temp = min\n          \
    \  min = min2\n            min2 = temp\n        }\n        for (i <- 2 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        return Some(min2)", "        val\
    \ sorted = lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.size < 2) None\n        else {\n            var min = lst(0)\n\
    \            var min2 = lst(1)\n            for (i <- 1 until lst.size) {\n  \
    \              if (lst(i) < min) {\n                    min2 = min\n         \
    \           min = lst(i)\n                }\n                else if (lst(i) <\
    \ min2) min2 = lst(i)\n            }\n            if (min2 == min) None\n    \
    \        else Some(min2)\n        }", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2)\
    \ {\n            min = min2\n            min2 = lst(0)\n        }\n        for\
    \ (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n             \
    \   min2 = min\n                min = lst(i)\n            } else if (lst(i) <\
    \ min2) {\n                min2 = lst(i)\n            }\n        }\n        if\
    \ (min2 == min) return None\n        return Some(min2)", "        val sorted =\
    \ lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        val sorted = lst.sorted\n    \
    \    return Some(sorted(1))", "        var min = Long.MaxValue\n        var nextMin\
    \ = Long.MaxValue\n        for (i <- lst) {\n            if (i < min) {\n    \
    \            nextMin = min\n                min = i\n            } else if (i\
    \ < nextMin) {\n                nextMin = i\n            }\n        }\n      \
    \  if (nextMin == Long.MaxValue) None else Some(nextMin)", "        if (lst.size\
    \ < 2) None\n        else {\n            val sorted = lst.sorted\n           \
    \ val min = sorted.head\n            val second = sorted.tail.find(x => x != min)\n\
    \            second\n        }", "        if (lst.length < 2) return None\n  \
    \      var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n\
    \            val temp = min\n            min = min2\n            min2 = temp\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        return Some(min2)", "        if (lst.size < 2) return None\n\
    \        var min1 = lst(0)\n        var min2 = lst(1)\n        if (min1 > min2)\
    \ {\n            val temp = min1\n            min1 = min2\n            min2 =\
    \ temp\n        }\n        for (i <- 2 until lst.size) {\n            if (lst(i)\
    \ < min1) {\n                min2 = min1\n                min1 = lst(i)\n    \
    \        } else if (lst(i) < min2) {\n                min2 = lst(i)\n        \
    \    }\n        }\n        if (min1 == min2) return None\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < min) {\n                min2 = min\n               \
    \ min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        var min = Long.MaxValue\n\
    \        var min2 = Long.MaxValue\n        for (i <- lst) {\n            if (i\
    \ < min) {\n                min2 = min\n                min = i\n            }\
    \ else if (i < min2) {\n                min2 = i\n            }\n        }\n \
    \       if (min2 == Long.MaxValue) None else Some(min2)", "        var min = Long.MaxValue\n\
    \        var min2 = Long.MaxValue\n        for (i <- lst) {\n            if (i\
    \ < min) {\n                min2 = min\n                min = i\n            }\
    \ else if (i < min2) {\n                min2 = i\n            }\n        }\n \
    \       if (min2 == Long.MaxValue) None else Some(min2)", "        if (lst.length\
    \ < 2) None\n        else {\n            var min = lst(0)\n            var min2\
    \ = lst(1)\n            if (min > min2) {\n                val tmp = min\n   \
    \             min = min2\n                min2 = tmp\n            }\n        \
    \    for (i <- 2 until lst.length) {\n                if (lst(i) < min) {\n  \
    \                  min2 = min\n                    min = lst(i)\n            \
    \    }\n                else if (lst(i) < min2) {\n                    min2 =\
    \ lst(i)\n                }\n            }\n            Some(min2)\n        }",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var nextMin = lst(1)\n        if (min > nextMin) {\n     \
    \       val temp = min\n            min = nextMin\n            nextMin = temp\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                nextMin = min\n                min = lst(i)\n      \
    \      } else if (lst(i) < nextMin) {\n                nextMin = lst(i)\n    \
    \        }\n        }\n        Some(nextMin)", "        if (lst.size < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        if (lst.size < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.size) {\n          \
    \  if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ if (lst.length < 2) None\n        else {\n            var min = lst(0)\n   \
    \         var min2 = Long.MaxValue\n            for (i <- 1 until lst.length)\
    \ {\n                if (lst(i) < min) {\n                    min2 = min\n   \
    \                 min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) min2 = lst(i)\n            }\n            if (min2 == Long.MaxValue)\
    \ None\n            else Some(min2)\n        }", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        if\
    \ (min > min2) {\n            val tmp = min\n            min = min2\n        \
    \    min2 = tmp\n        }\n        for (i <- 2 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.size < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        if (min > min2) {\n            val temp = min\n          \
    \  min = min2\n            min2 = temp\n        }\n        for (i <- 2 until lst.size)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            Some(sorted(1))\n        }",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        val sorted = lst.sorted\n    \
    \    return Some(sorted(1))", "        if (lst.length < 2) return None\n     \
    \   var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) return None\n       \
    \ var min = lst(0)\n        var nextMin = lst(1)\n        if (min > nextMin) {\n\
    \            val temp = min\n            min = nextMin\n            nextMin =\
    \ temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                nextMin = min\n                min = lst(i)\n    \
    \        } else if (lst(i) < nextMin) {\n                nextMin = lst(i)\n  \
    \          }\n        }\n        Some(nextMin)", "        if (lst.length < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        if\
    \ (min > min2) {\n            val tmp = min\n            min = min2\n        \
    \    min2 = tmp\n        }\n        for (i <- 2 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        return Some(min2)", "        if (lst.size < 2)\
    \ return None\n        var min = lst(0)\n        var min2 = lst(1)\n        for\
    \ (i <- 1 until lst.size) {\n            if (lst(i) < min) {\n               \
    \ min2 = min\n                min = lst(i)\n            } else if (lst(i) < min2)\
    \ {\n                min2 = lst(i)\n            }\n        }\n        if (min2\
    \ == min) return None\n        return Some(min2)", "        if (lst.length < 2)\
    \ None\n        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        val sorted = lst.sorted\n\
    \        val min = sorted(0)\n        for (i <- 1 until sorted.length) {\n   \
    \         if (sorted(i) != min) return Some(sorted(i))\n        }\n        None",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ secondMin = lst(1)\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < min) {\n                secondMin = min\n                min = lst(i)\n\
    \            } else if (lst(i) < secondMin) {\n                secondMin = lst(i)\n\
    \            }\n        }\n        if (secondMin == min) return None\n       \
    \ return Some(secondMin)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ var min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (x <-\
    \ lst) {\n            if (x < min) {\n                min2 = min\n           \
    \     min = x\n            } else if (x < min2) {\n                min2 = x\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) None else Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ return Some(min2)", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ val temp = min\n            min = min2\n            min2 = temp\n        }\n\
    \        for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n  \
    \              min2 = min\n                min = lst(i)\n            } else if\
    \ (lst(i) < min2) {\n                min2 = lst(i)\n            }\n        }\n\
    \        return Some(min2)", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ return Some(min2)", "        if (lst.length < 2) return None\n        var min\
    \ = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (x <- lst) {\n\
    \            if (x < min) {\n                min2 = min\n                min =\
    \ x\n            } else if (x < min2) {\n                min2 = x\n          \
    \  }\n        }\n        if (min2 == Long.MaxValue) None else Some(min2)", " \
    \       if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        val sorted = lst.sorted\n        if (sorted.length < 2)\
    \ None\n        else Some(sorted(1))", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) None\n        else {\n            val sorted = lst.sorted\n\
    \            Some(sorted(1))\n        }", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            min = lst(1)\n            min2 = lst(0)\n        }\n  \
    \      for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n    \
    \            min2 = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < min2) {\n                min2 = lst(i)\n            }\n        }\n       \
    \ if (min2 == min) return None\n        return Some(min2)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var next = lst(1)\n    \
    \    for (i <- 1 until lst.length) {\n            if (lst(i) < min) {\n      \
    \          next = min\n                min = lst(i)\n            } else if (lst(i)\
    \ < next) {\n                next = lst(i)\n            }\n        }\n       \
    \ if (next == min) return None\n        return Some(next)", "        val sorted\
    \ = lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) None\n\
    \        else {\n            val sorted = lst.sorted\n            Some(sorted(1))\n\
    \        }", "        val sorted = lst.sorted\n        if (sorted.length < 2)\
    \ None\n        else Some(sorted(1))", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2)\
    \ {\n            val temp = min\n            min = min2\n            min2 = temp\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        Some(min2)", "        if (lst.length < 2) return None\n  \
    \      var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        return Some(min2)", "        if (lst.length\
    \ < 2) return None\n        var min = lst(0)\n        var nextMin = lst(1)\n \
    \       for (i <- 2 until lst.length) {\n            if (lst(i) < min) {\n   \
    \             nextMin = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < nextMin) {\n                nextMin = lst(i)\n            }\n \
    \       }\n        if (nextMin == min) return None\n        return Some(nextMin)",
  "        if (lst.size < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        for (i <- 1 until lst.size) {\n            if (lst(i) < min)\
    \ {\n                min2 = min\n                min = lst(i)\n            } else\
    \ if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n       \
    \ }\n        if (min2 == min) return None\n        return Some(min2)", "     \
    \   if (lst.size < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        if (min > min2) {\n            val temp = min\n          \
    \  min = min2\n            min2 = temp\n        }\n        for (i <- 2 until lst.size)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            Some(sorted(1))\n        }",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n  \
    \      for (x <- lst) {\n            if (x < min) {\n                min2 = min\n\
    \                min = x\n            } else if (x < min2) {\n               \
    \ min2 = x\n            }\n        }\n        if (min2 == Long.MaxValue) None\
    \ else Some(min2)", "        if (lst.length < 2) return None\n        var min\
    \ = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n           \
    \ min = lst(1)\n            min2 = lst(0)\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        if (min >\
    \ min2) {\n            val temp = min\n            min = min2\n            min2\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.size < 2) return None\n        val sorted = lst.sorted\n\
    \        return Some(sorted(1))", "        if (lst.length < 2) return None\n \
    \       var min = lst(0)\n        var min2 = lst(1)\n        if (min > min2) {\n\
    \            val temp = min\n            min = min2\n            min2 = temp\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        val sorted = lst.sorted\n\
    \        if (sorted.size < 2) None\n        else Some(sorted(1))", "        if\
    \ (lst.length < 2) return None\n        var min = lst(0)\n        var min2 = lst(1)\n\
    \        if (min > min2) {\n            min = lst(1)\n            min2 = lst(0)\n\
    \        }\n        for (i <- 2 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        return Some(min2)", "        var min = Long.MaxValue\n   \
    \     var secondMin = Long.MaxValue\n        for (x <- lst) {\n            if\
    \ (x < min) {\n                secondMin = min\n                min = x\n    \
    \        } else if (x < secondMin) {\n                secondMin = x\n        \
    \    }\n        }\n        if (secondMin == Long.MaxValue) None else Some(secondMin)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            val temp = min\n     \
    \       min = min2\n            min2 = temp\n        }\n        for (i <- 2 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        Some(min2)", "  \
    \      val sorted = lst.sorted\n        if (sorted.length < 2) return None\n \
    \       return Some(sorted(1))", "        val sorted = lst.sorted\n        if\
    \ (sorted.size < 2) None\n        else Some(sorted(1))", "        val sorted =\
    \ lst.sorted\n        if (sorted.length < 2) None\n        else Some(sorted(1))",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                min2 = min\n                min = lst(i)\n       \
    \     } else if (lst(i) < min2) {\n                min2 = lst(i)\n           \
    \ }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        if (min2 == min) return None\n        return\
    \ Some(min2)", "        if (lst.length < 2) return None\n        var min = lst(0)\n\
    \        var nextMin = lst(1)\n        for (i <- 1 until lst.length) {\n     \
    \       if (lst(i) < min) {\n                nextMin = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < nextMin) {\n                nextMin\
    \ = lst(i)\n            }\n        }\n        if (nextMin == min) return None\n\
    \        return Some(nextMin)", "        if (lst.length < 2) return None\n   \
    \     var min = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (i\
    \ <- lst) {\n            if (i < min) {\n                min2 = min\n        \
    \        min = i\n            } else if (i < min2) {\n                min2 = i\n\
    \            }\n        }\n        if (min2 == Long.MaxValue) return None\n  \
    \      return Some(min2)", "        if (lst.length < 2) return None\n        var\
    \ min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < min) {\n                min2 = min\n           \
    \     min = lst(i)\n            } else if (lst(i) < min2) {\n                min2\
    \ = lst(i)\n            }\n        }\n        if (min2 == min) return None\n \
    \       return Some(min2)", "        if (lst.length < 2) None\n        else {\n\
    \            val sorted = lst.sorted\n            Some(sorted(1))\n        }",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) None\n        else Some(sorted(1))", "       \
    \ if (lst.length < 2) return None\n        var min = lst(0)\n        var min2\
    \ = lst(1)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ min) {\n                min2 = min\n                min = lst(i)\n         \
    \   } else if (lst(i) < min2) {\n                min2 = lst(i)\n            }\n\
    \        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        if (lst.length < 2) return None\n        var min = lst(0)\n        var\
    \ min2 = lst(1)\n        if (min > min2) {\n            min = lst(1)\n       \
    \     min2 = lst(0)\n        }\n        for (i <- 2 until lst.length) {\n    \
    \        if (lst(i) < min) {\n                min2 = min\n                min\
    \ = lst(i)\n            } else if (lst(i) < min2) {\n                min2 = lst(i)\n\
    \            }\n        }\n        return Some(min2)", "        val sorted = lst.sorted\n\
    \        if (sorted.length < 2) return None\n        return Some(sorted(1))",
  "        if (lst.length < 2) return None\n        var min = Long.MaxValue\n    \
    \    var min2 = Long.MaxValue\n        for (i <- lst) {\n            if (i < min)\
    \ {\n                min2 = min\n                min = i\n            } else if\
    \ (i < min2) {\n                min2 = i\n            }\n        }\n        if\
    \ (min2 == Long.MaxValue) return None\n        return Some(min2)", "        if\
    \ (lst.length < 2) None\n        else {\n            var min = lst(0)\n      \
    \      var min2 = lst(1)\n            for (i <- 1 until lst.length) {\n      \
    \          if (lst(i) < min) {\n                    min2 = min\n             \
    \       min = lst(i)\n                }\n                else if (lst(i) < min2)\
    \ min2 = lst(i)\n            }\n            if (min2 == min) None\n          \
    \  else Some(min2)\n        }", "        if (lst.length < 2) return None\n   \
    \     var min = lst(0)\n        var nextMin = lst(1)\n        if (min > nextMin)\
    \ {\n            val temp = min\n            min = nextMin\n            nextMin\
    \ = temp\n        }\n        for (i <- 2 until lst.length) {\n            if (lst(i)\
    \ < min) {\n                nextMin = min\n                min = lst(i)\n    \
    \        } else if (lst(i) < nextMin) {\n                nextMin = lst(i)\n  \
    \          }\n        }\n        return Some(nextMin)", "        if (lst.length\
    \ < 2) None\n        else {\n            var min = lst(0)\n            var min2\
    \ = lst(1)\n            if (min > min2) {\n                min = lst(1)\n    \
    \            min2 = lst(0)\n            }\n            for (i <- 2 until lst.length)\
    \ {\n                if (lst(i) < min) {\n                    min2 = min\n   \
    \                 min = lst(i)\n                }\n                else if (lst(i)\
    \ < min2) {\n                    min2 = lst(i)\n                }\n          \
    \  }\n            if (min2 == min) None\n            else Some(min2)\n       \
    \ }", "        if (lst.length < 2) return None\n        var min = lst(0)\n   \
    \     var min2 = lst(1)\n        for (i <- 1 until lst.length) {\n           \
    \ if (lst(i) < min) {\n                min2 = min\n                min = lst(i)\n\
    \            } else if (lst(i) < min2) {\n                min2 = lst(i)\n    \
    \        }\n        }\n        if (min2 == min) return None\n        return Some(min2)",
  "        val sorted = lst.sorted\n        if (sorted.length < 2) None\n        else\
    \ Some(sorted(1))", "        val sorted = lst.sorted\n        if (sorted.length\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.size < 2) return\
    \ None\n        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n  \
    \      for (i <- lst) {\n            if (i < min) {\n                min2 = min\n\
    \                min = i\n            } else if (i < min2) {\n               \
    \ min2 = i\n            }\n        }\n        if (min2 == Long.MaxValue) return\
    \ None\n        return Some(min2)", "        if (lst.length < 2) return None\n\
    \        var min = lst(0)\n        var min2 = lst(1)\n        for (i <- 1 until\
    \ lst.length) {\n            if (lst(i) < min) {\n                min2 = min\n\
    \                min = lst(i)\n            } else if (lst(i) < min2) {\n     \
    \           min2 = lst(i)\n            }\n        }\n        if (min2 == min)\
    \ return None\n        return Some(min2)", "        if (lst.length < 2) return\
    \ None\n        val sorted = lst.sorted\n        return Some(sorted(1))", "  \
    \      val sorted = lst.sorted\n        if (sorted.length < 2) return None\n \
    \       return Some(sorted(1))", "        if (lst.length < 2) None\n        else\
    \ {\n            val sorted = lst.sorted\n            Some(sorted(1))\n      \
    \  }", "        var min = Long.MaxValue\n        var min2 = Long.MaxValue\n  \
    \      for (i <- lst) {\n            if (i < min) {\n                min2 = min\n\
    \                min = i\n            } else if (i < min2) {\n               \
    \ min2 = i\n            }\n        }\n        if (min2 == Long.MaxValue) None\
    \ else Some(min2)", "        val sorted = lst.sorted\n        if (sorted.size\
    \ < 2) None\n        else Some(sorted(1))", "        if (lst.length < 2) return\
    \ None\n        var min = lst(0)\n        var min2 = lst(1)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < min) {\n                min2\
    \ = min\n                min = lst(i)\n            } else if (lst(i) < min2) {\n\
    \                min2 = lst(i)\n            }\n        }\n        if (min2 ==\
    \ min) return None\n        return Some(min2)"]
stop_tokens:
- "\n    }\n"

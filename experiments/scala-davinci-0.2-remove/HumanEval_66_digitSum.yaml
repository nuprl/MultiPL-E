name: HumanEval_66_digitSum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Task\n    // Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n   \
  \ def digitSum(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"))\
  \ == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
  abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
  woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
  \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\")) ==\
  \ (327l));\n    }\n\n}\n"
completions: ["        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", '        s.map(c
    => c.toLong).filter(c => c >= 65 && c <= 90).sum', "        var sum = 0L\n   \
    \     for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", '        s.map(x => x.toLong).filter(x
    => x >= 65 && x <= 90).sum', "        var sum = 0L\n        for (i <- 0 until\
    \ s.length) {\n            val c = s(i)\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += (c - 'A' + 1)\n            }\n        }\n        sum",
  "        var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c\n            }\n        }\n        sum", " \
    \       var sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        return\
    \ sum", '        s.map(c => if (c.isUpper) c.toLong else 0).sum', '        s.filter(c
    => c.isUpper).map(c => c.toLong).sum', '        s.map(x => x.toLong).filter(x
    => x >= 65 && x <= 90).sum', "        var sum : Long = 0\n        for (i <- 0\
    \ until s.length) {\n            if (s(i) >= 'A' && s(i) <= 'Z') {\n         \
    \       sum += s(i) - 'A' + 1\n            }\n        }\n        return sum",
  '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum', "        var\
    \ sum : Long = 0\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ >= 'A' && s(i) <= 'Z') {\n                sum += s(i) - 'A' + 1\n          \
    \  }\n        }\n        return sum", "        var sum : Long = 0\n        for\
    \ (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum +=\
    \ c.toInt\n            }\n        }\n        return sum", "        var sum = 0L\n\
    \        for (c <- s) {\n            if (c.isUpper) {\n                sum +=\
    \ c.toInt\n            }\n        }\n        sum", "        var sum : Long = 0\n\
    \        for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n           \
    \     sum += c.toInt\n            }\n        }\n        return sum", "       \
    \ var sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        return sum",
  "        var sum = 0\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ >= 'A' && s(i) <= 'Z') {\n                sum += s(i) - 'A' + 1\n          \
    \  }\n        }\n        sum", "        var sum = 0L\n        for (c <- s) {\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c\n         \
    \   }\n        }\n        sum", '        s.map(x => x.toLong).filter(x => x >=
    65 && x <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65 && c <=
    90).sum', "        val upper = s.filter(_.isUpper).map(_.toLong).sum\n       \
    \ val lower = s.filter(_.isLower).map(_.toLong).sum\n        val digit = s.filter(_.isDigit).map(_.toLong).sum\n\
    \        val other = s.filter(!_.isLetterOrDigit).map(_.toLong).sum\n        upper\
    \ + lower + digit + other", '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n            if\
    \ (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n  \
    \      sum", '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum',
  "        var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c.toInt\n            }\n        }\n        sum",
  '        s.filter(c => c.isUpper).map(c => c.toLong).sum', "        var sum = 0L\n\
    \        for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n           \
    \     sum += c.toInt\n            }\n        }\n        sum", '        s.map(x
    => if (x.isUpper) x.toInt else 0).sum', '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n \
    \           if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        var sum = 0L\n        for (i <- 0 until s.length)\
    \ {\n            val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n     \
    \           sum += c\n            }\n        }\n        sum", '        s.map(x
    => x.toInt).filter(x => x >= 65 && x <= 90).sum', "        var sum : Long = 0\n\
    \        for (c <- s) {\n            if (c.isUpper) {\n                sum +=\
    \ c.toInt\n            }\n        }\n        return sum", '        s.filter(c
    => c.isUpper).map(c => c.toLong).sum', '        s.map(x => x.toInt).filter(x =>
    x >= 65 && x <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65 &&
    c <= 90).sum', '        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum',
  "        var sum = 0L\n        for (i <- 0 until s.length) {\n            val c\
    \ = s(i)\n            if (c >= 'A' && c <= 'Z') {\n                sum += c\n\
    \            }\n        }\n        sum", "        var sum : Long = 0\n       \
    \ for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        return sum", '        s.foldLeft(0L)((acc,
    c) => acc + (if (c.isUpper) c.toLong else 0L))', '        s.map(x => if (x.isUpper)
    x.toLong else 0).sum', '        s.toList.map(x => x.toInt).filter(x => x >= 65
    && x <= 90).sum', '        s.map(x => if (x.isUpper) x.toLong else 0).sum', '        s.map(c
    => c.toInt).filter(c => c >= 65 && c <= 90).sum', '        s.map(_.toInt).filter(_
    >= 65).filter(_ <= 90).sum', "        var sum : Long = 0\n        for (i <- 0\
    \ until s.length) {\n            val c = s(i)\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c\n            }\n        }\n        return sum",
  '        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum', "        var\
    \ sum : Long = 0\n        for (c <- s) {\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += c.toInt\n            }\n        }\n        return\
    \ sum", '        s.map(x => x.toLong).filter(x => x >= 65 && x <= 90).sum', " \
    \       var sum = 0L\n        for (c <- s) {\n            if (c.isDigit) {\n \
    \               sum += c.toString.toInt\n            }\n        }\n        sum",
  '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum', '        s.map(x
    => x.toLong).filter(x => x >= 65 && x <= 90).sum', '        s.map(c => c.toInt).filter(c
    => c >= 65 && c <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n \
    \           if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n    \
    \        }\n        }\n        sum", '        s.map(x => x.toLong).filter(x =>
    x >= 65 && x <= 90).sum', '        s.map(x => if (x.isUpper) x.toLong else 0).sum',
  '        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum', "        var\
    \ sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n\
    \                sum += c\n            }\n        }\n        sum", '        s.map(x
    => x.toInt).filter(x => x >= 65 && x <= 90).sum', '        s.map(c => c.toInt).filter(i
    => i >= 65 && i <= 90).sum', '        s.map(x => x.toInt).filter(x => x >= 65
    && x <= 90).sum', '        s.map(x => x.toLong).filter(x => x >= 65 && x <= 90).sum',
  '        s.map(_.toLong).filter(_ >= 65).filter(_ <= 90).sum', '        s.map(c
    => c.toLong).filter(c => c >= 65 && c <= 90).sum', '        s.map(_.toLong).filter(_
    >= 65).filter(_ <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', '        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum',
  "        var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c\n            }\n        }\n        sum", " \
    \       var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c.toInt\n            }\n        }\n        sum",
  "        var sum = 0L\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ >= 'A' && s(i) <= 'Z') {\n                sum += s(i) - 'A' + 1\n          \
    \  }\n        }\n        sum", '        s.map(c => c.toLong).filter(c => c >=
    65 && c <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65 && c <=
    90).sum', "        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", " \
    \       var sum : Long = 0\n        for (i <- 0 until s.length) {\n          \
    \  val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n                sum\
    \ += c\n            }\n        }\n        return sum", '        s.filter(c =>
    c.isUpper).map(c => c.toLong).sum', "        var sum = 0L\n        for (c <- s)\
    \ {\n            if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        var sum : Long = 0\n       \
    \ for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        return sum", "        var sum : Long = 0\n\
    \        for (i <- 0 until s.length) {\n            if (s(i) >= 'A' && s(i) <=\
    \ 'Z') {\n                sum += s(i) - 'A' + 1\n            }\n        }\n  \
    \      return sum", '        s.map(x => if (x.isUpper) x.toLong else 0).sum',
  '        s.map(c => c.toInt).filter(c => c >= 65 && c <= 90).sum', '        s.filter(c
    => c.isUpper).map(c => c.toLong).sum', '        s.filter(c => c.isUpper).map(c
    => c.toLong).sum', '        s.map(x => if (x.isUpper) x.toLong else 0).sum', '        s.map(c
    => c.toLong).filter(c => c >= 65 && c <= 90).sum', "        val upper = s.toUpperCase\n\
    \        var sum = 0\n        for (i <- 0 until upper.length) {\n            sum\
    \ += upper(i)\n        }\n        sum", "        var sum = 0L\n        for (c\
    \ <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n    \
    \        }\n        }\n        sum", '        s.map(c => c.toInt).filter(i =>
    i >= 65 && i <= 90).sum', "        var sum = 0L\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) >= 'A' && s(i) <= 'Z') {\n                sum += s(i)\
    \ - 'A' + 1\n            }\n        }\n        sum", "        var sum : Long =\
    \ 0\n        for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n       \
    \         sum += c.toInt\n            }\n        }\n        return sum", '        s.map(c
    => c.toLong).filter(c => c >= 65 && c <= 90).sum', '        s.filter(c => c.isUpper).map(c
    => c.toLong).sum', '        s.foldLeft(0L)((acc, c) => if (c.isUpper) acc + c.toInt
    else acc)', '        s.toList.map(_.toInt).filter(_ >= 65).filter(_ <= 90).sum',
  '        s.toList.map(_.toInt).filter(_ >= 65).filter(_ <= 90).sum', "        val\
    \ upper = s.filter(c => c.isUpper)\n        upper.map(c => c.toLong).sum", " \
    \       var sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        return\
    \ sum", "        var sum : Long = 0\n        for (c <- s) {\n            if (c\
    \ >= 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n     \
    \   }\n        return sum", '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', "        var sum : Long = 0\n        for (i <- 0 until s.length)\
    \ {\n            val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n     \
    \           sum += c\n            }\n        }\n        return sum", '        s.map(c
    => c.toInt).filter(c => c >= 65 && c <= 90).sum', '        s.map(_.toLong).filter(_
    >= 65).filter(_ <= 90).sum', '        s.map(x => x.toInt).filter(x => x >= 65
    && x <= 90).sum', '        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum',
  '        s.toCharArray.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum', '        s.map(_.toLong).filter(_
    >= 65).filter(_ <= 90).sum', "        var sum = 0L\n        for (i <- 0 until\
    \ s.length) {\n            val c = s(i)\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += c\n            }\n        }\n        sum", '        s.map(x
    => x.toInt).filter(x => x >= 65 && x <= 90).sum', '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', '        s.foldLeft(0L)((acc, c) => if (c.isUpper)
    acc + c.toLong else acc)', '        s.map(c => c.toLong).filter(c => c >= 65 &&
    c <= 90).sum', '        s.filter(c => c.isUpper).map(c => c.toLong).sum', "  \
    \      var sum : Long = 0\n        for (c <- s) {\n            if (c >= 'A' &&\
    \ c <= 'Z') {\n                sum += c.toInt\n            }\n        }\n    \
    \    return sum", "        var sum : Long = 0\n        for (i <- 0 until s.length)\
    \ {\n            val c = s(i)\n            if (c.isUpper) {\n                sum\
    \ += c.toInt\n            }\n        }\n        return sum", '        s.map(x
    => x.toInt).filter(x => x >= 65 && x <= 90).sum', "        var sum = 0L\n    \
    \    for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n               \
    \ sum += c\n            }\n        }\n        sum", '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n \
    \           if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n    \
    \        }\n        }\n        sum", '        s.toCharArray.map(c => c.toLong).filter(c
    => c >= 65 && c <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', "        var sum : Long = 0\n        for (c <- s) {\n      \
    \      if (c.isUpper) {\n                sum += c.toInt\n            }\n     \
    \   }\n        return sum", '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', '        s.filter(c => c.isUpper).map(c => c.toLong).sum', '        s.filter(c
    => c.isUpper).map(c => c.toLong).sum', "        var sum : Long = 0\n        for\
    \ (c <- s) {\n            if (c.isUpper) sum += c.toLong\n        }\n        return\
    \ sum", '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum', " \
    \       var sum = 0L\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        sum", "    \
    \    var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", '        s.map(c
    => if (c.isUpper) c.toLong else 0).sum', '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', "        val upper = s.toUpperCase()\n        var\
    \ sum = 0\n        for (i <- 0 until upper.length) {\n            val c = upper(i)\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c\n         \
    \   }\n        }\n        sum", '        s.toList.map(x => x.toInt).filter(x =>
    x >= 65 && x <= 90).sum', "        var sum = 0L\n        for (i <- 0 until s.length)\
    \ {\n            val c = s(i)\n            if (c >= 'A' && c <= 'Z') {\n     \
    \           sum += c.toInt\n            }\n        }\n        sum", "        var\
    \ sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n     \
    \           sum += c.toInt\n            }\n        }\n        return sum", '        s.filter(x
    => x.isUpper).map(x => x.toLong).sum', '        s.toList.map(c => c.toLong).filter(c
    => c >= 65 && c <= 90).sum', '        s.map(_.toInt).filter(_ >= 65).filter(_
    <= 90).sum', '        s.toUpperCase.map(x => x.toInt).filter(x => x >= 65 && x
    <= 90).sum', '        s.map(c => if (c.isUpper) c.toLong else 0).sum', "     \
    \   var sum = 0L\n        for (c <- s) {\n            if (c >= 'A' && c <= 'Z')\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", " \
    \       var sum = 0L\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        sum", '        s.map(c
    => c.toInt).filter(c => c >= 65 && c <= 90).sum', '        s.foldLeft(0L)((acc,
    c) => if (c.isUpper) acc + c.toLong else acc)', '        s.toList.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', '        s.foldLeft(0L)((acc, c) => if (c.isUpper)
    acc + c.toInt else acc)', '        s.map(c => c.toInt).filter(c => c >= 65 &&
    c <= 90).sum', "        var sum : Long = 0\n        for (c <- s) {\n         \
    \   if (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n\
    \        return sum", '        s.map(x => x.toLong).filter(x => x >= 65 && x <=
    90).sum', '        s.filter(c => c.isUpper).map(c => c.toLong).sum', '        s.toUpperCase.map(x
    => x.toLong).filter(x => x >= 65 && x <= 90).sum', "        var sum : Long = 0\n\
    \        for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n           \
    \     sum += c\n            }\n        }\n        return sum", '        s.map(c
    => c.toLong).filter(c => c >= 65 && c <= 90).sum', "        val upper = s.filter(_.isUpper).map(_.toInt).sum\n\
    \        val lower = s.filter(_.isLower).map(_.toInt).sum\n        upper - lower",
  "        var sum = 0L\n        for (c <- s) {\n            if (c.isUpper) {\n  \
    \              sum += c.toInt\n            }\n        }\n        sum", '        s.map(c
    => if (c.isUpper) c.toInt else 0).sum', '        s.map(_.toLong).filter(_ > 64).filter(_
    < 91).sum', "        var sum : Long = 0\n        for (c <- s) {\n            if\
    \ (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n  \
    \      }\n        return sum", "        var sum : Long = 0\n        for (c <-\
    \ s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum += c\n  \
    \          }\n        }\n        return sum", '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', '        s.filter(_.isUpper).map(_.toLong).sum',
  '        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum', "        var\
    \ sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n     \
    \           sum += c.toInt\n            }\n        }\n        return sum", " \
    \       s.map(x => if (x >= 'A' && x <= 'Z') x.toLong - 'A'.toLong + 1 else 0).sum",
  '        s.foldLeft(0L)((acc, c) => acc + (if (c.isUpper) c.toLong else 0L))', '        s.map(_.toInt).filter(_
    >= 65).filter(_ <= 90).sum', '        s.toCharArray.map(c => c.toInt).filter(i
    => i >= 65 && i <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n \
    \           if (c.isUpper) {\n                sum += c.toLong\n            }\n\
    \        }\n        sum", "        var sum = 0L\n        for (c <- s) {\n    \
    \        if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n       \
    \     }\n        }\n        sum", '        s.filter(c => c.isUpper).map(c => c.toLong).sum',
  '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum', "        var\
    \ sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n     \
    \           sum += c.toInt\n            }\n        }\n        return sum", '        s.map(c
    => if (c.isUpper) c.toLong else 0).sum', '        s.map(c => c.toInt).filter(c
    => c >= 65 && c <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n \
    \           if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        var sum = 0L\n        for (c <- s) {\n    \
    \        if (c >= 'A' && c <= 'Z') {\n                sum += c\n            }\n\
    \        }\n        sum", '        s.map(x => x.toInt).filter(x => x >= 65 &&
    x <= 90).sum', '        s.map(x => x.toLong).filter(x => x >= 65 && x <= 90).sum',
  '        s.toList.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum', "    \
    \    var sum = 0L\n        for (i <- 0 until s.length) {\n            val c =\
    \ s(i)\n            if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", '        s.foldLeft(0L)((acc, c) => if
    (c.isUpper) acc + c.toInt else acc)', "        var sum = 0L\n        for (c <-\
    \ s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", '        s.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', '        s.toCharArray.map(x => x.toLong).filter(x
    => x >= 65 && x <= 90).sum', "        val upper = s.filter(c => c >= 'A' && c\
    \ <= 'Z')\n        upper.map(c => c.toLong).sum", '        s.toCharArray.filter(c
    => c.isUpper).map(c => c.toLong).sum', '        s.foldLeft(0L)((acc, c) => if
    (c.isUpper) acc + c.toLong else acc)', "        var sum : Long = 0\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toLong\n\
    \            }\n        }\n        return sum", "        var sum = 0L\n      \
    \  for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n                sum\
    \ += c.toInt\n            }\n        }\n        sum", '        s.map(c => c.toInt).filter(c
    => c >= 65 && c <= 90).sum', '        s.map(c => c.toInt).filter(i => i >= 65
    && i <= 90).sum', '        s.toCharArray.map(x => x.toInt).filter(x => x >= 65
    && x <= 90).sum', "        var sum = 0L\n        for (c <- s) {\n            if\
    \ (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n  \
    \      sum", "        var sum : Long = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) >= 'A' && s(i) <= 'Z') {\n                sum += s(i)\
    \ - 'A' + 1\n            }\n        }\n        return sum", "        var sum :\
    \ Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n           \
    \     sum += c.toInt\n            }\n        }\n        return sum", "       \
    \ var sum : Long = 0\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c\n            }\n        }\n        return sum",
  '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum', '        s.map(x
    => x.toLong).filter(x => x >= 65 && x <= 90).sum', '        s.map(c => c.toLong).filter(c
    => c >= 65 && c <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65
    && c <= 90).sum', '        s.map(c => c.toLong).filter(c => c >= 65 && c <= 90).sum']
stop_tokens:
- "\n    }\n"

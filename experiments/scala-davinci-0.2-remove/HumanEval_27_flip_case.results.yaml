language: scala
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (char <- string) {\n            if (char.isUpper) result\
    \ += char.toLower\n            else result += char.toUpper\n        }\n      \
    \  return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isLower) c.toUpper else c.toLower)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        return\
    \ string.map(c => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) result += c.toUpper\n\
    \            else if (c.isUpper) result += c.toLower\n            else result\
    \ += c\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(x\
    \ => if (x.isUpper) x.toLower else x.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(x\
    \ => if (x.isUpper) x.toLower else x.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) result += c.toUpper\n\
    \            else if (c.isUpper) result += c.toLower\n            else result\
    \ += c\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) result += c.toUpper\n\
    \            else if (c.isUpper) result += c.toLower\n            else result\
    \ += c\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isLower)\
    \ result += string(i).toUpper\n            else result += string(i).toLower\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(x\
    \ => if (x.isUpper) x.toLower else x.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(x\
    \ => if (x.isUpper) x.toLower else x.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isLower)\
    \ sb.append(c.toUpper)\n            else sb.append(c.toLower)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) {\n        \
    \        result += c.toUpper\n            } else {\n                result +=\
    \ c.toLower\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isLower)\
    \ sb.append(c.toUpper)\n            else sb.append(c.toLower)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) result += c.toUpper\n\
    \            else if (c.isUpper) result += c.toLower\n            else result\
    \ += c\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder()\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isLower)\
    \ result += string(i).toUpper\n            else result += string(i).toLower\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(x\
    \ => if (x.isUpper) x.toLower else x.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) {\n        \
    \        result += c.toLower\n            } else {\n                result +=\
    \ c.toUpper\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isLower) c.toUpper else c.toLower)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isLower) c.toUpper else c.toLower)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isLower)\
    \ result += string(i).toUpper\n            else result += string(i).toLower\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isLower)\
    \ sb.append(c.toUpper)\n            else sb.append(c.toLower)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isLower) c.toUpper else c.toLower)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        return\
    \ string.map(c => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var sb\
    \ = new StringBuilder\n        for (i <- 0 until string.length) {\n          \
    \  if (string(i).isUpper) sb.append(string(i).toLower)\n            else sb.append(string(i).toUpper)\n\
    \        }\n        sb.toString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isLower) c.toUpper else c.toLower)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) result += c.toUpper\n\
    \            else if (c.isUpper) result += c.toLower\n            else result\
    \ += c\n        }\n        result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isLower) {\n        \
    \        result += c.toUpper\n            } else {\n                result +=\
    \ c.toLower\n            }\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isLower)\
    \ result += string(i).toUpper\n            else result += string(i).toLower\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        val sb\
    \ = new StringBuilder\n        for (c <- string) {\n            if (c.isUpper)\
    \ sb.append(c.toLower)\n            else sb.append(c.toUpper)\n        }\n   \
    \     sb.toString\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (c <- string) {\n            if (c.isUpper) result += c.toLower\n\
    \            else result += c.toUpper\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n\
    \    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        var result\
    \ = \"\"\n        for (i <- 0 until string.length) {\n            if (string(i).isUpper)\
    \ result += string(i).toLower\n            else result += string(i).toUpper\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"\
    hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\"\
    )).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    def flipCase(string : String) : String = {\n        string.map(c\
    \ => if (c.isUpper) c.toLower else c.toUpper)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978816

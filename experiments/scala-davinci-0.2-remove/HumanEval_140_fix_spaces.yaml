name: HumanEval_140_fix_spaces
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string text, replace all spaces in it with underscores, \n    //\
  \ and if a string has more than 2 consecutive spaces, \n    // then replace all\
  \ consecutive spaces with -\n    def fixSpaces(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fixSpaces((\"Example\"\
  )).equals((\"Example\")));\n    assert(fixSpaces((\"Mudasir Hanif \")).equals((\"\
  Mudasir_Hanif_\")));\n    assert(fixSpaces((\"Yellow Yellow  Dirty  Fellow\")).equals((\"\
  Yellow_Yellow__Dirty__Fellow\")));\n    assert(fixSpaces((\"Exa   mple\")).equals((\"\
  Exa-mple\")));\n    assert(fixSpaces((\"   Exa 1 2 2 mple\")).equals((\"-Exa_1_2_2_mple\"\
  )));\n    }\n\n}\n"
completions: ["        var result = \"\"\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       return result", "        var result = new StringBuilder\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    result.append('-')\n        \
    \        } else {\n                    result.append('_')\n                }\n\
    \            } else {\n                result.append(c)\n            }\n     \
    \       lastChar = c\n        }\n        result.toString", '        text.replaceAll("\\s+",
    "-")', "        var result = \"\"\n        var prev = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", '        text.replaceAll("\\s+",
    "-")', "        var result = \"\"\n        var lastChar = ' '\n        for (c\
    \ <- text) {\n            if (c == ' ') {\n                if (lastChar == ' ')\
    \ {\n                    result += '-'\n                } else {\n           \
    \         result += '_'\n                }\n            } else {\n           \
    \     result += c\n            }\n            lastChar = c\n        }\n      \
    \  return result", "        var result = \"\"\n        var lastChar = ' '\n  \
    \      for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        return result", "        var result = \"\"\n        var prevChar = '\
    \ '\n        for (c <- text) {\n            if (c == ' ') {\n                if\
    \ (prevChar == ' ') result += '-'\n                else result += '_'\n      \
    \      }\n            else result += c\n            prevChar = c\n        }\n\
    \        result", "        var result = \"\"\n        var lastChar = ' '\n   \
    \     for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        return result", "        var result = \"\"\n        var prev = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (prev\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            prev = c\n        }\n  \
    \      return result", "        var result = \"\"\n        var prevChar = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (prevChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            prevChar = c\n        }\n\
    \        return result", "        var result = \"\"\n        var lastChar = '\
    \ '\n        for (c <- text) {\n            if (c == ' ') {\n                if\
    \ (lastChar == ' ') {\n                    result += '-'\n                } else\
    \ {\n                    result += '_'\n                }\n            } else\
    \ {\n                result += c\n            }\n            lastChar = c\n  \
    \      }\n        return result", "        var result = \"\"\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    result += '-'\n             \
    \   } else {\n                    result += '_'\n                }\n         \
    \   } else {\n                result += c\n            }\n            lastChar\
    \ = c\n        }\n        return result", "        var result = new StringBuilder\n\
    \        var i = 0\n        while (i < text.length) {\n            if (text(i)\
    \ == ' ') {\n                result.append('_')\n                while (i < text.length\
    \ && text(i) == ' ') {\n                    i += 1\n                }\n      \
    \      } else {\n                result.append(text(i))\n                i +=\
    \ 1\n            }\n        }\n        result.toString", "        var s = text.replaceAll(\"\
    \ \", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s.replaceAll(\"__\", \"_\")\n        s = s.replaceAll(\"\
    __\", \"_\")\n        s = s", "        var result = \"\"\n        var count =\
    \ 0\n        for (i <- 0 until text.length) {\n            if (text(i) == ' ')\
    \ {\n                count += 1\n                if (count == 1) result += \"\
    _\"\n            } else {\n                if (count > 2) result += \"-\"\n  \
    \              else if (count == 2) result += \"_\"\n                count = 0\n\
    \                result += text(i)\n            }\n        }\n        if (count\
    \ > 2) result += \"-\"\n        else if (count == 2) result += \"_\"\n       \
    \ result", "        var result = \"\"\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       return result", "        var result = \"\"\n        var lastChar = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        return result", "        var result = \"\"\n        var lastChar = '\
    \ '\n        for (c <- text) {\n            if (c == ' ') {\n                if\
    \ (lastChar == ' ') {\n                    result += '-'\n                } else\
    \ {\n                    result += '_'\n                }\n            } else\
    \ {\n                result += c\n            }\n            lastChar = c\n  \
    \      }\n        return result", "        var result = \"\"\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    result += '-'\n             \
    \   } else {\n                    result += '_'\n                }\n         \
    \   } else {\n                result += c\n            }\n            lastChar\
    \ = c\n        }\n        return result", "        var result = new StringBuilder\n\
    \        var lastChar = ' '\n        for (c <- text) {\n            if (c == '\
    \ ') {\n                if (lastChar == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        result.toString", "        val sb\
    \ = new StringBuilder\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             sb.append('-')\n                } else {\n                    sb.append('_')\n\
    \                }\n            } else {\n                sb.append(c)\n     \
    \       }\n            lastChar = c\n        }\n        sb.toString", "      \
    \  var result = new StringBuilder\n        var lastWasSpace = false\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastWasSpace)\
    \ {\n                    result.append('-')\n                } else {\n      \
    \              result.append('_')\n                    lastWasSpace = true\n \
    \               }\n            } else {\n                result.append(c)\n  \
    \              lastWasSpace = false\n            }\n        }\n        result.toString",
  "        var result = new StringBuilder\n        var lastSpace = false\n       \
    \ for (i <- 0 until text.length) {\n            if (text(i) == ' ') {\n      \
    \          if (lastSpace) {\n                    result += '-'\n             \
    \   } else {\n                    result += '_'\n                    lastSpace\
    \ = true\n                }\n            } else {\n                result += text(i)\n\
    \                lastSpace = false\n            }\n        }\n        result.toString",
  "        var result = new StringBuilder\n        var prev = ' '\n        for (c\
    \ <- text) {\n            if (c == ' ') {\n                if (prev == ' ') {\n\
    \                    result += '-'\n                } else {\n               \
    \     result += '_'\n                }\n            } else {\n               \
    \ result += c\n            }\n            prev = c\n        }\n        result.toString",
  "        var result = new StringBuilder\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       result.toString", "        var result = \"\"\n        var prev = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (prev\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            prev = c\n        }\n  \
    \      return result", "        var result = text.replaceAll(\"\\\\s+\", \"_\"\
    )\n        result = result.replaceAll(\"_+\", \"-\")\n        return result",
  "        var result = \"\"\n        var count = 0\n        for (i <- 0 until text.length)\
    \ {\n            if (text(i) == ' ') {\n                count += 1\n         \
    \       if (count == 1) result += '_'\n                else if (count == 2) result\
    \ += '-'\n            } else {\n                count = 0\n                result\
    \ += text(i)\n            }\n        }\n        result", "        var result =\
    \ \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c ==\
    \ ' ') {\n                if (prev == ' ') {\n                    result += '-'\n\
    \                } else {\n                    result += '_'\n               \
    \ }\n            } else {\n                result += c\n            }\n      \
    \      prev = c\n        }\n        return result", "        val sb = new StringBuilder\n\
    \        var i = 0\n        while (i < text.length) {\n            if (text(i)\
    \ == ' ') {\n                sb.append('_')\n                i += 1\n        \
    \        while (i < text.length && text(i) == ' ') {\n                    sb.append('-')\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         sb.append(text(i))\n                i += 1\n            }\n        }\n\
    \        sb.toString", "        val sb = new StringBuilder\n        var prev =\
    \ ' '\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  if (prev == ' ') {\n                    sb.append('-')\n                } else\
    \ {\n                    sb.append('_')\n                }\n            } else\
    \ {\n                sb.append(c)\n            }\n            prev = c\n     \
    \   }\n        sb.toString", "        val sb = new StringBuilder\n        var\
    \ lastChar = ' '\n        for (c <- text) {\n            if (c == ' ') {\n   \
    \             if (lastChar == ' ') {\n                    sb.append('-')\n   \
    \             } else {\n                    sb.append('_')\n                }\n\
    \            } else {\n                sb.append(c)\n            }\n         \
    \   lastChar = c\n        }\n        sb.toString", "        var s = text.replaceAll(\"\
    \ \", \"_\")\n        s = s.replaceAll(\"_+\", \"-\")\n        return s", "  \
    \      var result = \"\"\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                var j = i + 1\n          \
    \      while (j < text.length && text(j) == ' ') j += 1\n                if (j\
    \ - i > 2) {\n                    result += \"-\"\n                    i = j\n\
    \                } else {\n                    result += \"_\"\n             \
    \       i += 1\n                }\n            } else {\n                result\
    \ += text(i)\n                i += 1\n            }\n        }\n        result",
  "        var result = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"\
    _+\", \"-\")\n        return result", '        text.replaceAll("\\s+", "-")',
  "        var result = new StringBuilder\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       result.toString", "        var result = \"\"\n        var lastChar = '\
    \ '\n        for (c <- text) {\n            if (c == ' ') {\n                if\
    \ (lastChar == ' ') result += '-'\n                else result += '_'\n      \
    \      }\n            else result += c\n            lastChar = c\n        }\n\
    \        result", '        text.replaceAll("\\s+", "-")', "        var result\
    \ = text.replaceAll(\"\\\\s+\", \"-\")\n        result = result.replaceAll(\"\\\
    \\s\", \"_\")\n        return result", "        var result = \"\"\n        var\
    \ i = 0\n        while (i < text.length) {\n            if (text(i) == ' ') {\n\
    \                if (i + 1 < text.length && text(i + 1) == ' ') {\n          \
    \          result += '-'\n                    while (i + 1 < text.length && text(i\
    \ + 1) == ' ') i += 1\n                } else {\n                    result +=\
    \ '_'\n                }\n            } else {\n                result += text(i)\n\
    \            }\n            i += 1\n        }\n        result", "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var count = 0\n        for (i <- 0 until text.length) {\n  \
    \          if (text(i) == ' ') {\n                count += 1\n               \
    \ if (count == 1) result += '_'\n                else if (count == 2) result +=\
    \ '-'\n            } else {\n                count = 0\n                result\
    \ += text(i)\n            }\n        }\n        result", "        var result =\
    \ \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        var sb\
    \ = new StringBuilder\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                sb.append('_')\n         \
    \       i += 1\n                while (i < text.length && text(i) == ' ') {\n\
    \                    sb.append('-')\n                    i += 1\n            \
    \    }\n            } else {\n                sb.append(text(i))\n           \
    \     i += 1\n            }\n        }\n        sb.toString", "        var result\
    \ = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        var result\
    \ = new StringBuilder\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                var j = i + 1\n          \
    \      while (j < text.length && text(j) == ' ') j += 1\n                if (j\
    \ - i > 2) {\n                    result.append('-')\n                    i =\
    \ j\n                } else {\n                    result.append('_')\n      \
    \              i += 1\n                }\n            } else {\n             \
    \   result.append(text(i))\n                i += 1\n            }\n        }\n\
    \        result.toString", "        var result = \"\"\n        var lastChar =\
    \ ' '\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  if (lastChar == ' ') {\n                    result += '-'\n               \
    \ } else {\n                    result += '_'\n                }\n           \
    \ } else {\n                result += c\n            }\n            lastChar =\
    \ c\n        }\n        return result", "        var result = new StringBuilder\n\
    \        var last = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (last == ' ') {\n                    result += '-'\n \
    \               } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  last = c\n        }\n        result.toString", "        var result = \"\"\n\
    \        var prevChar = ' '\n        for (c <- text) {\n            if (c == '\
    \ ') {\n                if (prevChar == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prevChar = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        var result\
    \ = new StringBuilder\n        var prev = ' '\n        for (c <- text) {\n   \
    \         if (c == ' ') {\n                if (prev == ' ') {\n              \
    \      result.append('-')\n                } else {\n                    result.append('_')\n\
    \                }\n            } else {\n                result.append(c)\n \
    \           }\n            prev = c\n        }\n        result.toString", "  \
    \      var result = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"\
    _+\", \"-\")\n        return result", "        var sb = new StringBuilder\n  \
    \      var lastChar = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (lastChar == ' ') {\n                    sb.append('-')\n\
    \                } else {\n                    sb.append('_')\n              \
    \  }\n            } else {\n                sb.append(c)\n            }\n    \
    \        lastChar = c\n        }\n        sb.toString", "        var result =\
    \ \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        var result\
    \ = new StringBuilder()\n        var prev = ' '\n        for (c <- text) {\n \
    \           if (c == ' ') {\n                if (prev == ' ') {\n            \
    \        result.append('-')\n                } else {\n                    result.append('_')\n\
    \                }\n            } else {\n                result.append(c)\n \
    \           }\n            prev = c\n        }\n        result.toString", "  \
    \      val sb = new StringBuilder\n        var lastChar = ' '\n        for (c\
    \ <- text) {\n            if (c == ' ') {\n                if (lastChar == ' ')\
    \ {\n                    sb.append('-')\n                } else {\n          \
    \          sb.append('_')\n                }\n            } else {\n         \
    \       sb.append(c)\n            }\n            lastChar = c\n        }\n   \
    \     sb.toString", "        var result = \"\"\n        var i = 0\n        while\
    \ (i < text.length) {\n            if (text(i) == ' ') {\n                if (i\
    \ + 1 < text.length && text(i + 1) == ' ') {\n                    result += \"\
    -\"\n                    while (i + 1 < text.length && text(i + 1) == ' ') i +=\
    \ 1\n                } else result += \"_\"\n            } else result += text(i)\n\
    \            i += 1\n        }\n        result", "        var result = new StringBuilder\n\
    \        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') {\n                    result.append('-')\n\
    \                } else {\n                    result.append('_')\n          \
    \      }\n            } else {\n                result.append(c)\n           \
    \ }\n            prev = c\n        }\n        result.toString", "        var result\
    \ = new StringBuilder\n        var prev = ' '\n        for (c <- text) {\n   \
    \         if (c == ' ') {\n                if (prev == ' ') {\n              \
    \      result.append('-')\n                } else {\n                    result.append('_')\n\
    \                }\n            } else {\n                result.append(c)\n \
    \           }\n            prev = c\n        }\n        result.toString", "  \
    \      var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var sb = new StringBuilder\n        var i = 0\n        while (i < text.length)\
    \ {\n            if (text(i) == ' ') {\n                sb.append('_')\n     \
    \           i += 1\n                while (i < text.length && text(i) == ' ')\
    \ {\n                    sb.append('-')\n                    i += 1\n        \
    \        }\n            } else {\n                sb.append(text(i))\n       \
    \         i += 1\n            }\n        }\n        sb.toString", "        var\
    \ result = new StringBuilder\n        var prevChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (prevChar == ' ') {\n   \
    \                 result.append('-')\n                } else {\n             \
    \       result.append('_')\n                }\n            } else {\n        \
    \        result.append(c)\n            }\n            prevChar = c\n        }\n\
    \        result.toString", "        var s = text.replaceAll(\" \", \"_\")\n  \
    \      s = s.replaceAll(\"_+\", \"-\")\n        return s", "        var result\
    \ = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", '        text.replaceAll("\\s+",
    "-")', "        var result = new StringBuilder\n        var lastChar = ' '\n \
    \       for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        result.toString", "        var result = \"\"\n        var lastChar =\
    \ ' '\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  if (lastChar == ' ') {\n                    result += '-'\n               \
    \ } else {\n                    result += '_'\n                }\n           \
    \ } else {\n                result += c\n            }\n            lastChar =\
    \ c\n        }\n        return result", "        var result = \"\"\n        var\
    \ prev = ' '\n        for (c <- text) {\n            if (c == ' ') {\n       \
    \         if (prev == ' ') {\n                    result += '-'\n            \
    \    } else {\n                    result += '_'\n                }\n        \
    \    } else {\n                result += c\n            }\n            prev =\
    \ c\n        }\n        result", "        var result = \"\"\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    result += '-'\n             \
    \   } else {\n                    result += '_'\n                }\n         \
    \   } else {\n                result += c\n            }\n            lastChar\
    \ = c\n        }\n        return result", "        var result = \"\"\n       \
    \ var count = 0\n        for (c <- text) {\n            if (c == ' ') {\n    \
    \            count += 1\n                if (count == 1) result += '_'\n     \
    \           else if (count > 2) result += '-'\n            } else {\n        \
    \        result += c\n                count = 0\n            }\n        }\n  \
    \      result", "        var result = \"\"\n        var lastChar = ' '\n     \
    \   for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        return result", "        val sb = new StringBuilder\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    sb.append('-')\n            \
    \    } else {\n                    sb.append('_')\n                }\n       \
    \     } else {\n                sb.append(c)\n            }\n            lastChar\
    \ = c\n        }\n        sb.toString", "        var result = \"\"\n        var\
    \ i = 0\n        while (i < text.length) {\n            if (text(i) == ' ') {\n\
    \                result += \"_\"\n                while (i < text.length && text(i)\
    \ == ' ') i += 1\n            }\n            else {\n                result +=\
    \ text(i)\n                i += 1\n            }\n        }\n        result",
  "        var result = \"\"\n        var prevChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (prevChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            prevChar = c\n        }\n        return result",
  "        var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        return result", " \
    \       val sb = new StringBuilder\n        var prev = ' '\n        for (c <-\
    \ text) {\n            if (c == ' ') {\n                if (prev == ' ') {\n \
    \                   sb.append('-')\n                } else {\n               \
    \     sb.append('_')\n                }\n            } else {\n              \
    \  sb.append(c)\n            }\n            prev = c\n        }\n        sb.toString",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n \
    \           if (c == ' ') {\n                if (prev == ' ') {\n            \
    \        result += '-'\n                } else {\n                    result +=\
    \ '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        return result", " \
    \       var result = \"\"\n        var previous = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (previous == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            previous = c\n        }\n        return result",
  '        text.replaceAll("\\s+", "-")', "        var sb = new StringBuilder\n  \
    \      var prevSpace = false\n        for (c <- text) {\n            if (c ==\
    \ ' ') {\n                if (prevSpace) {\n                    sb += '-'\n  \
    \              } else {\n                    sb += '_'\n                    prevSpace\
    \ = true\n                }\n            } else {\n                sb += c\n \
    \               prevSpace = false\n            }\n        }\n        sb.toString",
  "        var result = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"\
    _+\", \"-\")\n        return result", "        var result = text.replaceAll(\"\
    \ \", \"_\")\n        result = result.replaceAll(\"_+\", \"-\")\n        return\
    \ result", "        var result = \"\"\n        var prevChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (prevChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            prevChar = c\n        }\n \
    \       return result", "        val sb = new StringBuilder\n        var count\
    \ = 0\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  count += 1\n                if (count == 1) sb.append('_')\n              \
    \  else if (count == 2) sb.append('-')\n            } else {\n               \
    \ count = 0\n                sb.append(c)\n            }\n        }\n        sb.toString",
  "        val sb = new StringBuilder\n        var lastSpace = false\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastSpace) {\n\
    \                    sb.append('-')\n                } else {\n              \
    \      sb.append('_')\n                    lastSpace = true\n                }\n\
    \            } else {\n                sb.append(c)\n                lastSpace\
    \ = false\n            }\n        }\n        sb.toString", "        var s = \"\
    \"\n        var i = 0\n        while (i < text.length) {\n            if (text(i)\
    \ == ' ') {\n                s += '_'\n                while (i < text.length\
    \ && text(i) == ' ') {\n                    i += 1\n                }\n      \
    \      } else {\n                s += text(i)\n                i += 1\n      \
    \      }\n        }\n        return s", "        val sb = new StringBuilder\n\
    \        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') {\n                    sb.append('-')\n\
    \                } else {\n                    sb.append('_')\n              \
    \  }\n            } else {\n                sb.append(c)\n            }\n    \
    \        prev = c\n        }\n        sb.toString", "        var result = new\
    \ StringBuilder\n        var lastChar = ' '\n        for (c <- text) {\n     \
    \       if (c == ' ') {\n                if (lastChar == ' ') {\n            \
    \        result += '-'\n                } else {\n                    result +=\
    \ '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        result.toString",
  "        var result = new StringBuilder\n        var i = 0\n        while (i < text.length)\
    \ {\n            if (text(i) == ' ') {\n                var j = i + 1\n      \
    \          while (j < text.length && text(j) == ' ') j += 1\n                if\
    \ (j - i > 2) {\n                    result.append(\"-\")\n                  \
    \  i = j\n                } else {\n                    result.append(\"_\")\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result.append(text(i))\n                i += 1\n            }\n    \
    \    }\n        result.toString", "        var result = \"\"\n        var i =\
    \ 0\n        while (i < text.length) {\n            if (text(i) == ' ') {\n  \
    \              result += \"_\"\n                while (i < text.length && text(i)\
    \ == ' ') i += 1\n            }\n            else {\n                result +=\
    \ text(i)\n                i += 1\n            }\n        }\n        result",
  "        var s = text.replaceAll(\" \", \"_\")\n        s = s.replaceAll(\"_+\"\
    , \"-\")\n        return s", "        var sb = new StringBuilder\n        var\
    \ lastSpace = false\n        for (c <- text) {\n            if (c == ' ') {\n\
    \                if (lastSpace) {\n                    sb.append('-')\n      \
    \          } else {\n                    sb.append('_')\n                    lastSpace\
    \ = true\n                }\n            } else {\n                sb.append(c)\n\
    \                lastSpace = false\n            }\n        }\n        sb.toString",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = new StringBuilder\n        var i = 0\n        var count =\
    \ 0\n        while (i < text.length) {\n            if (text(i) == ' ') {\n  \
    \              count += 1\n                if (count == 2) {\n               \
    \     result.append('-')\n                    count = 0\n                }\n \
    \           } else {\n                if (count == 1) result.append('_')\n   \
    \             count = 0\n                result.append(text(i))\n            }\n\
    \            i += 1\n        }\n        if (count == 1) result.append('_')\n \
    \       result.toString", "        var result = \"\"\n        var prevSpace =\
    \ false\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (prevSpace) result += '-'\n                else {\n                  \
    \  result += '_'\n                    prevSpace = true\n                }\n  \
    \          } else {\n                result += c\n                prevSpace =\
    \ false\n            }\n        }\n        result", '        text.replaceAll("\\s+",
    "-")', "        var result = new StringBuilder\n        var lastChar = ' '\n \
    \       for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') result.append('-')\n                else result.append('_')\n      \
    \      }\n            else result.append(c)\n            lastChar = c\n      \
    \  }\n        return result.toString", "        var result = new StringBuilder\n\
    \        var lastChar = ' '\n        for (c <- text) {\n            if (c == '\
    \ ') {\n                if (lastChar == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        result.toString", "        val sb\
    \ = new StringBuilder\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                var j = i + 1\n          \
    \      while (j < text.length && text(j) == ' ') j += 1\n                if (j\
    \ - i > 2) sb.append('-')\n                else sb.append('_')\n             \
    \   i = j\n            } else {\n                sb.append(text(i))\n        \
    \        i += 1\n            }\n        }\n        sb.toString", '        return
    text.replaceAll(" +", "-")', "        var sb = new StringBuilder\n        var\
    \ i = 0\n        var count = 0\n        while (i < text.length) {\n          \
    \  if (text(i) == ' ') {\n                count += 1\n                if (count\
    \ > 2) {\n                    sb.append('-')\n                    count = 0\n\
    \                }\n            } else {\n                count = 0\n        \
    \        sb.append(text(i))\n            }\n            i += 1\n        }\n  \
    \      sb.toString", "        var sb = new StringBuilder\n        var i = 0\n\
    \        while (i < text.length) {\n            if (text(i) == ' ') {\n      \
    \          var j = i + 1\n                while (j < text.length && text(j) ==\
    \ ' ') j += 1\n                if (j - i > 2) sb.append('-')\n               \
    \ else sb.append('_')\n                i = j\n            } else {\n         \
    \       sb.append(text(i))\n                i += 1\n            }\n        }\n\
    \        sb.toString", "        val sb = new StringBuilder\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    sb.append('-')\n            \
    \    } else {\n                    sb.append('_')\n                }\n       \
    \     } else {\n                sb.append(c)\n            }\n            lastChar\
    \ = c\n        }\n        sb.toString", "        var result = text.replaceAll(\"\
    \ \", \"_\")\n        result = result.replaceAll(\"_+\", \"-\")\n        return\
    \ result", "        var result = new StringBuilder\n        var lastChar = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        result.toString", "        var result = \"\"\n        var lastChar =\
    \ ' '\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  if (lastChar == ' ') {\n                    result += '-'\n               \
    \ } else {\n                    result += '_'\n                }\n           \
    \ } else {\n                result += c\n            }\n            lastChar =\
    \ c\n        }\n        return result", "        var sb = new StringBuilder\n\
    \        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') {\n                    sb.append('-')\n\
    \                } else {\n                    sb.append('_')\n              \
    \  }\n            } else {\n                sb.append(c)\n            }\n    \
    \        prev = c\n        }\n        sb.toString", "        var result = \"\"\
    \n        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') result += '-'\n                else result\
    \ += '_'\n            }\n            else result += c\n            prev = c\n\
    \        }\n        result", "        var result = new StringBuilder\n       \
    \ var i = 0\n        while (i < text.length) {\n            if (text(i) == ' ')\
    \ {\n                result.append('_')\n                i += 1\n            \
    \    while (i < text.length && text(i) == ' ') {\n                    result.append('-')\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result.append(text(i))\n                i += 1\n            }\n    \
    \    }\n        result.toString", '        text.replaceAll("\\s+", "-")', "  \
    \      val sb = new StringBuilder\n        var lastChar = ' '\n        for (c\
    \ <- text) {\n            if (c == ' ') {\n                if (lastChar == ' ')\
    \ sb += '-'\n                else sb += '_'\n            }\n            else sb\
    \ += c\n            lastChar = c\n        }\n        sb.toString", '        text.replaceAll("
    +", "-")', "        var result = new StringBuilder\n        var lastChar = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result.append('-')\n                } else {\n\
    \                    result.append('_')\n                }\n            } else\
    \ {\n                result.append(c)\n            }\n            lastChar = c\n\
    \        }\n        result.toString", "        var result = text.replaceAll(\"\
    \ \", \"_\")\n        result = result.replaceAll(\"_+\", \"-\")\n        return\
    \ result", "        var result = \"\"\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       return result", "        var result = new StringBuilder\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    result.append('-')\n        \
    \        } else {\n                    result.append('_')\n                }\n\
    \            } else {\n                result.append(c)\n            }\n     \
    \       lastChar = c\n        }\n        result.toString", "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        var result\
    \ = text.replaceAll(\"\\\\s+\", \"_\")\n        result = result.replaceAll(\"\
    _+\", \"-\")\n        return result", "        val sb = new StringBuilder\n  \
    \      var lastChar = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (lastChar == ' ') {\n                    sb.append('-')\n\
    \                } else {\n                    sb.append('_')\n              \
    \  }\n            } else {\n                sb.append(c)\n            }\n    \
    \        lastChar = c\n        }\n        sb.toString", "        var result =\
    \ \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        val sb\
    \ = new StringBuilder\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             sb.append('-')\n                } else {\n                    sb.append('_')\n\
    \                }\n            } else {\n                sb.append(c)\n     \
    \       }\n            lastChar = c\n        }\n        sb.toString", "      \
    \  var result = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        return result", " \
    \       var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                result += '_'\n          \
    \      i += 1\n                while (i < text.length && text(i) == ' ') {\n \
    \                   result += '-'\n                    i += 1\n              \
    \  }\n            } else {\n                result += text(i)\n              \
    \  i += 1\n            }\n        }\n        result", "        var result = new\
    \ StringBuilder\n        var i = 0\n        while (i < text.length) {\n      \
    \      if (text(i) == ' ') {\n                var j = i + 1\n                while\
    \ (j < text.length && text(j) == ' ') j += 1\n                if (j - i > 2) {\n\
    \                    result.append(\"-\")\n                    i = j\n       \
    \         } else {\n                    result.append(\"_\")\n               \
    \     i += 1\n                }\n            } else {\n                result.append(text(i))\n\
    \                i += 1\n            }\n        }\n        result.toString", " \
    \       val sb = new StringBuilder\n        var prev = ' '\n        for (c <-\
    \ text) {\n            if (c == ' ') {\n                if (prev == ' ') {\n \
    \                   sb.append('-')\n                } else {\n               \
    \     sb.append('_')\n                }\n            } else {\n              \
    \  sb.append(c)\n            }\n            prev = c\n        }\n        sb.toString",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = new StringBuilder\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       result.toString", "        var result = new StringBuilder\n        var\
    \ i = 0\n        while (i < text.length) {\n            if (text(i) == ' ') {\n\
    \                var j = i + 1\n                while (j < text.length && text(j)\
    \ == ' ') j += 1\n                if (j - i > 2) {\n                    result.append(\"\
    -\")\n                    i = j\n                } else {\n                  \
    \  result.append(\"_\")\n                    i += 1\n                }\n     \
    \       } else {\n                result.append(text(i))\n                i +=\
    \ 1\n            }\n        }\n        result.toString", "        var result =\
    \ \"\"\n        var lastChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (lastChar == ' ') result += '-'\n         \
    \       else result += '_'\n            }\n            else result += c\n    \
    \        lastChar = c\n        }\n        result", "        var s = text.replaceAll(\"\
    \\\\s+\", \"_\")\n        s = s.replaceAll(\"_+\", \"-\")\n        return s",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = new StringBuilder\n        var count = 0\n        for (c <-\
    \ text) {\n            if (c == ' ') {\n                count += 1\n         \
    \       if (count == 1) result.append('_')\n                else if (count ==\
    \ 2) result.append('-')\n            } else {\n                count = 0\n   \
    \             result.append(c)\n            }\n        }\n        result.toString",
  '        text.replaceAll("\\s+", "-")', '        text.replaceAll("\\s+", "-")',
  "        var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n \
    \           if (c == ' ') {\n                if (prev == ' ') {\n            \
    \        result += '-'\n                } else {\n                    result +=\
    \ '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        return result", " \
    \       var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  "        var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = new StringBuilder\n        var prev = ' '\n        for (c <-\
    \ text) {\n            if (c == ' ') {\n                if (prev == ' ') {\n \
    \                   result.append('-')\n                } else {\n           \
    \         result.append('_')\n                }\n            } else {\n      \
    \          result.append(c)\n            }\n            prev = c\n        }\n\
    \        result.toString", "        val sb = new StringBuilder\n        var lastChar\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (lastChar == ' ') {\n                    sb.append('-')\n            \
    \    } else {\n                    sb.append('_')\n                }\n       \
    \     } else {\n                sb.append(c)\n            }\n            lastChar\
    \ = c\n        }\n        sb.toString", "        var result = \"\"\n        var\
    \ lastChar = ' '\n        for (c <- text) {\n            if (c == ' ') {\n   \
    \             if (lastChar == ' ') {\n                    result += '-'\n    \
    \            } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  lastChar = c\n        }\n        return result", "        var result = \"\"\
    \n        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') {\n                    result += '-'\n \
    \               } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  prev = c\n        }\n        return result", "        var result = \"\"\n \
    \       var lastChar = ' '\n        for (c <- text) {\n            if (c == '\
    \ ') {\n                if (lastChar == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            lastChar = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var lastWasSpace = false\n        for (c <- text) {\n      \
    \      if (c == ' ') {\n                if (lastWasSpace) {\n                \
    \    result += '-'\n                } else {\n                    result += '_'\n\
    \                    lastWasSpace = true\n                }\n            } else\
    \ {\n                result += c\n                lastWasSpace = false\n     \
    \       }\n        }\n        result", "        var result = \"\"\n        var\
    \ count = 0\n        for (i <- 0 until text.length) {\n            if (text(i)\
    \ == ' ') {\n                count += 1\n                if (count == 1) result\
    \ += '_'\n                else if (count == 2) result += '-'\n            } else\
    \ {\n                result += text(i)\n                count = 0\n          \
    \  }\n        }\n        result", "        var result = \"\"\n        var spaceCount\
    \ = 0\n        for (c <- text) {\n            if (c == ' ') {\n              \
    \  spaceCount += 1\n                if (spaceCount == 1) result += '_'\n     \
    \           else if (spaceCount == 2) result += '-'\n            } else {\n  \
    \              spaceCount = 0\n                result += c\n            }\n  \
    \      }\n        result", "        var result = new StringBuilder\n        var\
    \ lastChar = ' '\n        for (c <- text) {\n            if (c == ' ') {\n   \
    \             if (lastChar == ' ') {\n                    result.append('-')\n\
    \                } else {\n                    result.append('_')\n          \
    \      }\n            } else {\n                result.append(c)\n           \
    \ }\n            lastChar = c\n        }\n        result.toString", "        var\
    \ result = \"\"\n        var lastChar = ' '\n        for (c <- text) {\n     \
    \       if (c == ' ') {\n                if (lastChar == ' ') {\n            \
    \        result += '-'\n                } else {\n                    result +=\
    \ '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            lastChar = c\n        }\n        return result", " \
    \       var result = new StringBuilder()\n        var spaceCount = 0\n       \
    \ for (c <- text) {\n            if (c == ' ') {\n                spaceCount +=\
    \ 1\n                if (spaceCount == 1) result += '_'\n                else\
    \ if (spaceCount == 2) result += '-'\n            } else {\n                spaceCount\
    \ = 0\n                result += c\n            }\n        }\n        result.toString",
  "        var result = \"\"\n        var i = 0\n        while (i < text.length) {\n\
    \            if (text(i) == ' ') {\n                var j = i + 1\n          \
    \      while (j < text.length && text(j) == ' ') j += 1\n                if (j\
    \ - i > 2) result += \"-\"\n                else result += \"_\"\n           \
    \     i = j\n            } else {\n                result += text(i)\n       \
    \         i += 1\n            }\n        }\n        result", "        var s =\
    \ text.replaceAll(\" \", \"_\")\n        s = s.replaceAll(\"_+\", \"-\")\n   \
    \     return s", "        var result = new StringBuilder\n        var count =\
    \ 0\n        for (c <- text) {\n            if (c == ' ') {\n                count\
    \ += 1\n                if (count == 1) result.append('_')\n                else\
    \ if (count == 2) result.append('-')\n            } else {\n                count\
    \ = 0\n                result.append(c)\n            }\n        }\n        result.toString",
  '        text.replaceAll("\\s{2,}", "-").replaceAll("\\s", "_")', "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        var result\
    \ = new StringBuilder\n        var lastChar = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (lastChar == ' ') {\n       \
    \             result.append('-')\n                } else {\n                 \
    \   result.append('_')\n                }\n            } else {\n            \
    \    result.append(c)\n            }\n            lastChar = c\n        }\n  \
    \      result.toString", "        var result = new StringBuilder\n        var\
    \ lastChar = ' '\n        for (c <- text) {\n            if (c == ' ') {\n   \
    \             if (lastChar == ' ') {\n                    result += '-'\n    \
    \            } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  lastChar = c\n        }\n        result.toString", "        var sb = new StringBuilder\n\
    \        var last = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (last == ' ') {\n                    sb.append('-')\n\
    \                } else {\n                    sb.append('_')\n              \
    \  }\n            } else {\n                sb.append(c)\n            }\n    \
    \        last = c\n        }\n        sb.toString", "        var result = \"\"\
    \n        var prevChar = ' '\n        for (c <- text) {\n            if (c ==\
    \ ' ') {\n                if (prevChar == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prevChar = c\n        }\n        return result", "        var result\
    \ = new StringBuilder\n        var prevSpace = false\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (prevSpace) {\n         \
    \           result.append('-')\n                } else {\n                   \
    \ result.append('_')\n                    prevSpace = true\n                }\n\
    \            } else {\n                result.append(c)\n                prevSpace\
    \ = false\n            }\n        }\n        result.toString", "        var result\
    \ = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"_+\",\
    \ \"-\")\n        return result", "        var result = \"\"\n        var prev\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (prev == ' ') result += '-'\n                else result += '_'\n    \
    \        }\n            else result += c\n            prev = c\n        }\n  \
    \      result", "        var result = text.replaceAll(\" \", \"_\")\n        result\
    \ = result.replaceAll(\"_+\", \"-\")\n        return result", "        var result\
    \ = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"_+\",\
    \ \"-\")\n        return result", "        var sb = new StringBuilder\n      \
    \  var i = 0\n        while (i < text.length) {\n            if (text(i) == '\
    \ ') {\n                sb.append('_')\n                i += 1\n             \
    \   while (i < text.length && text(i) == ' ') {\n                    sb.append('-')\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         sb.append(text(i))\n                i += 1\n            }\n        }\n\
    \        sb.toString", "        var result = \"\"\n        var lastChar = ' '\n\
    \        for (c <- text) {\n            if (c == ' ') {\n                if (lastChar\
    \ == ' ') {\n                    result += '-'\n                } else {\n   \
    \                 result += '_'\n                }\n            } else {\n   \
    \             result += c\n            }\n            lastChar = c\n        }\n\
    \        return result", "        var result = text.replaceAll(\" \", \"_\")\n\
    \        result = result.replaceAll(\"_+\", \"-\")\n        return result", " \
    \       val sb = new StringBuilder\n        var i = 0\n        while (i < text.length)\
    \ {\n            if (text(i) == ' ') {\n                sb.append('_')\n     \
    \           i += 1\n                while (i < text.length && text(i) == ' ')\
    \ {\n                    sb.append('-')\n                    i += 1\n        \
    \        }\n            } else {\n                sb.append(text(i))\n       \
    \         i += 1\n            }\n        }\n        sb.toString", "        val\
    \ sb = new StringBuilder\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 sb.append('-')\n                } else {\n                 \
    \   sb.append('_')\n                }\n            } else {\n                sb.append(c)\n\
    \            }\n            lastChar = c\n        }\n        sb.toString", " \
    \       var result = \"\"\n        var prev = ' '\n        for (c <- text) {\n\
    \            if (c == ' ') {\n                if (prev == ' ') {\n           \
    \         result += '-'\n                } else {\n                    result\
    \ += '_'\n                }\n            } else {\n                result += c\n\
    \            }\n            prev = c\n        }\n        return result", "   \
    \     var result = text.replaceAll(\" \", \"_\")\n        result = result.replaceAll(\"\
    _+\", \"-\")\n        return result", "        var result = text.replaceAll(\"\
    \ \", \"_\")\n        result = result.replaceAll(\"_+\", \"-\")\n        return\
    \ result", "        var result = \"\"\n        var lastChar = ' '\n        for\
    \ (c <- text) {\n            if (c == ' ') {\n                if (lastChar ==\
    \ ' ') {\n                    result += '-'\n                } else {\n      \
    \              result += '_'\n                }\n            } else {\n      \
    \          result += c\n            }\n            lastChar = c\n        }\n \
    \       return result", "        val sb = new StringBuilder\n        var prev\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (prev == ' ') {\n                    sb.append('-')\n                }\
    \ else {\n                    sb.append('_')\n                }\n            }\
    \ else {\n                sb.append(c)\n            }\n            prev = c\n\
    \        }\n        sb.toString", "        var result = \"\"\n        var prev\
    \ = ' '\n        for (c <- text) {\n            if (c == ' ') {\n            \
    \    if (prev == ' ') {\n                    result += '-'\n                }\
    \ else {\n                    result += '_'\n                }\n            }\
    \ else {\n                result += c\n            }\n            prev = c\n \
    \       }\n        return result", '        text.replaceAll("\\s+", "-")', " \
    \       var result = \"\"\n        var lastChar = ' '\n        for (c <- text)\
    \ {\n            if (c == ' ') {\n                if (lastChar == ' ') {\n   \
    \                 result += '-'\n                } else {\n                  \
    \  result += '_'\n                }\n            } else {\n                result\
    \ += c\n            }\n            lastChar = c\n        }\n        return result",
  '        text.replaceAll("\\s+", "-")', "        var result = new StringBuilder\n\
    \        var i = 0\n        while (i < text.length) {\n            if (text(i)\
    \ == ' ') {\n                var j = i + 1\n                while (j < text.length\
    \ && text(j) == ' ') j += 1\n                if (j - i > 2) {\n              \
    \      result.append(\"-\")\n                    i = j\n                } else\
    \ {\n                    result.append(\"_\")\n                    i += 1\n  \
    \              }\n            } else {\n                result.append(text(i))\n\
    \                i += 1\n            }\n        }\n        result.toString", " \
    \       val sb = new StringBuilder\n        var prev = ' '\n        for (c <-\
    \ text) {\n            if (c == ' ') {\n                if (prev == ' ') sb.append('-')\n\
    \                else sb.append('_')\n            } else sb.append(c)\n      \
    \      prev = c\n        }\n        sb.toString", "        val sb = new StringBuilder\n\
    \        var i = 0\n        while (i < text.length) {\n            if (text(i)\
    \ == ' ') {\n                var j = i + 1\n                while (j < text.length\
    \ && text(j) == ' ') j += 1\n                if (j - i > 2) {\n              \
    \      sb.append(\"-\")\n                    i = j\n                } else {\n\
    \                    sb.append(\"_\")\n                    i += 1\n          \
    \      }\n            } else {\n                sb.append(text(i))\n         \
    \       i += 1\n            }\n        }\n        sb.toString", "        var result\
    \ = \"\"\n        var prevChar = ' '\n        for (c <- text) {\n            if\
    \ (c == ' ') {\n                if (prevChar == ' ') {\n                    result\
    \ += '-'\n                } else {\n                    result += '_'\n      \
    \          }\n            } else {\n                result += c\n            }\n\
    \            prevChar = c\n        }\n        return result", "        var result\
    \ = \"\"\n        var prev = ' '\n        for (c <- text) {\n            if (c\
    \ == ' ') {\n                if (prev == ' ') {\n                    result +=\
    \ '-'\n                } else {\n                    result += '_'\n         \
    \       }\n            } else {\n                result += c\n            }\n\
    \            prev = c\n        }\n        return result", "        val sb = new\
    \ StringBuilder\n        var prev = ' '\n        for (c <- text) {\n         \
    \   if (c == ' ') {\n                if (prev == ' ') sb.append('-')\n       \
    \         else sb.append('_')\n            } else sb.append(c)\n            prev\
    \ = c\n        }\n        sb.toString", "        var result = \"\"\n        var\
    \ lastChar = ' '\n        for (c <- text) {\n            if (c == ' ') {\n   \
    \             if (lastChar == ' ') {\n                    result += '-'\n    \
    \            } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  lastChar = c\n        }\n        return result", "        var result = \"\"\
    \n        var spaceCount = 0\n        for (c <- text) {\n            if (c ==\
    \ ' ') {\n                spaceCount += 1\n                if (spaceCount == 1)\
    \ result += '_'\n                else if (spaceCount == 2) result += '-'\n   \
    \         } else {\n                spaceCount = 0\n                result +=\
    \ c\n            }\n        }\n        result", "        var result = \"\"\n \
    \       var prev = ' '\n        for (c <- text) {\n            if (c == ' ') {\n\
    \                if (prev == ' ') {\n                    result += '-'\n     \
    \           } else {\n                    result += '_'\n                }\n \
    \           } else {\n                result += c\n            }\n           \
    \ prev = c\n        }\n        return result", "        var result = new StringBuilder\n\
    \        var prev = ' '\n        for (c <- text) {\n            if (c == ' ')\
    \ {\n                if (prev == ' ') {\n                    result += '-'\n \
    \               } else {\n                    result += '_'\n                }\n\
    \            } else {\n                result += c\n            }\n          \
    \  prev = c\n        }\n        result.toString"]
stop_tokens:
- "\n    }\n"

name: HumanEval_67_fruit_distribution
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // In this task, you will be given a string that represents a number of apples\
  \ and oranges \n    // that are distributed in a basket of fruit this basket contains\
  \ \n    // apples, oranges, and mango fruits. Given the string that represents the\
  \ total number of \n    // the oranges and apples and an integer that represent\
  \ the total number of the fruits \n    // in the basket return the number of the\
  \ mango fruits in the basket.\n    // for examble:\n    def fruitDistribution(s\
  \ : String, n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fruitDistribution((\"\
  5 apples and 6 oranges\"), (19l)) == (8l));\n    assert(fruitDistribution((\"5 apples\
  \ and 6 oranges\"), (21l)) == (10l));\n    assert(fruitDistribution((\"0 apples\
  \ and 1 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"1 apples and\
  \ 0 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (100l)) == (95l));\n    assert(fruitDistribution((\"2 apples and 3\
  \ oranges\"), (5l)) == (0l));\n    assert(fruitDistribution((\"1 apples and 100\
  \ oranges\"), (120l)) == (19l));\n    }\n\n}\n"
completions: ["        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val mangoes = n - apples - oranges\n\
    \        mangoes", "        val arr = s.split(\" \").map(_.toLong)\n        val\
    \ a = arr(0)\n        val o = arr(1)\n        val m = n - (a + o)\n        if\
    \ (m < 0) -1 else m", "        val fruits = s.split(\" \")\n        val apples\
    \ = fruits(0).toLong\n        val oranges = fruits(1).toLong\n        val totalFruits\
    \ = apples + oranges\n        n - totalFruits", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val total = arr.sum\n        val mango = n - total\n\
    \        mango", "        val arr = s.split(\" \").map(_.toLong)\n        val\
    \ a = arr(0)\n        val o = arr(1)\n        val m = n - a - o\n        m", " \
    \       val a = s.split(\" \").map(_.toLong)\n        val x = a(0)\n        val\
    \ y = a(1)\n        val z = n - x - y\n        z", "        val x = s.split(\"\
    \ \")\n        val a = x(0).toLong\n        val o = x(1).toLong\n        val m\
    \ = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n   \
    \     val b = a(0)\n        val c = a(1)\n        val d = n - (b + c)\n      \
    \  d", "        val arr = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n\
    \        val o = arr(1)\n        val m = n - a - o\n        m", "        val arr\
    \ = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n\
    \        val m = n - a - o\n        if (m < 0) -1 else m", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - (b + c)\n        return d", "        val a = s.split(\" \").map(_.toLong)\n\
    \        n - a(0) - a(1)", "        val a = s.split(\" \").map(_.toLong)\n   \
    \     val oranges = a(0)\n        val apples = a(1)\n        n - oranges - apples",
  "        val a = s.split(\" \").map(_.toLong)\n        val x = a(0)\n        val\
    \ y = a(1)\n        val z = n - x - y\n        return z", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        d", "        // Write your code here\n        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = n - a.sum\n        b", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        return d", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0) +\
    \ a(1)\n        n - b", "        val a = s.split(\" \")(0).toLong\n        val\
    \ o = s.split(\" \")(1).toLong\n        val m = n - a - o\n        return m",
  "        val arr = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n      \
    \  val o = arr(1)\n        val m = n - a - o\n        if (m < 0) -1 else m", " \
    \       val a = s.split(\" \").map(_.toLong)\n        val numOfApples = a(0)\n\
    \        val numOfOranges = a(1)\n        val numOfMangoes = n - numOfApples -\
    \ numOfOranges\n        numOfMangoes", "        val (a, o) = s.split(\" \").map(_.toLong).toList\
    \ match {\n            case List(a, o) => (a, o)\n        }\n        val m = n\
    \ - a - o\n        if (m < 0) -1 else m", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val arr = s.split(\" \"\
    ).map(_.toLong)\n        val (a, o) = (arr(0), arr(1))\n        val total = a\
    \ + o\n        val mango = n - total\n        mango", "        val a = s.split(\"\
    \ \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n        n - a - o",
  "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val\
    \ c = a(1)\n        val d = n - b - c\n        d", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0) + a(1)\n        n - b", "        val\
    \ l = s.length\n        var a = 0\n        var o = 0\n        for (i <- 0 until\
    \ l) {\n            if (s(i) == 'a') a += 1\n            else if (s(i) == 'o')\
    \ o += 1\n        }\n        n - (a + o)", "        val a = s.split(\"A\").map(_.length)\n\
    \        val o = s.split(\"O\").map(_.length)\n        val m = s.split(\"M\").map(_.length)\n\
    \        val ao = a.zip(o).map(x => x._1 + x._2)\n        val aom = ao.zip(m).map(x\
    \ => x._1 + x._2)\n        val aom_sorted = aom.sorted\n        val aom_sorted_reverse\
    \ = aom_sorted.reverse\n        val aom_sorted_reverse_sum = aom_sorted_reverse.sum\n\
    \        val aom_sorted_reverse_sum_diff = n - aom_sorted_reverse_sum\n      \
    \  val aom_sorted_reverse_sum_diff_div = aom_sorted_reverse_sum_diff / aom_sorted_reverse.length\n\
    \        val aom_sorted_reverse_sum_diff_div_mod = aom_sorted_reverse_sum_diff_div\
    \ % aom_sorted_reverse.length\n        val aom_sorted_reverse_sum_diff_div_mod_sum\
    \ = aom_sorted_reverse_sum_diff_div + aom_sorted_reverse_sum_diff_div_mod\n  \
    \      return aom_sorted_reverse_sum_diff_div_mod_sum", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        val\
    \ m = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n \
    \       val x = a(0)\n        val y = a(1)\n        val z = n - x - y\n      \
    \  z", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n \
    \       val c = a(1)\n        val d = n - b - c\n        d", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n \
    \       val d = n - b - c\n        d", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a\
    \ = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n\
    \        val d = n - b - c\n        d", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val fruits = s.split(\" \")\n        val numApples = fruits(0).toLong\n\
    \        val numOranges = fruits(1).toLong\n        val numMangoes = n - numApples\
    \ - numOranges\n        numMangoes", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a\
    \ = s.split(\" \").map(_.toLong)\n        val sum = a.sum\n        val total =\
    \ n - sum\n        total", "        val a = s.split(\" \")(0).toLong\n       \
    \ val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        n - a(0) - a(1)", "        val a = s.split(\" \"\
    ).map(_.toLong)\n        val b = a(0) + a(1)\n        n - b", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        n - a(0) - a(1)", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        d", "        val a = s.split(\" \").map(_.toLong)\n   \
    \     val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n        return\
    \ d", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n  \
    \      val c = a(1)\n        val d = n - b - c\n        d", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0) + a(1)\n        n - b", "        val\
    \ a = s.split(\" \").map(_.toLong)\n        val x = a(0)\n        val y = a(1)\n\
    \        val z = n - x - y\n        z", "        val a = s.split(\" \").map(_.toLong)\n\
    \        n - a(0) - a(1)", "        val (a, b) = s.split(\" \").map(_.toLong).toList\
    \ match {\n            case List(x, y) => (x, y)\n        }\n        val total\
    \ = a + b\n        val mango = n - total\n        mango", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        val\
    \ m = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n \
    \       val b = a(0) + a(1)\n        n - b", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - (b + c)\n   \
    \     d", "        val a = s.split(\" \").map(_.toLong)\n        n - a(0) - a(1)",
  "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val\
    \ c = a(1)\n        val d = n - b - c\n        d", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        return d", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a\
    \ = s.split(\" \").map(_.toLong)\n        val b = n - a.sum\n        b", "   \
    \     val a = s.split(\" \").map(x => x.toLong)\n        val b = a.sum\n     \
    \   n - b", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        n - b - c", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val arr\
    \ = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n\
    \        val m = n - a - o\n        m", "        val nums = s.split(\" \").map(_.toLong)\n\
    \        val total = nums.sum\n        val mango = n - total\n        mango",
  "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n  \
    \      val oranges = fruits(1).toLong\n        val total = apples + oranges\n\
    \        n - total", "        val a = s.split(\" \").map(_.toLong)\n        n\
    \ - a(0) - a(1)", "        val a = s.split(\" \").map(_.toLong)\n        val x\
    \ = a(0)\n        val y = a(1)\n        val z = n - x - y\n        z", "     \
    \   val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n\
    \        n - a - o", "        // Write your code here\n        val nums = s.split(\"\
    \ \").map(_.toLong)\n        val a = nums(0)\n        val o = nums(1)\n      \
    \  val m = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val arr = s.split(\" \"\
    ).map(_.toLong)\n        val total = arr.sum\n        val mango = n - total\n\
    \        mango", "        val a = s.split(\" \").map(_.toLong)\n        val b\
    \ = a(0)\n        val c = a(1)\n        val d = n - b - c\n        d", "     \
    \   val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n\
    \        n - a - o", "        val total = s.split(\" \").map(_.toLong).sum\n \
    \       n - total", "        val a = s.split(\" \").map(_.toLong)\n        val\
    \ b = a(0)\n        val c = a(1)\n        val d = n - (b + c)\n        d", " \
    \       val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n\
    \        n - a - o", "        val a = s.split(\" \")(0).toLong\n        val o\
    \ = s.split(\" \")(1).toLong\n        n - a - o", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        d", "        val a = s.split(\" \").map(x => x.toLong)\n\
    \        val b = a.sum\n        n - b", "        val fruits = s.split(\" \")\n\
    \        val apples = fruits(0).toLong\n        val oranges = fruits(1).toLong\n\
    \        val mangoes = n - apples - oranges\n        mangoes", "        val a\
    \ = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n     \
    \   n - a - o", "        val a = s.split(\" \").map(_.toLong)\n        n - a(0)\
    \ - a(1)", "        val (a, b) = s.split(\" \").map(_.toLong).toList match {case\
    \ List(x, y) => (x, y)}\n        val c = n - a - b\n        if (c < 0) -1 else\
    \ c", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n  \
    \      val c = a(1)\n        val d = n - (b + c)\n        return d", "       \
    \ val fruits = s.split(\" \")\n        val a = fruits(0).toLong\n        val o\
    \ = fruits(1).toLong\n        val m = n - a - o\n        m", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        val b = a(0) + a(1)\n        n - b", " \
    \       val a = s.split(\" \").map(_.toLong)\n        val sum = a.sum\n      \
    \  val num = n - sum\n        num", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val fruit = s.split(\" \")\n        val apple = fruit(0).toLong\n\
    \        val orange = fruit(1).toLong\n        n - apple - orange", "        val\
    \ apples = s.count(_ == 'A')\n        val oranges = s.count(_ == 'O')\n      \
    \  n - apples - oranges", "        val a = s.split(\"A\").length - 1\n       \
    \ val o = s.split(\"O\").length - 1\n        n - a - o", "        val a = s.count(_\
    \ == 'A')\n        val o = s.count(_ == 'O')\n        n - a - o", "        val\
    \ (a, o) = s.split(\" \").map(_.toLong).toList match {\n            case List(x,\
    \ y) => (x, y)\n        }\n        val m = n - a - o\n        if (m < 0) -1 else\
    \ m", "        val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \"\
    )(1).toLong\n        n - a - o", "        val a = s.split(\" \")(0).toLong\n \
    \       val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        val b = n - a.sum\n        if (b < 0)\
    \ -1 else b", "        val a = s.split(\" \").map(_.toLong)\n        val oranges\
    \ = a(0)\n        val apples = a(1)\n        val mangoes = n - oranges - apples\n\
    \        mangoes", "        val a = s.split(\" \").map(_.toLong)\n        val\
    \ total = a.sum\n        val mango = n - total\n        mango", "        val l\
    \ = s.split(\" \").map(_.toLong)\n        n - l(0) - l(1)", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        n - a(0) - a(1)", "        val a = s.split(\" \"\
    ).map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d = n\
    \ - b - c\n        return d", "        val nums = s.split(\" \").map(_.toLong)\n\
    \        val total = nums.sum\n        n - total", "        val a = s.split(\"\
    \ \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n        n - a - o",
  "        val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n\
    \        n - a - o", "        val a = s.split(\" \").map(x => x.toLong)\n    \
    \    val b = a.sum\n        n - b", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val x = a(0)\n        val y = a(1)\n        val z = n - x - y\n     \
    \   z", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0) +\
    \ a(1)\n        n - b", "        val a = s.count(_ == 'A')\n        val o = s.count(_\
    \ == 'O')\n        n - a - o", "        var a = 0\n        var o = 0\n       \
    \ for (i <- 0 until s.length) {\n            if (s(i) == 'a') a += 1\n       \
    \     else if (s(i) == 'o') o += 1\n        }\n        n - a - o", "        val\
    \ a = s.split(\" \").map(_.toLong)\n        n - a(0) - a(1)", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n \
    \       val d = n - b - c\n        d", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a\
    \ = s.split(\" \").map(_.toLong)\n        val sum = a.sum\n        n - sum", " \
    \       val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val\
    \ c = a(1)\n        val d = n - b - c\n        d", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val total = a.sum\n        val mango = n - total\n\
    \        mango", "        val a = s.split(\" \").map(_.toLong)\n        val b\
    \ = a(0)\n        val c = a(1)\n        val d = n - b - c\n        return d",
  "        val a = s.count(_ == 'A')\n        val o = s.count(_ == 'O')\n        n\
    \ - a - o", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        val d = n - b - c\n        return d", "       \
    \ val a = s.count(_ == 'A')\n        val o = s.count(_ == 'O')\n        n - a\
    \ - o", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        val d = n - b - c\n        d", "        val arr\
    \ = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n\
    \        val m = n - a - o\n        m", "        val arr = s.split(\" \").map(_.toLong)\n\
    \        val a = arr(0)\n        val o = arr(1)\n        val m = n - a - o\n \
    \       if (m < 0) -1 else m", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val a = s.split(\" \").map(_.toLong)\n        n - a(0) - a(1)",
  "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val\
    \ c = a(1)\n        val d = n - b - c\n        d", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        val\
    \ m = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n \
    \       val b = a(0) + a(1)\n        n - b", "        val arr = s.split(\" \"\
    ).map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        (n -\
    \ a - o)", "        val arr = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n\
    \        val o = arr(1)\n        val m = n - a - o\n        m", "        val (a,\
    \ o) = s.split(\" \").map(_.toLong).toList match {\n            case List(a, o)\
    \ => (a, o)\n        }\n        n - a - o", "        val a = s.split(\" \")(0).toLong\n\
    \        val o = s.split(\" \")(1).toLong\n        n - a - o", "        val a\
    \ = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n     \
    \   n - a - o", "        val a = s.split(\" \").map(_.toLong)\n        val b =\
    \ a(0)\n        val c = a(1)\n        val d = n - b - c\n        d", "       \
    \ val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c =\
    \ a(1)\n        val d = n - b - c\n        d", "        val arr = s.split(\" \"\
    ).map(_.toLong)\n        val sum = arr.sum\n        val num = n - sum\n      \
    \  if (num < 0) -1 else num", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val x = a(0)\n        val y = a(1)\n        val z = n - x - y\n     \
    \   z", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        val d = n - b - c\n        d", "        val a =\
    \ s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n \
    \       n - (b + c)", "        val total = s.split(\" \").map(_.toLong).sum\n\
    \        n - total", "        val a = s.split(\" \").map(_.toLong)\n        val\
    \ b = a(0) + a(1)\n        n - b", "        val a = s.split(\"A\").map(_.length).sum\n\
    \        val o = s.split(\"O\").map(_.length).sum\n        n - a - o", "     \
    \   val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n\
    \        n - a - o", "        val a = s.split(\" \")(0).toLong\n        val o\
    \ = s.split(\" \")(1).toLong\n        n - a - o", "        val a = s.count(_ ==\
    \ 'A')\n        val o = s.count(_ == 'O')\n        n - a - o", "        val a\
    \ = s.split(\"A\").map(_.length).sum\n        val o = s.split(\"O\").map(_.length).sum\n\
    \        n - a - o", "        val a = s.split(\" \").map(_.toLong)\n        val\
    \ b = a(0)\n        val c = a(1)\n        val d = n - (b + c)\n        d", " \
    \       val a = s.count(_ == 'A')\n        val o = s.count(_ == 'O')\n       \
    \ n - a - o", "        val fruits = s.split(\" \")\n        val apples = fruits(0).toLong\n\
    \        val oranges = fruits(1).toLong\n        val total = apples + oranges\n\
    \        if (total > n) {\n            return 0\n        }\n        n - total",
  "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0) + a(1)\n   \
    \     n - b", "        val a = s.count(_ == 'A')\n        val o = s.count(_ ==\
    \ 'O')\n        n - a - o", "        val a = s.split(\" \").map(_.toLong)\n  \
    \      val x = a(0)\n        val y = a(1)\n        val z = n - x - y\n       \
    \ z", "        val a = s.split(\" \")(0).toLong\n        val o = s.split(\" \"\
    )(1).toLong\n        n - a - o", "        val a = s.split(\" \")(0).toLong\n \
    \       val o = s.split(\" \")(1).toLong\n        n - a - o", "        val fruit\
    \ = s.split(\" \")\n        val apple = fruit(0).toLong\n        val orange =\
    \ fruit(1).toLong\n        val mango = n - apple - orange\n        mango", " \
    \       val arr = s.split(\" \").map(_.toLong)\n        val a = arr(0)\n     \
    \   val o = arr(1)\n        val m = n - a - o\n        if (m < 0) -1 else m",
  "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0) + a(1)\n   \
    \     n - b", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        val d = n - b - c\n        d", "        val a =\
    \ s.split(\" \")(0).toLong\n        val o = s.split(\" \")(1).toLong\n       \
    \ n - a - o", "        val a = s.split(\"A\").length - 1\n        val o = s.split(\"\
    O\").length - 1\n        n - a - o", "        val (a, b) = s.split(\" \").map(_.toLong).toList\
    \ match {\n            case List(x, y) => (x, y)\n        }\n        val c = n\
    \ - a - b\n        if (c < 0) -1 else c", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val l = s.split(\" \")\n        val a = l(0).toLong\n       \
    \ val o = l(1).toLong\n        n - a - o", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        n - b - c", "        val\
    \ a = s.split(\" \").map(_.toLong)\n        val b = a(0) + a(1)\n        n - b",
  "        val a = s.split(\" \").map(_.toLong)\n        val sum = a.sum\n       \
    \ val num = n - sum\n        if (num < 0) -1 else num", "        val l = s.length\n\
    \        val dp = Array.ofDim[Long](l + 1, l + 1)\n        dp(0)(0) = 1\n    \
    \    for (i <- 1 to l) {\n            dp(i)(0) = dp(i - 1)(0) * 10 % n\n     \
    \       dp(0)(i) = dp(0)(i - 1) * 10 % n\n        }\n        for (i <- 1 to l;\
    \ j <- 1 to l) {\n            dp(i)(j) = dp(i - 1)(j) + dp(i)(j - 1) - dp(i -\
    \ 1)(j - 1) + dp(i - 1)(j - 1) * (s(i - 1) - '0')\n            dp(i)(j) %= n\n\
    \        }\n        dp(l)(l)", "        val a = s.split(\" \").map(_.toLong)\n\
    \        n - a(0) - a(1)", "        val (a, o) = s.split(\" \").map(_.toLong).toList\
    \ match {\n            case List(x, y) => (x, y)\n        }\n        n - a - o",
  "        val (a, o) = s.split(\" \").map(_.toLong).toList match {\n            case\
    \ List(x, y) => (x, y)\n        }\n        val m = n - a - o\n        if (m <\
    \ 0) -1 else m", "        val a = s.split(\" \").map(_.toLong)\n        val x\
    \ = a(0)\n        val y = a(1)\n        val z = n - x - y\n        z", "     \
    \   val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val c\
    \ = a(1)\n        val d = n - b - c\n        d", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        n - arr.sum", "        val x = s.split(\" \").map(_.toLong)\n\
    \        val a = x(0)\n        val o = x(1)\n        val m = n - a - o\n     \
    \   m", "        val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n\
    \        val c = a(1)\n        val d = n - b - c\n        d", "        val s1\
    \ = s.split(\" \")\n        val a = s1(0).toLong\n        val o = s1(1).toLong\n\
    \        n - a - o", "        val a = s.split(\" \")(0).toLong\n        val o\
    \ = s.split(\" \")(1).toLong\n        n - (a + o)", "        val nums = s.split(\"\
    \ \").map(_.toLong)\n        val (a, o) = (nums(0), nums(1))\n        val m =\
    \ n - a - o\n        if (m < 0) -1 else m", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val total = a.sum\n        if (total > n) return 0\n        n - total",
  "        val (a, o) = s.split(\" \").map(_.toLong).toList match {\n            case\
    \ List(a, o) => (a, o)\n        }\n        val m = (n - a - o)\n        if (m\
    \ < 0) -1 else m", "        val a = s.split(\" \").map(_.toLong)\n        val\
    \ b = a(0) + a(1)\n        val c = n - b\n        c", "        val fruit = s.split(\"\
    \ \")\n        val apple = fruit(0).toLong\n        val orange = fruit(1).toLong\n\
    \        val mango = n - apple - orange\n        mango", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        d", "        val a = s.split(\" \")(0).toLong\n       \
    \ val o = s.split(\" \")(1).toLong\n        n - a - o", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        val\
    \ m = n - a - o\n        m", "        val a = s.split(\" \").map(_.toLong)\n \
    \       val b = a(0)\n        val c = a(1)\n        val d = n - (b + c)\n    \
    \    return d", "        val a = s.split(\" \").map(_.toLong)\n        val b =\
    \ a(0)\n        val c = a(1)\n        val d = n - b - c\n        d", "       \
    \ val arr = s.split(\" \").map(_.toLong)\n        val sum = arr.sum\n        val\
    \ m = n - sum\n        if (m < 0) -1 else m", "        val (a, o) = s.split(\"\
    \ \").map(_.toLong).toList match {\n            case List(a, o) => (a, o)\n  \
    \      }\n        n - a - o", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0) + a(1)\n        n - b", "        val arr = s.split(\" \"\
    ).map(_.toLong)\n        val a = arr(0)\n        val o = arr(1)\n        val m\
    \ = n - a - o\n        m", "        val a = s.split(\" \")(0).toLong\n       \
    \ val o = s.split(\" \")(1).toLong\n        n - a - o", "        val arr = s.split(\"\
    \ \").map(_.toLong)\n        val sum = arr.sum\n        n - sum", "        val\
    \ a = s.split(\" \").map(_.toLong)\n        val total = a.sum\n        val mango\
    \ = n - total\n        mango", "        val a = s.split(\" \").map(_.toLong)\n\
    \        val b = a(0)\n        val c = a(1)\n        val d = n - b - c\n     \
    \   d", "        val fruits = s.split(\" \")\n        val a = fruits(0).toLong\n\
    \        val o = fruits(1).toLong\n        val m = n - a - o\n        m", "  \
    \      val a = s.split(\" \").map(_.toLong)\n        val b = a(0)\n        val\
    \ c = a(1)\n        val d = n - b - c\n        d", "        val a = s.split(\"\
    \ \").map(_.toLong)\n        val b = a(0)\n        val c = a(1)\n        val d\
    \ = n - b - c\n        d"]
stop_tokens:
- "\n    }\n"

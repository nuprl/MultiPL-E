name: HumanEval_55_fib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return n-th Fibonacci number.\n    def fib(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
  \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
  \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
completions: ["        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n\
    \ - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        def fibHelper(n : Long, a : Long, b : Long) : Long\
    \ = {\n            if (n == 0) a\n            else fibHelper(n - 1, b, a + b)\n\
    \        }\n        fibHelper(n, 0, 1)", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        if (n == 0) 0\n        else\
    \ if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) 0\n\
    \        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if\
    \ (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       def fib_helper(n : Long, a : Long, b : Long) : Long = {\n            if\
    \ (n == 0) a\n            else fib_helper(n - 1, b, a + b)\n        }\n      \
    \  fib_helper(n, 0, 1)", "        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n      \
    \  if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i\
    \ <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n         \
    \   b = c\n        }\n        return b", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        if (n == 0) return 0\n  \
    \      if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        if (n == 0) return 0\n  \
    \      if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        a", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        var a = 0L\n      \
    \  var b = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n\
    \            a = b\n            b = c\n        }\n        a", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        return fib(n\
    \ - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 1 until n) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n\
    \ == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2\
    \ to n.toInt) {\n            val c = a + b\n            a = b\n            b =\
    \ c\n        }\n        return b", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        var a = 0L\n      \
    \  var b = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n\
    \            a = b\n            b = c\n        }\n        a", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        val sqrt5 = sqrt(5)\n        val phi = (1 + sqrt5) / 2\n        val psi\
    \ = (1 - sqrt5) / 2\n        val a = pow(phi, n)\n        val b = pow(psi, n)\n\
    \        val c = a - b\n        val d = sqrt5 * c\n        return round(d / sqrt5)",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       var a = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt) {\n  \
    \          val c = a + b\n            a = b\n            b = c\n        }\n  \
    \      return a", "        if (n == 0) return 0\n        if (n == 1) return 1\n\
    \        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n \
    \           val c = a + b\n            a = b\n            b = c\n        }\n \
    \       return b", "        val a = Array.fill(n.toInt + 1)(0L)\n        a(0)\
    \ = 0\n        a(1) = 1\n        for (i <- 2 to n.toInt) a(i) = a(i - 1) + a(i\
    \ - 2)\n        a(n.toInt)", "        var a = 0L\n        var b = 1L\n       \
    \ for (i <- 1 to n.toInt) {\n            val c = a + b\n            a = b\n  \
    \          b = c\n        }\n        a", "        if (n == 0) return 0\n     \
    \   if (n == 1) return 1\n        return fib(n - 1) + fib(n - 2)", "        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        a", "  \
    \      if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       val sqrt5 = sqrt(5)\n        val phi = (1 + sqrt5) / 2\n        val psi\
    \ = (1 - sqrt5) / 2\n        val fibn = (pow(phi, n) - pow(psi, n)) / sqrt5\n\
    \        fibn.toLong", "        if (n == 0) 0\n        else if (n == 1) 1\n  \
    \      else fib(n - 1) + fib(n - 2)", "        if (n == 0) 0\n        else if\
    \ (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n <= 1) return\
    \ n\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else fib(n - 1) + fib(n - 2)", "        val phi = (1 + sqrt(5)) / 2\n    \
    \    val psi = (1 - sqrt(5)) / 2\n        return round((pow(phi, n) - pow(psi,\
    \ n)) / sqrt(5))", "        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 1 to n.toInt) {\n            val c = a + b\n            a = b\n            b\
    \ = c\n        }\n        return a", "        var a = 0L\n        var b = 1L\n\
    \        var i = 0L\n        while (i < n) {\n            val c = a + b\n    \
    \        a = b\n            b = c\n            i += 1\n        }\n        return\
    \ a", "        var a = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt)\
    \ {\n            val c = a + b\n            a = b\n            b = c\n       \
    \ }\n        return a", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 1 to n.toInt) {\n            val c = a + b\n            a = b\n            b\
    \ = c\n        }\n        a", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        var a = 0L\n      \
    \  var b = 1L\n        for (i <- 0 until n) {\n            val c = a + b\n   \
    \         a = b\n            b = c\n        }\n        a", "        if (n == 0)\
    \ return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b =\
    \ 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n         \
    \   a = b\n            b = c\n        }\n        return b", "        var a = 0L\n\
    \        var b = 1L\n        var i = 0L\n        while (i < n) {\n           \
    \ val c = a + b\n            a = b\n            b = c\n            i += 1\n  \
    \      }\n        return a", "        if (n == 0) return 0\n        if (n == 1)\
    \ return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt)\
    \ {\n            val c = a + b\n            a = b\n            b = c\n       \
    \ }\n        return b", "        if (n == 0) 0\n        else if (n == 1) 1\n \
    \       else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n       \
    \ if (n == 1) return 1\n        return fib(n - 1) + fib(n - 2)", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ <= 1) return n\n        var a = 0L\n        var b = 1L\n        for (i <- 2\
    \ to n.toInt) {\n            val c = a + b\n            a = b\n            b =\
    \ c\n        }\n        return b", "        if (n == 0) return 0\n        if (n\
    \ == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2L\
    \ to n) {\n            val c = a + b\n            a = b\n            b = c\n \
    \       }\n        return b", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n  \
    \      if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        if (n == 0) return 0\n  \
    \      if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return a", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2L to n) {\n            val c = a + b\n            a\
    \ = b\n            b = c\n        }\n        return b", "        var a = 0L\n\
    \        var b = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return a", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        return fib(n\
    \ - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else fib(n - 1) + fib(n - 2)", "        var a = 0L\n        var b = 1L\n \
    \       for (i <- 1 to n.toInt) {\n            val c = a + b\n            a =\
    \ b\n            b = c\n        }\n        return a", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        val a = ArrayBuffer[Long]()\n\
    \        a += 0\n        a += 1\n        for (i <- 2 to n.toInt) a += a(i - 1)\
    \ + a(i - 2)\n        a(n.toInt)", "        var a = 0L\n        var b = 1L\n \
    \       for (i <- 1 to n.toInt) {\n            val c = a + b\n            a =\
    \ b\n            b = c\n        }\n        a", "        if (n == 0) return 0\n\
    \        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n      \
    \  for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n \
    \           b = c\n        }\n        return b", "        if (n == 0) return 0\n\
    \        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n      \
    \  for (i <- 2L to n) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        return b", "        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 1L to n) {\n            val c = a + b\n            a\
    \ = b\n            b = c\n        }\n        a", "        if (n == 0) return 0\n\
    \        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n      \
    \  for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n \
    \           b = c\n        }\n        return b", "        if (n == 0) return 0\n\
    \        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n      \
    \  for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n \
    \           b = c\n        }\n        return b", "        if (n == 0) 0\n    \
    \    else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        var a\
    \ = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return a",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2L to n) {\n            val c\
    \ = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        def fib_helper(n : Long, a : Long, b : Long) : Long = {\n            if\
    \ (n == 0) a\n            else fib_helper(n - 1, b, a + b)\n        }\n      \
    \  fib_helper(n, 0, 1)", "        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)", "        if (n == 0) 0\n        else if\
    \ (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) 0\n   \
    \     else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n -\
    \ 1) + fib(n - 2)", "        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 1 to n.toInt) {\n            val c = a + b\n            a = b\n            b\
    \ = c\n        }\n        a", "        if (n == 0) return 0\n        if (n ==\
    \ 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to\
    \ n.toInt) {\n            val c = a + b\n            a = b\n            b = c\n\
    \        }\n        return b", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) 0\n        else\
    \ if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        var a = 0L\n      \
    \  var b = 1L\n        var i = 0L\n        while (i < n) {\n            val c\
    \ = a + b\n            a = b\n            b = c\n            i += 1\n        }\n\
    \        return a", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) 0\n        else if (n == 1) 1\n     \
    \   else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n\
    \ == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2\
    \ to n.toInt) {\n            val c = a + b\n            a = b\n            b =\
    \ c\n        }\n        return b", "        if (n == 0) return 0\n        if (n\
    \ == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2\
    \ to n.toInt) {\n            val c = a + b\n            a = b\n            b =\
    \ c\n        }\n        return b", "        var a = 0L\n        var b = 1L\n \
    \       for (i <- 1L to n) {\n            val c = a + b\n            a = b\n \
    \           b = c\n        }\n        return a", "        if (n == 0) return 0\n\
    \        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n      \
    \  for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n \
    \           b = c\n        }\n        return b", "        if (n == 0) 0\n    \
    \    else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        var a = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt)\
    \ {\n            val c = a + b\n            a = b\n            b = c\n       \
    \ }\n        a", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ fib(n - 1) + fib(n - 2)", "        var a = 0L\n        var b = 1L\n        for\
    \ (i <- 1 to n.toInt) {\n            val c = a + b\n            a = b\n      \
    \      b = c\n        }\n        a", "        var a = 0L\n        var b = 1L\n\
    \        var c = 0L\n        for (i <- 1 to n.toInt) {\n            c = a + b\n\
    \            a = b\n            b = c\n        }\n        return a", "       \
    \ def fibRec(n : Long, a : Long, b : Long) : Long = {\n            if (n == 0)\
    \ a\n            else fibRec(n - 1, b, a + b)\n        }\n        fibRec(n, 0,\
    \ 1)", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n -\
    \ 1) + fib(n - 2)", "        var a = 0L\n        var b = 1L\n        var i = 0L\n\
    \        while (i < n) {\n            val c = a + b\n            a = b\n     \
    \       b = c\n            i += 1\n        }\n        return a", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var\
    \ b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n     \
    \       a = b\n            b = c\n        }\n        return b", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2L to n) {\n            val c = a + b\n\
    \            a = b\n            b = c\n        }\n        return b", "       \
    \ if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n -\
    \ 2)", "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n\
    \ - 1) + fib(n - 2)", "        if (n == 0) 0\n        else if (n == 1) 1\n   \
    \     else fib(n - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if\
    \ (n == 1) return 1\n        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 2 to n.toInt) {\n            val c = a + b\n            a = b\n            b\
    \ = c\n        }\n        return b", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else fib(n - 1) + fib(n - 2)", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        if (n == 0) return\
    \ 0\n        if (n == 1) return 1\n        var a = 0L\n        var b = 1L\n  \
    \      for (i <- 2 to n.toInt) {\n            val c = a + b\n            a = b\n\
    \            b = c\n        }\n        return b", "        var a = 0L\n      \
    \  var b = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n\
    \            a = b\n            b = c\n        }\n        return a", "       \
    \ if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n   \
    \     var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n\
    \            a = b\n            b = c\n        }\n        return b", "       \
    \ if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n -\
    \ 2)", "        if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n\
    \ - 1) + fib(n - 2)", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 1L to n) {\n            val c = a + b\n            a = b\n            b = c\n\
    \        }\n        a", "        if (n == 0) return 0\n        if (n == 1) return\
    \ 1\n        var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n\
    \            val c = a + b\n            a = b\n            b = c\n        }\n\
    \        return b", "        var a = 0L\n        var b = 1L\n        for (i <-\
    \ 1L to n) {\n            val c = a + b\n            a = b\n            b = c\n\
    \        }\n        return a", "        if (n == 0) 0\n        else if (n == 1)\
    \ 1\n        else fib(n - 1) + fib(n - 2)", "        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 1 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return a", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b", "        if (n ==\
    \ 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n - 2)", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) 0\n        else if (n == 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)", "        if (n == 0) return 0\n        if (n == 1) return 1\n       \
    \ var a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n        \
    \    val c = a + b\n            a = b\n            b = c\n        }\n        return\
    \ b", "        if (n == 0) return 0\n        if (n == 1) return 1\n        var\
    \ a = 0L\n        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val\
    \ c = a + b\n            a = b\n            b = c\n        }\n        return b",
  "        if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       if (n == 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n\
    \        var b = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a\
    \ + b\n            a = b\n            b = c\n        }\n        return b", " \
    \       var a = 0L\n        var b = 1L\n        for (i <- 1 to n.toInt) {\n  \
    \          val c = a + b\n            a = b\n            b = c\n        }\n  \
    \      a", "        var a = 0L\n        var b = 1L\n        var i = 0L\n     \
    \   while (i < n) {\n            val c = a + b\n            a = b\n          \
    \  b = c\n            i += 1\n        }\n        return a", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b", "        if (n ==\
    \ 0) return 0\n        if (n == 1) return 1\n        var a = 0L\n        var b\
    \ = 1L\n        for (i <- 2 to n.toInt) {\n            val c = a + b\n       \
    \     a = b\n            b = c\n        }\n        return b"]
stop_tokens:
- "\n    }\n"

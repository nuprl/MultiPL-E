name: HumanEval_65_circular_shift
language: py
results:
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15kkukwp.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15kkukwp.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15kkukwp.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits + str(int(digits[shift:] + digits[:shift]))\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4aeobhib.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4aeobhib.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4aeobhib.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz23cnq42.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz23cnq42.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz23cnq42.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87ky0s56.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87ky0s56.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87ky0s56.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp87ky0s56.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8_lqzlgf.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8_lqzlgf.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8_lqzlgf.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm29idn3x.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm29idn3x.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm29idn3x.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_5d14j_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_5d14j_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl_5d14j_.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52s2jel7.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52s2jel7.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52s2jel7.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52s2jel7.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_zwmsc6.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_zwmsc6.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg_zwmsc6.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbyr3uz8.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbyr3uz8.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbyr3uz8.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4i0vp9i.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4i0vp9i.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4i0vp9i.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpht0px63i.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpht0px63i.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpht0px63i.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1l6lm6v.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1l6lm6v.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx1l6lm6v.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4iqyf84.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4iqyf84.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4iqyf84.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd2e9xdpe.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd2e9xdpe.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd2e9xdpe.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1c0awtk.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1c0awtk.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd1c0awtk.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ps_bryc.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ps_bryc.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ps_bryc.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnnfr556e.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnnfr556e.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnnfr556e.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7se46bss.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7se46bss.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7se46bss.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq_6cwou.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq_6cwou.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq_6cwou.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe7j4y7i.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe7j4y7i.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe7j4y7i.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnwcuznf.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnwcuznf.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnwcuznf.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmnwcuznf.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_f4769.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_f4769.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_f4769.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjz_f4769.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8dg8cl.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8dg8cl.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8dg8cl.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkp8dg8cl.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspsumnwt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspsumnwt.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspsumnwt.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(str(x)):\n        return str(x)[::-1]\n\
    \    else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2srbev75.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2srbev75.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2srbev75.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp306fnfcs.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp306fnfcs.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp306fnfcs.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp306fnfcs.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeyw6hjqj.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeyw6hjqj.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeyw6hjqj.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr33918di.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr33918di.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr33918di.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr33918di.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpryzab060.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpryzab060.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpryzab060.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpchl29i52.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpchl29i52.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpchl29i52.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpchl29i52.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sxr1dw0.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sxr1dw0.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sxr1dw0.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sxr1dw0.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8d0g4wf.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8d0g4wf.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8d0g4wf.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9t4wn3n.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9t4wn3n.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9t4wn3n.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9t4wn3n.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlas2uf6.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlas2uf6.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlas2uf6.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpraqskd88.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpraqskd88.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpraqskd88.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpraqskd88.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycvcghor.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycvcghor.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycvcghor.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpycvcghor.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp340ku7q3.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp340ku7q3.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp340ku7q3.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpceglofr5.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpceglofr5.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpceglofr5.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg04h8mvx.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg04h8mvx.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg04h8mvx.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ujem9ek.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ujem9ek.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ujem9ek.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp847o0ev7.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp847o0ev7.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp847o0ev7.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxzevnh_q.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxzevnh_q.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxzevnh_q.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh88bnyz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh88bnyz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjh88bnyz.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxyowdbw2.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxyowdbw2.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxyowdbw2.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxyowdbw2.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplyor5e_a.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplyor5e_a.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplyor5e_a.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppslw1p_p.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppslw1p_p.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppslw1p_p.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkoduu6xm.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkoduu6xm.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkoduu6xm.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zscak1z.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zscak1z.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zscak1z.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5x_ucq66.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5x_ucq66.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5x_ucq66.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmn22cp.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmn22cp.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmn22cp.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyfz5o4vs.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyfz5o4vs.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyfz5o4vs.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0cy8t4y.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0cy8t4y.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0cy8t4y.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq0cy8t4y.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5m712nms.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5m712nms.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5m712nms.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfdf55mbk.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfdf55mbk.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfdf55mbk.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfdf55mbk.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6akwymd.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6akwymd.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6akwymd.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6akwymd.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ujgi2xh.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ujgi2xh.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5ujgi2xh.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2aw1hae.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2aw1hae.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2aw1hae.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0phgmwl.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0phgmwl.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0phgmwl.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0phgmwl.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ \"\".join([x[-shift:] + x[:-shift]])\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6j4berov.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6j4berov.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6j4berov.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6j4berov.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobztwtue.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobztwtue.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobztwtue.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3oc42q__.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3oc42q__.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3oc42q__.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55y8w3xy.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55y8w3xy.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55y8w3xy.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp55y8w3xy.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tfjaj_h.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tfjaj_h.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tfjaj_h.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpreippl3d.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpreippl3d.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpreippl3d.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvew_vw4o.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvew_vw4o.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvew_vw4o.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofsgtwtm.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofsgtwtm.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofsgtwtm.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnat2oowh.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnat2oowh.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnat2oowh.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnat2oowh.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpayt3l5sc.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpayt3l5sc.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpayt3l5sc.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4phkb5v.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4phkb5v.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4phkb5v.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = str(shift)\n    if len(digits)\
    \ > len(shift):\n        digits = digits[::-1]\n    if len(digits) < len(shift):\n\
    \        shift = shift[:len(digits)]\n    return digits + shift\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfvuorqx.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfvuorqx.py\"\
    , line 23, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfvuorqx.py\"\
    , line 16, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4e49lc_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4e49lc_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz4e49lc_.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzqye17g.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzqye17g.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbzqye17g.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01r35l9f.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01r35l9f.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01r35l9f.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj_4alnq.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj_4alnq.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj_4alnq.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpas_xao0k.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpas_xao0k.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpas_xao0k.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpas_xao0k.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyl58j597.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyl58j597.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyl58j597.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_gnohx72.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_gnohx72.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_gnohx72.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk78by5c_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk78by5c_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk78by5c_.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d84tbmy.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d84tbmy.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d84tbmy.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqiovs4_s.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqiovs4_s.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqiovs4_s.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n  \
    \  return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0aninx08.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0aninx08.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0aninx08.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplz681rly.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplz681rly.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplz681rly.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqh34e482.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqh34e482.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqh34e482.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz0i3cxlx.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz0i3cxlx.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz0i3cxlx.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnffhkcgg.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnffhkcgg.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnffhkcgg.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomzwv9uj.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomzwv9uj.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomzwv9uj.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomzwv9uj.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbswwtf9u.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbswwtf9u.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbswwtf9u.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbswwtf9u.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7bitslfe.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7bitslfe.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7bitslfe.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7bitslfe.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dbmtpdg.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dbmtpdg.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dbmtpdg.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dbmtpdg.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpge9_u2fu.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpge9_u2fu.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpge9_u2fu.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdc5ly_ce.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdc5ly_ce.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdc5ly_ce.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdc5ly_ce.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7pmblg4j.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7pmblg4j.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7pmblg4j.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7pmblg4j.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1_y51grj.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1_y51grj.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1_y51grj.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguo0zlyx.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguo0zlyx.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguo0zlyx.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ghya2fo.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ghya2fo.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ghya2fo.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ghya2fo.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk_4ckzx.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk_4ckzx.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk_4ckzx.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r80l5to.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r80l5to.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r80l5to.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2mm81mbt.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2mm81mbt.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2mm81mbt.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return \"\".join([str(int(digit))\
    \ for digit in reversed(x)])\n    else:\n        return \"\".join([str(int(digit))\
    \ for digit in x])\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzgfc1mw_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzgfc1mw_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzgfc1mw_.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzgfc1mw_.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(str(x)):\n        return str(x)[::-1]\n\
    \    else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1fml7co.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1fml7co.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1fml7co.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1wj6izu.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1wj6izu.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1wj6izu.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugyu8vuy.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugyu8vuy.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpugyu8vuy.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh46fn7r.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh46fn7r.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh46fn7r.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxn0me8ix.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxn0me8ix.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxn0me8ix.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn57nxtth.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn57nxtth.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn57nxtth.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0v32yy60.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0v32yy60.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0v32yy60.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0v32yy60.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3y230la.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3y230la.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3y230la.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3y230la.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7rm359g6.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7rm359g6.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7rm359g6.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj8tl2k.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj8tl2k.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_xj8tl2k.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7k8o8o1y.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7k8o8o1y.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7k8o8o1y.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ygk6645.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ygk6645.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2ygk6645.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplle6e_ra.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplle6e_ra.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplle6e_ra.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n  \
    \  return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpymvll2bz.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpymvll2bz.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpymvll2bz.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkz9txuk9.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkz9txuk9.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkz9txuk9.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkz9txuk9.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9490beh0.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9490beh0.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9490beh0.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0glmylk.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0glmylk.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv0glmylk.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0xkggqzz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0xkggqzz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0xkggqzz.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0xkggqzz.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    digits\
    \ = list(x)\n    digits[shift:] = digits[shift:][::-1]\n    return \"\".join(digits)\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0_5m3pc.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0_5m3pc.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0_5m3pc.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0_5m3pc.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivu68m2t.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivu68m2t.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivu68m2t.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivu68m2t.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwahrgxl5.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwahrgxl5.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwahrgxl5.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88h27837.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88h27837.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88h27837.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmooc28yt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmooc28yt.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmooc28yt.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmooc28yt.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiyxia47y.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiyxia47y.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiyxia47y.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzto9ifn.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzto9ifn.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzto9ifn.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_7ml_7vp.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_7ml_7vp.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_7ml_7vp.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_7ml_7vp.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpti5gccdw.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpti5gccdw.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpti5gccdw.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5sjgq0d.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5sjgq0d.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5sjgq0d.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprntopyad.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprntopyad.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprntopyad.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuoh5a6ov.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuoh5a6ov.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuoh5a6ov.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzu3e5xnf.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzu3e5xnf.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzu3e5xnf.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_pntu3v.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_pntu3v.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_pntu3v.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_pntu3v.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlmvjqf8.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlmvjqf8.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlmvjqf8.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyc2ogrk.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyc2ogrk.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppyc2ogrk.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdy32vhs7.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdy32vhs7.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdy32vhs7.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi5_8dire.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi5_8dire.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi5_8dire.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdnv4p5w1.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdnv4p5w1.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdnv4p5w1.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzz27n2w3.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzz27n2w3.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzz27n2w3.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wq3rlxl.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wq3rlxl.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wq3rlxl.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzm9o578l.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzm9o578l.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzm9o578l.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq19rxcuw.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq19rxcuw.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq19rxcuw.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmm18qfp.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmm18qfp.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkmm18qfp.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyycq8sw3.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyycq8sw3.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyycq8sw3.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc8qtie9.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc8qtie9.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc8qtie9.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6_oicyv.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6_oicyv.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6_oicyv.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6_oicyv.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6zrd6ul.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6zrd6ul.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6zrd6ul.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6zrd6ul.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ \"\".join([str(int(digit) + shift) for digit in x])\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdx0bvgo.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdx0bvgo.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdx0bvgo.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdx0bvgo.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv27mpea.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv27mpea.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv27mpea.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq2xzxe5.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq2xzxe5.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfq2xzxe5.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3qm7e88u.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3qm7e88u.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3qm7e88u.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2og6nmln.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2og6nmln.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2og6nmln.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6f2nmb89.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6f2nmb89.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6f2nmb89.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92fzzek_.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92fzzek_.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92fzzek_.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkldx_ak3.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkldx_ak3.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkldx_ak3.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak92gohf.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak92gohf.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak92gohf.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyq8pjh9o.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyq8pjh9o.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyq8pjh9o.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyq8pjh9o.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsbh8ql68.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsbh8ql68.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsbh8ql68.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2t0fhoz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2t0fhoz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2t0fhoz.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps2t0fhoz.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzfot6njk.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzfot6njk.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzfot6njk.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9bl562z.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9bl562z.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9bl562z.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwhedjz2.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwhedjz2.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwhedjz2.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_u_2m29.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_u_2m29.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_u_2m29.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(str(x)):\n        shift = len(str(x))\n\
    \    return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmt6qx6dc.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmt6qx6dc.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmt6qx6dc.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zb24jcm.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zb24jcm.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zb24jcm.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfd728fbz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfd728fbz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfd728fbz.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    return\
    \ x[shift:] + x[:shift]\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzwthgx6_.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzwthgx6_.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzwthgx6_.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzwthgx6_.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwtqp3ap.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwtqp3ap.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwtqp3ap.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1p22862.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1p22862.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1p22862.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc16v4ghz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc16v4ghz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc16v4ghz.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwri8fgdh.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwri8fgdh.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwri8fgdh.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_na2a_kt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_na2a_kt.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_na2a_kt.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_na2a_kt.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vgujyqt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vgujyqt.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vgujyqt.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ur3tmrf.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ur3tmrf.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4ur3tmrf.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmy128jbt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmy128jbt.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmy128jbt.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmy128jbt.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk4zb3t3.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk4zb3t3.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplk4zb3t3.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08kgfpri.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08kgfpri.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08kgfpri.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbkp67q7.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbkp67q7.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbkp67q7.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    digits\
    \ = list(x)\n    digits.reverse()\n    digits.extend(digits[:shift])\n    digits.reverse()\n\
    \    return ''.join(digits)\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwdzveii.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwdzveii.py\"\
    , line 23, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwdzveii.py\"\
    , line 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwdzveii.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[-shift:] + digits[:-shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqe9qa9hh.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqe9qa9hh.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqe9qa9hh.py\"\
    , line 15, in check\n    assert candidate(97, 8) == '79'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv3depbjm.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv3depbjm.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv3depbjm.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekewow97.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekewow97.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekewow97.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    digits = digits[shift:] + digits[:shift]\n    return\
    \ digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n \
    \   assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n   \
    \ assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\ndef\
    \ test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8gk5ge_.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8gk5ge_.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu8gk5ge_.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  digits = digits[::-1]\n    return digits[shift:] + digits[:shift]\n\n\ndef\
    \ check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehbkrnwc.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehbkrnwc.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpehbkrnwc.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    digits = digits[shift:] + digits[:shift]\n\
    \    return digits\n\n\ndef check(candidate):\n    assert candidate(100, 2) ==\
    \ '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8) == '79'\n\
    \    assert candidate(12, 1) == '21'\n    assert candidate(11, 101) == '11'\n\n\
    def test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdsw5kvb.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdsw5kvb.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdsw5kvb.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n  \
    \  digits = digits[shift:] + digits[:shift]\n    return digits\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpauzzj7h8.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpauzzj7h8.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpauzzj7h8.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxppu883.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxppu883.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxppu883.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n  \
    \  digits = digits[shift:] + digits[:shift]\n    return digits\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt4c9lo_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt4c9lo_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt4c9lo_.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0azmruqq.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0azmruqq.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0azmruqq.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        shift = len(x)\n    digits\
    \ = list(x)\n    digits.reverse()\n    digits.extend(digits[:shift])\n    digits.reverse()\n\
    \    return ''.join(digits)\n\n\ndef check(candidate):\n    assert candidate(100,\
    \ 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert candidate(97, 8)\
    \ == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11, 101)\
    \ == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2af4j5w.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2af4j5w.py\"\
    , line 23, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2af4j5w.py\"\
    , line 16, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2af4j5w.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxcvgq6n.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxcvgq6n.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxcvgq6n.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2klgik1f.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2klgik1f.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2klgik1f.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzbirjm4.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzbirjm4.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzbirjm4.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjzbirjm4.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9g1l_4ma.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9g1l_4ma.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9g1l_4ma.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(x):\n        return str(x)[::-1]\n   \
    \ else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptfcqgl7w.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptfcqgl7w.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptfcqgl7w.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptfcqgl7w.py\"\
    , line 6, in circular_shift\n    if shift > len(x):\nTypeError: object of type\
    \ 'int' has no len()\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  return digits[::-1]\n    else:\n        return digits[shift:] + digits[:shift]\n\
    \n\ndef check(candidate):\n    assert candidate(100, 2) == '001'\n    assert candidate(12,\
    \ 2) == '12'\n    assert candidate(97, 8) == '79'\n    assert candidate(12, 1)\
    \ == '21'\n    assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2lf8a0.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2lf8a0.py\"\
    , line 21, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2lf8a0.py\"\
    , line 14, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    shift = shift % len(digits)\n  \
    \  return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n    assert\
    \ candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n    assert\
    \ candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n    assert candidate(11,\
    \ 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1n7ujgd.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1n7ujgd.py\"\
    , line 19, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1n7ujgd.py\"\
    , line 12, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n9o76x3.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n9o76x3.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n9o76x3.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d7w_0y_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d7w_0y_.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0d7w_0y_.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    if shift > len(str(x)):\n        return str(x)[::-1]\n\
    \    else:\n        return str(x)[shift:] + str(x)[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_litnfk.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_litnfk.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm_litnfk.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def circular_shift(x: int, shift: int) -> str:\n    \"\"\"Circular shift\
    \ the digits of the integer x, shift the digits right by shift\n    and return\
    \ the result as a string.\n    If shift > number of digits, return digits reversed.\n\
    \            \"\"\"\n    digits = str(x)\n    if shift > len(digits):\n      \
    \  shift = len(digits)\n    return digits[shift:] + digits[:shift]\n\n\ndef check(candidate):\n\
    \    assert candidate(100, 2) == '001'\n    assert candidate(12, 2) == '12'\n\
    \    assert candidate(97, 8) == '79'\n    assert candidate(12, 1) == '21'\n  \
    \  assert candidate(11, 101) == '11'\n\ndef test_check():\n    check(circular_shift)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp82m8boiz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp82m8boiz.py\"\
    , line 20, in test_check\n    check(circular_shift)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp82m8boiz.py\"\
    , line 13, in check\n    assert candidate(100, 2) == '001'\nAssertionError\n"
  exit_code: -1
  status: Exception

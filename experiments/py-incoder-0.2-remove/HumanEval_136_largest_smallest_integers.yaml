name: HumanEval_136_largest_smallest_integers
language: py
prompt: "from typing import List, Tuple, Optional\n\ndef largest_smallest_integers(lst:\
  \ List[int]) -> Tuple[Optional[int], Optional[int]]:\n    \"\"\"\n    Create a function\
  \ that returns a tuple (a, b), where 'a' is\n    the largest of negative integers,\
  \ and 'b' is the smallest\n    of positive integers in a list.\n    If there is\
  \ no negative or positive integers, return them as None.\n\n    Examples:\n    \
  \            \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([2, 4, 1, 3, 5, 7]) == (None,\
  \ 1)\n    assert candidate([2, 4, 1, 3, 5, 7, 0]) == (None, 1)\n    assert candidate([1,\
  \ 3, 2, 4, 5, 6, -2]) == (-2, 1)\n    assert candidate([4, 5, 3, 6, 2, 7, -7]) ==\
  \ (-7, 2)\n    assert candidate([7, 3, 8, 4, 9, 2, 5, -9]) == (-9, 2)\n    assert\
  \ candidate([]) == (None, None)\n    assert candidate([0]) == (None, None)\n   \
  \ assert candidate([-1, -3, -5, -6]) == (-1, None)\n    assert candidate([-1, -3,\
  \ -5, -6, 0]) == (-1, None)\n    assert candidate([-6, -4, -4, -3, 1]) == (-3, 1)\n\
  \    assert candidate([-6, -4, -4, -3, -100, 1]) == (-3, 1)\n\ndef test_check():\n\
  \    check(largest_smallest_integers)\n\ntest_check()\n"
completions: ["    lst = [-4, -6, -9, -12, -15, -20, -25, -27, -29, -32, -35, -38,\
    \ -42, -45]\n    largest_smallest_integers(lst)\n    >>> (-27, -29)\n\n    \"\"\
    \"\n    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0 and largest_negative is None:\n            largest_negative\
    \ = x\n        elif x > 0 and smallest_positive is None:\n            smallest_positive\
    \ = x\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -5,\
    \ -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n\
    \    >>> (-16, -10)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0 and largest_negative is None:\n\
    \            largest_negative = x\n        elif x > 0 and smallest_positive is\
    \ None:\n            smallest_positive = x\n        elif x > 0 and x < 0 and largest_negative\
    \ > smallest_positive:\n            largest_negative = x\n            smallest_positive\
    \ = x\n    return (largest_negative, smallest_positive)\n", '    lst = [-4, -6,
    -9, -10, -12, -14, -16, -18, -21, -24, -30, -36, -39, -44, -49, -54, -59, -64,
    -72, -77, -84, -89, -94, -99, -104, -110, -114, -121, -127, -134, -139, -144,
    -149, -154, -159, -164, -169, -174, -179, -184, -189, -194, -198, -203, -208,
    -213, -218, -224, -229, -234, -239, -244, -249, -254, -259, -264, -268, -273,
    -278, -284, -290, -296, -301, -307, -313, -318, -323, -328, -333, -338, -343,
    -348, -353, -358, -363, -368, -373, -378, -383, -388, -393, -398, -403, -408,
    -413, -418, -424, -429, -434, -439, -444, -449, -454, -459, -464, -468, -474,
    -479, -484, -489, -494, -498, -503, -508, -513, -518, -524, -529, -534, -539,
    -544, -499, -554, -559, -564, -568, -574, -579, -585, -590, -596, -601, -607,
    -613, -618, -624, -629, -634, -639, -644, -649, -655, -660, -666, -671, -677,
    -683, -688, -693, -698, -703, -708, -713, -718, -724, -729, -734, -739, -744,
    -749, -754, -759, -764, -769, -774, -779, -784, -790, -796, -801, -807, -813,
    -818, -824, -829, -834, -839, -844, -849, -853, -858, -863, -868, -873, -878,
    -883, -888, -893, -898, -904, -909, -914, -919, -924, -929, -934, -939, -944,
    -949, -953, -958, -963, -968, -973, -978, -983, -988, -993, -998, -1003, -1008,
    -1013, -1018, -1024, -1029, -1034, -1039, -', "    lst = [-4, -2, 0, 2, 4]\n \
    \   largest_smallest_integers(lst)\n    >>> (2, 4)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst",
  "    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (-1,\
    \ 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -2,\
    \ -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n    # returns (-9,\
    \ -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n\
    \    largest_smallest_integers(lst)\n    # returns (-9, -7)\n    \"\"\"\n    lst\
    \ = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n\
    \    largest_smallest_integers(lst)\n    # returns (-9, -7)\n    \"\"\"\n    lst\
    \ = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n\
    \    largest_smallest_integers(lst)\n    # returns (-9, -7)\n    \"\"\"\n    lst\
    \ = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n\
    \    largest_smallest_integers(lst)\n    # returns (-9, -7)\n    \"\"\"\n    lst\
    \ = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-9, -7)\n    \"\"\"\n    lst = [-4, -2, -6, -9, -7, -5, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-", "    lst = [-4, -6, -9, -12, -15, -20, -25, -29, -32, -36,\
    \ -39, -44, -47, -49, -54, -59, -64, -67, -72, -75, -79, -84, -89, -94, -99, -104,\
    \ -109, -114, -119, -124, -129, -134] \n    \n    largest_smallest_integers(lst)\n\
    \    (-64, -67)\n    \"\"\"\n    \n    largest_negative = None\n    smallest_positive\
    \ = None\n    \n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    \n    return largest_negative, smallest_positive\n", "    lst = [-4,\
    \ -6, -10, -12, -14, -16, -18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42,\
    \ 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80,\
    \ 82, 84, 86, 88, 90, 92, 94, 96, 98]\n    largest_smallest_integers(lst)\n  \
    \  \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", '    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,
    -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -48, -49, -50, -51, -52, -53,
    -54, -55, -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70, -71,
    -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88,
    -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102, -103,
    -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115, -116,
    -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
    -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
    -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154, -155,
    -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167, -168,
    -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180, -181,
    -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193, -194,
    -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206, -207,
    -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219, -220,
    -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231, -232, -233,
    -234, -235, -236, -237, -238, -239, -240, -241, -242, -243, -244, -245, -246,
    -247, -248, -249, -250, -251, -252, -253, -254, -255, -256, -257, -258, -259,
    -260, -261, -262, -263, -264, -265, -266, -267, -268, -269, -270, ', "    lst\
    \ = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n    \"\"\"\n\
    \    smallest_negative = None\n    largest_positive = None\n    for x in lst:\n\
    \        if x < 0 and smallest_negative is None:\n            smallest_negative\
    \ = x\n        elif x > 0 and largest_positive is None:\n            largest_positive\
    \ = x\n    return smallest_negative, largest_positive\n", "    lst = [-1, 3, -5,\
    \ 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n    # returns (-17,\
    \ -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-17, -21)\n    \"\"\"\n    lst = [-1, 3, -5, 7, -9, -13, -17,\
    \ -21]\n    largest_smallest_integers(lst)\n    # returns (-17, -21)\n    \"\"\
    \"\n    lst = [-1, 3, -5, 7, -9, -13, -17, -21]\n    largest_smallest_integers(lst)\n\
    \    # returns (-", "    lst = [-4, -6, -10, -12, -14, -16, -20, -24, -26, -28,\
    \ -32, -36, -48, -54, -60]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-48, -54)\n    \"\"\"\n    largest_negative = None\n    smallest_positive =\
    \ None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ 1, 3, 5]\n    largest_smallest_integers(lst)\n    >>> (5, -2)\n    \"\"\"\n\
    \    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_positive = None\n    largest_negative\
    \ = None\n    for num in lst:\n        if num > 0:\n            if largest_positive\
    \ is None or num > largest_positive:\n                largest_positive = num\n\
    \        else:\n            if largest_negative is None or num < largest_negative:\n\
    \                largest_negative = num\n    return (largest_positive, largest_negative)\n",
  "    lst = [-4, -2, 0, 2, 5, -6, -7, -9, -10, -12, -13, -14, -15, -16, -17, 18]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None:\n                largest_negative = num\n\
    \            else:\n                largest_negative = max(largest_negative, num)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = num\n            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n\n", "    lst = [-4, -6,\
    \ -10, -5, -7, -9, -3]\n    largest_smallest_integers(lst)\n    >>> (-10, -3)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -2, 0, 2, 5, -6, 3, -7, -9, 0]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, -6)\n    \"\"\"\n    largest_positive = None\n    largest_negative\
    \ = None\n    smallest_positive = None\n    smallest_negative = None\n    for\
    \ num in lst:\n        if num > 0:\n            if smallest_positive is None or\
    \ num < smallest_positive:\n                smallest_positive = num\n        else:\n\
    \            if smallest_negative is None or num > smallest_negative:\n      \
    \          smallest_negative = num\n        if largest_positive is None or num\
    \ > largest_positive:\n            largest_positive = num\n        if largest_negative\
    \ is None or num < largest_negative:\n            largest_negative = num\n   \
    \ return largest_positive, smallest_negative\n", "    lst = [-4, -6, -10, -5,\
    \ -7, -9, -12, -14, -16, -18, -21, -24, -23, -25, -26, -27, -28, -29, -32, -34,\
    \ -36, -38, -39, -44, -47, -49, -50, -51, -52, -54, -55, -57, -58, -59, -61, -63,\
    \ -64, -66, -68, -70, -72, -74, -76, -78, -79, -84, -86, -88, -89, -91, -93, -95,\
    \ -97, -99, -100, -102, -104, -106, -108, -110, -111, -113, -115, -117, -119,\
    \ -121, -123, -125, -127, -128, -129, -131, -133, -135, -137, -139, -141, -143,\
    \ -145, -147, -149, -151, -153, -155, -157, -159, -161, -163, -165, -167, -169,\
    \ -171, -173, -175, -177, -179, -181, -183, -185, -187, -189, -191, -193, -195,\
    \ -197, -198]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n    >>> (5, 1)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", '    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14,
    -15, -16, -17, -21, -24, -26, -27, -28, -29, -32, -33, -34, -35, -36, -37, -38,
    -39, -44, -47, -48, -49, -50, -51, -52, -53, -54, -55, -57, -58, -59, -60, -61,
    -62, -63, -64, -66, -67, -68, -69, -71, -72, -73, -74, -75, -76, -77, -78, -79,
    -84, -86, -87, -88, -89, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101,
    -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114,
    -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
    -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
    -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153,
    -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166,
    -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179,
    -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192,
    -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205,
    -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218,
    -219, -220, -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231,
    -232, -233, -234, -234, -235, -236, -237, -238, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, ', '    lst = [-4, -6, -9, -10, -12, -15,
    -16, -18, -21, -24, -26, -27, -29, -32, -35, -38, -39, -44, -47, -49, -54, -59,
    -62, -64, -66, -68, -71, -73, -74, -76, -78, -79, -84, -88, -89, -92, -94, -95,
    -96, -97, -98, -99, -100, -101, -102, -103, -104, -105, -106, -107, -108, -109,
    -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120, -121, -122,
    -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
    -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
    -149, -150, -151, -152, -153, -154, -155, -156, -157, -158, -159, -160, -161,
    -162, -163, -164, -165, -166, -167, -168, -169, -170, -171, -172, -173, -174,
    -175, -176, -177, -178, -179, -180, -181, -182, -183, -184, -185, -186, -187,
    -188, -189, -190, -191, -192, -193, -194, -195, -196, -197, -198, -199, -200,
    -201, -202, -203, -204, -205, -206, -207, -208, -209, -210, -211, -212, -213,
    -214, -215, -216, -217, -218, -219, -220, -221, -222, -223, -224, -225, -226,
    -227, -228, -229, -230, -231, -232, -233, -234, -234, -235, -236, -237, -238,
    -239, -239, -240, -241, -242, -243, -244, -245, -246, -247, -248, -249, -250,
    -251, -252, -253, -254, -255, -256, -257, -258, -259, -260, -261, -262, -263,
    -264, -265, -266, -267, -268, -269, -270, -271, -272, -273, -274, -275, -276,
    -277, -278, -279, -280, -281, -282, -283, -284, -', '    lst = [-10, -5, -4, -7,
    -6, -9, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -7, -5,
    -4, -6, -7, -5, -4, -6, -7, -5, -4, -6, -', "    lst = [-4, -5, -6, -7, -8, -9,\
    \ -10, -12, -13, -14, -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", '    lst = [-4, -6, -5, -7, -9, -10, -12, -14, -16, -18,
    -21, -24, -26, -27, -29, -32, -34, -36, -38, -39, -44, -47, -49, -54, -57, -59,
    -61, -64, -66, -68, -71, -74, -76, -78, -79, -84, -87, -89, -91, -93, -95, -97,
    -99, -100, -102, -104, -106, -108, -110, -113, -115, -117, -119, -121, -123, -125,
    -127, -128, -130, -132, -134, -136, -138, -140, -142, -144, -146, -148, -150,
    -152, -154, -156, -158, -160, -162, -164, -166, -168, -170, -172, -174, -176,
    -178, -180, -182, -184, -186, -188, -190, -192, -194, -196, -198, -200, -202,
    -204, -206, -208, -210, -212, -214, -216, -218, -220, -222, -224, -226, -228,
    -230, -232, -234, -236, -238, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, ', "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n  \
    \  \"\"\"\n    largest_negative = None\n    largest_positive = None\n    smallest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if largest_positive is None:\n              \
    \  largest_positive = x\n            else:\n                largest_positive =\
    \ max(largest_positive, x)\n        if x > 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = x\n            else:\n       \
    \         smallest_negative = min(smallest_negative, x)\n        else:\n     \
    \       if smallest_positive is None:\n                smallest_positive = x\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ x)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -6, -9,\
    \ -12, -15, -18, -21, -24, -30, -36, -39, -44, -49, -54, -56, -59, -64, -67, -72,\
    \ -75, -78, -84, -89, -94, -99, -104, -110, -113, -117, -123, -127, -131, -135,\
    \ -139, -144, -149, -154, -159, -164, -169, -174, -179, -184, -189, -194, -199,\
    \ -204, -210, -213, -217, -219, -224, -229, -231, -234, -237, -240, -243, -246,\
    \ -249, -252, -255, -258, -261, -264, -267, -270, -273, -276, -279, -282, -284,\
    \ -285, -287, -290, -293, -296, -299, -302, -305, -308, -310, -311, -313, -315,\
    \ -317, -318, -319, -321, -323, -325, -327, -329, -331, -333, -335, -337, -339,\
    \ -341, -343, -345, -347, -349, -351, -353, -355, -357, -359, -361, -363, -365,\
    \ -367, -369, -371, -373, -375, -377, -379, -381, -383, -385, -387, -389, -391,\
    \ -393, -395, -397, -399, -401, -403, -405, -407, -409, -411, -413, -415, -417,\
    \ -419, -421, -423, -425, -427, -429, -431, -433, -435, -437, -439, -441, -443,\
    \ -445, -447, -449, -451, -453, -455, -457, -459, -461, -463, -465]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", '    lst = [-4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -', "    lst\
    \ = [-4, -6, -10, -15, -20, -25, -27, -29, -32, -35, -38, -44, -47, -49, -54,\
    \ -57, -60]\n    largest_smallest_integers(lst)\n    >>> (-20, -25)\n    \"\"\"\
    \n    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (-1, 2)\n    \"\"\"\n    largest_positive = None\n    largest_negative\
    \ = None\n    for x in lst:\n        if x > 0:\n            if largest_positive\
    \ is None or x > largest_positive:\n                largest_positive = x\n   \
    \     else:\n            if largest_negative is None or x < largest_negative:\n\
    \                largest_negative = x\n    return largest_positive, largest_negative\n",
  "    lst = [-10, -5, -4, -7, -9, -6, -3]\n    largest_smallest_integers(lst)\n \
    \   >>> (-9, -3)\n\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return largest_negative, smallest_positive\n", "    lst = [-4, -6, -9, -12,\
    \ -15, -16, -20, -24, -25, -27, -29, -32, -35, -38, -39, -44, -47, -48, -49, -54,\
    \ -55, -57, -58, -59, -62, -64, -67, -68, -71, -72, -74, -75, -78, -79, -84, -87,\
    \ -88, -89, -92, -94]\n    \n    largest_smallest_integers(lst)\n    >>> (-64,\
    \ -27)\n    \"\"\"\n    \n    largest_negative = None\n    smallest_positive =\
    \ None\n    \n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(num, largest_negative)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(num, smallest_positive)\n\
    \    \n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (2, 0)\n    \"\"\"\n \
    \   smallest_negative = None\n    largest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if smallest_negative is None:\n            \
    \    smallest_negative = num\n            else:\n                smallest_negative\
    \ = min(smallest_negative, num)\n        else:\n            if largest_positive\
    \ is None:\n                largest_positive = num\n            else:\n      \
    \          largest_positive = max(largest_positive, num)\n    return (largest_positive,\
    \ smallest_negative)\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    largest_smallest_integers(lst)\n\
    \    # returns (-36, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52] # noqa\n    large",
  "    lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, -6, -9, -10, -15, -20, -25]\n\
    \    largest_smallest_integers(lst)\n    # returns (-20, -25)\n    \"\"\"\n  \
    \  lst = [-4, -6, -9, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -25)\n    \"\"\"\n    lst = [-4, ", "    lst = [-4, -6, -10,\
    \ -12, -14, -16, -18, -22, -24, -26, -28, -32, -34, -36, -38, -44, -48, -54, -58,\
    \ -62, -64, -66, -68, -72, -74, -76, -78, -84, -88, -92, -96]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -10)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    \"\
    \"\"\n    largest_negative = None\n    largest_positive = None\n    smallest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if largest_positive is None:\n            \
    \    largest_positive = num\n            else:\n                largest_positive\
    \ = min(largest_positive, num)\n    if largest_negative is None:\n        return\
    \ None, None\n    if largest_positive is None:\n        return largest_negative,\
    \ None\n    if smallest_negative is None:\n        return largest_positive, None\n\
    \    if smallest_positive is None:\n        return largest_negative, smallest_positive\n\
    \    return largest_negative, smallest_positive\n", "    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    \"\"\"\n\
    \    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-1, 2)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(",
  "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n    # Output:\
    \ (-4, 1)\n    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_negative is\
    \ None:\n                largest_negative = num\n            else:\n         \
    \       largest_negative = max(largest_negative, num)\n        else:\n       \
    \     if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n\n", "    lst = [-4, -2,\
    \ -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n    # returns (-4, 0)\n  \
    \  \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst",
  "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (2, 4)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (None, None)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-10, 0)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (-10, -5)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-10, -4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (-10, -3)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-10, -2)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (-10, -1)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-10, 0)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (-10, 5)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-10, 4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-10, 3)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-10, 2)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-10, 1)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-10, 0)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-10, 5)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]", "    lst = [-1, -2, -3, 4, -5, -6, -7, -8,\
    \ -9]\n    largest_smallest_integers(lst)\n    >>> (-9, -8, -7)\n\n    lst = [-1,\
    \ -2, -3, 4, -5, -6, -7, -8, -9, -10, -11]\n    largest_smallest_integers(lst)\n\
    \    >>> (-10, -9, -8, -7)\n\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13]\n    largest_smallest_integers(lst)\n    >>> (-12, -13, -10,\
    \ -9, -8, -7)\n\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15]\n    largest_smallest_integers(lst)\n    >>> (-14, -15, -12,\
    \ -13, -10, -9, -8, -7)\n\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17]\n    largest_smallest_integers(lst)\n   \
    \ >>> (-16, -17, -14, -15, -12, -13, -10, -9, -8, -7)\n\n    lst = [-1, -2, -3,\
    \ 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -17, -16, -15, -12, -13, -10, -9, -8, -7)\n\n    lst = [-1, -2,\
    \ -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19]\n\
    \    largest_smallest_integers(lst)\n    >>> (-19, -18, -17, -16, -15, -12, -13,\
    \ -10, -9, -8, -7)\n\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8, -9, -10, -11,\
    \ -12, -13, -14, -15, -16, -17, -18, -19, -20, -21]\n    largest_smallest_integers(lst)\n\
    \    >>> (-21, -20, -19, -18, -17, -16, -15, -12, -13, -10, -9, -8, -7)\n\n  \
    \  lst = [-1, -2, -3, 4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22]\n    large", "    lst = [-4, -6, -9, -10, -12,\
    \ -14, -16, -18, -21, -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -52]\
    \ # noqa\n    largest_smallest_integers(lst)\n    (-26, -21)\n    \"\"\"\n   \
    \ largest_negative = None\n    smallest_positive = None\n    for x in lst:\n \
    \       if x < 0:\n            if largest_negative is None:\n                largest_negative\
    \ = x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -5, -6, -7, -8, -9, -10, -20, -25, -26, -27, -28, -29, -30, -35,\
    \ -36, -37, -38, -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", '    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,
    -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -48, -49, -50, -51, -52, -53,
    -54, -55, -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70, -71,
    -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88,
    -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102, -103,
    -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115, -116,
    -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
    -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
    -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154, -155,
    -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167, -168,
    -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180, -181,
    -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193, -194,
    -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206, -207,
    -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219, -220,
    -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231, -232, -233,
    -234, -235, -236, -237, -238, -239, -240, -241, -242, -243, -244, -245, -246,
    -247, -248, -249, -250, -251, -252, -253, -254, -255, -256, -257, -258, -259,
    -260, -261, -262, -263, -264, -265, -266, -267, -268, -269, -270, ', "    lst\
    \ = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n    >>> (2,\
    \ -1)\n    \"\"\"\n    largest_positive = None\n    largest_negative = None\n\
    \    for num in lst:\n        if num > 0:\n            if largest_positive is\
    \ None or num > largest_positive:\n                largest_positive = num\n  \
    \      else:\n            if largest_negative is None or num < largest_negative:\n\
    \                largest_negative = num\n    return largest_positive, largest_negative\n",
  "    lst = [-4, -6, -9, -10, -12, -15, -16, -18, -21, -24, -30, -36, -39, -44, -47,\
    \ -49, -54, -56, -59, -62, -64, -66, -68, -71, -74, -76, -79, -84, -88, -92, -96]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None:\n                largest_negative = num\n\
    \            else:\n                largest_negative = max(largest_negative, num)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = num\n            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -6,\
    \ -10, -12, -14, -16, -18, -22, -24, -26, -28, -32, -34, -36, -38, -42, -44, -46]\n\
    \    largest_smallest_integers(lst)\n    >>> (-28, -8)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n\
    \n", "    lst = [-4, -6, -9, -12, -15, -16, -18, -21, -24, -30, -35, -36, -38,\
    \ -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n   \
    \ >>> (-36, -12)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ 1, 3, 5]\n    largest_smallest_integers(lst)\n    # returns (None, None)\n \
    \   lst = [-4, -2, 1, 3, -5]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, 7]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, 9]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10]\n   \
    \ largest_smallest_integers(lst)\n    # returns (-4, -5)\n    lst = [-4, -2, 1,\
    \ 3, -5, -6, -7, 8, -9, 10, 11]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12,\
    \ 13]\n    largest_smallest_integers(lst)\n    # returns (-4, -5)\n    lst = [-4,\
    \ -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12, 13, 14]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12,\
    \ 13, 14, 15]\n    largest_smallest_integers(lst)\n    # returns (-4, -5)\n  \
    \  lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17]\n    largest_smallest_integers(lst)\n    # returns (-4,\
    \ -5)\n    lst = [-4, -2, 1, 3, -5, -6, -7, 8, -9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (-1, 0)\n\n    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (0,\
    \ 4)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (5, 10)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    >>> (None, None)\n\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>>\
    \ (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>>\
    \ (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>>\
    \ (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>>\
    \ (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, ", "   \
    \ lst = [-4, -2, 0, 2, 5, -6, -7, -9, -10, -12, -13, -14, -15, -16, -17, 18]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for num in lst:\n        if num < 0:\n    \
    \        if largest_negative is None:\n                largest_negative = num\n\
    \            else:\n                largest_negative = max(largest_negative, num)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = num\n            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ 0, 2, 4]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(num, largest_negative)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = num\n            else:\n                smallest_positive = min(num, smallest_positive)\n\
    \    return largest_negative, smallest_positive\n", "    lst = [-4, -2, 0, 2,\
    \ 4]\n    largest_smallest_integers(lst)\n    >>> (2, 4)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return (largest_negative, smallest_positive)\n",
  '    lst = [-4, -6, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4,
    -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9,
    -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5,
    -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10,
    -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7,
    -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4,
    -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9,
    -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5,
    -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10,
    -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7,
    -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4,
    -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9,
    -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5, -9, -4, -7, -10, -5,
    -9, -4, -7, -10, -5, -9, -4, -7, -10, -', "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, ", "    lst = [-4,\
    \ -6, -9, -10, -12, -14, -16, -18, -21, -24, -26, -29, -32, -34, -36, -39, -42,\
    \ -44, -46]\n    largest_smallest_integers(lst)\n    >>> (-26, -12)\n    \"\"\"\
    \n    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -46]\n    largest_smallest_integers(lst)\n\
    \    >>> (-26, -12)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return largest_negative, smallest_positive\n", "    lst = [-4, -6, -9, -12,\
    \ -15, -20, -25, -27, -29, -32, -35, -38, -39, -40, -41, -42, -43, -44, -45]\n\
    \    largest_smallest_integers(lst)\n    >>> (-27, -41)\n\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return (largest_negative, smallest_positive)\n",
  "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24, -23, -25, -26, -27, -28,\
    \ -29, -32, -34, -36, -38, -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    largest_positive = None\n    smallest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if largest_positive is None:\n            \
    \    largest_positive = num\n            else:\n                largest_positive\
    \ = min(largest_positive, num)\n    if largest_negative is None:\n        return\
    \ None, None\n    if largest_positive is None:\n        return largest_negative,\
    \ None\n    if smallest_negative is None:\n        return largest_positive, None\n\
    \    if smallest_positive is None:\n        return smallest_negative, smallest_positive\n\
    \    return largest_negative, smallest_positive\n", '    lst = [-4, -5, -6, -7,
    -8, -9, -10, -12, -13, -14, -15, -16, -17, -21, -24, -25, -26, -27, -28, -29,
    -32, -33, -34, -35, -36, -37, -38, -39, -44, -47, -48, -49, -50, -51, -52, -53,
    -54, -55, -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -71, -72,
    -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88, -89,
    -91, -92, -93, -94, -95, -96, -99, -100, -101, -102, -103, -104, -105, -106, -107,
    -108, -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120, -121,
    -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134,
    -135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147,
    -148, -149, -150, -151, -152, -153, -154, -155, -156, -157, -158, -159, -160,
    -161, -162, -163, -164, -165, -166, -167, -168, -169, -170, -171, -172, -173,
    -174, -175, -176, -177, -178, -179, -180, -181, -182, -183, -184, -185, -186,
    -187, -188, -189, -190, -191, -192, -193, -194, -195, -196, -197, -198, -199,
    -200, -201, -202, -203, -204, -205, -206, -207, -208, -209, -210, -211, -212,
    -213, -214, -215, -216, -217, -218, -219, -220, -221, -222, -223, -224, -226,
    -227, -228, -229, -230, -231, -232, -233, -234, -234, -235, -236, -237, -238,
    -240, -241, -242, -243, -244, -245, -246, -247, -248, -249, -250, -251, -252,
    -253, -254, -255, -256, -257, -258, -259, -260, -261, -262, -263, -264, ', '    lst
    = [-4, -6, -9, -12, -15, -16, -18, -21, -24, -26, -27, -29, -32, -35, -36, -38,
    -39, -44, -47, -48, -49, -54, -55, -57, -58, -59, -63, -64, -66, -68, -71, -72,
    -73, -74, -76, -77, -78, -79, -84, -86, -88, -89, -92, -94, -95, -96, -97, -98,
    -99, -100, -101, -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112,
    -113, -114, -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
    -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
    -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151,
    -152, -153, -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164,
    -165, -166, -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177,
    -178, -179, -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190,
    -191, -192, -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203,
    -204, -205, -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216,
    -217, -218, -219, -220, -221, -222, -223, -224, -226, -227, -228, -229, -230,
    -231, -232, -233, -234, -234, -235, -236, -237, -238, -240, -241, -242, -243,
    -244, -245, -246, -247, -248, -249, -250, -251, -252, -253, -254, -255, -256,
    -257, -258, -259, -260, -261, -262, -263, -264, -265, -266, -267, -268, -269,
    -270, -271, -272, -273, -274, -275, -276, -277, -278, -279, -280, -281, ', '    lst
    = [-4, -5, -6, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
    -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, ', "   \
    \ lst = [-4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    >>> (-7,\
    \ -8)\n    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_negative is\
    \ None:\n                largest_negative = num\n            else:\n         \
    \       largest_negative = max(largest_negative, num)\n        else:\n       \
    \     if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n\n", "    lst = [-4, -2,\
    \ 1, 3, 5]\n    largest_smallest_integers(lst)\n    >>> (None, None)\n    \"\"\
    \"\n    largest_negative = None\n    smallest_positive = None\n    for num in\
    \ lst:\n        if num < 0:\n            if largest_negative is None:\n      \
    \          largest_negative = num\n            else:\n                largest_negative\
    \ = max(num, largest_negative)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(num, smallest_positive)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24]\n    largest_smallest_integers(lst)\n    >>> (-18, -21)\n\n    lst = [-4,\
    \ -6, -9, -10, -12, -14, -16, -18, -21, -24, -27]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24,\
    \ -27, -29]\n    largest_smallest_integers(lst)\n    >>> (-18, -21)\n\n    lst\
    \ = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24, -27, -29, -32]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24,\
    \ -27, -29, -32, -35]\n    largest_smallest_integers(lst)\n    >>> (-18, -21)\n\
    \n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24, -27, -29, -32, -35,\
    \ -38]\n    largest_smallest_integers(lst)\n    >>> (-18, -21)\n\n    lst = [-4,\
    \ -6, -9, -10, -12, -14, -16, -18, -21, -24, -27, -29, -32, -35, -38, -43]\n \
    \   largest_smallest_integers(lst)\n    >>> (-18, -21)\n\n    lst = [-4, -6, -9,\
    \ -10, -12, -14, -16, -18, -21, -24, -27, -29, -32, -35, -38, -43, -46]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24,\
    \ -27, -29, -32, -35, -38, -43, -46,\n        -49]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -21)\n\n    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24,\
    \ -27, -29, -32, -35, -38, -43, -46,\n        -49, -53]\n    largest_", "    lst\
    \ = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n    \"\"\"\n \
    \   largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, 0, 2, 5, -6, -3]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -3)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -6,\
    \ -5, -7, -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24]\n    largest_smallest_integers(lst)\n    >>> (-18, -21)\n    \"\"\"\n \
    \   largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (-1, 0)\n    \"\"\"\n    largest_positive = None\n    largest_negative\
    \ = None\n    for num in lst:\n        if num > 0:\n            if largest_positive\
    \ is None or num > largest_positive:\n                largest_positive = num\n\
    \        else:\n            if largest_negative is None or num < largest_negative:\n\
    \                largest_negative = num\n    return (largest_positive, largest_negative)\n",
  '    lst = [-4, -6, -9, -12, -15, -16, -18, -21, -24, -30, -35, -38, -39, -44, -47,
    -48, -49, -54, -56, -57, -58, -59, -62, -63, -64, -66, -67, -71, -73, -74, -75,
    -78, -79, -84, -86, -87, -88, -89, -91, -92, -93, -94, -95, -96, -97, -98, -99,
    -100, -101, -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112,
    -113, -114, -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
    -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
    -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151,
    -152, -153, -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164,
    -165, -166, -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177,
    -178, -179, -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190,
    -191, -192, -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203,
    -204, -205, -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216,
    -217, -218, -219, -220, -221, -222, -223, -224, -225, -226, -227, -228, -229,
    -230, -231, -232, -233, -234, -234, -235, -236, -237, -238, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, ', "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 0)\n    \"\"\"\n    smallest_negative = None\n    largest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n        else:\n \
    \           if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = max(largest_positive, num)\n\
    \    return (smallest_negative, largest_positive)\n", '    lst = [-4, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9,
    -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10,
    -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5,
    -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9,
    -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10,
    -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5,
    -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -', "    lst = [-1, 0, 2, -4, -5, -6, -7, -8]\n\
    \    largest_smallest_integers(lst)\n    # returns (-1, -8)\n    \"\"\"\n    largest_positive\
    \ = None\n    largest_negative = None\n    for num in lst:\n        if num < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if largest_positive is None:\n            \
    \    largest_positive = num\n            else:\n                largest_positive\
    \ = min(largest_positive, num)\n    return largest_positive, largest_negative\n",
  "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n    >>> (5, 1)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -2, 0, 2, 5, -4, -6, -3]\n    largest_smallest_integers(lst)\n\
    \    >>> (-4, 2)\n    \"\"\"\n    positive, negative = 0, 0\n    for x in lst:\n\
    \        if x < 0:\n            negative += 1\n        elif x > 0:\n         \
    \   positive += 1\n        else:\n            return None, None\n    return negative,\
    \ positive\n", "    lst = [-4, -6, -9, -12, -15, -16, -18, -21, -24, -23, -25,\
    \ -27, -29, -32, -34, -36, -39, -44, -47, -49, -54, -57, -59, -63, -66, -69, -72,\
    \ -75, -78, -84, -88, -92, -95, -98, -101, -104, -107, -110, -113, -115, -118,\
    \ -121, -124, -127, -130, -133, -135, -138, -141, -144, -147, -150, -153, -156,\
    \ -159, -162, -165, -168, -171, -174, -177, -180, -183, -186, -189, -192, -195,\
    \ -198, -201, -204, -207, -210, -213, -214, -217, -220, -223, -226, -229, -231,\
    \ -234, -236, -239, -242, -245, -248, -251, -254, -257, -260, -263, -266, -269,\
    \ -272, -275, -278, -281, -284, -287, -290, -293, -296, -299, -302, -305, -308,\
    \ -311, -315, -318, -321, -324, -327, -330, -333, -336, -339, -342, -345, -348,\
    \ -351, -354, -357, -360, -363, -366, -369, -372, -375, -378, -381, -384, -387,\
    \ -390, -393, -396, -399, -402, -405, -408, -411, -414, -417, -420, -423, -426,\
    \ -429, -432, -435, -438, -441, -444, -447, -450, -453, -456, -459, -462, -465]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for x in lst:\n        if x < 0:\n        \
    \    if largest_negative is None:\n                largest_negative = x\n    \
    \        else:\n                largest_negative = max(largest_negative, x)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = x\n            else:\n                smallest_positive = min(smallest_positive,\
    \ x)\n    return largest_negative, smallest_positive\n", '    lst = [-4, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9,
    -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10,
    -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5,
    -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9,
    -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10,
    -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5,
    -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6,
    -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7,
    -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8, -9, -10, -5, -6, -7, -8,
    -9, -10, -5, -6, -7, -8, -9, -10, -', "    lst = [-4, -2, -1, 0, 1, 2, 3]\n  \
    \  largest_smallest_integers(lst)\n    >>> (None, None)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return (largest_negative, smallest_positive)\n",
  "    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, 18]\n   \
    \ largest_smallest_integers(lst)\n    >>> (-16, -18)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n\
    \n", '    lst = [-10, -5, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4,
    -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -4, -7, -9, -6, -',
  "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n\n", "    lst = [-4, -6,\
    \ -7, -8, -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n\
    \    >>> (-8, -7)\n\n    \"\"\"\n    positive, negative = 0, 0\n    for num in\
    \ lst:\n        if num > 0:\n            positive += 1\n        elif num < 0:\n\
    \            negative += 1\n        else:\n            pass\n    if positive >\
    \ negative:\n        return positive, negative\n    else:\n        return negative,\
    \ positive\n", "    lst = [-1, -5, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n    lst = [-4, -2, -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 0)\n\n", "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24, -26,\
    \ -28, -32, -34, -36, -38, -42, -44, -46]\n    largest_smallest_integers(lst)\n\
    \    >>> (-44, -26)\n\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return largest_negative, smallest_positive\n\n", "    lst = [-4, -2, -1,\
    \ 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns (4, 0)\n \
    \   \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (4, 0)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2, 3, 4]\n   \
    \ largest_smallest_integers(lst)\n    # returns (4, 0)\n    \"\"\"\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, ", '    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,
    -24, -30, -36, -39, -44, -47, -48, -49, -54, -55, -57, -58, -59, -61, -64, -66,
    -68, -71, -73, -74, -76, -79, -84, -88, -91, -92, -93, -94, -95, -96, -97, -98,
    -99, -100, -101, -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112,
    -113, -114, -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125,
    -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
    -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151,
    -152, -153, -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164,
    -165, -166, -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177,
    -178, -179, -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190,
    -191, -192, -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203,
    -204, -205, -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216,
    -217, -218, -219, -220, -221, -222, -223, -224, -225, -226, -227, -228, -229,
    -232, -233, -234, -240, -241, -242, -243, -244, -245, -246, -247, -248, -249,
    -250, -251, -252, -253, -254, -255, -256, -257, -258, -259, -260, -261, -262,
    -263, -264, -265, -266, -267, -268, -269, -270, -271, -272, -273, -274, -275,
    -276, -277, -278, -279, -280, -281, -282, -283, -284, -285, -286, -287, -288,
    -289, -290, -291, -292, ', "    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13,\
    \ -14, -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n    >>> (-16, -10)\n\
    \    \"\"\"\n    smallest_negative = None\n    largest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if smallest_negative is None:\n  \
    \              smallest_negative = x\n            else:\n                smallest_negative\
    \ = min(smallest_negative, x)\n        else:\n            if largest_positive\
    \ is None:\n                largest_positive = x\n            else:\n        \
    \        largest_positive = max(largest_positive, x)\n    return (largest_positive,\
    \ smallest_negative)\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst",
  "    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n    >>> (-1,\
    \ 0)\n    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_negative is\
    \ None:\n                largest_negative = num\n            else:\n         \
    \       largest_negative = max(largest_negative, num)\n        else:\n       \
    \     if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (None, None)\n   \
    \ \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for x\
    \ in lst:\n        if x < 0:\n            if largest_negative is None:\n     \
    \           largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return (largest_negative, smallest_positive)\n", "    lst = [-4, -6, -9,\
    \ -12, -15, -16, -18, -21, -24, -30, -33]\n    largest_smallest_integers(lst)\n\
    \    >>> (-18, -21)\n\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", '    lst = [-10, -5,
    -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9,
    -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9,
    -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4,
    -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6,
    -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10,
    -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7,
    -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7,
    -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5,
    -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9,
    -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9,
    -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4,
    -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6,
    -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10, -5, -4, -7, -9, -6, -7, -9, -10,
    -5, -4, -7, -9, -6, -', '    lst = [-1, -10, -100, -1000, -1001, -1002, -1003,
    -1004, -1005, -1006, -1007, -1008, -1009, -1010, -1011, -1012, -1013, -1014, -1015,
    -1016, -1017, -1018, -1019, -1020, -1021, -1022, -1023, -1024, -1025, -1026, -1027,
    -1028, -1029, -1030, -1031, -1032, -1033, -1034, -1035, -1036, -1037, -1038, -1039,
    -1040, -1041, -1042, -1043, -1044, -1045, -1046, -1047, -1048, -1049, -1050, -1051,
    -1052, -1053, -1054, -1055, -1056, -1057, -1058, -1059, -1060, -1061, -1062, -1063,
    -1064, -1065, -1066, -1067, -1068, -1069, -1070, -1071, -1072, -1073, -1074, -1075,
    -1076, -1077, -1078, -1079, -1080, -1081, -1082, -1083, -1084, -1085, -1086, -1087,
    -1088, -1089, -1090, -1091, -1092, -1093, -1094, -1095, -1096, -1097, -1098, -1099,
    -1100, -1101, -1102, -1103, -1104, -1105, -1106, -1107, -1108, -1109, -1110, -1111,
    -1112, -1113, -1114, -1115, -1116, -1117, -1118, -1119, -1120, -1121, -1122, -1123,
    -1124, -1125, -1126, -1127, -1128, -1129, -1130, -1131, -1132, -1133, -1134, -1135,
    -1136, -1137, -1138, -1139, -1140, -1141, -1142, -1143, -1144, -1145, -1146, -1147,
    -1148, -1149, -1150, -1151, -1152, -1153, -1154, -1155, -1156, -1157, -1158, -1159,
    -1160, -1161, -1162, -1163, -1164, -1165, -1166, -1167, -1168, -1169, -1170, -1171,
    -1172, -1173, -1174, -1175, -1176, -1177, -1178, -1179, -1180, -1181, -1182, -1183,
    -1184, -1185, -1186, -1187, -1188, -1189, -1190, -1191, -1192, -1193, -1194, -1195,
    -1196, -1197, -11', "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n    \"\"\"\n    smallest_negative = None\n    largest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n        else:\n \
    \           if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = max(largest_positive, num)\n\
    \    return smallest_negative, largest_positive\n", "    lst = [-4, -6, -10, -15,\
    \ -20, -25]\n    largest_smallest_integers(lst)\n    >>> (-20, -25)\n    \"\"\"\
    \n    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return (largest_negative, smallest_positive)\n",
  "    lst = [-4, -2, 0, 2, 5, -3]\n    largest_smallest_integers(lst)\n    >>> (2,\
    \ 5)\n    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n\
    \    for x in lst:\n        if x < 0:\n            if largest_negative is None:\n\
    \                largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -29, -32, -34, -36, -39, -42, -44, -47, -49, -54, -57, -61, -64, -66,\
    \ -69, -72, -74, -76, -79, -84, -86, -89, -82, -84, -86, -89, -92, -94]\n    largest_smallest_integers(lst)\n\
    \    >>> (-64, -66)\n\n    \"\"\"\n    positive, negative = largest_smallest_integers_helper(lst)\n\
    \    return positive, negative\n", "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 1)\n    \"\"\"\n    lst = [-4, -2, 1, 3, ", '    lst = [-10,
    -5, -4, -7, -9, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9,
    -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10,
    -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4,
    -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5,
    -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6,
    -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7,
    -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9,
    -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10,
    -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4,
    -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5,
    -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6,
    -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7,
    -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9, -10, -4, -5, -6, -7, -9,
    -10, -4, -5, -6, -7, -9, -', "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3,\
    \ 4, 5]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, 2)\n    \"\"\"\n    lst = [-4, -2, 1, 3, ", "    lst = [-1,\
    \ -10, -20, -5, -100, -200]\n    largest_smallest_integers(lst)\n    \"\"\"\n\
    \    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -6, -9, -12, -15, -16, -20, -25, -27,\
    \ -29, -32, -36, -39, -44, -47, -49, -54, -59, -63, -66, -69, -73, -78, -84, -89,\
    \ -93, -96]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    largest_positive = None\n    smallest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = min(largest_positive, num)\n\
    \    if largest_negative is None:\n        return None, None\n    if largest_positive\
    \ is None:\n        return largest_negative, None\n    if smallest_negative is\
    \ None:\n        return largest_positive, None\n    if smallest_positive is None:\n\
    \        return smallest_negative, smallest_positive\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -2,\
    \ 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (2, 4)\n    \"\"\"\n \
    \   largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -6, -10, -15, -20, -25, -35, -45]\n \
    \   largest_smallest_integers(lst)\n    >>> (-45,\n        -35)\n    \"\"\"\n\
    \    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n    \"\"\"\n    smallest_negative\
    \ = None\n    largest_positive = None\n    for num in lst:\n        if num < 0:\n\
    \            if smallest_negative is None:\n                smallest_negative\
    \ = num\n            else:\n                smallest_negative = min(smallest_negative,\
    \ num)\n        else:\n            if largest_positive is None:\n            \
    \    largest_positive = num\n            else:\n                largest_positive\
    \ = max(largest_positive, num)\n    return (largest_positive, smallest_negative)\n",
  '    lst = [-4, -6, -5, -7, -9, -10, -12, -14, -16, -18, -21, -24, -30, -32, -34,
    -36, -38, -39, -40, -42, -44, -47, -50, -52, -54, -56, -58, -60, -62, -64, -66,
    -68, -70, -72, -74, -76, -78, -79, -80, -82, -84, -86, -88, -80, -82, -84, -86,
    -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88,
    -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80,
    -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82,
    -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84,
    -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86,
    -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88,
    -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80,
    -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82,
    -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84,
    -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86,
    -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -82, -84, -86, -88,
    -80, -82, -84, -86, -88, -80, -82, -84, -86, -88, -80, -8', '    lst = [-4, -6,
    -9, -15, -20, -25, -27, -29, -32, -35, -38, -39, -44, -47, -49, -50, -51, -52,
    -53, -54, -55, -57, -58, -59, -61, -62, -63, -64, -66, -67, -68, -69, -71, -72,
    -73, -74, -75, -78, -79, -80, -81, -82, -83, -84, -86, -87, -88, -89, -91, -92,
    -93, -94, -95, -97, -98, -99, -100, -101, -102, -103, -104, -105, -106, -107,
    -108, -109, -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120,
    -121, -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133,
    -134, -135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146,
    -147, -148, -149, -150, -151, -152, -153, -154, -155, -156, -157, -158, -159,
    -160, -161, -162, -163, -164, -165, -166, -167, -168, -169, -170, -171, -172,
    -173, -174, -175, -176, -177, -178, -179, -180, -181, -182, -183, -184, -185,
    -186, -187, -188, -189, -190, -191, -192, -193, -194, -195, -196, -197, -198,
    -199, -200, -201, -202, -203, -204, -205, -206, -207, -208, -209, -210, -211,
    -212, -213, -214, -215, -216, -217, -218, -219, -220, -221, -222, -223, -224,
    -225, -226, -227, -228, -229, -230, -231, -232, -233, -234, -234, -235, -236,
    -237, -238, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -2', "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24, -23, -25,\
    \ -26, -27, -28, -29, -32, -34, -36, -38, -39, -40, -41, -42, -43, -44, -45]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for x in lst:\n        if x < 0 and largest_negative\
    \ is None:\n            largest_negative = x\n        elif x > 0 and smallest_positive\
    \ is None:\n            smallest_positive = x\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -6, -10, -15, -20, -25]\n    largest_smallest_integers(lst)\n  \
    \  \"\"\"\n    largest_negative = None\n    largest_positive = None\n    for x\
    \ in lst:\n        if x < 0:\n            if largest_negative is None:\n     \
    \           largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if largest_positive is\
    \ None:\n                largest_positive = x\n            else:\n           \
    \     largest_positive = min(largest_positive, x)\n    return largest_negative,\
    \ largest_positive\n", "    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, -21, -24, -26, -27, -28, -29, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n   \
    \ \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for x\
    \ in lst:\n        if x < 0:\n            if largest_negative is None:\n     \
    \           largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n    \"\"\"\n    positive, negative = 0, 0\n    for x in lst:\n\
    \        if x > 0:\n            positive += 1\n        else:\n            negative\
    \ += 1\n    return max(negative * -1, positive), min(negative * -1, positive)\n",
  "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24, -26, -29, -32, -34, -36,\
    \ -39, -42, -44, -46]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0 and\
    \ largest_negative is None:\n            largest_negative = x\n        elif x\
    \ > 0 and smallest_positive is None:\n            smallest_positive = x\n    return\
    \ (largest_negative, smallest_positive)\n", "    lst = [-4, -6, -7, -8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n    \"\
    \"\"\n    largest_negative = None\n    smallest_positive = None\n    for num in\
    \ lst:\n        if num < 0:\n            if largest_negative is None:\n      \
    \          largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24,\
    \ -23, -25, -26, -27, -28, -29, -32, -34, -36, -38, -39, -40, -42, -44, -47, -50,\
    \ -52, -54, -56, -58, -60, -62, -64, -66, -68, -70, -72, -74, -76, -78, -79, -80]\n\
    \    largest_smallest_integers(lst)\n    (-18, -26)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 0, 2, 5, -5, -10, -7, -9, -3]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 1)\n    \"\"\"\n    smallest_negative = None\n    largest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n        else:\n \
    \           if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = max(largest_positive, num)\n\
    \    return smallest_negative, largest_positive\n\n", '    lst = [-4, -6, -9,
    -12, -15, -16, -18, -21, -24, -25, -27, -29, -32, -35, -38, -39, -42, -44, -47,
    -49, -50, -52, -54, -57, -59, -61, -64, -66, -68, -71, -74, -77, -79, -81, -84,
    -86, -88, -91, -94, -95, -97, -99, -101, -103, -105, -107, -109, -111, -113, -115,
    -117, -119, -121, -123, -125, -127, -128, -129, -131, -133, -135, -137, -139,
    -141, -143, -145, -147, -149, -151, -153, -155, -157, -159, -161, -163, -165,
    -167, -169, -171, -173, -175, -177, -179, -181, -183, -185, -187, -189, -191,
    -193, -195, -197, -199, -201, -203, -205, -207, -209, -211, -213, -215, -217,
    -219, -220, -222, -223, -225, -227, -228, -230, -232, -234, -235, -237, -238,
    -240, -242, -244, -246, -248, -250, -252, -254, -256, -258, -260, -262, -264,
    -266, -268, -270, -272, -274, -276, -278, -280, -282, -284, -285, -287, -289,
    -291, -293, -295, -297, -299, -301, -303, -305, -307, -309, -311, -313, -315,
    -317, -319, -321, -323, -325, -327, -329, -331, -333, -335, -337, -339, -341,
    -343, -345, -347, -349, -351, -353, -355, -357, -359, -361, -363, -365, -367,
    -369, -371, -373, -375, -377, -379, -381, -383, -385, -387, -389, -391, -393,
    -395, -397, -399, -401, -403, -405, -407, -409, -411, -413, -415, -417, -419,
    -421, -423, -425, -427, -429, -431, -433, -435, -437, -439, -441, -44', "    lst\
    \ = [-4, -6, -9, -12, -15, -16, -20, -24, -26, -27, -29, -32, -34, -36, -39, -44,\
    \ -47, -49, -54, -57, -59, -63, -66, -69, -72, -75, -78, -79, -84, -88, -91, -93,\
    \ -95, -99, -102, -104, -106, -109, -111, -113, -115, -117, -119, -122, -124,\
    \ -126, -128, -130, -132, -134, -136, -138, -140, -142, -144, -146, -148, -150,\
    \ -152, -154, -156, -158, -160]\n    largest_smallest_integers(lst)\n    \"\"\"\
    \n    largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -6, -10, -15, -20, -25, -35, -45]\n \
    \   largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    smallest_positive = None\n    for x in lst:\n        if x < 0:\n        \
    \    if largest_negative is None:\n                largest_negative = x\n    \
    \        else:\n                largest_negative = max(largest_negative, x)\n\
    \        else:\n            if smallest_positive is None:\n                smallest_positive\
    \ = x\n            else:\n                smallest_positive = min(smallest_positive,\
    \ x)\n    return largest_negative, smallest_positive\n", '    lst = [-4, -6, -5,
    -7, -9, -10, -12, -13, -14, -15, -16, -17, -21, -20, -24, -25, -26, -27, -28,
    -29, -32, -33, -34, -35, -36, -37, -38, -39, -44, -45, -47, -48, -49, -50, -51,
    -52, -53, -54, -55, -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69,
    -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86, -87,
    -88, -89, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102, -103,
    -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115, -116,
    -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
    -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
    -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154, -155,
    -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167, -168,
    -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180, -181,
    -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193, -194,
    -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206, -207,
    -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219, -220,
    -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231, -232, -233,
    -234, -240, -241, -242, -243, -244, -245, -246, -247, -248, -249, -250, -251,
    -252, -253, -254, -255, -256, -257, -258, -259, -264, -265, -266, -267, -268,
    -269, -27', "    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14, -15, -16,\
    \ -17, 18]\n    largest_smallest_integers(lst)\n    (-16, -18)\n    \"\"\"\n \
    \   largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24,\
    \ -26, -28, -32, -34, -36, -38, -42, -44, -46]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (-1, 0)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return (largest_negative, smallest_positive)\n", '    lst = [-4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -', "    lst = [-4, -6, -5, -7, -9, -10, -12, -14, -16, -18, -21,\
    \ -24]\n    largest_smallest_integers(lst)\n    # returns (-18, -24)\n    \"\"\
    \"\n    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0 and largest_negative is None:\n            largest_negative\
    \ = x\n        elif x > 0 and smallest_positive is None:\n            smallest_positive\
    \ = x\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -5,\
    \ -6, -7, -8, -9, -10, -12, -13, -14, -15, -16, -17, -21, -24, -25, -26, -27,\
    \ -28, -29, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45]\n\
    \    largest_smallest_integers(lst)\n    (-26, -8)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if largest_negative is None:\n                largest_negative =\
    \ x\n            else:\n                largest_negative = max(largest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -2, 0, 2, 5, -3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (2, 5)\n    \"\"\"\n    largest_positive = None\n    largest_negative = None\n\
    \    for num in lst:\n        if num > 0:\n            if largest_positive is\
    \ None or num > largest_positive:\n                largest_positive = num\n  \
    \      else:\n            if largest_negative is None or num < largest_negative:\n\
    \                largest_negative = num\n    return (largest_positive, largest_negative)\n",
  "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (2, 0)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (None, None)\n    \"\"\"\n    positive,\
    \ negative = 0, 0\n    for x in lst:\n        if x > 0:\n            positive\
    \ += 1\n        elif x < 0:\n            negative += 1\n        else:\n      \
    \      pass\n    if positive > negative:\n        return positive, negative\n\
    \    else:\n        return negative, positive\n", "    lst = [-4, -2, 0, 2, 4]\n\
    \    largest_smallest_integers(lst)\n    >>> (2, 4)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return (largest_negative, smallest_positive)\n",
  "    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24, -26, -28, -32, -34, -36,\
    \ -38, -42, -44, -46]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    largest_positive = None\n    smallest_negative = None\n    smallest_positive\
    \ = None\n\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = min(largest_positive, num)\n\
    \n    if largest_negative is None:\n        return None, None\n    else:\n   \
    \     return largest_negative, smallest_positive\n", '    lst = [-4, -5, -6, -7,
    -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,
    -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,
    -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55,
    -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71,
    -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87,
    -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102,
    -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115,
    -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128,
    -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141,
    -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154,
    -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167,
    -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180,
    -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193,
    -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206,
    -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219,
    -220, -221, -222, -223, -224, -226, -227, -228, -229, -230, -231, -232, -233,
    -234, -235, -236, -237, -238, -239, -238, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, ', "    lst = [-4, -2, 1, 3, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (5, 1)\n    \"\"\"\n    smallest_negative\
    \ = None\n    largest_positive = None\n    for x in lst:\n        if x < 0:\n\
    \            if smallest_negative is None:\n                smallest_negative\
    \ = x\n            else:\n                smallest_negative = min(smallest_negative,\
    \ x)\n        else:\n            if largest_positive is None:\n              \
    \  largest_positive = x\n            else:\n                largest_positive =\
    \ max(largest_positive, x)\n    return smallest_negative, largest_positive\n",
  "    lst = [-4, -6, -10, -12, -14, -16, -18, 20, 22, 24, 26, 28, 30, 32, 34, 36]\n\
    \    largest_smallest_integers(lst)\n    >>> (-18, 20)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return largest_negative, smallest_positive\n\
    \n", "    lst = [-4, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", '    lst = [-4, -6,
    -9, -10, -12, -15, -16, -18, -21, -24, -26, -29, -32, -35, -38, -39, -44, -47,
    -48, -49, -54, -57, -58, -59, -62, -64, -66, -68, -71, -73, -74, -78, -79, -84,
    -86, -88, -92, -94, -96, -98, -101, -103, -105, -106, -109, -112, -115, -117,
    -119, -122, -124, -126, -129, -131, -133, -135, -137, -139, -142, -144, -146,
    -148, -151, -153, -155, -157, -159, -162, -164, -166, -168, -171, -173, -175,
    -177, -179, -182, -184, -186, -188, -191, -193, -195, -197, -199, -211, -213,
    -215, -217, -219, -220, -222, -223, -225, -227, -229, -232, -234, -236, -238,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, ', '    lst = [-10, -5,
    -4, -7, -6, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4,
    -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -', "    lst = [-1, -2, -3, 4,\
    \ -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    >>> (None, None)\n\
    \    \"\"\"\n    positive, negative = 0, 0\n    for x in lst:\n        if x >\
    \ 0:\n            positive += 1\n        elif x < 0:\n            negative +=\
    \ 1\n        else:\n            pass\n    if positive > negative:\n        return\
    \ positive, negative\n    else:\n        return negative, positive\n", "    lst\
    \ = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    # returns (2, 4)\n\
    \    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, ", "    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,\
    \ -5]\n    largest_smallest_integers(lst)\n    # returns (-5, -4)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n\
    \    # returns (-5, -4)\n    \"\"\"\n    largest_negative = None\n    largest_positive\
    \ = None\n    smallest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if largest_positive is\
    \ None:\n                largest_positive = x\n            else:\n           \
    \     largest_positive = max(largest_positive, x)\n        if x > 0:\n       \
    \     if smallest_negative is None:\n                smallest_negative = x\n \
    \           else:\n                smallest_negative = min(smallest_negative,\
    \ x)\n        else:\n            if smallest_positive is None:\n             \
    \   smallest_positive = x\n            else:\n                smallest_positive\
    \ = min(smallest_positive, x)\n    return largest_negative, largest_positive,\
    \ smallest_negative, smallest_positive\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", '    lst = [-4, -6,
    -9, -12, -15, -16, -18, -21, -24, -26, -27, -29, -32, -35, -38, -39, -44, -47,
    -48, -49, -54, -58, -59, -62, -64, -66, -68, -71, -74, -76, -78, -79, -84, -87,
    -92, -94, -95, -97, -99, -100, -101, -102, -103, -104, -105, -106, -107, -108,
    -109, -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120, -121,
    -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134,
    -135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147,
    -148, -149, -150, -151, -152, -153, -154, -155, -156, -157, -158, -159, -160,
    -161, -162, -163, -164, -165, -166, -167, -168, -169, -170, -171, -172, -173,
    -174, -175, -176, -177, -178, -179, -180, -181, -182, -183, -184, -185, -186,
    -187, -188, -189, -190, -191, -192, -193, -194, -195, -196, -197, -198, -199,
    -200, -201, -202, -203, -204, -205, -206, -207, -208, -209, -210, -211, -212,
    -213, -214, -215, -216, -217, -218, -219, -220, -221, -222, -223, -224, -225,
    -226, -227, -228, -229, -232, -233, -234, -240, -241, -242, -243, -244, -245,
    -246, -247, -248, -249, -250, -251, -252, -253, -254, -255, -256, -257, -258,
    -259, -264, -265, -266, -267, -268, -269, -270, -271, -272, -273, -274, -275,
    -276, -277, -278, -279, -280, -281, -282, -283, -284, -285, -286, -287, -288,
    -289, -290, -291, -292, -293, -294, -295, -296, -297, -298, ', "    lst = [-4,\
    \ -6, -7, -8, -9, -10, -12, -14, -16, -18, -21, -24, -26, -28, -32, -36, -39,\
    \ -44, -47, -48, -49, -50, -51, -52, -53, -54, -55, -57, -58, -59, -60, -61, -62,\
    \ -63, -64, -66, -67, -68, -69, -70]\n    largest_smallest_integers(lst)\n   \
    \ >>> (-6, -7)\n\n    lst = [-4, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -28, -32, -36, -39, -44, -47, -48, -49, -50, -51, -52, -53, -54, -55,\
    \ -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -7)\n\n    lst = [-4, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -28, -32, -36, -39, -44, -47, -48, -49, -50, -51, -52, -53, -54, -55,\
    \ -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -7)\n\n    lst = [-4, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -28, -32, -36, -39, -44, -47, -48, -49, -50, -51, -52, -53, -54, -55,\
    \ -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -7)\n\n    lst = [-4, -6, -7, -8, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -26, -28, -32, -36, -39, -44, -47, -48, -49, -50, -51, -52, -53, -54, -55,\
    \ -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68, -69, -70]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -7)\n\n    lst", "    lst = [-4, -6, -10, -15, -20, -25, -27, -29,\
    \ -32, -35, -38, -42, -45]\n    largest_smallest_integers(lst)\n    \"\"\"\n \
    \   largest_negative = None\n    smallest_positive = None\n    for num in lst:\n\
    \        if num < 0:\n            if largest_negative is None:\n             \
    \   largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,\
    \ 5]\n    largest_smallest_integers(lst)\n    # returns (None, None)\n    lst\
    \ = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,\
    \ 5]\n    largest_smallest_integers(lst)\n    # returns (-5, -4)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-5, -4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (None, None)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -4]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,\
    \ 5]\n    largest_smallest_integers(lst)\n    # returns (-5, -4)\n    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -4, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-5, -4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    # returns (-5, -4)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -4, -3, -2, -1]\n    largest_smallest_integers(lst)\n\
    \    # returns (-5, -4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5,\
    \ -4, -3, -2, -1, 0]\n    largest_smallest_integers(lst)\n    # returns (-5, -4)\n\
    \    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -4, -3, -2, -1, 0, 1]\n\
    \    largest_smallest_integers(lst)\n    # returns (-5, -4)\n    lst = [-10, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (-5, -4)\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, -5,\
    \ -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-5, -4)\n    ", '    lst = [-4, -6, -10, -12, -14, -16, -18, -22, -24,
    -23, -25, -26, -27, -28, -29, -32, -34, -36, -38, -39, -44, -47, -48, -49, -50,
    -51, -52, -53, -54, -55, -57, -58, -59, -60, -61, -62, -63, -64, -66, -67, -68,
    -69, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -86,
    -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102,
    -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115,
    -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128,
    -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141,
    -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153, -154,
    -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166, -167,
    -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179, -180,
    -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192, -193,
    -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205, -206,
    -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218, -219,
    -220, -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231, -232,
    -233, -234, -235, -236, -237, -238, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -2', "    lst = [-4, -6,\
    \ -9, -12, -15, -16, -18, -21, -24, -30, -33]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n\
    \    # returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n\
    \    largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n    #\
    \ returns (-7, -8)\n    \"\"\"\n    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n  \
    \  largest_smallest_integers(lst)\n    # returns (-7, -8)\n    \"\"\"\n    lst\
    \ = [-1, -2, -3, 4, -", '    lst = [-4, -5, -6, -7, -8, -9, -10, -11, -12, -13,
    -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
    -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45,
    -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61,
    -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77,
    -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93,
    -94, -95, -96, -97, -98, -99, -100, -101, -102, -103, -104, -105, -106, -107,
    -108, -109, -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120,
    -121, -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133,
    -134, -135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146,
    -147, -148, -149, -150, -151, -152, -153, -154, -155, -156, -157, -158, -159,
    -160, -161, -162, -163, -164, -165, -166, -167, -168, -169, -170, -171, -172,
    -173, -174, -175, -176, -177, -178, -179, -180, -181, -182, -183, -184, -185,
    -186, -187, -188, -189, -190, -191, -192, -193, -194, -195, -196, -197, -198,
    -199, -200, -201, -202, -203, -204, -205, -206, -207, -208, -209, -210, -211,
    -212, -213, -214, -215, -216, -217, -218, -219, -220, -221, -222, -223, -224,
    -225, -226, -227, -228, -229, -230, -231, -232, -233, -234, -235, -236, -237,
    -238, -239, -240, -241, -242, -243, -244, -245, -246, -247, -248, -24', "    lst\
    \ = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24, -30, -33, -40, -44, -48, -49,\
    \ -54, -55, -58, -61, -64, -66, -68, -71, -74, -76, -78, -79, -84, -88, -92, -96]\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "  \
    \  lst = [-4, -2, -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n    >>>\
    \ (None, None)\n\n    lst = [-4, -2, -1, 0, 1, 2, 3, -5]\n    largest_smallest_integers(lst)\n\
    \    >>> (-5, -5)\n\n    lst = [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n\
    \    >>> (-5, -6)\n\n    lst = [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9]\n\
    \    largest_smallest_integers(lst)\n    >>> (-5, -7)\n\n    lst = [-4, -2, -1,\
    \ 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11]\n    largest_smallest_integers(lst)\n\
    \    >>> (-5, -8)\n\n    lst = [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9, -10,\
    \ -11, -12]\n    largest_smallest_integers(lst)\n    >>> (-5, -9)\n\n    lst =\
    \ [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11, -12, -13]\n    largest_smallest_integers(lst)\n\
    \    >>> (-5, -10)\n\n    lst = [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14]\n    largest_smallest_integers(lst)\n    >>> (-5, -11)\n\
    \n    lst = [-4, -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14,\
    \ -15]\n    largest_smallest_integers(lst)\n    >>> (-5, -12)\n\n    lst = [-4,\
    \ -2, -1, 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16]\n\
    \    largest_smallest_integers(lst)\n    >>> (-5, -13)\n\n    lst = [-4, -2, -1,\
    \ 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17]\n  \
    \  largest_smallest_integers(lst)\n    >>> (-5, -14)\n\n    lst = [-4, -2, -1,\
    \ 0, 1, 2, 3, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18]\n\
    \    largest_smallest_integers(lst)\n    >>> (-5, -15)\n\n", '    lst = [-4, -6,
    -9, -10, -15, -20, -25, -27, -29, -32, -36, -39, -44, -47, -49, -54, -59, -63,
    -66, -69, -72, -75, -78, -81, -84, -87, -90, -93, -96, -99, -102, -105, -108,
    -111, -114, -117, -120, -123, -126, -128, -131, -134, -137, -140, -143, -146,
    -149, -152, -155, -158, -161, -164, -167, -170, -173, -176, -179, -182, -185,
    -188, -191, -194, -197, -200, -203, -206, -209, -212, -215, -218, -220, -223,
    -226, -228, -232, -235, -238, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, -239,
    -239, -239, -239, -239, -239, -239, -239, -239, -239, -239, ', "    lst = [-4,\
    \ -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n    # returns (None, None)\n\
    \n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n    # returns\
    \ (-1, 0)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n\n    lst = [-4, -2, -1, 0, 2, 3]\n    largest_smallest_integer",
  "    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (-1, 5)\n\n    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (0,\
    \ 4)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (1, 3)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (2, 2)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (3, 2)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 2)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (5, 2)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (6, 2)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (7, 2)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (8, 2)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (9, 2)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (10, 2)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    >>> (11, 2)\n\n    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (12,\
    \ 2)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (13, 2)\n\n    ", "    lst = [-4, -6, -9, -15, -16, -20, -25, -26, -27,\
    \ -28, -29, -32, -33, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45]\n\
    \    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative = None\n\
    \    largest_positive = None\n    smallest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = min(largest_positive, num)\n\
    \    if largest_negative is None:\n        return None, None\n    if largest_positive\
    \ is None:\n        return largest_negative, None\n    if smallest_negative is\
    \ None:\n        return largest_positive, None\n    if smallest_positive is None:\n\
    \        return largest_negative, smallest_positive\n    return largest_negative,\
    \ smallest_positive\n", '    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14,
    -15, -16, -17, -23, -24, -25, -26, -27, -28, -29, -32, -33, -34, -35, -36, -37,
    -38, -39, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -57, -58,
    -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -72, -73, -74, -75, -76,
    -77, -78, -79, -84, -85, -86, -87, -88, -89, -94, -95, -96, -97, -98, -99, -100,
    -101, -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113,
    -114, -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126,
    -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139,
    -140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152,
    -153, -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165,
    -166, -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178,
    -179, -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191,
    -192, -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204,
    -205, -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217,
    -218, -219, -220, -221, -222, -223, -224, -225, -226, -227, -228, -229, -232,
    -233, -234, -240, -241, -242, -243, -244, -245, -246, -247, -248, -249, -250,
    -251, -252, -253, -254, -255, -256, -257, -258, -259, -264, -265, -266, -267,
    -268, -269, -270, -271, -272, -273, -274, -275, -', "    lst = [-4, -6, -5, -7,\
    \ -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 1)\n    \"\"\"\n    lst = [-4, -2, -1, 0, 1, ", "    lst =\
    \ [-1, -10, -20, -5, -100, -200, -300, -400, -500, -600, -700, -800, -900, -1000]\n\
    \    largest_smallest_integers(lst)\n    >>> (-1000, -100)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -6, -10, -12, -14, -16, -20, -24, -26, -28, -32, -36, -48, -64,\
    \ -128, -256, -512]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    largest_positive = None\n    smallest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = min(largest_positive, num)\n\
    \    if largest_negative is None:\n        return None, None\n    if largest_positive\
    \ is None:\n        return largest_negative, None\n    if smallest_negative is\
    \ None:\n        return largest_positive, smallest_positive\n    if smallest_positive\
    \ is None:\n        return largest_positive, smallest_negative\n    return largest_positive,\
    \ smallest_positive\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, 4)\n    \"\"\"\n    smallest_negative = None\n    largest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n        else:\n \
    \           if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = max(largest_positive, num)\n\
    \    return (largest_positive, smallest_negative)\n", "    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (None,\
    \ None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n\
    \    for num in lst:\n        if num < 0:\n            if largest_negative is\
    \ None:\n                largest_negative = num\n            else:\n         \
    \       largest_negative = max(largest_negative, num)\n        else:\n       \
    \     if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -2,\
    \ -1, 0, 2, 4]\n    largest_smallest_integers(lst)\n    >>> (4, 0)\n    \"\"\"\
    \n    largest_negative = None\n    smallest_positive = None\n    for x in lst:\n\
    \        if x < 0:\n            if largest_negative is None:\n               \
    \ largest_negative = x\n            else:\n                largest_negative =\
    \ max(largest_negative, x)\n        else:\n            if smallest_positive is\
    \ None:\n                smallest_positive = x\n            else:\n          \
    \      smallest_positive = min(smallest_positive, x)\n    return (largest_negative,\
    \ smallest_positive)\n", "    lst = [-1, -2, -3, 4, -5, -6, -7, -8]\n    largest_smallest_integers(lst)\n\
    \    >>> (-7, -8)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return largest_negative, smallest_positive\n", "    lst = [-4, -2,\
    \ -1, 0, 1, 2, 3]\n    largest_smallest_integers(lst)\n    >>> (2, 1)\n\n    \"\
    \"\"\n    largest_negative = None\n    smallest_positive = None\n    for num in\
    \ lst:\n        if num < 0:\n            if largest_negative is None:\n      \
    \          largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    smallest_negative = None\n    largest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if smallest_negative is None:\n\
    \                smallest_negative = num\n            else:\n                smallest_negative\
    \ = min(smallest_negative, num)\n        else:\n            if largest_positive\
    \ is None:\n                largest_positive = num\n            else:\n      \
    \          largest_positive = max(largest_positive, num)\n    return smallest_negative,\
    \ largest_positive\n", "    lst = [-4, -2, 1, 3, 5]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n    lst = [-4, -2, 1, 3, -5]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    lst = [-4, -2, 1, 3, -5, -6, 7]\n    largest_smallest_integers(lst)\n\
    \    # returns (-4, -5)\n    \"\"\"\n    smallest_negative = None\n    largest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n        else:\n \
    \           if largest_positive is None:\n                largest_positive = num\n\
    \            else:\n                largest_positive = max(largest_positive, num)\n\
    \    return smallest_negative, largest_positive\n\n", "    lst = [-4, -6, -10,\
    \ -15, -20, -25, -20, -15, -10, -6, -4, -3]\n    largest_smallest_integers(lst)\n\
    \    # returns (-20, -10)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for x in lst:\n        if x < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = x\n            else:\n        \
    \        largest_negative = max(largest_negative, x)\n        else:\n        \
    \    if smallest_positive is None:\n                smallest_positive = x\n  \
    \          else:\n                smallest_positive = min(smallest_positive, x)\n\
    \    return (largest_negative, smallest_positive)\n", "    lst = [-4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n   \
    \ >>> (-24, -26)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-4, -2,\
    \ 0, 2, 4]\n    largest_smallest_integers(lst)\n    # returns (2, 4)\n    \"\"\
    \"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n    # returns\
    \ (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n    \"\"\"\n    lst = [-4, -2, 0, 2, ", '    lst = [-4,
    -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,
    -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,
    -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53,
    -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69,
    -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85,
    -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101,
    -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114,
    -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
    -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
    -141, -142, -143, -144, -145, -146, -147, -148, -149, -150, -151, -152, -153,
    -154, -155, -156, -157, -158, -159, -160, -161, -162, -163, -164, -165, -166,
    -167, -168, -169, -170, -171, -172, -173, -174, -175, -176, -177, -178, -179,
    -180, -181, -182, -183, -184, -185, -186, -187, -188, -189, -190, -191, -192,
    -193, -194, -195, -196, -197, -198, -199, -200, -201, -202, -203, -204, -205,
    -206, -207, -208, -209, -210, -211, -212, -213, -214, -215, -216, -217, -218,
    -219, -220, -221, -222, -223, -224, -225, -226, -227, -228, -229, -230, -231,
    -232, -233, -234, -235, -236, -237, -238, -239, -240, -241, -242, -243, -244,
    -245, -246, -247, -248, -249, ', "    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 0)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (2, 4)\n\n    lst = [-4, -2, 0, 2, 4]\n    largest_smallest_integers(lst)\n\
    \    # returns (None, None)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", "    lst = [-10,\
    \ -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\
    \    largest_smallest_integers(lst)\n    >>> (-1, 5)\n\n    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (0,\
    \ 4)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (1, 5)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (2, 5)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (3, 5)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (4, 5)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (5, 5)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (6, 5)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (7, 5)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n   \
    \ largest_smallest_integers(lst)\n    >>> (8, 5)\n\n    lst = [-10, -5, -4, -3,\
    \ -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (9, 5)\n\
    \n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (10, 5)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n  \
    \  largest_smallest_integers(lst)\n    >>> (11, 5)\n\n    lst = [-10, -5, -4,\
    \ -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n    >>> (12,\
    \ 5)\n\n    lst = [-10, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n    largest_smallest_integers(lst)\n\
    \    >>> (13, 5)\n\n    ", "    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (None, None)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)\n\
    \    >>> (2, -1)\n\n    lst = [-4, -2, -1, 0, 1, 2]\n    largest_smallest_integers(lst)",
  "    lst = [-4, -6, -7, -8, -1, -2, -3]\n    largest_smallest_integers(lst)\n  \
    \  >>> (-4, -1)\n    \"\"\"\n    smallest_integer = None\n    largest_integer\
    \ = None\n    for num in lst:\n        if num < 0:\n            if smallest_integer\
    \ is None:\n                smallest_integer = num\n            else:\n      \
    \          largest_integer = num\n        else:\n            if largest_integer\
    \ is None:\n                largest_integer = num\n            else:\n       \
    \         smallest_integer = num\n    return smallest_integer, largest_integer\n",
  "    lst = [-1, -2, 3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,\
    \ -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,\
    \ -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_negative\
    \ = max(largest_negative, x)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = x\n            else:\n       \
    \         smallest_positive = min(smallest_positive, x)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21,\
    \ -24, -30, -33, -40, -44, -50, -55, -60, -64, -70, -75, -80, -85]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ num in lst:\n        if num < 0:\n            if largest_negative is None:\n\
    \                largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n\n", "    lst = [-4, -6, -9, -12, -15, -16, -18, -21, -24,\
    \ -25, -27, -29, -32, -34, -36, -39, -44, -47, -49, -54, -57, -59, -63, -66, -69,\
    \ -72, -75, -77, -79, -84, -87, -91, -94, -97, -99, -103, -105, -107, -110, -113,\
    \ -115, -117, -119, -122, -125, -127, -130, -132, -135, -137, -139, -142, -145,\
    \ -147, -149, -152, -155, -157, -159, -162, -165, -167, -169, -172, -175, -177,\
    \ -179, -182, -185, -187, -189, -192, -195, -197, -199, -202, -205, -207, -210,\
    \ -213, -214, -217, -219, -224, -227, -229, -232, -235, -240, -243, -246, -249,\
    \ -252, -255, -258, -261, -264, -267, -270, -273, -276, -279, -282, -284, -285,\
    \ -286, -290, -293, -296, -298, -300, -303, -305, -307, -309, -311, -313, -315,\
    \ -317, -319, -321, -323, -325, -327, -329, -331, -333, -335, -337, -339, -341,\
    \ -343, -345, -347, -349, -351, -353, -355, -357, -359, -361, -363, -365, -367,\
    \ -369, -371, -373, -375, -377, -379, -381, -383, -385, -387, -389, -391, -393,\
    \ -395, -397, -399, -401, -403, -405, -407, -409, -411, -413, -415, -417, -419,\
    \ -421, -423, -425, -427, -429, -432, -434, -436, -438, -439, -441, -443, -445,\
    \ -447, -449, -451, -453, -455, -457, -459, -461, -463, -465]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    smallest_positive = None\n    for\
    \ x in lst:\n        if x < 0:\n            if largest_negative is None:\n   \
    \             largest_negative = x\n            else:\n                largest_",
  '    lst = [-4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9,
    -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4,
    -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6,
    -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10,
    -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7,
    -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5, -9, -4, -6, -10, -7, -5,
    -9, -4, -6, -10, -7, -5, -9, -4, -6, -', "    lst = [-4, -5, -6, -7, -8, -9, -10,\
    \ -12, -13, -14, -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n    \"\
    \"\"\n    largest_negative = None\n    smallest_positive = None\n    for num in\
    \ lst:\n        if num < 0:\n            if largest_negative is None:\n      \
    \          largest_negative = num\n            else:\n                largest_negative\
    \ = max(largest_negative, num)\n        else:\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = min(smallest_positive, num)\n    return largest_negative,\
    \ smallest_positive\n", "    lst = [-4, -5, -6, -7, -8, -9, -10, -12, -13, -14,\
    \ -15, -16, -17, 18]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        else:\n            if smallest_positive is None:\n           \
    \     smallest_positive = num\n            else:\n                smallest_positive\
    \ = min(smallest_positive, num)\n    return largest_negative, smallest_positive\n",
  "    lst = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    \"\"\"\n    largest_negative = None\n    largest_positive = None\n    smallest_negative\
    \ = None\n    smallest_positive = None\n    for num in lst:\n        if num <\
    \ 0:\n            if largest_negative is None:\n                largest_negative\
    \ = num\n            else:\n                largest_negative = max(largest_negative,\
    \ num)\n        elif num > 0:\n            if largest_positive is None:\n    \
    \            largest_positive = num\n            else:\n                largest_positive\
    \ = min(largest_positive, num)\n        else:\n            if smallest_negative\
    \ is None:\n                smallest_negative = num\n            else:\n     \
    \           smallest_negative = min(smallest_negative, num)\n            if smallest_positive\
    \ is None:\n                smallest_positive = num\n            else:\n     \
    \           smallest_positive = max(smallest_positive, num)\n    return largest_negative,\
    \ largest_positive, smallest_negative, smallest_positive\n", "    lst = [-4, -6,\
    \ -10, -12, -14, -16, -18, -22, -24, -26, -28, -32, -34, -36, -38, -44, -48, -54,\
    \ -58, -62, -66, -72, -78, -84, -88, -94, -100, -104, -110, -116, -118, -124,\
    \ -128]\n    largest_smallest_integers(lst)\n    \"\"\"\n    largest_negative\
    \ = None\n    smallest_positive = None\n    for x in lst:\n        if x < 0 and\
    \ largest_negative is None:\n            largest_negative = x\n        elif x\
    \ > 0 and smallest_positive is None:\n            smallest_positive = x\n    return\
    \ largest_negative, smallest_positive\n", "    lst = [-4, -6, -10, -12, -14, -16,\
    \ -18, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46]\n    largest_smallest_integers(lst)\n\
    \    >>> (-6, -10)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", '    lst = [-4, -6,
    -10, -12, -14, -16, -18, -22, -24, -23, -25, -27, -29, -32, -34, -36, -38, -39,
    -44, -47, -49, -54, -58, -62, -64, -66, -68, -72, -74, -76, -78, -79, -84, -86,
    -88, -92, -94, -96, -98, -101, -103, -105, -107, -110, -113, -115, -117, -119,
    -122, -124, -126, -128, -131, -133, -135, -137, -139, -142, -144, -146, -148,
    -151, -153, -155, -157, -159, -162, -164, -166, -168, -171, -173, -175, -177,
    -179, -182, -184, -186, -188, -191, -193, -195, -197, -199, -202, -204, -206,
    -208, -210, -212, -214, -216, -218, -220, -222, -223, -225, -227, -228, -229,
    -232, -234, -235, -237, -238, -240, -242, -244, -246, -248, -250, -252, -254,
    -256, -258, -260, -262, -264, -266, -268, -270, -272, -274, -276, -278, -280,
    -282, -284, -285, -287, -289, -291, -293, -295, -297, -299, -301, -303, -305,
    -307, -309, -311, -313, -315, -317, -319, -321, -323, -325, -327, -329, -331,
    -333, -335, -337, -339, -341, -343, -345, -347, -349, -351, -353, -355, -357,
    -359, -361, -363, -365, -367, -369, -371, -373, -375, -377, -379, -381, -383,
    -385, -387, -389, -391, -393, -395, -397, -399, -401, -403, -405, -407, -409,
    -411, -413, -415, -417, -417, -419, -421, -423, -425, -427, -429, -432, -434,
    -436, -438, -439, -441, -443, -445, -447, -449, -451, -453, -455, -', "    lst\
    \ = [-4, -6, -9, -10, -12, -14, -16, -18, -21, -24]\n    largest_smallest_integers(lst)\n\
    \    (-18, -24)\n    \"\"\"\n    largest_negative = None\n    smallest_positive\
    \ = None\n    for num in lst:\n        if num < 0:\n            if largest_negative\
    \ is None:\n                largest_negative = num\n            else:\n      \
    \          largest_negative = max(largest_negative, num)\n        else:\n    \
    \        if smallest_positive is None:\n                smallest_positive = num\n\
    \            else:\n                smallest_positive = min(smallest_positive,\
    \ num)\n    return (largest_negative, smallest_positive)\n", '    lst = [-10,
    -5, -4, -7, -6, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -7, -9,
    -4, -5, -6, -7, -9, -4, -5, -6, -7, -9, -4, -5, -6, -']
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

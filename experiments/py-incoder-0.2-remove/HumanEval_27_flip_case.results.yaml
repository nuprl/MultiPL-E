name: HumanEval_27_flip_case
language: py
results:
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpef8dkbze.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpef8dkbze.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpef8dkbze.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.swapcase()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgbahh3e_.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgbahh3e_.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgbahh3e_.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gd8dtx2.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gd8dtx2.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gd8dtx2.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    \n    string = re.sub(r\"(?i)\\b[a-z]\"\
    , lambda m: m.group().upper(), string)\n    string = re.sub(r\"(?i)\\b[A-Z]\"\
    , lambda m: m.group().lower(), string)\n    \n    return string\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ehur20i.py\"\
    , line 11\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwxyrl5z.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8wi_2i1v.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = str(string)\n    string = re.sub('(.)([A-Z][a-z]+)', r'\\1\\2',\
    \ string)\n    string = re.sub('([a-z0-9])([A-Z])', r'\\1\\2', string)\n    return\
    \ string.lower()\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1hwam74.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1hwam74.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1hwam74.py\"\
    , line 11, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1hwam74.py\"\
    , line 5, in flip_case\n    string = re.sub('(.)([A-Z][a-z]+)', r'\\1\\2', string)\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoowldrdr.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoowldrdr.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoowldrdr.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.title()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpip_97hgr.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpip_97hgr.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpip_97hgr.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpynfknfec.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpynfknfec.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpynfknfec.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88ypr5b5.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88ypr5b5.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp88ypr5b5.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2wi3wguo.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn6d_u6qq.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn6d_u6qq.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn6d_u6qq.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpisgpsi25.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpisgpsi25.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpisgpsi25.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpisgpsi25.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"(?<!^)(?=[A-Z])\", lambda x: x.group(0).upper(), string)\n\
    \    string = re.sub(r\"(?<!^)(?=[a-z])\", lambda x: x.group(0).lower(), string)\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1vfq5lm.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1vfq5lm.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1vfq5lm.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1vfq5lm.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"(?<!^)(?=[A-Z])\", lambda x: x.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwjcv1lht.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwjcv1lht.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwjcv1lht.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyla4a_id.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyla4a_id.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyla4a_id.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukrz7rt8.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukrz7rt8.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukrz7rt8.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbwvbs99l.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbwvbs99l.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbwvbs99l.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp91tu54lx.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp91tu54lx.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp91tu54lx.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    return string.swapcase()\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm93ovghi.py\"\
    , line 8\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = str(string)\n    string = re.sub('[a-z]', '[A-Z]', string)\n  \
    \  string = re.sub('[A-Z]', '[a-z]', string)\n    return string\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj2nqbgwy.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj2nqbgwy.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj2nqbgwy.py\"\
    , line 11, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj2nqbgwy.py\"\
    , line 5, in flip_case\n    string = re.sub('[a-z]', '[A-Z]', string)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.title()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplprieoz2.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplprieoz2.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplprieoz2.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg1yahy9e.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    \n    string = re.sub('[^A-Z]', '', string)\n\
    \    \n    string = re.sub('[A-Z]', '',string)\n    \n    string = re.sub('[^a-z]',\
    \ '', string)\n    \n    string = re.sub('[a-z]', '', string)\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy3skt31a.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy3skt31a.py\"\
    , line 23, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy3skt31a.py\"\
    , line 18, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy3skt31a.py\"\
    , line 7, in flip_case\n    string = re.sub('[^A-Z]', '', string)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwo21768h.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwo21768h.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwo21768h.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgkusv4n.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgkusv4n.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjgkusv4n.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rd6hq1p.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rd6hq1p.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rd6hq1p.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rd6hq1p.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c4k6485.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c4k6485.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1c4k6485.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxd8mwg3e.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxd8mwg3e.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxd8mwg3e.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfafdtmf.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfafdtmf.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfafdtmf.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbdy5ka1.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbdy5ka1.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbdy5ka1.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4yu0oq8e.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponngeeyw.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponngeeyw.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponngeeyw.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphla058f.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphla058f.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphla058f.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9zfojep.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9zfojep.py\"\
    , line 14, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9zfojep.py\"\
    , line 9, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr9zfojep.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85113dep.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85113dep.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85113dep.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group().upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group().lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqw4tllu5.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqw4tllu5.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqw4tllu5.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqw4tllu5.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group().upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    \n    return string\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzjoweih.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzjoweih.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzjoweih.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfepudk_s.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = re.sub('[a-z]', '[A-Z]', string)\n    string = re.sub('[A-Z]',\
    \ '[a-z]', string)\n    \n    return string\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert\
    \ candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzajx6h_.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzajx6h_.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzajx6h_.py\"\
    , line 11, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzajx6h_.py\"\
    , line 5, in flip_case\n    string = re.sub('[a-z]', '[A-Z]', string)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    \n    string = re.sub(r\"(?<!^)(?=[A-Z])\"\
    , lambda m: m.group(0).upper(), string)\n    string = re.sub(r\"(?<!^)(?=[^A-Z])\"\
    , lambda m: m.group(0).lower(), string)\n    \n    return string\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpft9dy_u5.py\"\
    , line 11\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9krjvk90.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9krjvk90.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9krjvk90.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk99snk0.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk99snk0.py\"\
    , line 19, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk99snk0.py\"\
    , line 15, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2clum1pw.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2clum1pw.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2clum1pw.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5jhubt3g.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"([a-z])([A-Z])\", r\"\\1\\2\", string)\n    string =\
    \ re.sub(r\"([A-Z])([A-Z][a-z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"\
    ([A-Z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z])\"\
    , r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z])([A-Z]+)\", r\"\\1\\2\"\
    , string)\n    string = re.sub(r\"([A-Z])([a-z]+)\", r\"\\1\\2\", string)\n  \
    \  string = re.sub(r\"([A-Z]+)([a-z]+)\", r\"\\1\\2\", string)\n    string = re.sub(r\"\
    ([a-z]+)([A-Z]+)\", r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z][a-z]+)\"\
    , r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z][a-z])\", r\"\\1\\\
    2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z])\", r\"\\1\\2\", string)\n\
    \    string = re.sub(r\"([a-z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string\
    \ = re.sub(r\"([A-Z]+)([A-Z][a-z]+)\", r\"\\1\\2\", string)\n    string = re.sub(r\"\
    ([A-Z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"([A-Z]+)([A-Z]+)\"\
    , r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z]+)\", r\"\\1\\2\"\
    , string)\n    string = re.sub(r\"([a-z]+)([A-Z][a-z]+)\", r\"\\1\\2\", string)\n\
    \    string = re.sub(r\"([a-z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string\
    \ = re.sub(r\"([a-z]+)([A-Z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"\
    ([a-z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"([A-Z]+)([A-Z][a-z]+)\"\
    , r\"\\1\\2\", string)\n    string = re.sub(r\"([A-Z]+)([A-Z][a-z])\", r\"\\1\\\
    2\", string)\n    string = re.sub(r\"([A-Z]+)([A-Z]+)\", r\"\\1\\2\", string)\n\
    \    string = re.sub(r\"([a-z]+)([A-Z]+)\", r\"\\1\\2\", string)\n    string =\
    \ re.sub(r\"([a-z]+)([A-Z][a-z]+)\", r\"\\1\\2\", string)\n    string = re.sub(r\"\
    ([a-z]+)([A-Z][a-z])\", r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z]+)([A-Z])\"\
    , r\"\\1\\2\", \ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp50nml803.py\"\
    , line 30\n    string = re.sub(r\"([a-z]+)([A-Z])\", r\"\\1\\2\", \n         \
    \          ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = re.sub('[a-z]', '[A-Z]', string)\n    string = re.sub('[A-Z]',\
    \ '[a-z]', string)\n    \n    return string\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert\
    \ candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6x_uwqa.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6x_uwqa.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6x_uwqa.py\"\
    , line 11, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6x_uwqa.py\"\
    , line 5, in flip_case\n    string = re.sub('[a-z]', '[A-Z]', string)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4j0_4jjk.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4j0_4jjk.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4j0_4jjk.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4j0_4jjk.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu2s2olqh.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    \n    string = re.sub(r\"(.)([A-Z][a-z]+)\"\
    , r\"\\1\\2\", string)\n    string = re.sub(r\"([a-z0-9])([A-Z])\", r\"\\1\\2\"\
    , string)\n    \n    return string\n</cell>\n<cell>\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n \
    \   assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiq5nd7b7.py\"\
    , line 11\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7qguszvt.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7qguszvt.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7qguszvt.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.swapcase()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fcr27v1.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fcr27v1.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5fcr27v1.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5v5vyr2.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5v5vyr2.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa5v5vyr2.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08fc3bi4.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08fc3bi4.py\"\
    , line 20, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08fc3bi4.py\"\
    , line 16, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfoevlw7c.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfoevlw7c.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfoevlw7c.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.title()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61mrckhn.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61mrckhn.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61mrckhn.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu9so5omu.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu9so5omu.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu9so5omu.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv9o8kwp.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv9o8kwp.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptv9o8kwp.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwg30qkbw.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwg30qkbw.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwg30qkbw.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfsh3n_l.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfsh3n_l.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfsh3n_l.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfsh3n_l.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub('(.)([A-Z][a-z]+)', r'\\1\\2', string)\n    string = re.sub('([a-z0-9])([A-Z])',\
    \ r'\\1\\2', string)\n    return string.lower()\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n   \
    \ assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9m7ckuve.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9m7ckuve.py\"\
    , line 14, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9m7ckuve.py\"\
    , line 9, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9m7ckuve.py\"\
    , line 4, in flip_case\n    string = re.sub('(.)([A-Z][a-z]+)', r'\\1\\2', string)\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprhfpsr7p.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprhfpsr7p.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprhfpsr7p.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputxl2xr7.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputxl2xr7.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputxl2xr7.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmputxl2xr7.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2b7ab0y6.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi5vjmsb.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi5vjmsb.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi5vjmsb.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi5vjmsb.py\"\
    , line 4, in flip_case\n    string = re.sub(\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_o_vi1tq.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_o_vi1tq.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_o_vi1tq.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuho9qtup.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuho9qtup.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuho9qtup.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.swapcase()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4g9ax7d4.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4g9ax7d4.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4g9ax7d4.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group().upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group().lower(), string)\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnx4hfs6l.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnx4hfs6l.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnx4hfs6l.py\"\
    , line 10, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnx4hfs6l.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group().upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    return string\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('Hello!') == 'hELLO!'\n\
    \    assert candidate('These violent delights have violent ends') == 'tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfsoz0m7s.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    string = string.swapcase()\n\
    \    return string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent\
    \ delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\
    \ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwgebbfld.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwgebbfld.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwgebbfld.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoaqpgtyo.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl16nlq4x.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl16nlq4x.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl16nlq4x.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = str(string)\n    \n    string = string.lower()\n    \n  \
    \  string = string.upper()\n    \n    string = string.lower()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hxxktz7.py\"\
    , line 14\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr7cbmdt.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr7cbmdt.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr7cbmdt.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw592wjyu.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw592wjyu.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw592wjyu.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(), string)\n    string\
    \ = re.sub(r\"[A-Z]\", lambda m: m.group(0).lower(), string)\n    return string\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8hq9x0aw.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8hq9x0aw.py\"\
    , line 14, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8hq9x0aw.py\"\
    , line 9, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8hq9x0aw.py\"\
    , line 4, in flip_case\n    string = re.sub(r\"[a-z]\", lambda m: m.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1sq6p60y.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1sq6p60y.py\"\
    , line 17, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1sq6p60y.py\"\
    , line 13, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6leupexo.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6leupexo.py\"\
    , line 17, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6leupexo.py\"\
    , line 13, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = re.sub(r\"[A-Z]\", lambda match: match.group(0).upper(),\
    \ string)\n    string = re.sub(r\"[a-z]\", lambda match: match.group(0).lower(),\
    \ string)\n    \n    return string\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6l8yrh6.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6l8yrh6.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6l8yrh6.py\"\
    , line 11, in check\n    assert candidate('') == ''\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6l8yrh6.py\"\
    , line 5, in flip_case\n    string = re.sub(r\"[A-Z]\", lambda match: match.group(0).upper(),\
    \ string)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxigi82hx.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxigi82hx.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxigi82hx.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('Hello!') == 'hELLO!'\n    assert candidate('These violent delights\
    \ have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n\
    \    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkrl6ghsx.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkrl6ghsx.py\"\
    , line 16, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkrl6ghsx.py\"\
    , line 12, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    string = string.lower()\n    string = string.upper()\n    return string\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
    \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
    \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3v70vrx.py\"\
    , line 17, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3v70vrx.py\"\
    , line 15, in test_check\n    check(flip_case)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj3v70vrx.py\"\
    , line 11, in check\n    assert candidate('Hello!') == 'hELLO!'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    \n    string = string.lower()\n    string = string.upper()\n    \n    return\
    \ string\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq105s560.py\"\
    , line 9\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n        \"\"\"\
    \n    return string.swapcase()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('Hello!') == 'hELLO!'\n    assert candidate('These\
    \ violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS'\n\ndef test_check():\n    check(flip_case)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

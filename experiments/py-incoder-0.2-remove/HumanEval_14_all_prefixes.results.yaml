name: HumanEval_14_all_prefixes
language: py
results:
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(s.upper())\n    \
    \    prefixes.extend(s.capitalize())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahylzdij.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahylzdij.py\"\
    , line 19, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahylzdij.py\"\
    , line 14, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfqb243wi.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsk7ohm6j.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsk7ohm6j.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsk7ohm6j.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzj7_uat6.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzj7_uat6.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzj7_uat6.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5zvvafgz.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5zvvafgz.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5zvvafgz.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2qoekb1q.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        for p in prefixes:\n            if s.startswith(p):\n               \
    \ break\n        else:\n            prefixes.append(s)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56hzlfhi.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56hzlfhi.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56hzlfhi.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1f02gad_.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1f02gad_.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1f02gad_.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1f02gad_.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgzqxvrll.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuaejs9zf.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuaejs9zf.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuaejs9zf.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85gzw1ny.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c[:1])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnf3eisr6.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnf3eisr6.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnf3eisr6.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4k_sdql.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp183buizl.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl2e1kaza.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_doysr33.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpebyba_w3.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpebyba_w3.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpebyba_w3.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpebyba_w3.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp88gamxk.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp88gamxk.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp88gamxk.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1wko2jbv.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1wko2jbv.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1wko2jbv.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        prefix_length = prefix_length * 2\n        prefixes.append(string[:prefix_length])\n\
    \    \n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmawm6b9y.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmawm6b9y.py\"\
    , line 21, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmawm6b9y.py\"\
    , line 17, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjfwebbj6.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjfwebbj6.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjfwebbj6.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjwlhda2.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.append(c.upper())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplm529l5d.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplm529l5d.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplm529l5d.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0so_8qg.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0so_8qg.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo0so_8qg.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for char in string:\n        if char == \" \":\n            prefix_length +=\
    \ 1\n        else:\n            prefix_length = 1\n            prefixes.append(char\
    \ * prefix_length)\n    \n    return prefixes\n\ndef check(candidate):\n    assert\
    \ candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef\
    \ test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnh7e6_rw.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnh7e6_rw.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnh7e6_rw.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6gr7tuj.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6gr7tuj.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe6gr7tuj.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for char\
    \ in string:\n        if char.isalpha():\n            prefix_length += 1\n   \
    \     else:\n            prefix_length = 0\n        prefixes.append(char + str(prefix_length))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5osc3qda.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5osc3qda.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5osc3qda.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbbu47m17.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnw556phx.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj55wx9w0.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            prefixes.remove(c)\n        else:\n            prefixes.append(c)\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpemvdtviu.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpemvdtviu.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpemvdtviu.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rj8btzu.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '-':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphvozxip4.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphvozxip4.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphvozxip4.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyd57ut7h.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyd57ut7h.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyd57ut7h.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfu_7isu1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfu_7isu1.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfu_7isu1.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfu_7isu1.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpblvugh0u.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpblvugh0u.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpblvugh0u.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            prefixes.remove(c)\n        else:\n            prefixes.append(c)\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpca4rm1hw.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpca4rm1hw.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpca4rm1hw.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ac6a81a.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp04qlf0kn.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl053cdrg.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpocyebqe4.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5b1svdju.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkno8_g4e.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkno8_g4e.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkno8_g4e.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pctbbbk.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pctbbbk.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pctbbbk.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pctbbbk.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupme8b01.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupme8b01.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpupme8b01.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_pdirdp.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    for char\
    \ in string:\n        if char != prefix_length:\n            prefixes.append(char)\n\
    \        else:\n            prefix_length += 1\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwxkd4ye.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwxkd4ye.py\"\
    , line 21, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwxkd4ye.py\"\
    , line 17, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.rsplit('-', 1)[0])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphu5wnv3b.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphu5wnv3b.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphu5wnv3b.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxr7bv5z.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4kahnpgq.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofx3n6lq.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefixes.append(c)\n      \
    \      prefix_length += 1\n        else:\n            prefix_length -= 1\n   \
    \         if prefix_length == 0:\n                break\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk55b4ht.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk55b4ht.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqk55b4ht.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx62js_3b.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptug5hnb2.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7pmwea.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8geyfg5_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8geyfg5_.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8geyfg5_.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3v4qbi1u.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6sn740oi.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        if c == '.':\n            prefix_length += 1\n   \
    \     else:\n            prefix_length = 1\n            prefixes.append(c)\n \
    \           \n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv_c8h8yt.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv_c8h8yt.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv_c8h8yt.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjwywbrzv.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s[: len(s)])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vvpuwd3.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vvpuwd3.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vvpuwd3.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.append(string.lower())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31andr52.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31andr52.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp31andr52.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplinbhsgw.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplinbhsgw.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplinbhsgw.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:len(string)\
    \ - len(c) + 1])\n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8epv3acg.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8epv3acg.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8epv3acg.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvtpxr6s.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvtpxr6s.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvtpxr6s.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpobikaev6.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpspaphfn7.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph18p3wlm.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph18p3wlm.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph18p3wlm.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn4yh9gjx.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpllk0wwhi.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpllk0wwhi.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpllk0wwhi.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny97rc7c.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny97rc7c.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny97rc7c.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c.isalpha():\n            prefixes.append(c)\n        else:\n            prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4nmt7eu.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4nmt7eu.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4nmt7eu.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        \n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwrl_qiq.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwrl_qiq.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwrl_qiq.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp732fp9ey.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      break\n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz9hw71m.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz9hw71m.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz9hw71m.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        prefix_length = prefix_length * 2\n        prefixes.append(string[:prefix_length])\n\
    \        \n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj8rukxf.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj8rukxf.py\"\
    , line 21, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmj8rukxf.py\"\
    , line 17, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpasfgw64c.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl5ahra.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl5ahra.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl5ahra.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7378z02j.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbx8v69k.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbx8v69k.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbx8v69k.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfzq3lj2a.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8if233s.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8if233s.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8if233s.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbz2yh6m_.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpme5069km.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmmlo3lm3.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmmlo3lm3.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmmlo3lm3.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c not in prefixes:\n            prefixes.append(c)\n\
    \            prefix_length += 1\n        else:\n            prefix_length -= 1\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fkf2axl.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fkf2axl.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6fkf2axl.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      break\n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wfo4uy4.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wfo4uy4.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4wfo4uy4.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaglxmz9.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaglxmz9.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaglxmz9.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp33lk8t7r.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp33lk8t7r.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp33lk8t7r.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c[:len(c)-1])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3fsletxj.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3fsletxj.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3fsletxj.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmbqrpau2.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpelna43pv.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpelna43pv.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpelna43pv.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz9mnwsh6.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz9mnwsh6.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz9mnwsh6.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqi4sll_.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for char in string:\n        if char == \" \":\n            prefix_length +=\
    \ 1\n        else:\n            prefix_length = 1\n            prefixes.append(char\
    \ * prefix_length)\n    \n    return prefixes\n\ndef check(candidate):\n    assert\
    \ candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef\
    \ test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxpvgj41t.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxpvgj41t.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxpvgj41t.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vj3wn7i.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vj3wn7i.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vj3wn7i.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph_zr2x1k.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c[:1])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pvb9hym.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pvb9hym.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8pvb9hym.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1cxzmkva.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8ify6j5.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8ify6j5.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8ify6j5.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5be05377.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5be05377.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5be05377.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp63_x5cux.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2xsr5_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2xsr5_.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2xsr5_.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for char\
    \ in string:\n        if char != ' ':\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n            prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8u096u1p.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8u096u1p.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8u096u1p.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc31n60ev.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc31n60ev.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc31n60ev.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfy0_f33r.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfy0_f33r.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfy0_f33r.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            prefixes.remove(c)\n        else:\n            prefixes.append(c)\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyjft604d.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyjft604d.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyjft604d.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(c * prefix_length)\n \
    \   return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_chmq9i.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_chmq9i.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_chmq9i.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        if c == '_':\n            prefix_length += 1\n   \
    \     else:\n            prefix_length = 1\n            prefixes.append(c)\n \
    \   \n    return prefixes\n\ndef check(candidate):\n    assert candidate('') ==\
    \ []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphj00qy6n.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphj00qy6n.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphj00qy6n.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_s51sw_l.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_s51sw_l.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_s51sw_l.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq5n9gdcv.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq5n9gdcv.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq5n9gdcv.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7skgzmj.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz3r1dpjb.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1fdcezjz.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1fdcezjz.py\"\
    , line 19, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1fdcezjz.py\"\
    , line 15, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdazx8c3.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdazx8c3.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptdazx8c3.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9prsf5n.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9prsf5n.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx9prsf5n.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcue8z40l.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.rsplit('-', 1)[0])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hfinivc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hfinivc.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hfinivc.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61ri5s_7.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp24v7t5_7.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c.isalpha():\n            prefixes.append(c)\n        else:\n            prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomwnqgon.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomwnqgon.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomwnqgon.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptkvhwmct.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s[:\
    \ len(s)])\n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp453s2b_q.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp453s2b_q.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp453s2b_q.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbkj_w7ar.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbkj_w7ar.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbkj_w7ar.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbkj_w7ar.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwfkemw6m.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppibr9xu9.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpghh73bmp.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.append(c.upper())\n            prefixes.append(c.lower())\n  \
    \  return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjyxyrs7.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjyxyrs7.py\"\
    , line 21, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjyxyrs7.py\"\
    , line 17, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4prps8mh.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '.':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyii61gyk.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyii61gyk.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyii61gyk.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp34d3t2fo.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptp7715c9.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqtwuhng.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_t_ra20n.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_t_ra20n.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_t_ra20n.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx66c79lr.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9s90xs35.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8jmbz481.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8jmbz481.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8jmbz481.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6euxloh.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ly439gq.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(string[:c])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7h3a23su.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7h3a23su.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7h3a23su.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7h3a23su.py\"\
    , line 8, in all_prefixes\n    prefixes.append(string[:c])\nTypeError: slice indices\
    \ must be integers or None or have an __index__ method\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr40ills.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr40ills.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr40ills.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptoifx5t0.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptoifx5t0.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptoifx5t0.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpozkd0h5w.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpozkd0h5w.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpozkd0h5w.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93sk_8uq.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for char\
    \ in string:\n        prefix_length = prefix_length + 1\n        if prefix_length\
    \ >= len(string):\n            prefixes.append(char)\n        else:\n        \
    \    prefixes.append(string[:prefix_length])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgv63w7s.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgv63w7s.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgv63w7s.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mk40_j.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4m5cb6yi.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c[:1])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt449gdgo.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt449gdgo.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt449gdgo.py\"\
    , line 13, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c.isalpha():\n            prefixes.append(c)\n        else:\n            prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwj_9dz02.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwj_9dz02.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwj_9dz02.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv5_3e6h.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ayif064.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxbnh7re.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c == '.':\n            prefixes.append('')\n        else:\n            prefixes.append(c)\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvqnw93d.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvqnw93d.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdvqnw93d.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxiq0exos.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp15iodi20.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        if c == '.':\n            prefix_length += 1\n   \
    \     else:\n            prefix_length = 1\n            prefixes.append(c * prefix_length)\n\
    \            \n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpltvinek8.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpltvinek8.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpltvinek8.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_k1v2tsc.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c == '_':\n            prefix_length += 1\n        else:\n\
    \            prefix_length = 0\n            prefixes.append(c)\n    return prefixes\n\
    \ndef check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86z7vw0n.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86z7vw0n.py\"\
    , line 22, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp86z7vw0n.py\"\
    , line 18, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsu464_yb.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsu464_yb.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsu464_yb.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm361ln3q.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.rsplit('-', 1)[0])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpea8myome.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpea8myome.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpea8myome.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgsnzvin4.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgsnzvin4.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgsnzvin4.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        prefixes.extend(all_prefixes(c))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 11, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcfg512jh.py\"\
    , line 10, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmupuoeq1.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 1\n    \n   \
    \ for c in string:\n        if c == '.':\n            prefix_length += 1\n   \
    \     else:\n            prefix_length = 1\n            prefixes.append(c)\n \
    \   \n    return prefixes\n\ndef check(candidate):\n    assert candidate('') ==\
    \ []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmeg6whra.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmeg6whra.py\"\
    , line 24, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmeg6whra.py\"\
    , line 20, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwpiaaef.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwpiaaef.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwpiaaef.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpan01qcca.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmvbg8_4.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmvbg8_4.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmvbg8_4.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.append(c.upper())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguou8js4.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguou8js4.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpguou8js4.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4n7_uc6n.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    prefix_length = 0\n    for c\
    \ in string:\n        if c.isalpha():\n            prefix_length += 1\n      \
    \  else:\n            prefix_length = 0\n        prefixes.append(string[:prefix_length])\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw86nbc0_.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw86nbc0_.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw86nbc0_.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgtlno19x.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgtlno19x.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgtlno19x.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in prefixes:\n            continue\n        prefixes.append(c)\n        \n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjsiveuub.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjsiveuub.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjsiveuub.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(all_prefixes(s))\n\
    \    return prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n\
    \    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n\
    \    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp861nvhm9.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s.lower())\n        prefixes.extend(s.upper())\n    \
    \    prefixes.extend(s.title())\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpq8dqsd.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpq8dqsd.py\"\
    , line 19, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpq8dqsd.py\"\
    , line 14, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfwcz7dff.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwxn38c8a.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqr2lb901.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcffv_013.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s[: len(s)])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyho94jq_.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyho94jq_.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyho94jq_.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_x6ztv31.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprku8au5k.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string:\n        prefixes.append(s)\n\
    \        prefixes.extend(all_prefixes(s))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo96i3r2v.py\"\
    , line 8, in all_prefixes\n    prefixes.append(s)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rdw47lz.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n        else:\n      \
    \      break\n    return prefixes\n\ndef check(candidate):\n    assert candidate('')\
    \ == []\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n\
    \    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5f5huki2.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5f5huki2.py\"\
    , line 20, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5f5huki2.py\"\
    , line 16, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcw2n1nea.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng5pqozk.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng5pqozk.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng5pqozk.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        prefixes.append(c)\n\
    \        prefixes.extend(all_prefixes(c))\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(c))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8g32p809.py\"\
    , line 8, in all_prefixes\n    prefixes.append(c)\nRecursionError: maximum recursion\
    \ depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for c in string:\n        if\
    \ c in string.lower():\n            prefixes.append(c)\n    return prefixes\n\n\
    def check(candidate):\n    assert candidate('') == []\n    assert candidate('asdfgh')\
    \ == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW')\
    \ == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3cwjsn.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3cwjsn.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3cwjsn.py\"\
    , line 14, in check\n    assert candidate('asdfgh') == ['a', 'as', 'asd', 'asdf',\
    \ 'asdfg', 'asdfgh']\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4l4uopjs.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_w9mafhj.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s[: len(s)])\n    return prefixes\n\ndef check(candidate):\n\
    \    assert candidate('') == []\n    assert candidate('asdfgh') == ['a', 'as',\
    \ 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert candidate('WWW') == ['W', 'WW',\
    \ 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoob5sdrh.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoob5sdrh.py\"\
    , line 17, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoob5sdrh.py\"\
    , line 12, in check\n    assert candidate('') == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef all_prefixes(string: str) -> List[str]:\n\
    \    \"\"\" Return list of all prefixes from shortest to longest of the input\
    \ string\n        \"\"\"\n    prefixes = []\n    for s in string.split(' '):\n\
    \        prefixes.append(s)\n        prefixes.extend(all_prefixes(s))\n    return\
    \ prefixes\n\ndef check(candidate):\n    assert candidate('') == []\n    assert\
    \ candidate('asdfgh') == ['a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh']\n    assert\
    \ candidate('WWW') == ['W', 'WW', 'WWW']\n\ndef test_check():\n    check(all_prefixes)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 18, in test_check\n    check(all_prefixes)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 13, in check\n    assert candidate('') == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 9, in all_prefixes\n    prefixes.extend(all_prefixes(s))\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjv7z20gu.py\"\
    , line 7, in all_prefixes\n    for s in string.split(' '):\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception

name: HumanEval_9_rolling_max
language: py
prompt: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
  \    \"\"\" From a given list of integers, generate a list of rolling maximum element\
  \ found until given moment\n    in the sequence.\n        \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
  \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
  \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
  \    check(rolling_max)\n\ntest_check()\n"
completions: ["    rolling_max = []\n    rolling_max.append(max(numbers))\n    \n\
    \    for i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1],\
    \ numbers[i]))\n    \n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers) - 1):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    \n    rolling_max_list = []\n    \n    for number\
    \ in numbers:\n        rolling_max_list.append(number)\n        \n        if len(rolling_max_list)\
    \ > len(numbers):\n            rolling_max_list.pop()\n            \n    return\
    \ rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    \n    for number in numbers:\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], number))\n        \n\
    \    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers) - 1):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    \n    for n in numbers:\n        rolling_max.append(rolling_max[-1] if rolling_max[-1]\
    \ > n else n)\n    \n    return rolling_max\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    \n    rolling_max = []\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(numbers[i:]))\n        \n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    \n    rolling_max = []\n    \n    for number in numbers:\n        rolling_max.append(number)\n\
    \        \n        for index in range(1, len(rolling_max)):\n            if rolling_max[index]\
    \ > rolling_max[index - 1]:\n                rolling_max[index] = rolling_max[index\
    \ - 1]\n    \n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for n in numbers:\n        rolling_max.append(max(rolling_max[-1], n))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for n in numbers:\n        rolling_max.append(max(rolling_max[-1],n))\n \
    \   return rolling_max\n", "    \n    rolling_max = []\n    \n    for number in\
    \ numbers:\n        rolling_max.append(number)\n        \n        rolling_max.append(max(rolling_max[-2:]))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],numbers[i]))\n\
    \    return rolling_max_list\n", "    \n    rolling_max_list = []\n    \n    for\
    \ number in numbers:\n        rolling_max_list.append(number)\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-2]))\n        \n    return\
    \ rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    \n    rolling_max = []\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max.append(max(numbers[i:]))\n\
    \        \n    return rolling_max\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9], 3)\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9],\
    \ 5)\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9], 10)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and a number as arguments\
    \ and returns a list of all the numbers in the list that are divisible by the\
    \ given number.\n\n\n</text>\n<cell>", "    \n    rolling_max_list = []\n    \n\
    \    for number in numbers:\n        rolling_max_list.append(number)\n       \
    \ \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n  \
    \      rolling_max_list.append(max(rolling_max_list[-6:]))\n        \n       \
    \ rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-12:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-15:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-21:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-27:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-30:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-36:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-42:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-45:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-51:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-57:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-60:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-66:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-72:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-75:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-81:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-87:]))\n\
    \        \n        roll", "    \n    rolling_max = []\n    \n    for number in\
    \ numbers:\n        rolling_max.append(number)\n        \n        rolling_max.append(max(rolling_max[-2:]))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],numbers[i]))\n\
    \    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    \n    return rolling_max_list\n", "    rolling_max = []\n\
    \    rolling_max.append(max(numbers))\n    for n in numbers:\n        rolling_max.append(rolling_max[-1]\
    \ if rolling_max[-1] > n else n)\n    return rolling_max\n", "    rolling_max_list\
    \ = []\n    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    \n    return rolling_max_list\n", "    rolling_max = []\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n    \n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    \n    rolling_max_list\
    \ = []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for index in range(1, len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[index]))\n        \n    return rolling_max_list\n", "    rolling_max\
    \ = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    for i\
    \ in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    \n    rolling_max_list =\
    \ []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        while len(rolling_max_list) > len(numbers):\n            rolling_max_list.pop()\n\
    \            \n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n        \n    return rolling_max_list\n", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for number in numbers:\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], number))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    \n    rolling_max_list = []\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(number)\n \
    \       \n        rolling_max_list.append(max(rolling_max_list[-2]))\n       \
    \ \n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    for number in numbers:\n      \
    \  rolling_max_list.append(max(rolling_max_list[-1], number))\n    return rolling_max_list\n",
  "    \n    rolling_max = []\n    \n    rolling_max.append(max(numbers))\n    \n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    \n    return rolling_max_list\n", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for num in numbers:\n   \
    \     rolling_max_list.append(max(rolling_max_list[-1], num))\n    return rolling_max_list\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    \n  \
    \  for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1],numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max = []\n\
    \    rolling_max.append(max(numbers))\n    \n    for number in numbers:\n    \
    \    rolling_max.append(max(rolling_max[-1], number))\n    \n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    \n  \
    \  for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    \n    for num in numbers:\n  \
    \      rolling_max_list.append(max(rolling_max_list[-1], num))\n    \n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for number in numbers:\n     \
    \   rolling_max_list.append(max(rolling_max_list[-1], number))\n    return rolling_max_list\n",
  "    \n    rolling_max_list = []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n    return rolling_max_list\n", "    \n    rolling_max_list = []\n    \n\
    \    for number in numbers:\n        rolling_max_list.append(number)\n       \
    \ \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n  \
    \      rolling_max_list.append(max(rolling_max_list[-6:]))\n        \n       \
    \ rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-12:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-15:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-21:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-27:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-30:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-36:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-42:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-45:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-51:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-57:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-60:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-66:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-72:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-75:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-81:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-87:]))\n\
    \        \n        roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1],numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    for number in numbers:\n      \
    \  rolling_max_list.append(max(rolling_max_list[-1], number))\n    return rolling_max_list\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    \n    for i in\
    \ range(len(numbers)):\n        rolling_max.append(max(rolling_max[i - 1] + 1,\
    \ numbers[i]))\n    \n    return rolling_max\n", "    \n    rolling_max_list =\
    \ []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-6:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-12:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-15:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-21:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-27:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-30:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-36:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-42:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-45:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-51:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-57:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-60:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-66:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-72:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-75:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-81:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-87:]))\n        \n        roll",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for\
    \ i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1], numbers[i]))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1],\
    \ numbers[i]))\n    return rolling_max\n", "    \n    rolling_max_list = []\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(number)\n \
    \       \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n      \
    \  \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n \
    \       rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n      \
    \  rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-3:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(roll", "    \n    rolling_max =\
    \ []\n    \n    for number in numbers:\n        rolling_max.append(number)\n \
    \       \n        rolling_max.append(max(rolling_max[-2:]))\n        \n    return\
    \ rolling_max\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n</cell>\n\
    <text>\nThe above function can be easily modified to accept a window size as parameter\
    \ and generate the rolling maximum.\n\n\n</text>\n<cell>", "    rolling_max_list\
    \ = []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n        \n    return rolling_max_list\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<text>\nProblem 7\nWrite a function that takes a list and a number as\
    \ input, and returns a list with the number repeated n times in the list.\n\n\n\
    </text>\n<cell>", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    \n    rolling_max_list = []\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(numbers[i:]))\n        \n    return rolling_max_list\n",
  "    \n    rolling_max_list = []\n    \n    for i in range(len(numbers)):\n    \
    \    rolling_max_list.append(max(numbers[i:]))\n        \n    return rolling_max_list\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66",
  "    \n    rolling_max = []\n    \n    for number in numbers:\n        rolling_max.append(number)\n\
    \        \n        rolling_max.append(max(rolling_max[-2:]))\n        \n    return\
    \ rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers) - 1):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    \n    for index in range(1, len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[index]))\n\
    \    \n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    \n    rolling_max_list\
    \ = []\n    \n    rolling_max_list.append(max(numbers))\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(numbers[i:i+2]))\n        \n    return rolling_max_list\n",
  "    \n    rolling_max = []\n    \n    for number in numbers:\n        rolling_max.append(number)\n\
    \        \n        rolling_max.append(max(rolling_max[-2:]))\n        \n    return\
    \ rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    \n    rolling_max = []\n    \n    for number\
    \ in numbers:\n        rolling_max.append(number)\n        \n        rolling_max.append(max(rolling_max[-2:]))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1],\
    \ numbers[i]))\n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for number in numbers:\n     \
    \   rolling_max_list.append(max(rolling_max_list[-1], number))\n    return rolling_max_list\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    \n    rolling_max_list = []\n    \n    for number in numbers:\n\
    \        rolling_max_list.append(number)\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-6:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-12:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-15:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-21:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-27:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-30:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-36:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-42:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-45:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-51:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-57:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-60:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-66:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-72:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-75:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-81:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-87:]))\n        \n    \
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    \n    rolling_max = []\n    \n    for number in numbers:\n  \
    \      rolling_max.append(number)\n        \n        rolling_max.append(max(rolling_max[-2:]))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_maxes = []\n    rolling_maxes.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_maxes.append(max(rolling_maxes[-1],\
    \ num))\n    return rolling_maxes\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    \n    rolling_max = []\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(numbers[i:]))\n    \n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for\
    \ i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1], numbers[i]))\n\
    \    return rolling_max\n", "    \n    rolling_max = []\n    \n    for number\
    \ in numbers:\n        rolling_max.append(number)\n        \n        if len(rolling_max)\
    \ > len(numbers):\n            break\n        \n        rolling_max.append(max(rolling_max))\n\
    \        \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    \n\
    \    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max.append(max(rolling_max[-1],\
    \ number))\n        \n    return rolling_max\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1],numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for n in numbers:\n        rolling_max.append(rolling_max[n-1])\n    return\
    \ rolling_max\n", "    \n    rolling_max = []\n    \n    for number in numbers:\n\
    \        rolling_max.append(number)\n        \n        while len(rolling_max)\
    \ > len(numbers):\n            rolling_max.pop()\n            \n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for num in numbers:\n\
    \        if num > rolling_max[-1]:\n            rolling_max.append(num)\n    return\
    \ rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    \n    rolling_max = []\n    \n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(numbers[i:]))\n        \n    return rolling_max\n",
  "    \n    rolling_max = []\n    \n    for number in numbers:\n        rolling_max.append(number)\n\
    \        \n        rolling_max.append(max(rolling_max[-2:]))\n        \n    return\
    \ rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for index in range(1, len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[index]))\n    return rolling_max_list\n", "    rolling_max = []\n  \
    \  rolling_max.append(max(numbers))\n    for n in numbers:\n        rolling_max.append(rolling_max[-1]\
    \ if rolling_max[-1] > n else n)\n    return rolling_max\n", "    rolling_max_list\
    \ = []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    roll", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)\
    \ - 1):\n        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n\
    \    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    \n    rolling_max = []\n\
    \    \n    for number in numbers:\n        rolling_max.append(number)\n      \
    \  \n        rolling_max.append(max(rolling_max[-2:]))\n        \n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    for number\
    \ in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1], number))\n\
    \    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for i in range(len(numbers)-1):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    \n    return rolling_max_list\n", "    rolling_max_list =\
    \ []\n    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    \n    rolling_max = []\n    \n    for number in numbers:\n\
    \        rolling_max.append(number)\n        \n        rolling_max.append(max(rolling_max[-2:]))\n\
    \        \n    return rolling_max\n", "    rolling_maxes = []\n    rolling_max\
    \ = 0\n    for number in numbers:\n        rolling_max = max(rolling_max, number)\n\
    \        rolling_maxes.append(rolling_max)\n    return rolling_maxes\n", "   \
    \ rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    \n    rolling_max_list = []\n    \n    for number in numbers:\n\
    \        rolling_max_list.append(number)\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-6:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-12:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-15:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-21:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-27:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-30:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-36:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-42:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-45:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-51:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-57:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-60:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-66:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-72:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-75:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-81:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-87:]))\n        \n    \
    \    roll", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for i in range(len(numbers) - 1):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[i]))\n    return rolling_max_list\n", "    rolling_max_list = []\n \
    \   rolling_max_list.append(max(numbers))\n    \n    for index in range(1, len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[index]))\n\
    \        \n    return rolling_max_list\n", "    \n    rolling_max = []\n    \n\
    \    for number in numbers:\n        rolling_max.append(number)\n        \n  \
    \      while len(rolling_max) > len(numbers):\n            rolling_max.pop()\n\
    \            \n    return rolling_max\n", "    \n    rolling_max = []\n    \n\
    \    for number in numbers:\n        rolling_max.append(number)\n        \n  \
    \      rolling_max.append(max(rolling_max[-2:]))\n        \n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    \n    for number\
    \ in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n    \n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    \n    for num in numbers:\n        rolling_max.append(max(rolling_max[-1],\
    \ num))\n    \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    \n    rolling_max_list\
    \ = []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        for index in range(1, len(numbers)):\n            if number\
    \ > numbers[index]:\n                rolling_max_list.append(numbers[index])\n\
    \                \n    return rolling_max_list\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    \n  \
    \  for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1],\
    \ numbers[i]))\n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    \n    for number in numbers:\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], number))\n    \n  \
    \  return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    \n    rolling_max = []\n    \n\
    \    for number in numbers:\n        rolling_max.append(number)\n        \n  \
    \      rolling_max.append(max(rolling_max[-2:]))\n        \n    return rolling_max\n",
  "    \n    rolling_max_list = []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n    return rolling_max_list\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n</cell>\n\
    <cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    for number\
    \ in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1], number))\n\
    \    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    for index in range(1, len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[index]))\n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for\
    \ number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll", "    \n    rolling_max = []\n\
    \    \n    for i in range(len(numbers)):\n        rolling_max.append(max(numbers[i:]))\n\
    \    \n    return rolling_max\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    \n    for number in numbers:\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], number))\n    \n  \
    \  return rolling_max_list\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for i in range(len(numbers)):\n        rolling_max.append(max(rolling_max[-1],\
    \ numbers[i]))\n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    for num in numbers:\n        rolling_max.append(max(rolling_max[-1], num))\n\
    \    return rolling_max\n", "    rolling_maxes = []\n    rolling_max = 0\n   \
    \ for number in numbers:\n        rolling_max = max(rolling_max, number)\n   \
    \     rolling_maxes.append(rolling_max)\n    return rolling_maxes\n", "    rolling_max\
    \ = []\n    rolling_max.append(max(numbers))\n    for number in numbers:\n   \
    \     rolling_max.append(max(rolling_max[-1], number))\n    return rolling_max\n",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max.append(max(rolling_max[-1], numbers[i]))\n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    \n  \
    \  for number in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ number))\n    \n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    \n    rolling_max_list = []\n    \n    for number\
    \ in numbers:\n        rolling_max_list.append(number)\n        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n\
    \        \n    return rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for num in numbers:\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ num))\n        \n    return rolling_max_list\n", "    rolling_max_list = []\n\
    \    rolling_max_list.append(max(numbers))\n    for i in range(len(numbers)):\n\
    \        rolling_max_list.append(max(rolling_max_list[-1], numbers[i]))\n    return\
    \ rolling_max_list\n", "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n\
    \    \n    for index in range(1, len(numbers)):\n        rolling_max_list.append(max(rolling_max_list[-1],\
    \ numbers[index]))\n    \n    return rolling_max_list\n", "    \n    rolling_max_list\
    \ = []\n    \n    for i in range(len(numbers)):\n        rolling_max_list.append(max(numbers[i:]))\n\
    \        \n    return rolling_max_list\n</cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100])\n\
    </cell>\n<cell>\nrolling_max([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66",
  "    \n    rolling_max_list = []\n    \n    for number in numbers:\n        rolling_max_list.append(number)\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-3:]))\n     \
    \   \n        rolling_max_list.append(max(rolling_max_list[-6:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-9:]))\n        \n     \
    \   rolling_max_list.append(max(rolling_max_list[-12:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-15:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-18:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-21:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-24:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-27:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-30:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-33:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-36:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-39:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-42:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-45:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-48:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-51:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-54:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-57:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-60:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-63:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-66:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-69:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-72:]))\n        \n        rolling_max_list.append(max(rolling_max_list[-75:]))\n\
    \        \n        rolling_max_list.append(max(rolling_max_list[-78:]))\n    \
    \    \n        rolling_max_list.append(max(rolling_max_list[-81:]))\n        \n\
    \        rolling_max_list.append(max(rolling_max_list[-84:]))\n        \n    \
    \    rolling_max_list.append(max(rolling_max_list[-87:]))\n        \n        roll",
  "    rolling_max = []\n    rolling_max.append(max(numbers))\n    for number in numbers:\n\
    \        rolling_max.append(max(rolling_max[-1], number))\n    return rolling_max\n",
  "    rolling_max_list = []\n    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    rolling_max_list.append(max(numbers))\n    rolling_max_list.append(max(numbers))\n\
    \    roll", "    rolling_max = []\n    rolling_max.append(max(numbers))\n    \n\
    \    for number in numbers:\n        rolling_max.append(max(rolling_max[-1], number))\n\
    \    \n    return rolling_max\n", "    rolling_max = []\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    rolling_max.append(max(numbers))\n\
    \    rolling_max.append(max(numbers))\n    roll"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

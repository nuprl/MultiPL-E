name: HumanEval_55_fib
language: py
results:
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93gkgm82.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93gkgm82.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93gkgm82.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzrvnwhno.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzrvnwhno.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzrvnwhno.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr25clirb.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr25clirb.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr25clirb.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0w77cw26.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0w77cw26.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0w77cw26.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsp02ummr.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsp02ummr.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsp02ummr.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm6ty0jac.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm6ty0jac.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm6ty0jac.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-2) +\
    \ fib(n-1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhiv91h1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhiv91h1.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhiv91h1.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6frw7n1s.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6frw7n1s.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6frw7n1s.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8vkxv14d.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8vkxv14d.py\"\
    , line 16, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8vkxv14d.py\"\
    , line 9, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqj63j69l.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqj63j69l.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqj63j69l.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbeadezc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbeadezc.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbeadezc.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7yo10p9a.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7yo10p9a.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7yo10p9a.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdisybsv3.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdisybsv3.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdisybsv3.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscat93l_.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscat93l_.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscat93l_.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-2) +\
    \ fib(n-1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp10xcjq67.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp10xcjq67.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp10xcjq67.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjr_2110.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjr_2110.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjr_2110.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-2) +\
    \ fib(n-1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcqfbcfq2.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcqfbcfq2.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcqfbcfq2.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy9va5nga.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy9va5nga.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy9va5nga.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s6us2rm.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s6us2rm.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s6us2rm.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsq7w1c8p.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsq7w1c8p.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsq7w1c8p.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 2:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lolx_b5.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lolx_b5.py\"\
    , line 17, in test_check\n    check(fib)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lolx_b5.py\"\
    , line 10, in check\n    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n <= 1:\n        return n\n    return fib(n-1) +\
    \ fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-2) + fib(n-1)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \             \"\"\"\n    if n < 2:\n        return n\n    return fib(n-1) + fib(n-2)\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

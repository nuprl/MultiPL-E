name: HumanEval_119_match_parens
language: py
prompt: "from typing import List\n\ndef match_parens(lst: List[str]) -> str:\n   \
  \ \"\"\"\n    You are given a list of two strings, both strings consist of open\n\
  \    parentheses '(' or close parentheses ')' only.\n    Your job is to check if\
  \ it is possible to concatenate the two strings in\n    some order, that the resulting\
  \ string will be good.\n    A string S is considered to be good if and only if all\
  \ parentheses in S\n    are balanced. For example: the string '(())()' is good,\
  \ while the string\n    '())' is not.\n    Return 'Yes' if there's a way to make\
  \ a good string, and return 'No' otherwise.\n\n    Examples:\n            \"\"\"\
  \n"
tests: "def check(candidate):\n    assert candidate(['()(', ')']) == 'Yes'\n    assert\
  \ candidate([')', ')']) == 'No'\n    assert candidate(['(()(())', '())())']) ==\
  \ 'No'\n    assert candidate([')())', '(()()(']) == 'Yes'\n    assert candidate(['(())))',\
  \ '(()())((']) == 'Yes'\n    assert candidate(['()', '())']) == 'No'\n    assert\
  \ candidate(['(()(', '()))()']) == 'Yes'\n    assert candidate(['((((', '((())'])\
  \ == 'No'\n    assert candidate([')(()', '(()(']) == 'No'\n    assert candidate([')(',\
  \ ')(']) == 'No'\n    assert candidate(['(', ')']) == 'Yes'\n    assert candidate([')',\
  \ '(']) == 'Yes'\n\ndef test_check():\n    check(match_parens)\n\ntest_check()\n"
completions: ["    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n  \
    \  stack = []\n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n        else:\n      \
    \      return 'No'\n    if len(stack) == 0:\n        return 'Yes'\n    else:\n\
    \        return 'No'\n", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    lst = list(lst)\n    lst.reverse()\n    for s\
    \ in lst:\n        if s == '(':\n            stack.append(s)\n        elif s ==\
    \ ')':\n            if len(stack) == 0:\n                return 'No'\n       \
    \     stack.pop()\n    if len(stack) != 0:\n        return 'Yes'\n    return 'No'\n",
  "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n\
    \    for s in lst:\n        if s == '(':\n            stack.append(s)\n      \
    \  elif s == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            else:\n                stack.pop()\n        else:\n            return\
    \ 'No'\n    return 'Yes'\n", "    lst = ['(())()', '())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'No'\n    lst\
    \ = ['(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())()']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(())()', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())']", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n      \
    \      match_parens(lst)\n            # 'No'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n      \
    \      match_parens(lst)\n            # 'No'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"", "    lst = ['(())()', '())']\n    match_parens(lst)\n  \
    \  \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n         \
    \   stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \        else:\n            return 'No'\n    if len(stack) == 0:\n        return\
    \ 'Yes'\n    else:\n        return 'No'\n", "            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())', '(())()']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n   \
    \         # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n   \
    \         # 'No'\n            \"\"\"\n            lst = ['(())()', '(())', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \    if len(stack) != 0:\n        return 'No'\n    else:\n        return 'Yes'\n",
  "            match_parens(['(())()', '())'])\n            match_parens(['(()', '(()()',\
    \ '(()()()', '(())'])\n            match_parens(['(()()', '(())'])\n         \
    \   match_parens(['(()()()', '(())'])\n            match_parens(['(()()()', '(())'])\n\
    \            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(['(()()()',\
    \ '(())'])\n            match_parens(['(()()()', '(())'])\n            match_parens(",
  "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n\
    \    for el in lst:\n        if el == '(':\n            stack.append(el)\n   \
    \     elif el == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            stack.pop()\n    if len(stack) > 0:\n        return 'Yes'\n\
    \    return 'No'\n", "    lst = ['(())()', '())']\n    match_parens(lst)\n   \
    \ \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n          \
    \  stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            top = stack.pop()\n            if top\
    \ != ')':\n                return 'No'\n        else:\n            return 'No'\n\
    \    return 'Yes'\n", "            match_parens(['(', '(())', '(()())'])\n   \
    \         match_parens(['(', '(())', '(()())', '()'])\n            match_parens(['(',\
    \ '(())', '(()())', '(', '(())', '(()())', '()'])\n            match_parens(['(',\
    \ '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())',\
    \ '(()())', '(', '(())', '(()())', '(', '(())', '(()())', '(', '(())', '(()())',\
    \ '(', '(())', '(()())", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: Yes\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_paren", " \
    \           lst = ['(())()', '())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['", "            match_parens(['(())()', '())'])\n       \
    \     match_parens(['(()', '(())', '(()())'])\n            match_parens(['(()())',\
    \ '(())()'])\n            match_parens(['(()())', '(())', '(())()'])\n       \
    \     match_parens(['(()())', '(())', '(())()'])\n            match_parens(['(()())',\
    \ '(())', '(())()'])\n            match_parens(['(()())', '(())', '(())', '(())()'])\n\
    \            match_parens(['(()())', '(())', '(())', '(())', '(())()'])\n    \
    \        match_parens(['(()())', '(())', '(())', '(())', '(())', '(())()'])\n\
    \            match_parens(['(()())', '(())', '(())', '(())', '(())', '(())', '(())()'])\n\
    \            match_parens(['(()())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())()'])\n            match_parens(['(()())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(",
  "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n\
    \    for s in lst:\n        if s == '(':\n            stack.append(s)\n      \
    \  elif s == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            else:\n                stack.pop()\n        else:\n            if\
    \ len(stack) == 0:\n                return 'No'\n            elif stack[-1] ==\
    \ '(':\n                stack.append(s)\n            elif stack[-1] == ')':\n\
    \                stack.pop()\n            else:\n                return 'No'\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_paren",
  "            match_parens(['(())()', '()'])\n            match_parens(['(())', '()'])\n\
    \            match_parens(['(()', '()'])\n            match_parens(['(()', '(())'])\n\
    \            match_parens(['(()', '(())()'])\n            match_parens(['(()',\
    \ '(())()()'])\n            match_parens(['(()', '(())()()()'])\n            match_parens(['(()',\
    \ '(())()()()()'])\n            match_parens(['(()', '(())()()()()()'])\n    \
    \        match_parens(['(()', '(())()()()()()()'])\n            match_parens(['(()',\
    \ '(())()()()()()()()'])\n            match_parens(['(()', '(())()()()()()()()()'])\n\
    \            match_parens(['(()', '(())()()()()()()()()()'])\n            match_parens(['(()',\
    \ '(())()()()()()()()()()()'])\n            match_parens(['(()', '(())()()()()()()()()()()()'])\n\
    \            match_parens(['(()', '(())()()()()()()()()()()()()'])\n         \
    \   match_parens(['(()', '(())()()()()()()()()()()()()'])\n            match_parens(['(()',\
    \ '(())()()()()()()()()()()()()'])\n            match_parens(['(()', '(())()()()()()()()()()()()()()'])\n\
    \            match_parens(['(()', '(())()()()()()()()()()()()()()()'])\n     \
    \       match_parens(['(()', '(())()()()()()()()()()()()()()()'])\n          \
    \  match_parens(['(()', '(())()()()()()()()()()()()()()()'])\n            match_parens(['(()',\
    \ '(())()()()()()()()()()()()()()()'])\n            match_parens(['(()', '(())()()()()()()()()()()()()()()'])\n\
    \            match_parens(['(()', '(())()()()()()()()()()()()()()()'])\n     \
    \       match_parens(['(()', '(())()()()()()", "            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'Yes'\n         \
    \   \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # ", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'No'\n        \
    \    \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output", "           \
    \ lst = ['(())()', '())']\n            print(match_parens(lst))\n            #\
    \ output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n   \
    \         print(match_parens(lst))\n            # output: 'No'\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())', '(())()']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())()',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())()', '(()())', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(())()', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())()', '(()())', '(())()', '(())()',\
    \ '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())()', '(()())', '(())()', '(())()', '(())()', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())()', '(()())', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())', '(())()', '(()())', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())', '(())()', '(()())', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(())()", "    lst = ['(', '(())',\
    \ '(()())', '(())()', '()(())', '()(()())', '()()()']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for elem in lst:\n        if elem == '(':\n \
    \           stack.append(elem)\n        elif elem == ')':\n            if len(stack)\
    \ == 0:\n                return 'No'\n            stack.pop()\n        else:\n\
    \            if len(stack) == 0:\n                return 'No'\n            stack.append(elem)\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n   \
    \         \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_paren", "    lst = ['(())()',\
    \ '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(())()', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())()', '(()())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()', '(()())', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())()', '(()())', '(())', '(())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())()', '(()())', '(())',\
    \ '(())', '(())', '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()',\
    \ '(())()', '(()())', '(())', '(())', '(())', '(())', '(())', '(())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(())()', '(())()', '(()())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()', '(()())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())']\n    assert match_parens(lst) == 'No'\n    lst\
    \ = ['(())()', '(())()', '(()())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()',\
    \ '(())()', '(()())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()',\
    \ '(())()', '(()())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())']\n    assert ", "            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'Yes'\n         \
    \   \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    stack.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])", "            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '())']\n            match_parens(lst)\n       \
    \     # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output", "            lst = ['(())', '(())()']\n            print(match_parens(lst))\n\
    \            lst = ['(())', '(())()', '(())()()']\n            print(match_parens(lst))\n\
    \            lst = ['(())', '(())()', '(())()()', '(())()()()']\n            print(match_parens(lst))\n\
    \            lst = ['(())', '(())()', '(())()()', '(())()()()', '(())()()()()']\n\
    \            print(match_parens(lst))\n            lst = ['(())', '(())()', '(())()()',\
    \ '(())()()()', '(())()()()()', '(())()()()()()']\n            print(match_parens(lst))\n\
    \            lst = ['(())', '(())()', '(())()()', '(())()()()', '(())()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()', '(())()()()()()',\
    \ '(())()()()()()', '(())()()()()", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    lst = list(lst)\n    lst.reverse()\n    for elem\
    \ in lst:\n        if elem == '(':\n            stack.append(elem)\n        elif\
    \ elem == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            stack.pop()\n    if len(stack) != 0:\n        return 'Yes'\n    return\
    \ 'No'\n", "    lst = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            stack.pop()\n        else:\n       \
    \     if len(stack) == 0:\n                return 'No'\n            stack[-1]\
    \ += s\n    return 'Yes'\n", "            match_parens(['(())()', '(())', '()()'])\n\
    \            match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n            match_parens(['(())', '(())', '()()'])\n     \
    \       match_parens(['(())()', '(())', '()()'])\n            match_parens(['(())',\
    \ '(())', '()()'])\n            match_parens(['(())()', '(())', '()()'])\n   \
    \         match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n            match_parens(['(())', '(())', '()()'])\n     \
    \       match_parens(['(())()', '(())', '()()'])\n            match_parens(['(())',\
    \ '(())', '()()'])\n            match_parens(['(())()', '(())', '()()'])\n   \
    \         match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n            match_parens(['(())', '(())', '()()'])\n     \
    \       match_parens(['(())()', '(())', '()()'])\n            match_parens(['(())',\
    \ '(())', '()()'])\n            match_parens(['(())()', '(())', '()()'])\n   \
    \         match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n            match_parens(['(())', '(())', '()()'])\n     \
    \       match_parens(['(())()', '(())', '()()'])\n            match_parens(['(())',\
    \ '(())', '()()'])\n            match_parens(['(())()', '(())', '()()'])\n   \
    \         match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n            match_parens(['(())', '(())', '()()'])\n     \
    \       match_parens(['(())()', '(())', '()()'])\n            match_parens(['(())',\
    \ '(())', '()()'])\n            match_parens(['(())()', '(())', '()()'])\n   \
    \         match_parens(['(())', '(())', '()()'])\n            match_parens(['(())()',\
    \ '(())', '()()'])\n", "    lst = ['(())()', '())']\n    print(match_parens(lst))\n\
    \    lst = ['(())()', '(())']\n    print(match_parens(lst))\n    lst = ['(())()',\
    \ '(()())']\n    print(match_parens(lst))\n    lst = ['(())()', '(()())', '(()())()']\n\
    \    print(match_parens(lst))\n    lst = ['(())()', '(()())', '(()())()', '(()())()()']\n\
    \    print(match_parens(lst))\n    lst = ['(())()', '(()())', '(()())()', '(()())()()',\
    \ '(()())()()()']\n    print(match_parens(lst))\n    lst = ['(())()', '(()())',\
    \ '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(lst))\n  \
    \  lst = ['(())()', '(()())', '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(lst))\n\
    \    lst = ['(())()', '(()())', '(()())()', '(()())()()', '(()())()()()']\n  \
    \  print(match_parens(lst))\n    lst = ['(())()', '(()())', '(()())()', '(()())()()',\
    \ '(()())()()()']\n    print(match_parens(lst))\n    lst = ['(())()', '(()())',\
    \ '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(lst))\n  \
    \  lst = ['(())()', '(()())', '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(lst))\n\
    \    lst = ['(())()', '(()())', '(()())()', '(()())()()', '(()())()()()']\n  \
    \  print(match_parens(lst))\n    lst = ['(())()', '(()())', '(()())()', '(()())()()',\
    \ '(()())()()()']\n    print(match_parens(lst))\n    lst = ['(())()', '(()())',\
    \ '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(lst))\n  \
    \  lst = ['(())()', '(()())', '(()())()', '(()())()()', '(()())()()()']\n    print(match_parens(",
  "    lst = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    \"\"\"\n\
    \    stack = []\n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n        else:\n      \
    \      if len(stack) == 0:\n                return 'No'\n            elif stack[-1]\
    \ == '(':\n                stack.pop()\n            elif stack[-1] == ')':\n \
    \               stack.pop()\n                stack.append(s)\n            else:\n\
    \                return 'No'\n    return 'Yes'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "    assert match_parens(['(())()']) == 'Yes'\n    assert\
    \ match_parens(['())']) == 'No'\n    assert match_parens(['(()', '(())']) == 'Yes'\n\
    \    assert match_parens(['(()', '(())', '(()', '(())']) == 'No'\n    \"\"\"\n\
    \    stack = []\n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n        else:\n      \
    \      if len(stack) == 0:\n                return 'No'\n            elif stack[-1]\
    \ == '(':\n                stack.pop()\n            elif stack[-1] == ')':\n \
    \               stack.pop()\n                stack.append(s)\n            else:\n\
    \                return 'No'\n    return 'Yes'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())", " \
    \           lst = ['(())()', '())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())']\n            print(match_parens(lst))\n  \
    \          lst = ['(())()', '(())", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    stack.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \    if len(stack) == 0:\n        return 'Yes'\n    else:\n        return 'No'\n",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "    lst = ['(())()', '())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(())()()']\n    assert match_parens(lst) == 'Yes'\n   \
    \ lst = ['(())()', '(())()()', '(())()()()']\n    assert match_parens(lst) ==\
    \ 'No'\n    \"\"\"\n    lst = ['(())()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(())()()']\n    assert match_parens(lst) == 'Yes'\n   \
    \ lst = ['(())()', '(())()()', '(())()()()']\n    assert match_parens(lst) ==\
    \ 'No'\n    lst = ['(())()', '(())()()', '(())()()()', '(())()()()']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())()()', '(())()()()', '(())()()()',\
    \ '(())()()()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())()()',\
    \ '(())()()()', '(())()()()', '(())()()()', '(())()()()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())()()', '(())()()()', '(())()()()', '(())()()()',\
    \ '(())()()()', '(())()()()']\n    assert match_parens(lst) == 'No'\n    lst =\
    \ ['(())()', '(())()()', '(())()()()', '(())()()()', '(())()()()', '(())()()()',\
    \ '(())()()()', '(())()()()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(())()()', '(())()()()', '(())()()()', '(())()()()', '(())()()()',\
    \ '(())()()()', '(())()()()', '(())()()()']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(())()()', '(())()()()', '(())()()()', '(())()()()', '(())()()()',\
    \ '(", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_paren", " \
    \           lst = ['(())()', '())']\n            match_parens(lst)\n         \
    \   # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "    assert match_parens(['(())()'])\
    \ == 'Yes'\n    assert match_parens(['())']) == 'No'\n    assert match_parens(['(()',\
    \ '()()']) == 'Yes'\n    assert match_parens(['(()', '(()']) == 'No'\n    assert\
    \ match_parens(['(()', '(()', '(()']) == 'Yes'\n    \"\"\"\n    stack = []\n \
    \   for s in lst:\n        if s == '(':\n            stack.append(s)\n       \
    \ elif s == ')':\n            if not stack:\n                return 'No'\n   \
    \         stack.pop()\n        else:\n            return 'No'\n    return 'Yes'\n",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n        \
    \    match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_paren", "            match_parens(['(',\
    \ '(())', '(()())'])\n            match_parens(['(', '(())', '(()())', '(())'])\n\
    \            match_parens(['(', '(())', '(()())', '(())', '(())'])\n         \
    \   match_parens(['(', '(())', '(()())', '(())', '(())', '(())'])\n          \
    \  match_parens(['(', '(())', '(()())', '(())', '(())', '(())', '(())'])\n   \
    \         match_parens(['(', '(())', '(()())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '", "    lst = ['(())()',\
    \ '())']\n    assert match_parens(lst) == 'Yes'\n    \"\"\"\n    stack = []\n\
    \    open_brackets = 0\n    close_brackets = 0\n    for char in lst[0]:\n    \
    \    if char == '(':\n            open_brackets += 1\n            stack.append(char)\n\
    \        elif char == ')':\n            close_brackets += 1\n            if open_brackets\
    \ > close_brackets:\n                return 'No'\n            open_brackets -=\
    \ 1\n            stack.pop()\n    return stack == []\n", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'No'\n        \
    \    \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output", "    lst = ['(',\
    \ '(())', '(()())', '(())()', '(())()()']\n    match_parens(lst)\n    \"\"\"\n\
    \    stack = []\n    stack.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst",
  "            lst = ['(())', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            >> 'Yes'\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            >> 'No'\n \
    \           lst = ['(())()', '(())', '(())']\n            match_parens(lst)\n\
    \            >> 'Yes'\n            lst = ['(())()', '(())', '(())', '(())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())()',\
    \ '(())', '(())', '(())', '(())', '(())']\n            match_parens(lst)\n   \
    \         >> 'Yes'\n            lst = ['(())()', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())']\n            match_parens(lst)\n            >> 'No'\n\
    \            lst = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())']\n            match_parens(lst)\n           \
    \ >> 'No'\n            lst = ['(())()', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())']\n            match_parens(lst)\n\
    \            >> 'Yes'\n            lst = ['(())()', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n          \
    \  match_parens(lst)\n            >> 'No'\n            lst = ['(())()', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())']\n            match_parens(lst)\n            >> 'Yes'\n     \
    \       lst = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n            match_parens(lst)\n\
    \            >> '", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'No'\n        \
    \    \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output", "           \
    \ match_parens(['(())()', '())'])\n            match_parens(['(())()', '(())'])\n\
    \            match_parens(['(())()', '(()())'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())()'])\n            match_parens(['(())()',\
    \ '(())()'])\n            match_parens(['(())()', '(())", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n       \
    \     match_parens(lst)\n            # 'Yes'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'Yes'\n            \"\"\"\n         \
    \   lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())(())(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())(())(())(())(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())(())(())(())(())(())(())(())']\n          \
    \  print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(())(())(())(())(())(())(())(())(())(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())(())(())(",
  "            lst = ['(())()', '())']\n            print(match_parens(lst))\n   \
    \         # Output: Yes\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_paren", " \
    \           lst = ['(())()', '())']\n            print(match_parens(lst))\n  \
    \          # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(()',\
    \ '()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(()',\
    \ '(()', '()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(", "            lst\
    \ = ['(())()', '())']\n            print(match_parens(lst))\n            # Output:\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ print(match_parens(lst))\n            # Output: 'No'\n            \"\"\"\n \
    \           lst = ['(())()', '(())']\n            print(match_parens(lst))\n \
    \           # Output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: 'Yes'\n         \
    \   \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n   \
    \         \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n       \
    \     match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']", "            lst = ['(())()', '())']\n   \
    \         print(match_parens(lst))\n            # output: 'Yes'\n            \"\
    \"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())", "            lst = ['(())()', '())']\n \
    \           match_parens(lst)\n            # 'Yes'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())', '(()', '()']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())', '(()', '()', '(()', '()']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(()', '()', '(()', '()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '", "            lst\
    \ = ['(())()', '())']\n            match_parens(lst)\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    lst = list(lst)\n    lst.reverse()\n    for el\
    \ in lst:\n        if el == '(':\n            stack.append(el)\n        elif el\
    \ == ')':\n            if len(stack) == 0:\n                return 'No'\n    \
    \        else:\n                stack.pop()\n        else:\n            return\
    \ 'No'\n    return 'Yes'\n", "            match_parens(['(())()', '())'])\n  \
    \          match_parens(['(()', '(()()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())()()', '()(())()', '()()()()'])\n\
    \            match_parens(['(())', '(())()', '(())", "            match_parens(['(())()',\
    \ '()'])\n            match_parens(['(()', '(()()'])\n            match_parens(['(()',\
    \ '(()())'])\n            match_parens(['(()', '(())()'])\n            match_parens(['(()',\
    \ '(())', '(())'])\n            match_parens(['(()', '(())', '(()())'])\n    \
    \        match_parens(['(()', '(())', '(())', '(())'])\n            match_parens(['(()',\
    \ '(())', '(()())', '(())'])\n            match_parens(['(()', '(())', '(()())',\
    \ '(())', '(())'])\n            match_parens(['(()', '(())', '(()())', '(())',\
    \ '(())', '(())'])\n            match_parens(['(()', '(())', '(()())', '(())',\
    \ '(())', '(())', '(())'])\n            match_parens(['(()', '(())', '(()())',\
    \ '(())', '(())', '(())', '(())', '(())'])\n            match_parens(['(()', '(())',\
    \ '(()())', '(())', '(())', '(())', '(())', '(())', '(())'])\n            match_parens(['(()',\
    \ '(())', '(()())', '(())', '(())', '(())', '(())', '(())', '(())', '(())'])\n\
    \            match_parens(['(()', '(())', '(()())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())'])\n            match_parens(['(()', '(())', '(()())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())'])\n \
    \           match_parens(['(()', '(())', '(()())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())'])\n            match_parens(['(()',\
    \ '(())', '(()())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())'])\n            match_parens(['(()', '(())', '(()())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())", "          \
    \  match_parens(['(())()', '(())'])\n            match_parens(['(())', '(())'])\n\
    \            match_parens(['(())', '(()())'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()'])\n            match_parens(['(",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n        \
    \    match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n", "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n\
    \    stack = []\n    for elem in lst:\n        if elem == '(':\n            stack.append(elem)\n\
    \        elif elem == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            stack.pop()\n    if len(stack) == 0:\n        return 'Yes'\n\
    \    return 'No'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n   \
    \         \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_paren", "            lst =\
    \ ['(())()', '())']\n            match_parens(lst)\n            # 'Yes'\n    \
    \        \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_paren", "    lst = ['(())()', '())']\n\
    \    match_parens(lst)\n    \"\"\"\n    stack = []\n    lst = list(lst)\n    for\
    \ i in range(len(lst)):\n        if lst[i] == '(':\n            stack.append(lst[i])\n\
    \        elif lst[i] == ')':\n            if len(stack) == 0:\n              \
    \  return 'No'\n            stack.pop()\n    if len(stack) != 0:\n        return\
    \ 'No'\n    return 'Yes'\n", "            lst = ['(())()', '())']\n          \
    \  print(match_parens(lst))\n            lst = ['(())()', '(())']\n          \
    \  print(match_parens(lst))\n            lst = ['(())()', '(()())']\n        \
    \    print(match_parens(lst))\n            lst = ['(())()', '(())()']\n      \
    \      print(match_parens(lst))\n            lst = ['(())()', '(())()']\n    \
    \        print(match_parens(lst))\n            lst = ['(())()', '(())()']\n  \
    \          print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())()']\n\
    \            print(match_parens(lst))\n            lst", "    lst = ['(())()',\
    \ '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if not stack:\n                return 'No'\n            top = stack.pop()\n\
    \            if top != s:\n                return 'No'\n        else:\n      \
    \      return 'No'\n    return 'Yes'\n", "    lst = ['(', '(())', '(()())', '(())()',\
    \ '(()())(())', '(())(())', '(())(()())', '(())(()())(())', '(())(()())(()())',\
    \ '(())(()())(()())(())', '(())(()())(()())(()())', '(())(()())(()())(()())(())',\
    \ '(())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(())', '(())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(())', '(())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(())', '(())(()())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(()())(()())(()())', '(())(()())(()())(()())(()())(()())(()())(()())(()())(()())(()())',\
    \ '(())(()())(()())(()())(()())(()())(()())(()())", "    lst = ['(())()', '())']\n\
    \    match_parens(lst)\n    \"\"\"\n    stack = []\n    for elem in lst:\n   \
    \     if elem == '(':\n            stack.append(elem)\n        elif elem == ')':\n\
    \            if len(stack) == 0:\n                return 'No'\n            stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'Yes'\n\
    \            if elem == stack[-1]:\n                stack.pop()\n            else:\n\
    \                return 'No'\n    return 'No'\n", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # 'Yes'\n            \"\"\
    \"\n            lst = ['(())()', '())']\n            match_parens(lst)\n     \
    \       # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n   \
    \         match_parens(lst)\n            # 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_paren", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            >> 'Yes'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            \"\"\"\n    \
    \        lst = ['(())', '(()())', '(())()', '())']\n            match_parens(lst)\n\
    \            >> 'Yes'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())',\
    \ '(()())', '(())()', '())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())', '(()())', '(())()', '())']\n            match_parens(lst)\n\
    \            >> 'No'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())',\
    \ '(()())', '(())()', '())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())', '(()())', '(())()', '())']\n            match_parens(lst)\n\
    \            >> 'No'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())',\
    \ '(()())', '(())()', '())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())', '(()())', '(())()', '())']\n            match_parens(lst)\n\
    \            >> 'No'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())',\
    \ '(()())', '(())()', '())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())', '(()())', '(())()', '())']\n            match_parens(lst)\n\
    \            >> 'No'\n            lst = ['(())', '(()())', '(())()', '())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())',\
    \ '(()())', '(())()', '())']\n            match_parens(lst)\n            >> 'Yes'\n\
    \            lst = ['(())', '(", "    lst = ['(())()', '())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    \"\"\"\n    stack = []\n    for el in lst:\n        if el == '(':\n\
    \            stack.append(el)\n        elif el == ')':\n            if len(stack)\
    \ == 0:\n                return 'No'\n            stack.pop()\n    if len(stack)\
    \ != 0:\n        return 'No'\n    return 'Yes'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_paren",
  "    lst = ['(', '(())', '(()())', '(())()', '(()())(())', '(()())(()())']\n   \
    \ match_parens(lst)\n    \"\"\"\n    stack = []\n    stack.append(lst[0])\n  \
    \  lst.pop(0)\n    for elem in lst:\n        if elem == '(':\n            stack.append(elem)\n\
    \        elif elem == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            top = stack.pop()\n            if top != elem:\n         \
    \       return 'No'\n        else:\n            return 'No'\n    return 'Yes'\n",
  "            lst = ['(())()', '())']\n            print(match_parens(lst))\n   \
    \         # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            print(match_parens(lst))\n     \
    \       # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n   \
    \         match_parens(lst)\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())()', '(())']\n            match_parens(lst)\n       \
    \     # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "    lst = ['(())()', '())']\n\
    \    print(match_parens(lst))\n    lst = ['(())()', '(())']\n    print(match_parens(lst))\n\
    \    lst = ['(())()', '(())', '(())()']\n    print(match_parens(lst))\n    lst\
    \ = ['(())()', '(())', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(", "            lst = ['(())', '(()())', '(())()']\n           \
    \ print(match_parens(lst))\n            # output: 'Yes'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())', '(()())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(()())', '(())()']\n        \
    \    print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())', '(()())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(()())', '(())()']\n        \
    \    print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())', '(()())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(()())', '(())()']\n        \
    \    print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())', '(()())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(()())', '(())()']\n        \
    \    print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())', '(()())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(()())', '(())()']\n        \
    \    print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())', '(()())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst", "         \
    \   lst = ['(())()', '())']\n            print(match_parens(lst))\n          \
    \  # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())', '(()', '()']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(()', '(()',\
    \ '()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n        \
    \    match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_", "            match_parens(['(())()',\
    \ '(())'])\n            match_parens(['(())', '(())'])\n            match_parens(['(())',\
    \ '(())()'])\n            match_parens(['(())', '(())()', '(())'])\n         \
    \   match_parens(['(())', '(())', '(())()'])\n            match_parens(['(())',\
    \ '(())', '(())()', '(())'])\n            match_parens(['(())', '(())', '(())()',\
    \ '(())', '(())()'])\n            match_parens(['(())', '(())', '(())', '(())()',\
    \ '(())', '(())()'])\n            match_parens(['(())', '(())', '(())', '(())',\
    \ '(())()', '(())', '(())()'])\n            match_parens(['(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())()'])\n            match_parens(['(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())()'])\n            match_parens(['(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())()'])\n       \
    \     match_parens(['(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())()'])\n            match_parens(['(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())()'])\n       \
    \     match_parens(['(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())", "    lst = ['(())()',\
    \ '())']\n    print(match_parens(lst))\n    \"\"\"\n    stack = []\n    for s\
    \ in lst:\n        if s == '(':\n            stack.append(s)\n        elif s ==\
    \ ')':\n            if len(stack) == 0:\n                return 'No'\n       \
    \     else:\n                stack.pop()\n    if len(stack) == 0:\n        return\
    \ 'Yes'\n    else:\n        return 'No'\n", "            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())', '(())',\
    \ '(())']\n            print(match_parens(lst))\n            lst = ['(())()',\
    \ '(())', '(())', '(())', '(())']\n            print(match_parens(lst))\n    \
    \        lst = ['(())()', '(())', '(())', '(())', '(())', '(())']\n          \
    \  print(match_parens(lst))\n            lst = ['(())()', '(())', '(())', '(())',\
    \ '(())', '(())', '(())']\n            print(match_parens(lst))\n            lst\
    \ = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n     \
    \       print(match_parens(lst))\n            lst = ['(())()', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())']\n            print(match_parens(lst))\n            lst\
    \ = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())']\n            print(match_parens(lst))\n            lst = ['(())()',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n          \
    \  print(match_parens(lst))\n            lst = ['(())()', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())', '(())', '(())']\n            print(match_parens(lst))\n\
    \            lst = ['(())()', '(())', '(())', '(())', '(())', '(())', '(())',\
    \ '(())', '(())', '(())', '(())', '(())']\n            print(match_parens(lst))\n",
  "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n\
    \    for elem in lst:\n        if elem == '(':\n            stack.append(elem)\n\
    \        elif elem == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            top = stack.pop()\n            if top != '(':\n          \
    \      return 'No'\n        else:\n            return 'No'\n    return 'Yes'\n",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n       \
    \     match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # '", "    lst = ['(())()', '())']\n    print(match_parens(lst))\n    lst\
    \ = ['(())', '(())()']\n    print(match_parens(lst))\n    lst = ['(())', '(())()',\
    \ '(())()()']\n    print(match_parens(lst))\n    lst = ['(())', '(())()', '(())()()',\
    \ '(())()()()']\n    print(match_parens(lst))\n    lst = ['(())', '(())()', '(())()()',\
    \ '(())()()()', '(())()()()()']\n    print(match_parens(lst))\n    lst = ['(())',\
    \ '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n    print(match_parens(lst))\n\
    \    lst = ['(())', '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n\
    \    print(match_parens(lst))\n    lst = ['(())', '(())()', '(())()()', '(())()()()',\
    \ '(())()()()()', '(())()()()()()']\n    print(match_parens(lst))\n    lst = ['(())',\
    \ '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n    print(match_parens(lst))\n\
    \    lst = ['(())', '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n\
    \    print(match_parens(lst))\n    lst = ['(())', '(())()', '(())()()', '(())()()()',\
    \ '(())()()()()', '(())()()()()()']\n    print(match_parens(lst))\n    lst = ['(())',\
    \ '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n    print(match_parens(lst))\n\
    \    lst = ['(())', '(())()', '(())()()', '(())()()()', '(())()()()()', '(())()()()()()']\n\
    \    print(match_parens(lst))\n    lst = ['(())', '(())()', '(())()()', '(())()()()',\
    \ '(())()()()()', '(())()()()()()']\n", "            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # Output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_paren", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'No'\n\
    \            elif stack[-1] == '(':\n                stack.append(s)\n       \
    \     elif stack[-1] == ')':\n                stack.pop()\n            else:\n\
    \                return 'No'\n    return 'Yes'\n", "    lst = ['(())()', '())']\n\
    \    print(match_parens(lst))\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if len(stack) == 0:\n                return 'No'\n            else:\n\
    \                stack.pop()\n    if len(stack) == 0:\n        return 'Yes'\n\
    \    else:\n        return 'No'\n", "            lst = ['(())()', '())']\n   \
    \         print(match_parens(lst))\n            # output: Yes\n            \"\"\
    \"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_paren", "    lst = ['(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \    return stack == []\n", "            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            >> 'Yes'\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())()',\
    \ '(())()']\n            match_parens(lst)\n            >> 'Yes'\n           \
    \ lst = ['(())()', '(())()()']\n            match_parens(lst)\n            >>\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            >> 'Yes'\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            >> 'No'\n            lst = ['(())()',\
    \ '(())()']\n            match_parens(lst)\n            >> 'Yes'\n           \
    \ lst = ['(())()', '(())()()']\n            match_parens(lst)\n            >>\
    \ 'No'\n    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n\
    \            stack.append(s)\n        elif s == ')':\n            if len(stack)\
    \ == 0:\n                return 'No'\n            else:\n                stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'No'\n\
    \            elif stack[-1] == '(':\n                stack.pop()\n           \
    \ elif stack[-1] == '(':\n                stack.pop()\n                stack.append(s)\n\
    \            elif stack[-1] == ')':\n                stack.pop()\n           \
    \     stack.append(s)\n            elif stack[-1] == ')':\n                stack.pop()\n\
    \                stack.append(s)\n                stack.append(')')\n        \
    \    else:\n                return 'No'\n    return 'Yes'\n", "    lst = ['(())()',\
    \ '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(()', '()']\n\
    \    assert match_parens(lst) == 'No'\n    \"\"\"\n    lst = ['(())()', '(())',\
    \ '(()', '()']\n    stack = []\n    for x in lst:\n        if x == '(':\n    \
    \        stack.append(x)\n        elif x == ')':\n            if len(stack) ==\
    \ 0:\n                return 'No'\n            stack.pop()\n        else:\n  \
    \          if len(stack) == 0:\n                return 'No'\n            stack.append(x)\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_paren",
  "    lst = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())', '(()',\
    \ '()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())', '(()',\
    \ '(()', '()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '(()', '(()', '(()', '(()', '()']\n    assert match_parens(lst) == 'No'\n  \
    \  lst = ['(())()', '(())', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '()']\n\
    \    assert match_parens(lst) == 'No'\n    \"\"\"\n    lst = ['(())()', '(())',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(()', '()']\n    lst = [x\
    \ for x in lst if x.count('(') == x.count(')')]\n    lst = [x for x in lst if\
    \ x.count('(') == x.count(')')]\n    lst = [x for x in lst if x.count('(') ==\
    \ x.count(')')]\n    lst = [x for x in lst if x.count('(') == x.count(')')]\n\
    \    lst = [x for x in lst if x.count('(') == x.count(')')]\n    lst = [x for\
    \ x in lst if x.count('(') == x.count(')')]\n    lst = [x for x in lst if x.count('(')\
    \ == x.count(')')]\n    lst = [x for x in lst if x.count('(') == x.count(')')]\n\
    \    lst = [x for x in lst if x.count('(') == x.count(')')]\n    lst = [x for\
    \ x in lst if x.count('(') == x.count(')')]\n    lst = [x for x in lst if x.count('(')\
    \ == x.count(')')]\n    lst = [x for x in lst if x.count('(') == x.count(')')]\n\
    \    lst = [x for x in lst if x.count('(') == x.count(')')]\n    lst = [x for\
    \ x in lst if x.count('(') == x.count(')')]\n    lst = [x for x in lst if x.count('(')\
    \ == x.count(')')]\n    lst = [x for x in lst if x.count('(') == ", "        \
    \    lst = ['(())()', '())']\n            print(match_parens(lst))\n         \
    \   # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    assert\
    \ match_parens(['(())()']) == 'Yes'\n    assert match_parens(['())']) == 'No'\n\
    \    assert match_parens(['(()())']) == 'Yes'\n    assert match_parens(['(())()()'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())']) == 'Yes'\n    assert match_parens(['(()())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())']) == 'Yes'\n    assert\
    \ match_parens(['(()())(())(())(())(())']) == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())']) == 'Yes'\n\
    \    assert match_parens(['(()())(())(())(())(())(())(())(())(())']) == 'Yes'\n\
    \    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())']) ==\
    \ 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())'])\
    \ == 'Yes'\n    assert match_parens(['(()())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(())(",
  "            match_parens(['(())()', '()'])\n            match_parens(['(())', '(())'])\n\
    \            match_parens(['(()', '(())'])\n            match_parens(['(()', '()'])\n\
    \            match_parens(['()', '(())'])\n            match_parens(['()', '()'])\n\
    \            match_parens(['()', ''])\n            match_parens(['', ''])\n  \
    \          match_parens(['()', '()', ''])\n            match_parens(['(())', '(())',\
    \ ''])\n            match_parens(['(())', '(())', '()'])\n            match_parens(['(())',\
    \ '(())', '(())'])\n            match_parens(['(())', '(())', '(())()'])\n   \
    \         match_parens(['(())', '(())', '(())()()'])\n            match_parens(['(())',\
    \ '(())', '(())()()()'])\n            match_parens(['(())', '(())', '(())()()()()'])\n\
    \            match_parens(['(())', '(())', '(())()()()()()'])\n            match_parens(['(())',\
    \ '(())', '(())()()()()()()'])\n            match_parens(['(())', '(())', '(())()()()()()()()'])\n\
    \            match_parens(['(())', '(())', '(())()()()()()()()()'])\n        \
    \    match_parens(['(())', '(())', '(())()()()()()()()()'])\n            match_parens(['(())',\
    \ '(())', '(())()()()()()()()()()'])\n            match_parens(['(())', '(())',\
    \ '(())()()()()()()()()()()'])\n            match_parens(['(())', '(())', '(())()()()()()()()()()()()'])\n\
    \            match_parens(['(())', '(())', '(())()()()()()()()()()()()'])\n  \
    \          match_parens(['(())', '(())', '(())()()()()()()()()()()()'])\n    \
    \        match_parens(['(())', '(())', '(())()()()()()()()()()()()'])\n      \
    \      match_parens(['(())', '(())', '(())()()()()()()()()()()()()'])\n      \
    \      match_parens(['(())', '(())', '(())()()", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: Yes\n  \
    \          \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # Output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_paren", "            lst = ['(())()', '())']\n      \
    \      print(match_parens(lst))\n            # output: Yes\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_", "            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # ",
  "    assert match_parens(['(', '(())', '(()())']) == 'Yes'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(())', '(()())']) == 'No'\n    assert match_parens(['(',\
    \ '(())', '(()())']) == 'No'\n    assert match_parens(['(', '(())', '(()())'])\
    \ == 'No'\n    assert match_parens(['(', '(())', '(()())']) == 'No'\n    assert\
    \ match_parens(['(', '(", "    lst = ['(())()', '())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(())()', '(())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(())()', '(())()']\n    assert match_parens(lst) == 'No'\n   \
    \ lst = ['(())()', '(())()', '(())()', '(())']\n    assert match_parens(lst) ==\
    \ 'No'\n    lst = ['(())()', '(())()', '(())()', '(())()']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()', '(())()', '(())()', '(())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())']", "            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'Yes'\n         \
    \   \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    lst = list(lst)\n    lst.reverse()\n    for x\
    \ in lst:\n        if x == '(':\n            stack.append(x)\n        elif x ==\
    \ ')':\n            if len(stack) == 0:\n                return 'No'\n       \
    \     else:\n                stack.pop()\n    return stack == []\n", "       \
    \     lst = ['(())()', '())']\n            match_parens(lst)\n            # output:\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # output: 'No'\n            \"\"\"\n        \
    \    lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # output:\
    \ 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n           \
    \ match_parens(lst)\n            # output", "            lst = ['(())', '()']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())', '()']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '()']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())', '(())']\n\
    \            ", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n   \
    \         match_parens(lst)\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())()', '(())']\n            match_parens(lst)\n       \
    \     # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "    lst = ['(())()', '())']\n\
    \    assert match_parens(lst) == 'Yes'\n    \"\"\"\n    stack = []\n    for s\
    \ in lst:\n        if s == '(':\n            stack.append(s)\n        elif s ==\
    \ ')':\n            if len(stack) == 0:\n                return 'No'\n       \
    \     else:\n                stack.pop()\n        else:\n            if len(stack)\
    \ == 0:\n                return 'No'\n            elif stack[-1] == '(':\n   \
    \             stack.pop()\n            elif stack[-1] == ')':\n              \
    \  stack.pop()\n                stack.append(s)\n            else:\n         \
    \       return 'No'\n    return 'Yes'\n", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    stack.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.append(lst[0])", "    lst = ['(())()', '())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()()']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(())()', '(())()()', '(())()()()']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(())()()', '(())()()()', '(())()()()()']\n  \
    \  assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())()()', '(())()()()',\
    \ '(())()()()()', '(())()()()()()']\n    assert match_parens(lst) == 'No'\n  \
    \  \"\"\"\n    stack = []\n    stack.append(lst[0])\n    lst = lst[1:]\n    \n\
    \    \n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n        else:\n      \
    \      return 'No'\n    \n    if len(stack) == 0:\n        return 'Yes'\n    else:\n\
    \        return 'No'\n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # 'Yes'\n            \"\"\
    \"\n            lst = ['(())()', '())']\n            match_parens(lst)\n     \
    \       # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n   \
    \         match_parens(lst)\n            # 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_paren", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())']\n            print(match_paren", " \
    \           lst = ['(())()', '())']\n            print(match_parens(lst))\n  \
    \          # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n   \
    \ for s in lst:\n        if s == '(':\n            stack.append(s)\n        elif\
    \ s == ')':\n            if len(stack) == 0:\n                return 'No'\n  \
    \          else:\n                stack.pop()\n    if len(stack) == 0:\n     \
    \   return 'Yes'\n    else:\n        return 'No'\n", "    lst = ['(())()', '())']\n\
    \    match_parens(lst)\n    \"\"\"\n    stack = []\n    stack.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n\
    \    lst.append(lst[0])\n    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n\
    \    lst.pop(0)\n    lst.reverse()\n    lst.append(lst[0])\n    lst.pop(0)\n \
    \   lst.reverse()\n    lst.append(lst[0])\n    lst.pop", "    lst = ['(())', '(())()']\n\
    \    match_parens(lst)\n    \"\"\"\n    stack = []\n    for elem in lst:\n   \
    \     if elem == '(':\n            stack.append(elem)\n        elif elem == ')':\n\
    \            if len(stack) == 0:\n                return 'No'\n            else:\n\
    \                stack.pop()\n    if len(stack) != 0:\n        return 'Yes'\n\
    \    else:\n        return 'No'\n", "            lst = ['(())()', '())']\n   \
    \         print(match_parens(lst))\n            # output: Yes\n            \"\"\
    \"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: No\n\
    \            \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()', '(())()']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())', '(())()', '(())()', '(())()', '(())()']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()']\n            print(match_parens(lst))\n            # output: No\n\
    \            \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n    \
    \        print(match_parens(lst))\n            # output: Yes\n            \"\"\
    \"\n            lst = ['(())()', '(())', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n      \
    \      # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()", "         \
    \   match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_parens(['(())()',\
    \ '(())', '()'])\n            match_parens(['(())()', '(())', '()'])\n       \
    \     match_parens(['(())()', '(())', '()'])\n            match_", "    lst =\
    \ ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for\
    \ s in lst:\n        if s == '(':\n            stack.append(s)\n        elif s\
    \ == ')':\n            if len(stack) == 0:\n                return 'No'\n    \
    \        else:\n                stack.pop()\n        else:\n            return\
    \ 'No'\n    return 'Yes'\n", "    lst = ['(())()', '())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())', '())']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(())', '(())']\n    assert match_parens(lst) == 'Yes'\n    lst =\
    \ ['(()', '())']\n    assert match_parens(lst) == 'No'\n    lst = ['(()', '(())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(()', '(()', '())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(()', '(()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(()', '(()', '(()', '())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(()', '(()', '(()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(()', '(()', '(()', '(()', '())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(()', '(()', '(()', '(()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(()', '(()', '(()', '(()', '(()', '())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(()', '(()', '(()', '(()', '(()', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(()', '(()', '(()', '(()', '(()', '(()', '())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(()', '(()', '(()',\
    \ '(()', '(()', '(()', '(()', '())']\n    assert match_parens(lst) == 'No'\n \
    \   lst = ['(()', '(()', '(()', '(()', '(()', '(()', '(()', '(())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(()', '(()', '(()', '(()', '(()', '(()',\
    \ '(()', '(()', '())']\n    assert match_parens(lst) == 'No'\n    lst = ['(()',\
    \ '(()', '(()', '(()', '(()', '(()', '(()', '(()', '(())']\n    assert ", "  \
    \  lst = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())', '(())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())', '(()())', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())', '(()())', '(())', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())', '(()())', '(())', '(())()',\
    \ '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())', '(()())', '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())', '(()())', '(())', '(())()',\
    \ '(())', '(())()']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())', '(())', '(()())', '(())', '(())()', '(())', '(())()']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())', '(()())',\
    \ '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(())()', '(()())', '(())', '(()())', '(())', '(())()', '(())', '(())()']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())',\
    \ '(()())', '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())', '(()())', '(())', '(())()',\
    \ '(())', '(())()']\n    assert match_parens(lst) == 'Yes'\n", "            lst\
    \ = ['(())()', '())']\n            print(match_parens(lst))\n            # output:\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n \
    \           lst = ['(())()', '(())']\n            print(match_parens(lst))\n \
    \           # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(()())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n", "    lst = ['(())()', '())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(())']\n    assert\
    \ match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n    assert match_parens(lst)\
    \ == 'No'\n    lst = ['(())()', '(()())', '(())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    \"\"\"\n    stack = []\n    for s in lst:\n        stack.append(s)\n\
    \        if s == '(':\n            stack.append(')')\n        elif s == ')':\n\
    \            if len(stack) == 0:\n                return 'No'\n            top\
    \ = stack.pop()\n            if top != '(':\n                return 'No'\n   \
    \ return match_parens(stack)\n", "            lst = ['(())()', '())']\n      \
    \      match_parens(lst)\n            # 'Yes'\n            \"\"\"\n          \
    \  lst = ['(())()', '())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n       \
    \     match_parens(lst)\n            # 'Yes'\n            \"\"\"\n           \
    \ lst = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()", "    assert match_parens(['(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(", "    lst =\
    \ ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(()', '(())']\n \
    \   assert match_parens(lst) == 'No'\n    lst = ['(()', '(()())']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(()', '(()())', '(())()']\n    assert\
    \ match_parens(lst) == 'Yes'\n    lst = ['(()', '(()())', '(())', '(())()']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(()', '(()())', '(())', '(()())',\
    \ '(())()']\n    assert match_parens(lst) == 'No'\n    lst = ['(()', '(()())',\
    \ '(())', '(()())', '(())', '(())()']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(()', '(()())', '(())', '(()())', '(())', '(())()', '(())()']\n \
    \   assert match_parens(lst) == 'Yes'\n    lst = ['(()', '(()())', '(())', '(()())',\
    \ '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(()', '(()())', '(())', '(()())', '(())', '(())()', '(())', '(())()']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(()', '(()())', '(())', '(()())',\
    \ '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst) == 'Yes'\n\
    \    lst = ['(()', '(()())', '(())', '(()())', '(())', '(())()', '(())', '(())()']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(()', '(()())', '(())', '(()())',\
    \ '(())', '(())()', '(())', '(())()']\n    assert match_parens(lst) == 'No'\n\
    \    lst = ['(()', '(()())', '(())', '(()())', '(())', '(())()', '(())', '(())()']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(()', '(()())', '(())', '(()())',\
    \ '(())', '(())()', '(())', '(())()']\n    assert match_", "    lst = ['(())()',\
    \ '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if len(stack) == 0:\n                return 'No'\n            else:\n\
    \                stack.pop()\n        else:\n            return 'No'\n    if len(stack)\
    \ == 0:\n        return 'Yes'\n    else:\n        return 'No'\n", "    lst = ['(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '(())()']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()", "    lst = ['(())()',\
    \ '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if not stack:\n                return 'No'\n            top = stack.pop()\n\
    \            if top != ')':\n                return 'No'\n        else:\n    \
    \        return 'No'\n    return 'Yes'\n", "    lst = ['(())', '()']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if not stack:\n   \
    \             return 'No'\n            top = stack.pop()\n            if top !=\
    \ ')':\n                return 'No'\n        else:\n            return 'No'\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n      \
    \      match_parens(lst)\n            # 'No'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n      \
    \      match_parens(lst)\n            # 'No'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n      \
    \      match_parens(lst)\n            # 'No'\n            \"\"\"\n           \
    \ lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(())', '(())()']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()']\n            print(match_parens(lst))\n            # output:\
    \ No\n            \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()',\
    \ '(())()', '(())()']\n            print(match_parens(lst))\n            # output:\
    \ Yes\n            \"\"\"\n            lst = ['(())()', '(())', '(())()', '(())()',\
    \ '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n      \
    \      # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: Yes\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()', '(())()', '(())()', '(())()']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())',\
    \ '(())()', '(())()', '(())()", "            match_parens(['(', '(())', '(()())'])\n\
    \            match_parens(['(', '(())', '(()())', '(())'])\n            match_parens(['(',\
    \ '(())', '(()())', '(())', '()'])\n            match_parens(['(', '(())', '(()())',\
    \ '(())', '(', '()'])\n            match_parens(['(', '(())', '(()())', '(())',\
    \ '(', '(', '()'])\n            match_parens(['(', '(())', '(()())', '(())', '(',\
    \ '(', '(', '()'])\n            match_parens(['(', '(())', '(()())', '(())', '(',\
    \ '(', '(', '(', '()'])\n            match_parens(['(', '(())', '(()())', '(())',\
    \ '(', '(', '(', '(', '(', '()'])\n            match_parens(['(', '(())', '(()())',\
    \ '(())', '(', '(', '(', '(', '(', '(', '()'])\n            match_parens(['(',\
    \ '(())', '(()())', '(())', '(', '(', '(', '(', '(', '(', '(', '(', '()'])\n \
    \           match_parens(['(', '(())', '(()())', '(())', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '()'])\n            match_parens(['(', '(())', '(()())',\
    \ '(())', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '()'])\n         \
    \   match_parens(['(', '(())', '(()())', '(())', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '()'])\n            match_parens(['(', '(())', '(()())',\
    \ '(())', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '()'])\n    \
    \        match_parens(['(', '(())', '(()())', '(())', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '()'])\n            match_parens(['(', '(())',\
    \ '(()())', '(())', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '()'])\n\
    \            match_parens(['(', '(())', '(()())', '(", "    lst = ['(())()', '())']\n\
    \    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n      \
    \  if s == '(':\n            stack.append(s)\n        elif s == ')':\n       \
    \     if len(stack) == 0:\n                return 'No'\n            else:\n  \
    \              stack.pop()\n        else:\n            return 'No'\n    return\
    \ 'Yes'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())', '(())']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())',\
    \ '(()()())']\n    assert match_parens(lst) == 'No'\n    \"\"\"\n    stack = []\n\
    \    for s in lst:\n        if s == '(':\n            stack.append(s)\n      \
    \  elif s == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            else:\n                stack.pop()\n        else:\n            if\
    \ len(stack) == 0:\n                return 'No'\n            elif stack[-1] ==\
    \ '(':\n                stack.append(s)\n            elif stack[-1] == ')':\n\
    \                stack.pop()\n            else:\n                return 'No'\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n   \
    \ for ele in lst:\n        if ele == '(':\n            stack.append(ele)\n   \
    \     elif ele == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n    if len(stack) != 0:\n\
    \        return 'No'\n    else:\n        return 'Yes'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: Yes\n  \
    \          \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: Yes\n           \
    \ \"\"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            print(match_parens(lst))\n            # output: No\n            \"\
    \"\"\n            lst = ['(())()', '(()())']\n            print(match_parens(lst))\n\
    \            # output: No\n", "    lst = ['(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(", "            lst = ['(())()', '())']\n  \
    \          print(match_parens(lst))\n            # output: 'Yes'\n           \
    \ \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'No'\n        \
    \    \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'No'\n        \
    \    \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    \"\"\"\n   \
    \ stack = []\n    for el in lst:\n        if el == '(':\n            stack.append(el)\n\
    \        elif el == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n    return stack == []\n",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n        \
    \    match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n  \
    \          \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_paren", "            lst\
    \ = ['(())()', '())']\n            print(match_parens(lst))\n            # output:\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ print(match_parens(lst))\n            # output: 'No'\n            \"\"\"\n \
    \           lst = ['(())()', '(())']\n            print(match_parens(lst))\n \
    \           # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())']\n            print(match_parens(lst))\n     \
    \       lst = ['(())()', '(())", "    lst = ['(())()', '())']\n    print(match_parens(lst))\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if not stack:\n   \
    \             return 'No'\n            top = stack.pop()\n            if top !=\
    \ '(':\n                return 'No'\n        else:\n            return 'No'\n\
    \    return 'Yes'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())', '(()', '(()()', '(())()',\
    \ '(())', '(())()', '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()',\
    \ '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()',\
    \ '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())',\
    \ '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()',\
    \ '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()',\
    \ '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())',\
    \ '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()',\
    \ '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()',\
    \ '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())',\
    \ '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()',\
    \ '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()',\
    \ '(())()', '(())', '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())',\
    \ '(())', '(()()', '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()',\
    \ '(())', '(()', '(()()', '(())()', '(())', '(())', '(()()', '(", "          \
    \  lst = ['(())()', '())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n         \
    \   match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_paren", "    lst = ['(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())']\n\
    \            print(match_parens(lst))\n            lst = ['(())()', '(())", " \
    \           lst = ['(())()', '())']\n            print(match_parens(lst))\n  \
    \          # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            print(match_parens(lst))\n            # output: 'No'\n          \
    \  \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n   \
    \         match_parens(lst)\n            # output: 'No'\n            \"\"\"\n\
    \            lst = ['(())()', '(())']\n            match_parens(lst)\n       \
    \     # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # 'Yes'\n            \"\"\
    \"\n            lst = ['(())()', '())']\n            match_parens(lst)\n     \
    \       # 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n   \
    \         match_parens(lst)\n            # 'Yes'\n            \"\"\"\n       \
    \     lst = ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'Yes'\n            \"\"\"\n         \
    \   lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(()())']\n            match_parens(lst)\n          \
    \  # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n     \
    \       match_parens(lst)\n            # 'No'\n            \"\"\"\n          \
    \  lst = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'No'\n", "    assert match_parens(['(())()']) == 'Yes'\n    assert\
    \ match_parens(['())']) == 'No'\n    assert match_parens(['(()', '(()()']) ==\
    \ 'Yes'\n    assert match_parens(['(()', '(()()', '(()()()']) == 'No'\n    \"\"\
    \"\n    stack = []\n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            stack.pop()\n        else:\n            if stack:\n      \
    \          stack[-1] += s\n            else:\n                return 'No'\n  \
    \  return 'Yes'\n", "    lst = ['(())()', '())']\n    match_parens(lst)\n    \"\
    \"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n            stack.append(s)\n\
    \        elif s == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            else:\n                stack.pop()\n    if len(stack) != 0:\n\
    \        return 'Yes'\n    else:\n        return 'No'\n", "    lst = ['(())()',\
    \ '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if len(stack) == 0:\n                return 'No'\n            top\
    \ = stack.pop()\n            if top != ')':\n                return 'No'\n   \
    \     else:\n            return 'No'\n    return 'Yes'\n", "    lst = ['(())()',\
    \ '())']\n    assert match_parens(lst) == 'Yes'\n    \"\"\"\n    stack = []\n\
    \    for s in lst:\n        if s == '(':\n            stack.append(s)\n      \
    \  elif s == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            else:\n                stack.pop()\n    return stack == []\n", " \
    \           lst = ['(())()', '())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n       \
    \     match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'No'\n            \"\"\"\n            lst = ['(())()', '(()())']\n       \
    \     match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(()())']\n            match_parens(lst)\n            # 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(()())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(()())']\n            match_parens(lst)\n         \
    \   # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(()())']\n    \
    \        match_parens(lst)\n            # 'Yes'\n            \"\"\"\n        \
    \    lst = ['(())()', '(()())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"", "    lst = ['(', '(())', '(()())', '(())()', '()(())',\
    \ '()()()', '(()(())', '()(()())', '(()()())', '()(())()', '(()(())()']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'No'\n\
    \            elif stack[-1] == '(':\n                stack.pop()\n           \
    \ elif stack[-1] == '(':\n                stack.pop()\n                stack.append(s)\n\
    \            elif stack[-1] == '(':\n                stack.pop()\n           \
    \     stack.append(s)\n                stack.append(s)\n            elif stack[-1]\
    \ == '(':\n                stack.pop()\n                stack.append(s)\n    \
    \            stack.append(s)\n                stack.append(s)\n            elif\
    \ stack[-1] == '(':\n                stack.pop()\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n            elif stack[-1] == '(':\n                stack.pop()\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \            elif stack[-1] == '(':\n                stack.pop()\n           \
    \     stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n            elif stack[-1] == '(':\n                stack.pop()\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \  elif stack[-1] == '(':\n                stack.pop()\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n            elif stack[-1] == '(':\n                stack.pop()\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n\
    \                stack.append(s)\n                stack.append(s)\n          \
    \      stack.append(s)\n                stack.append(s)\n                stack.append(s)\n",
  "            lst = ['(())()', '())']\n            match_parens(lst)\n          \
    \  # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output", "            lst = ['(())()',\
    \ '())']\n            match_parens(lst)\n            # output: 'Yes'\n       \
    \     \"\"\"\n            lst = ['(())()', '())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'Yes'\n      \
    \      \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            match_parens(lst)\n            # output: 'No'\n       \
    \     \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # output", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # Output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # Output", "    \
    \        lst = ['(())()', '())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '())']\n           \
    \ match_parens(lst)\n            # 'No'\n            \"\"\"\n            lst =\
    \ ['(())()', '(())']\n            match_parens(lst)\n            # 'No'\n    \
    \        \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'No'\n            \"\"\"\n     \
    \       lst = ['(())()', '(())']\n            match_parens(lst)\n            #\
    \ 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n          \
    \  match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_parens(lst)\n           \
    \ # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n        \
    \    match_parens(lst)\n            # 'Yes'\n            \"\"\"\n            lst\
    \ = ['(())()', '(())']\n            match_parens(lst)\n            # 'Yes'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            match_parens(lst)\n\
    \            # 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # 'Yes'\n            \"\"\"\n    \
    \        lst = ['(())()', '(())']\n            match_paren", "    lst = ['(())',\
    \ '()']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n\
    \        if s == '(':\n            stack.append(s)\n        elif s == ')':\n \
    \           if len(stack) == 0:\n                return 'No'\n            else:\n\
    \                stack.pop()\n    if len(stack) != 0:\n        return 'No'\n \
    \   else:\n        return 'Yes'\n", "            lst = ['(())()', '())']\n   \
    \         match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\n\
    \            lst = ['(())()', '())']\n            match_parens(lst)\n        \
    \    # output: 'No'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'No'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output: 'Yes'\n            \"\"\"\n            lst = ['(())()', '(())']\n\
    \            match_parens(lst)\n            # output: 'Yes'\n            \"\"\"\
    \n            lst = ['(())()', '(())']\n            match_parens(lst)\n      \
    \      # output", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n   \
    \ for x in lst:\n        if x == '(':\n            stack.append(x)\n        elif\
    \ x == ')':\n            if len(stack) == 0:\n                return 'No'\n  \
    \          else:\n                stack.pop()\n    return stack == []\n", "  \
    \  lst = ['(())', '()']\n    match_parens(lst)\n    \"\"\"\n    stack = []\n \
    \   for s in lst:\n        if s == '(':\n            stack.append(s)\n       \
    \ elif s == ')':\n            if len(stack) == 0:\n                return 'No'\n\
    \            else:\n                stack.pop()\n    if len(stack) == 0:\n   \
    \     return 'Yes'\n    else:\n        return 'No'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # Output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # Output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for s in lst:\n        if s == '(':\n       \
    \     stack.append(s)\n        elif s == ')':\n            if len(stack) == 0:\n\
    \                return 'No'\n            else:\n                stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'No'\n\
    \            elif stack[-1] == '(':\n                stack.append(s)\n       \
    \     elif stack[-1] == ')':\n                stack.pop()\n            else:\n\
    \                return 'No'\n    return 'Yes'\n", "            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'No'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output", "    lst = ['(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(',\
    \ '(', '(', '(', '(', '(', '(", "    lst = ['(())()', '())']\n    match_parens(lst)\n\
    \    \"\"\"\n    stack = []\n    for elem in lst:\n        if elem == '(':\n \
    \           stack.append(elem)\n        elif elem == ')':\n            if len(stack)\
    \ == 0:\n                return 'No'\n            stack.pop()\n        else:\n\
    \            if len(stack) == 0:\n                return 'No'\n            if\
    \ elem not in stack:\n                return 'No'\n    return 'Yes'\n", "    lst\
    \ = ['(())()', '())']\n    print(match_parens(lst))\n    \"\"\"\n    stack = []\n\
    \    for el in lst:\n        if el == '(':\n            stack.append(el)\n   \
    \     elif el == ')':\n            if len(stack) == 0:\n                return\
    \ 'No'\n            stack.pop()\n    if len(stack) != 0:\n        return 'Yes'\n\
    \    return 'No'\n", "            lst = ['(())()', '())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '())']\n            print(match_parens(lst))\n            # output: 'No'\n \
    \           \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'No'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output: 'Yes'\n\
    \            \"\"\"\n            lst = ['(())()', '(())']\n            print(match_parens(lst))\n\
    \            # output: 'Yes'\n            \"\"\"\n            lst = ['(())()',\
    \ '(())']\n            print(match_parens(lst))\n            # output", "    lst\
    \ = ['(())()', '())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(())']\n    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())']\n\
    \    assert match_parens(lst) == 'No'\n    lst = ['(())()', '(()())', '(())()']\n\
    \    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())', '(())()',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())()', '(()())', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(()())', '(()())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())()', '(()())', '(()())', '(()())',\
    \ '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()', '(()())',\
    \ '(())()', '(()())', '(()())', '(()())', '(()())', '(()())']\n    assert match_parens(lst)\
    \ == 'Yes'\n    lst = ['(())()', '(()())', '(())()', '(()())', '(()())', '(()())',\
    \ '(()())', '(()())', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(()())', '(()())', '(()())', '(()())',\
    \ '(()())', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())', '(())()', '(()())', '(()())', '(()())', '(()())', '(()())', '(()())',\
    \ '(()())', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst = ['(())()',\
    \ '(()())', '(())()', '(()())', '(()())', '(()())', '(()())', '(()())', '(()())',\
    \ '(()())', '(()())', '(()())']\n    assert match_parens(lst) == 'Yes'\n    lst\
    \ = ['(())()', '(()())', '(())()', '(()())', '(()())", "    lst = ['(())()', '())']\n\
    \    assert match_parens(lst) == 'Yes'\n    \"\"\"\n    stack = []\n    for x\
    \ in lst:\n        if x == '(':\n            stack.append(x)\n        elif x ==\
    \ ')':\n            if len(stack) == 0:\n                return 'No'\n       \
    \     else:\n                stack.pop()\n    if len(stack) != 0:\n        return\
    \ 'No'\n    else:\n        return 'Yes'\n", "    lst = ['(())()', '())']\n   \
    \ match_parens(lst)\n    \"\"\"\n    stack = []\n    for s in lst:\n        if\
    \ s == '(':\n            stack.append(s)\n        elif s == ')':\n           \
    \ if len(stack) == 0:\n                return 'No'\n            stack.pop()\n\
    \        else:\n            if len(stack) == 0:\n                return 'No'\n\
    \            stack[-1] += s\n    return 'Yes'\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

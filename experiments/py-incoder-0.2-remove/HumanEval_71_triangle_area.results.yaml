name: HumanEval_71_triangle_area
language: py
results:
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    \n    if a + b > c and b + c > a and c + a > b:\n        area = (a * b +\
    \ b * c + c * a) / 2.0\n        return round(area, 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0nz7yxjf.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    sides =\
    \ [a, b, c]\n    \n    sum_of_sides = sum(sides)\n    \n    if sum_of_sides >\
    \ sides[2]:\n        return round(sum_of_sides / 2, 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2zcdf3_m.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 42)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a : 5\n            b : 3\n            c\
    \ : 4\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\n\
    \    \n    if a + b > c and b + c > a and c + a > b:\n        return round( (\
    \ ( (a + b) * (b + c) ) - ( (b + c) * (c + a) ) ) / 2, 2 )\n    else:\n      \
    \  return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ojfza93.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    if a + b > c and b + c > a and c + a > b:\n        return round(float(a\
    \ + b + c) / 2, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpawpolm2n.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            5.0000\n            \n         \
    \   Input:\n            a =   6\n            b =   4\n            c =   1\n  \
    \          Output:\n            -1.0000\n            \n            Input:\n  \
    \          a =   6\n            b =   4\n            c =   2\n            Output:\n\
    \            2.0000\n            \n            Input:\n            a =   6\n \
    \           b =   4\n            c =   3\n            Output:\n            3.0000\n\
    \            \n            Input:\n            a =   6\n            b =   4\n\
    \            c =   4\n            Output:\n            4.0000\n            \n\
    \            Input:\n            a =   6\n            b =   4\n            c =\
    \   5\n            Output:\n            5.0000\n            \n            Input:\n\
    \            a =   6\n            b =   4\n            c =   6\n            Output:\n\
    \            6.0000\n            \n            Input:\n            a =   6\n \
    \           b =   4\n            c =   7\n            Output:\n            7.0000\n\
    \            \n            Input:\n            a =   6\n            b =   4\n\
    \            c =   8\n            Output:\n            8.0000\n            \n\
    \            Input:\n            a =   6\n            b =   4\n            c =\
    \   9\n            Output:\n            9.0000\n            \n            Input:\n\
    \            a =   6\n            b =   4\n            c =   10\n            Output:\n\
    \            10.0000\n            \n            Input:\n            a =   6\n\
    \            b =   4\n            c =   11\n            Output:\n            11.0000\n\
    \            \n            Input:\n            a =   6\n            b =   4\n\
    \            c =   12\n            Output:\n            12.0000\n            \n\
    \            Input:\n            a =   6\n            b =   4\n            c =\
    \   13\n            Output:\n            13.0000\n            \n            Input:\n\
    \            a =   6\n            b =   4\n            c =   14\n            Output:\n\
    \            14.0000\n            \n            Input:\n            a =   6\n\
    \            b =   4\n            c =   15\n            Output:\n            15.0000\n\
    \            \n            Input:\n            a =   6\n            b =   4\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmt5j1lxn.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpctplm8bp.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        Input: a = 10, b = 5, c = 10\n            Output: -1\n            \"\"\
    \"\n    \"\"\"\n    \n    \n    if a + b > c:\n        return -1\n    elif a +\
    \ c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n\
    \        return (a + b + c) / 2\n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk8o_c2jb.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.0\n    >>> triangle_area(3, 4, 6)\n\
    \    0.0\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    sides\
    \ = [a, b, c]\n    \n    sum_of_sides = sum(sides)\n    \n    if sum_of_sides\
    \ <= sides[2]:\n        return round(sum_of_sides, 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgscrvaw3.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 42)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgktryq2a.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   4\n            Output:\n            3.14\n            \"\"\"\n    \"\
    \"\"\n    \n    \n    if a + b > c and a + c > b and b + c > a:\n        area\
    \ = 0.5 * (a + b + c) * 0.5\n        return round(area, 2)\n    else:\n      \
    \  return -1\n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnc868cxe.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c and b + c > a and c + a > b:\n \
    \       return round( ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeaozg204.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.0\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    \"\"\"\n    \n    sides = [a, b, c]\n    \n    sum_of_sides = sum(sides)\n\
    \    \n    if sum_of_sides <= sides[2]:\n        return round(sum_of_sides, 2)\n\
    \    else:\n        return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 6)\n</cell>\n<cell>\ntriangle_area(3, 4, 7)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 8)\n</cell>\n<cell>\ntriangle_area(3, 4, 9)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 10)\n</cell>\n<cell>\ntriangle_area(3, 4, 11)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 12)\n</cell>\n<cell>\ntriangle_area(3, 4, 13)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 14)\n</cell>\n<cell>\ntriangle_area(3, 4, 15)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 16)\n</cell>\n<cell>\ntriangle_area(3, 4, 17)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 18)\n</cell>\n<cell>\ntriangle_area(3, 4, 19)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 20)\n</cell>\n<cell>\ntriangle_area(3, 4, 21)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 22)\n</cell>\n<cell>\ntriangle_area(3, 4, 23)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 24)\n</cell>\n<cell>\ntriangle_area(3, 4, 25)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 26)\n</cell>\n<cell>\ntriangle_area(3, 4, 27)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 28)\n</cell>\n<cell>\ntriangle_area(3, 4, 29)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 30)\n</cell>\n<cell>\ntriangle_area(3, 4, 31)\n</cell>\n\
    <cell>\ntriangle_area(3, 4, 32)\n</cell>\n<cell>\ntriangle_area(3, 4, 33)\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeaohaef1.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 126)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        return -1\n    elif b + c > a:\n        return -1\n    elif\
    \ c + a > b:\n        return -1\n    else:\n        return round( ( (a + b + c)\
    \ / 2 ), 2)\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 6)\n</cell>\n<cell>\ntriangle_area(3, 4, 7)\n</cell>\n<text>\nProblem 4\n\
    Write a function that takes a list as an argument and returns a list with the\
    \ square of all the numbers in the list. \nExample: \n    >>> square_of_list([])\n\
    \    []\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\
    \    [1, 4, 9]\n    >>> square_of_list([1,2,3])\n\ndef check(candidate):\n   \
    \ assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n   \
    \ assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n \
    \   assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb8hx52oy.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 106)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_vc6fkq7.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        Input: a = 10, b = 5, c = 10\n            Output: -1\n            \"\"\
    \"\n    \n    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgwzgm5lv.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  1\n            Output:\n            4.5\n            \"\"\"\n         \
    \   Input:\n            a =  5\n            b =  3\n            c =  4\n     \
    \       Output:\n            -1\n    \"\"\"\n    \n    if a + b > c and a + c\
    \ > b and b + c > a:\n        area = 0.5 * (a + b + c)\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6h7zfstk.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 2\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n\
    \        return -1\n    \ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvr7_3zfr.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 2\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area = (a * b + c) / 2\n        return round(area, 2)\n  \
    \  else:\n        return -1\n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqg503904.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ((a + b + c) / 2) ** (1/2) , 2)\n    else:\n     \
    \   return -1\n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9mjo0uog.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 5.0000\n  \
    \          Input: a = 10, b = 5, c = 10\n            Output: -1.0000\n       \
    \     Input: a = 10, b = 5, c = 15\n            Output: -1.0000\n            Input:\
    \ a = 10, b = 5, c = 20\n            Output: -1.0000\n            Input: a = 10,\
    \ b = 5, c = 25\n            Output: 5.0000\n            Input: a = 10, b = 5,\
    \ c = 30\n            Output: 5.0000\n            Input: a = 10, b = 5, c = 35\n\
    \            Output: 5.0000\n            Input: a = 10, b = 5, c = 30\n      \
    \      Output: 5.0000\n            Input: a = 10, b = 5, c = 25\n            Output:\
    \ 5.0000\n            Input: a = 10, b = 5, c = 20\n            Output: 5.0000\n\
    \            Input: a = 10, b = 5, c = 15\n            Output: 5.0000\n      \
    \      Input: a = 10, b = 5, c = 10\n            Output: 5.0000\n            Input:\
    \ a = 10, b = 5, c = 5\n            Output: 5.0000\n            Input: a = 10,\
    \ b = 5, c = 1\n            Output: 5.0000\n            Input: a = 10, b = 5,\
    \ c = -1\n            Output: 5.0000\n            Input: a = 10, b = 5, c = -2\n\
    \            Output: 5.0000\n            Input: a = 10, b = 5, c = -3\n      \
    \      Output: 5.0000\n            Input: a = 10, b = 5, c = -4\n            Output:\
    \ 5.0000\n            Input: a = 10, b = 5, c = -5\n            Output: 5.0000\n\
    \            Input: a = 10, b = 5, c = -6\n            Output: 5.0000\n      \
    \      Input: a = 10, b = 5, c = -7\n            Output: 5.0000\n            Input:\
    \ a = 10, b = 5, c = -8\n            Output: 5.0000\n            Input: a = 10,\
    \ b = 5, c = -9\n            Output: 5.0000\n            Input: a = 10, b = 5,\
    \ c = -10\n            Output: 5.0000\n            Input: a = 10, b = 5, c = -11\n\
    \            Output: 5.0000\n            Input: a = 10, b = 5, c = -12\n     \
    \       Output: 5.0000\n            Input: a = 10, b = 5, c = -13\n          \
    \  Output: 5.0000\n            Input: a = 10, b = 5, c = -14\n            Output:\
    \ 5.0000\n            Input: a = 10, b = 5, c = -15\n            Output: 5.0000\n\
    \            Input: a = 10, b = 5, c = -16\n            Output: 5.0000\n     \
    \       Input: a = 10, b = 5, c = -17\n            Output: 5.0000\n          \
    \  Input: a = 10, b = 5, c = -18\n            Output: 5.0000\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpby0llen0.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b=2\n            c=4\n\
    \            Output:\n            4.5\n            \"\"\"\n    \"\"\"\n    \n\
    \    if a + b > c and a + c > b and b + c > a:\n        area = 0.5 * (a + b +\
    \ c)\n        return round(area, 2)\n    else:\n        return -1\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph37gsdyx.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    sides =\
    \ [a, b, c]\n    \n    sum_of_sides = sum(sides)\n    \n    if sum_of_sides >\
    \ sides[2]:\n        return round(sum_of_sides, 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 6)\n</cell>\n<cell>\ntriangle_area(3, 4, 7)\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes in a list of numbers and returns the sum of the numbers\
    \ in the list. \nIf the list is empty return 0\nIf the list has one number in\
    \ it return that number\nIf the list has two numbers in it return the first number\
    \ plus the sum of the second number\nIf the list has three numbers in it return\
    \ the first number plus the sum of the second number plus the sum of the third\
    \ number\nIf the list has more than three numbers in it return the first number\
    \ plus the sum of the second number plus the sum of the third number plus the\
    \ sum of the fourth number\nExamples:\n>>> sum([1, 2, 3])\n6\n>>> sum([1, 2, 3,\
    \ 4])\n10\n>>> sum([1, 2, 3, 4, 5])\n15\n>>> sum([1, 2, 3, 4, 5, 6])\n20\n>>>\
    \ sum([1, 2, 3, 4, 5, 6, 7])\n25\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8])\n30\n>>> sum([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])\n35\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n40\n\
    >>> sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\n45\n>>> sum([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12])\n50\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13])\n\
    55\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n60\n>>> sum([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n65\n>>> sum([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n70\n>>> sum([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17])\n75\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\n80\n>>> sum([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\n85\n>>> sum([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n90\n>>> sum([1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21])\n95\n>>>\
    \ sum([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9pxq222d.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 98)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b=10\n            c=10\n\
    \            Output:\n            12.5\n            Input:\n            a =10\n\
    \            b=10\n            c=11\n            Output:\n            -1\n   \
    \         Input:\n            a =10\n            b=11\n            c=10\n    \
    \        Output:\n            -1\n            Input:\n            a =11\n    \
    \        b=10\n            c=10\n            Output:\n            -1\n       \
    \     Input:\n            a =10\n            b=10\n            c=11\n        \
    \    Output:\n            -1\n            Input:\n            a =11\n        \
    \    b=11\n            c=10\n            Output:\n            -1\n           \
    \ Input:\n            a =10\n            b=11\n            c=11\n            Output:\n\
    \            -1\n            Input:\n            a =11\n            b=11\n   \
    \         c=11\n            Output:\n            -1\n            Input:\n    \
    \        a =10\n            b=10\n            c=10\n            Output:\n    \
    \        12.5\n            Input:\n            a =10\n            b=11\n     \
    \       c=10\n            Output:\n            12.5\n            Input:\n    \
    \        a =11\n            b=10\n            c=10\n            Output:\n    \
    \        12.5\n            Input:\n            a =10\n            b=10\n     \
    \       c=11\n            Output:\n            12.5\n            Input:\n    \
    \        a =11\n            b=11\n            c=10\n            Output:\n    \
    \        12.5\n            Input:\n            a =10\n            b=11\n     \
    \       c=11\n            Output:\n            12.5\n            Input:\n    \
    \        a =11\n            b=11\n            c=11\n            Output:\n    \
    \        12.5\n            Input:\n            a =10\n            b=10\n     \
    \       c=10\n            Output:\n            -1\n            Input:\n      \
    \      a =11\n            b=10\n            c=10\n            Output:\n      \
    \      -1\n            Input:\n            a =10\n            b=11\n         \
    \   c=10\n            Output:\n            -1\n            Input:\n          \
    \  a =11\n            b=11\n            c=10\n            Output:\n          \
    \  -1\n            Input:\n            a =10\n            b=10\n            c=11\n\
    \            Output:\n            -1\n            Input:\n            a =11\n\
    \            b=10\n            c=11\n            Output:\n            -1\n   \
    \         Input:\n            a =10\n            b=11\n            c=11\n    \
    \        Output:\n            \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpse46tzkh.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            3.14\n            \"\"\"\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqs4o4kiw.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    6.25\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptn9xj7a2.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            4.5\n            \"\"\"\n         \
    \   \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_wsts5o4.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 3, c = 3\n            Output: 2.00\n     \
    \       \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf2xlllj5.py\"\
    , line 10\n    Input: a = 2, b = 3, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6klk7b3m.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif\
    \ b + c > a:\n        return -1\n    else:\n        return round( ((a + b + c)\
    \ / 2) ** 0.5, 2)\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(3, 4, 6)\n</cell>\n<cell>\ntriangle_area(3, 4, 7)\n</cell>\n<text>\n\
    Problem 3\nWrite a function that takes in a list of numbers and returns the number\
    \ of positive integers less than or equal to the sum of the numbers in the list.\n\
    Example:\n    \n    >>> count_less_than_or_equal_to_sum([])\n    0\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3])\n    1\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n\
    \    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n  \
    \  2\n    >>> count_less_than_or_equal_to_sum([1, 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_sum([1,\
    \ 2, 3, 5])\n    2\n    >>> count_less_than_or_equal_to_\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrm1lpr_.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 102)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            5.00\n            Input:\n     \
    \       a =   5\n            b =   4\n            c =   6\n            Output:\n\
    \            -1.00\n            Input:\n            a =   5\n            b = \
    \  4\n            c =   5\n            Output:\n            5.00\n           \
    \ Input:\n            a =   5\n            b =   4\n            c =   6\n    \
    \        Output:\n            -1.00\n            Input:\n            a =   5\n\
    \            b =   4\n            c =   7\n            Output:\n            -1.00\n\
    \            Input:\n            a =   5\n            b =   4\n            c =\
    \   8\n            Output:\n            -1.00\n            Input:\n          \
    \  a =   5\n            b =   4\n            c =   9\n            Output:\n  \
    \          -1.00\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   10\n            Output:\n            -1.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   11\n            Output:\n\
    \            -1.00\n            Input:\n            a =   5\n            b = \
    \  4\n            c =   12\n            Output:\n            -1.00\n         \
    \   Input:\n            a =   5\n            b =   4\n            c =   13\n \
    \           Output:\n            -1.00\n            Input:\n            a =  \
    \ 5\n            b =   4\n            c =   14\n            Output:\n        \
    \    -1.00\n            Input:\n            a =   5\n            b =   4\n   \
    \         c =   15\n            Output:\n            -1.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   16\n            Output:\n\
    \            -1.00\n            Input:\n            a =   5\n            b = \
    \  4\n            c =   17\n            Output:\n            -1.00\n         \
    \   Input:\n            a =   5\n            b =   4\n            c =   18\n \
    \           Output:\n            -1.00\n            Input:\n            a =  \
    \ 5\n            b =   4\n            c =   19\n            Output:\n        \
    \    -1.00\n            Input:\n            a =   5\n            b =   4\n   \
    \         c =\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n \
    \   assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpib6vz5st.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b=20\n            c=30\n\
    \            Output:\n            50.00\n            \"\"\"\n    \"\"\"\n    \n\
    \    \n    if a + b > c and b + c > a and c + a > b:\n        return round( (\
    \ ( (a + b) * (b + c) ) - ( (b + c) * (c + a) ) ) / 2, 2 )\n    else:\n      \
    \  return -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl92rklhg.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a : 5\n            b : 4\n            c\
    \ : 3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\n\
    \    \n    if a + b > c and b + c > a and c + a > b:\n        return round( ((a\
    \ * b) + (b * c) + (c * a)) / (2 * a * b), 2)\n    else:\n        return -1\n\
    </cell>\n<cell>\ntriangle_area(5, 4, 3)\n</cell>\n<text>\nProblem 7\nWrite a function\
    \ that takes in a list of integers and returns the number of positive integers\
    \ that are less than the average of the list.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqfo2l494.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            Area of triangle is 11.00\n    \
    \        Input:\n            a =   5\n            b =   4\n            c =   6\n\
    \            Output:\n            Area of triangle is -1.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   7\n            Output:\n\
    \            Area of triangle is 0.00\n            Input:\n            a =   5\n\
    \            b =   4\n            c =   8\n            Output:\n            Area\
    \ of triangle is -1.00\n            Input:\n            a =   5\n            b\
    \ =   4\n            c =   9\n            Output:\n            Area of triangle\
    \ is 0.00\n            Input:\n            a =   5\n            b =   4\n    \
    \        c =   10\n            Output:\n            Area of triangle is -1.00\n\
    \            Input:\n            a =   5\n            b =   4\n            c =\
    \   11\n            Output:\n            Area of triangle is 0.00\n          \
    \  Input:\n            a =   5\n            b =   4\n            c =   12\n  \
    \          Output:\n            Area of triangle is -1.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   13\n            Output:\n\
    \            Area of triangle is 0.00\n            Input:\n            a =   5\n\
    \            b =   4\n            c =   14\n            Output:\n            Area\
    \ of triangle is -1.00\n            Input:\n            a =   5\n            b\
    \ =   4\n            c =   15\n            Output:\n            Area of triangle\
    \ is 0.00\n            Input:\n            a =   5\n            b =   4\n    \
    \        c =   16\n            Output:\n            Area of triangle is -1.00\n\
    \            Input:\n            a =   5\n            b =   4\n            c =\
    \   17\n            Output:\n            Area of triangle is 0.00\n          \
    \  Input:\n            a =   5\n            b =   4\n            c =   18\n  \
    \          Output:\n            Area of triangle is -1.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   19\n            Output:\n\
    \            Area \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp40_84c6w.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.141592653589793\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3,\
    \ 4, 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3,\
    \ 4, 10)\n    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3,\
    \ 4, 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpagej1vfc.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.142857142857142\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n  \
    \  if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n\
    \    elif b + c > a:\n        return -1\n    else:\n        return round( ((a\
    \ * b) + (a * c) + (b * c)) / (2 * a), 2)\n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpesiz7rj3.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    Args:\n\
    \        a (float): Length of side a\n        b (float): Length of side b\n  \
    \      c (float): Length of side c\n    Returns:\n        float: The area of the\
    \ triangle rounded to 2 decimal points\n    \"\"\"\n    area_tri = float(a * b\
    \ * c) / 2\n    if area_tri >= a + b + c:\n        return round(area_tri, 2)\n\
    \    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvhs1qrhh.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 5.5\n    \
    \        Input: a = 5, b = 10, c = 5\n            Output: -1\n            \"\"\
    \"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c > a:\n        area\
    \ = 0.5 * (a + b + c)\n        return round(area, 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mb2zirl.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 7\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n \
    \       return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps8dr2c3w.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 7\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b=8\n            c=6\n\
    \            Output:\n            12.5\n            \"\"\"\n    \"\"\"\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmkonwncx.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   5\n         \
    \   c =   5\n            Output:\n            4.5\n            \"\"\"\n      \
    \      Input:\n            a =   5\n            b =   5\n            c =   4\n\
    \            Output:\n            -1\n    \"\"\"\n    \n    if a + b > c and a\
    \ + c > b and b + c > a:\n        return round( ( (a + b + c) / 2) ** (1/2), 2)\n\
    \    else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjka41qpq.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            2.25\n            Input:\n     \
    \       a =   3\n            b =   2\n            c =   3\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   4\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   5\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   6\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   7\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   8\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   9\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   10\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   11\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   12\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   13\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   14\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   15\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   16\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   17\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   18\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   19\n            Output:\n\
    \            -1\n            Input:\n            a =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcwmr4qhj.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    \n    if a + b > c and a + c > b and b + c > a:\n        return round( (\
    \ (a + b + c) / 2) ** (1/2), 2)\n    else:\n        return -1\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmgg7ou5n.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 4, b = 2, c = 5\n            Output: 4.5\n      \
    \      \"\"\"\n    \"\"\"\n    \n    \n    \n    if a + b > c:\n        return\
    \ -1\n    elif b + c > a:\n        return -1\n    elif c + a > b:\n        return\
    \ -1\n    else:\n        area_triangle = float(a * b * c)/2\n        return round(area_triangle,\
    \ 2)\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9hlbmh5.py\"\
    , line 10\n    Input: a = 4, b = 2, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    6.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp74qdl6h6.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            Area =  6.0000\n            \"\"\
    \"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6lzic4uf.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    \"\"\"\n    \n    if a + b > c:\n        return -1\n    elif b +\
    \ c > a:\n        return -1\n    elif c + a > b:\n        return -1\n    else:\n\
    \        return round( ( (a + b + c) / 2 ), 2 )\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj84eah82.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 39)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   4\n            b =   5\n         \
    \   c =   6\n            Output:\n            4.5\n            \"\"\"\n    Args:\n\
    \        a (float): Length of side a\n        b (float): Length of side b\n  \
    \      c (float): Length of side c\n    Returns:\n        float: The area of the\
    \ triangle rounded to 2 decimal points\n    \"\"\"\n    \n    # Write your code\
    \ here\n    \n    if a + b > c and a + c > b and b + c > a:\n        return round(\
    \ ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n        return -1\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpixtz84nv.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c:\n        return -1\n    elif a\
    \ + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n\
    \        area = 0.5 * (a + b + c) * 0.5\n        return round(area, 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl1sj6kpm.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(5,4,3)\n    3.14\n    >>> triangle_area(5,4,4)\n \
    \   -1\n    >>> triangle_area(5,4,5)\n    -1\n    \"\"\"\n    \n    sides = [a,\
    \ b, c]\n    \n    sum_of_sides = sum(sides)\n    \n    if sum_of_sides > sides[2]:\n\
    \        return round(sum_of_sides, 2)\n    else:\n        return -1\n    \n \
    \   \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnnmr3vb.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 42)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 4)\n\
    \    -1\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n        area\
    \ = 0.5 * (a + b + c)\n        return round(area, 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1wv__0t.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 36)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.0\n    >>> triangle_area(3, 4, 6)\n\
    \    0.0\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp07zfalfy.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 270)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.141592653589793\n    >>> triangle_area(3,\
    \ 4, 4)\n    -1\n    >>> triangle_area(3, 4, 3)\n    -1\n    >>> triangle_area(3,\
    \ 4, 2)\n    -1\n    \"\"\"\n    \n    sides = [a, b, c]\n    \n    sum_of_sides\
    \ = sum(sides)\n    \n    if sum_of_sides <= sides[2]:\n        return round(sum_of_sides,\
    \ 2)\n    else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n \
    \   assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n \
    \   assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc639kyrw.py\"\
    , line 18\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 44)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  2\n           \
    \ c =  3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    \n    \n    if a + b > c:\n        return -1\n    elif b + c > a:\n    \
    \    return -1\n    elif c + a > b:\n        return -1\n    else:\n        return\
    \ round( ((a * b) + (b * c) + (c * a)) /2, 2)\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq_fpe57b.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            Area =  5.0000\n            Input:\n\
    \            a =  5\n            b =  3\n            c =  4\n            Output:\n\
    \            Area =  -1.0000\n            Input:\n            a =  5\n       \
    \     b =  4\n            c =  3\n            Output:\n            Area =  3.0000\n\
    \            Input:\n            a =  5\n            b =  4\n            c = \
    \ 5\n            Output:\n            Area =  0.0000\n            Input:\n   \
    \         a =  5\n            b =  4\n            c =  6\n            Output:\n\
    \            Area =  0.0000\n            Input:\n            a =  5\n        \
    \    b =  4\n            c =  7\n            Output:\n            Area =  0.0000\n\
    \            Input:\n            a =  5\n            b =  4\n            c = \
    \ 8\n            Output:\n            Area =  0.0000\n            Input:\n   \
    \         a =  5\n            b =  4\n            c =  9\n            Output:\n\
    \            Area =  0.0000\n            Input:\n            a =  5\n        \
    \    b =  4\n            c =  10\n            Output:\n            Area =  0.0000\n\
    \            Input:\n            a =  5\n            b =  4\n            c = \
    \ 11\n            Output:\n            Area =  0.0000\n            Input:\n  \
    \          a =  5\n            b =  4\n            c =  12\n            Output:\n\
    \            Area =  0.0000\n            Input:\n            a =  5\n        \
    \    b =  4\n            c =  13\n            Output:\n            Area =  0.0000\n\
    \            Input:\n            a =  5\n            b =  4\n            c = \
    \ 14\n            Output:\n            Area =  0.0000\n            Input:\n  \
    \          a =  5\n            b =  4\n            c =  15\n            Output:\n\
    \            Area =  0.0000\n            Input:\n            a =  5\n        \
    \    b =  4\n            c =  16\n            Output:\n            Area =  0.0000\n\
    \            Input:\n            a =  5\n            b =  4\n            c = \
    \ 17\n            Output:\n            Area =  0.0000\n            Input:\n  \
    \          a =  5\n            b =  4\n            c =  18\n            Output:\n\
    \            Area =  0.0000\n            Input:\n            a =  5\n        \
    \    b =  4\n            c =  19\n            Output:\n            Area =  0.0000\n\
    \            Input:\n            \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt4xr_2af.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 4, c = 6\n            Output: 4.5\n      \
    \      \"\"\"\n    \"\"\"\n    \n    \n    \n    if a + b > c and a + c > b and\
    \ b + c > a:\n        area = round( ( ( (a + b + c) / 2) ** 0.5 ), 2 )\n     \
    \   return area\n    else:\n        return -1\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp77qifthc.py\"\
    , line 10\n    Input: a = 2, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.000000\n \
    \           Input: a = 5, b = 4, c = 5\n            Output: -1.000000\n      \
    \      \"\"\"\n    \"\"\"\n    area = (a * b) - (c * c)\n    if area > 0:\n  \
    \      area = round(area, 2)\n    else:\n        area = -1\n    return area\n\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpunjl1yrm.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwdxw2crb.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpak5r292g.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    \n    if a + b > c and a + c > b\
    \ and b + c > a:\n        area = round( ((a + b + c) / 2) * math.sqrt( ((a + b)\
    \ * (a + c)) / ((b + c) * (b + a))) )\n        return area\n    else:\n      \
    \  return -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyu97vy7.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    a, b, c = sorted([a, b, c])\n    if a + b >\
    \ c and b + c > a and c + a > b:\n        return round(0.5 * (a + b + c), 2)\n\
    \    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2o8dg3vz.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b=2\n            c=1\n\
    \            Output:\n            4.5\n            \"\"\"\n    \"\"\"\n    \n\
    \    if a + b > c:\n        area_tri = round((a * b) / c, 2)\n    else:\n    \
    \    area_tri = -1\n    return area_tri\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6ysojue.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 4, b = 2, c = 3\n            Output: 4.00\n     \
    \       \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n  \
    \      return round(0.5 * (a + b + c), 2)\n    else:\n        return -1\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7kmmjs6g.py\"\
    , line 10\n    Input: a = 4, b = 2, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(5,6,7)\n    3.14\n    >>> triangle_area(5,6,8)\n \
    \   -1\n    >>> triangle_area(5,6,9)\n    -1\n    \"\"\"\n    \n    if a + b >\
    \ c and b + c > a and c + a > b:\n        return round( ((a * b) + (b * c) + (c\
    \ * a)) / (2 * a * b), 2)\n    else:\n        return -1\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmperscqoi0.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 38)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            4.5\n            Input:\n      \
    \      a =   3\n            b =   1\n            c =   2\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   2\n\
    \            c =   3\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   2\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   3\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   5\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   5\n\
    \            c =   5\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   6\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   5\n\
    \            c =   7\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   8\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   5\n\
    \            c =   9\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   10\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   5\n\
    \            c =   11\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   12\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   5\n\
    \            c =   13\n            Output:\n            4.5\n            Input:\n\
    \            a =   3\n            b =   5\n            c =   14\n            Output:\n\
    \            -1\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ue8g0g4.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n \
    \       return round( ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n        return\
    \ -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphpfbvwql.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 5.0000\n  \
    \          \"\"\"\n    \"\"\"\n    \n    if a + b > c:\n        return round(triangle_area(a,\
    \ b, c), 2)\n    elif a + c > b:\n        return round(triangle_area(a, b, c),\
    \ 2)\n    elif b + c > a:\n        return round(triangle_area(a, b, c), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20cis6t2.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and b + c > a and c\
    \ + a > b:\n        return round( ( (a + b + c) / 2) ** (1/2), 2)\n    else:\n\
    \        return -1\n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp00yb5k3c.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         Input: a = 5, b = 10, c = 8\n            Output: -1\n            \"\"\
    \"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpat6d82sj.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.0000\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area = (a * b * c)/2\n        return round(area, 2)\n    else:\n\
    \        return -1\n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9n85h66.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   4\n            Output:\n            12.5\n            Explanation:\n\
    \            Valid triangle:\n            a + b > c\n            a + c > b\n \
    \           b + c > a\n            \"\"\"\n    \"\"\"\n    if a + b > c and a\
    \ + c > b and b + c > a:\n        return round( ((a + b + c) / 2) * math.pi, 2)\n\
    \    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7axdn74a.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf7thh63s.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14285714285714\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    if a\
    \ + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif\
    \ b + c > a:\n        return -1\n    else:\n        return round(abs((a * b *\
    \ c) / (a + b + c)), 2)\n\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sn8dubk.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    if a + b > c and a + c > b and b + c > a:\n        return round(\
    \ ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo7p0_uf1.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 4, b = 2, c = 6\n            Output: 5.5\n      \
    \      \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n   \
    \     return round( ( ( (a + b) * (b + c) ) - ( (a + c) * (b + a) ) ) / ( (a +\
    \ b) * (a + c) ), 2 )\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqce75ta3.py\"\
    , line 10\n    Input: a = 4, b = 2, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 3, c = 3\n            Output: 2.00\n     \
    \       \"\"\"\n    \"\"\"\n    \n    if a + b > c:\n        return round(triangle_area(a,\
    \ b, c), 2)\n    elif b + c > a:\n        return round(triangle_area(a, b, c),\
    \ 2)\n    elif c + a > b:\n        return round(triangle_area(a, b, c), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx_2_f6l4.py\"\
    , line 10\n    Input: a = 2, b = 3, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  4\n           \
    \ c =  2\n            Output:\n            5.0000\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    if a + b > c:\n        area = (a * b) / c\n        return\
    \ round(area, 2)\n    elif b + c > a:\n        area = (b * c) / a\n        return\
    \ round(area, 2)\n    elif c + a > b:\n        area = (c * a) / b\n        return\
    \ round(area, 2)\n    else:\n        return -1\n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppvhwkfzi.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   5\n         \
    \   c =   7\n            Output:\n            4.5\n            Input:\n      \
    \      a =   3\n            b =   5\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   4\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   5\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   6\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   7\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   8\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   9\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   10\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   11\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   12\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   13\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   14\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   15\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   16\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   17\n            Output:\n\
    \            -1\n            Input:\n            a =   3\n            b =   4\n\
    \            c =   18\n            Output:\n            -1\n            Input:\n\
    \            a =   3\n            b =   4\n            c =   19\n            Output:\n\
    \            -1\n            Input:\n            a =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4pbg2vjz.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 4, b = 2, c = 6\n            Output: 5.5\n      \
    \      Input: a = 4, b = 2, c = 5\n            Output: -1\n            \"\"\"\n\
    \    \"\"\"\n    \n    \n    if a + b > c:\n        area_tri = float(a * b * c\
    \ / (a + b + c))\n        return round(area_tri, 2)\n    else:\n        return\
    \ -1\n    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2rfcrvxn.py\"\
    , line 10\n    Input: a = 4, b = 2, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    12.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    sides =\
    \ [a, b, c]\n    \n    sum_of_sides = sum(sides)\n    \n    if sum_of_sides <=\
    \ sides[2]:\n        return round(sum_of_sides, 2)\n    else:\n        return\
    \ -1\n    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw980pehj.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 42)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b=4\n            c=5\n\
    \            Output:\n            12.5\n            Explanation:\n           \
    \ Triangle formed by three sides a,b,c with sum of sides a+b+c > 3\n         \
    \   \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n      \
    \  return round(float(a + b + c) / 2, 2)\n    else:\n        return -1\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp18vat7jz.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b = 2\n            c =\
    \ 3\n            Output:\n            2.00\n            \n            Input:\n\
    \            a = 3\n            b = 2\n            c = 1\n            Output:\n\
    \            -1.00\n            \n            Input:\n            a = 3\n    \
    \        b = 1\n            c = 1\n            Output:\n            0.00\n   \
    \         \n            Input:\n            a = 3\n            b = 2\n       \
    \     c = 1\n            Output:\n            -1.00\n            \n          \
    \  Input:\n            a = 3\n            b = 2\n            c = 3\n         \
    \   Output:\n            2.00\n            \n            Input:\n            a\
    \ = 3\n            b = 1\n            c = 1\n            Output:\n           \
    \ -1.00\n            \n            Input:\n            a = 3\n            b =\
    \ 1\n            c = 3\n            Output:\n            -1.00\n            \n\
    \            Input:\n            a = 3\n            b = 2\n            c = 3\n\
    \            Output:\n            2.00\n            \n            Input:\n   \
    \         a = 3\n            b = 1\n            c = 1\n            Output:\n \
    \           -1.00\n            \n            Input:\n            a = 3\n     \
    \       b = 2\n            c = 1\n            Output:\n            -1.00\n   \
    \         \n            Input:\n            a = 3\n            b = 1\n       \
    \     c = 3\n            Output:\n            2.00\n            \n           \
    \ Input:\n            a = 3\n            b = 2\n            c = 1\n          \
    \  Output:\n            -1.00\n            \n            Input:\n            a\
    \ = 3\n            b = 1\n            c = 3\n            Output:\n           \
    \ -1.00\n            \n            Input:\n            a = 3\n            b =\
    \ 2\n            c = 3\n            Output:\n            2.00\n            \n\
    \            Input:\n            a = 3\n            b = 1\n            c = 1\n\
    \            Output:\n            -1.00\n            \n            Input:\n  \
    \          a = 3\n            b = 2\n            c = 1\n            Output:\n\
    \            -1.00\n            \n            Input:\n            a = 3\n    \
    \        b = 1\n            c = 3\n            Output:\n            2.00\n   \
    \         \n            Input:\n            a = 3\n            b = 2\n       \
    \     c = 3\n            Output:\n            2.00\n            \n           \
    \ Input:\n            a = 3\n            b = 1\n            c = 1\n          \
    \  Output:\n            -1.00\n            \n            Input:\n            a\
    \ = 3\n            b = 2\n            c = 1\n            Output:\n           \
    \ -1.00\n            \n            Input:\n            a = 3\n            b =\
    \ 1\n            c = 3\n            Output:\n            2.00\n            \n\
    \            Input:\n            a = 3\n            b = 2\n            c = 3\n\
    \            Output:\n            2.00\n            \n            Input:\n   \
    \         a = 3\n            b = 1\n            c = 1\n            Output:\n \
    \           -1.00\n            \n            Input:\n            a\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzpn6oym_.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    if a + b > c and b + c > a and c + a > b:\n\
    \        return round(triangle_area(a, b, c), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfjkv6uq.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n\
    \        return round(0.5 * (a + b + c), 2)\n    else:\n        return -1\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nk4v7pk.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        Input: a = 10, b = 5, c = 10\n            Output: -1\n            \"\"\
    \"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c > a:\n        area\
    \ = (a * b * c)/2\n        return round(area, 2)\n    else:\n        return -1\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9bn_zntp.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    if a + b > c:\n        area_of_triangle\
    \ = round( ( ( ( (a + b) * (c - b) ) / 2 ) + b ) * 100 ) / 100\n        return\
    \ area_of_triangle\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6nh0u5rg.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   4\n            b =   5\n         \
    \   c =   6\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    if a + b > c:\n        area_triangle = round((a * b) / c, 2)\n \
    \   else:\n        area_triangle = -1\n    return area_triangle\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo828rvpz.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            3.14\n            \n           \
    \ Input:\n            a =   3\n            b =   2\n            c =   4\n    \
    \        Output:\n            -1\n            \n            Input:\n         \
    \   a =   3\n            b =   4\n            c =   4\n            Output:\n \
    \           -1\n            \n            Input:\n            a =   3\n      \
    \      b =   4\n            c =   5\n            Output:\n            -1\n   \
    \         \n            Input:\n            a =   3\n            b =   4\n   \
    \         c =   6\n            Output:\n            -1\n            \n       \
    \     Input:\n            a =   3\n            b =   4\n            c =   7\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   3\n            b =   4\n            c =   8\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   3\n     \
    \       b =   4\n            c =   9\n            Output:\n            -1\n  \
    \          \n            Input:\n            a =   3\n            b =   4\n  \
    \          c =   10\n            Output:\n            -1\n            \n     \
    \       Input:\n            a =   3\n            b =   4\n            c =   11\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   3\n            b =   4\n            c =   12\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   3\n     \
    \       b =   4\n            c =   13\n            Output:\n            -1\n \
    \           \n            Input:\n            a =   3\n            b =   4\n \
    \           c =   14\n            Output:\n            -1\n            \n    \
    \        Input:\n            a =   3\n            b =   4\n            c =   15\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   3\n            b =   4\n            c =   16\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   3\n     \
    \       b =   4\n            c =   17\n            Output:\n            -1\n \
    \           \n            Input:\n            a =   3\n            b =   4\n \
    \           c =   18\n            Output:\n            -1\n            \n    \
    \        \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzt4767f7.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    \"\"\"\n    if a + b > c:\n        return -1\n    elif a + c > b:\n\
    \        return -1\n    elif b + c > a:\n        return -1\n    else:\n      \
    \  return round(abs((a * b) - (c * c)), 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv2ss7nhi.py\"\
    , line 18\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 43)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(5,4,3)\n    3.14\n    >>> triangle_area(5,4,4)\n \
    \   -1\n    \"\"\"\n    \n    if a + b > c:\n        return -1\n    elif a + c\
    \ > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n\
    \        return round( ( (a + b + c) / 2 ), 2 )\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaxr2m1b2.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 40)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.000000\n \
    \           Input: a = 5, b = 4, c = 5\n            Output: -1.000000\n      \
    \      \"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjevespl.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 6\n            Output: 5.0000\n  \
    \          Input: a = 10, b = 5, c = 10\n            Output: -1.0000\n       \
    \     Input: a = 10, b = 10, c = 10\n            Output: 10.0000\n           \
    \ \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c > a:\n  \
    \      area = (a * b + c) / 2\n        return round(area, 2)\n    else:\n    \
    \    return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gxpefgq.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.0000\n   \
    \         Input: a = 5, b = 4, c = 5\n            Output: -1.0000\n          \
    \  Input: a = 5, b = 4, c = 4\n            Output: 0.0000\n            Input:\
    \ a = 5, b = 4, c = 5\n            Output: 5.0000\n            Input: a = 5, b\
    \ = 4, c = 6\n            Output: 5.0000\n            Input: a = 5, b = 4, c =\
    \ 7\n            Output: -1.0000\n            Input: a = 5, b = 4, c = 8\n   \
    \         Output: -1.0000\n            Input: a = 5, b = 4, c = 9\n          \
    \  Output: -1.0000\n            Input: a = 5, b = 4, c = 10\n            Output:\
    \ -1.0000\n            Input: a = 5, b = 4, c = 11\n            Output: -1.0000\n\
    \            Input: a = 5, b = 4, c = 12\n            Output: -1.0000\n      \
    \      Input: a = 5, b = 4, c = 13\n            Output: -1.0000\n            Input:\
    \ a = 5, b = 4, c = 14\n            Output: -1.0000\n            Input: a = 5,\
    \ b = 4, c = 15\n            Output: -1.0000\n            Input: a = 5, b = 4,\
    \ c = 16\n            Output: -1.0000\n            Input: a = 5, b = 4, c = 17\n\
    \            Output: -1.0000\n            Input: a = 5, b = 4, c = 18\n      \
    \      Output: -1.0000\n            Input: a = 5, b = 4, c = 19\n            Output:\
    \ -1.0000\n            Input: a = 5, b = 4, c = 20\n            Output: -1.0000\n\
    \            Input: a = 5, b = 4, c = 21\n            Output: -1.0000\n      \
    \      Input: a = 5, b = 4, c = 22\n            Output: -1.0000\n            Input:\
    \ a = 5, b = 4, c = 23\n            Output: -1.0000\n            Input: a = 5,\
    \ b = 4, c = 24\n            Output: -1.0000\n            Input: a = 5, b = 4,\
    \ c = 25\n            Output: -1.0000\n            Input: a = 5, b = 4, c = 26\n\
    \            Output: -1.0000\n            Input: a = 5, b = 4, c = 27\n      \
    \      Output: -1.0000\n            Input: a = 5, b = 4, c = 28\n            Output:\
    \ -1.0000\n            Input: a = 5, b = 4, c = 29\n            Output: -1.0000\n\
    \            Input: a = 5, b = 4, c = 30\n            Output: -1.0000\n      \
    \      Input: a = 5, b = 4, c = 31\n            Output: -1.0000\n            Input:\
    \ a = 5, b = 4, c = 32\n            Output: -1.0000\n            Input: a = 5,\
    \ b = 4, c = 33\n            Output: -1.0000\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx8axu2bs.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif\
    \ b + c > a:\n        return -1\n    else:\n        return round( ((a * b) + (b\
    \ * c) + (c * a)) / (2.0 * c), 2)\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1s3zofqi.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.0000\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area = 0.5 * (a + b + c) \n        return round(area, 2)\n\
    \    else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ubv2ubb.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   4\n         \
    \   c =   5\n            Output:\n            4.00\n            Input:\n     \
    \       a =   4\n            b =   3\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   5\n            b =  \
    \ 4\n            c =   3\n            Output:\n            4.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   3\n            b =  \
    \ 4\n            c =   5\n            Output:\n            4.00\n            Input:\n\
    \            a =   4\n            b =   3\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   5\n            b =  \
    \ 4\n            c =   3\n            Output:\n            4.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   3\n            b =  \
    \ 4\n            c =   5\n            Output:\n            4.00\n            Input:\n\
    \            a =   4\n            b =   3\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   5\n            b =  \
    \ 4\n            c =   3\n            Output:\n            4.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   3\n            b =  \
    \ 4\n            c =   5\n            Output:\n            4.00\n            Input:\n\
    \            a =   4\n            b =   3\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   5\n            b =  \
    \ 4\n            c =   3\n            Output:\n            4.00\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            4.00\n            Input:\n            a =   3\n            b =  \
    \ 4\n            c =   5\n            Output:\n            4.00\n            Input:\n\
    \            a =   4\n            b =   3\n            c =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmh9rysi9.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            5.000000\n            \"\"\"\n \
    \   \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5h8sgrad.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            4.5\n            Input:\n      \
    \      a =   5\n            b =   4\n            c =   6\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   7\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   8\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   9\n            Output:\n            4.5\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   10\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   11\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   12\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   13\n            Output:\n            4.5\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   14\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   15\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   16\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   17\n            Output:\n            4.5\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   18\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   19\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   20\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   21\n            Output:\n            4.5\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   22\n            Output:\n\
    \            -1\n            Input:\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplms3wxmf.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   4\n            b =   5\n         \
    \   c =   6\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3mnap_1.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 4)\n\
    \    -1\n    >>> triangle_area(3, 4, 0)\n    -1\n    >>> triangle_area(3, 4, 1)\n\
    \    -1\n    >>> triangle_area(3, 4, 2)\n    -1\n    >>> triangle_area(3, 4, 3)\n\
    \    -1\n    >>> triangle_area(3, 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n\
    \    -1\n    >>> triangle_area(3, 4, 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n\
    \    -1\n    >>> triangle_area(3, 4, 10)\n    -1\n    >>> triangle_area(3, 4,\
    \ 11)\n    -1\n    >>> triangle_area(3, 4, 12)\n    -1\n    >>> triangle_area(3,\
    \ 4, 13)\n    -1\n    >>> triangle_area(3, 4, 14)\n    -1\n    >>> triangle_area(3,\
    \ 4, 15)\n    -1\n    >>> triangle_area(3, 4, 16)\n    -1\n    >>> triangle_area(3,\
    \ 4, 17)\n    -1\n    >>> triangle_area(3, 4, 18)\n    -1\n    >>> triangle_area(3,\
    \ 4, 19)\n    -1\n    >>> triangle_area(3, 4, 20)\n    -1\n    >>> triangle_area(3,\
    \ 4, 21)\n    -1\n    >>> triangle_area(3, 4, 22)\n    -1\n    >>> triangle_area(3,\
    \ 4, 23)\n    -1\n    >>> triangle_area(3, 4, 24)\n    -1\n    >>> triangle_area(3,\
    \ 4, 25)\n    -1\n    >>> triangle_area(3, 4, 26)\n    -1\n    >>> triangle_area(3,\
    \ 4, 27)\n    -1\n    >>> triangle_area(3, 4, 28)\n    -1\n    >>> triangle_area(3,\
    \ 4, 29)\n    -1\n    >>> triangle_area(3, 4, 30)\n    -1\n    >>> triangle_area(3,\
    \ 4, 31)\n    -1\n    >>> triangle_area(3, 4, 32)\n    -1\n    >>> triangle_area(3,\
    \ 4, 33)\n    -1\n    >>> triangle_area(3, 4, 34)\n    -1\n    >>> triangle_area(3,\
    \ 4, 35)\n    -1\n    >>> triangle_area(3, 4, 36)\n    -1\n    >>> triangle_area(3,\
    \ 4, 37)\n    -1\n    >>> triangle_area(3, 4, 38)\n    -1\n    >>> triangle_area(3,\
    \ 4, 39)\n    -1\n    >>> triangle_area(3, 4, 40)\n    -1\n    >>> triangle_area(3,\
    \ 4, 41)\n    -1\n    >>> triangle_area(3, 4, 42)\n    -1\n    >>> triangle_area(3,\
    \ 4, 43)\n    -1\n    >>> triangle_area(3, 4, 44)\n    -1\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsjhkksxh.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   1\n            b =   2\n         \
    \   c =   3\n            Output:\n            3.14\n            \"\"\"\n    \"\
    \"\"\n    if a + b > c and b + c > a and c + a > b:\n        return round(math.sqrt(a\
    \ * b * c), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfe1rxyty.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n    \
    \    return -1\n    \ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpggz_5ro_.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.141592653589793\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3,\
    \ 4, 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3,\
    \ 4, 10)\n    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3,\
    \ 4, 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpryy8z_gw.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 20, c = 30\n            Output: 30\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c:\n        return round(triangle_area(a,\
    \ b, c), 2)\n    elif a + c > b:\n        return round(triangle_area(a, b, c),\
    \ 2)\n    elif b + c > a:\n        return round(triangle_area(a, b, c), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jknux_m.py\"\
    , line 10\n    Input: a = 10, b = 20, c = 30\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        area = (a * b + c) / 2\n        return round(area, 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsw9q0voe.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    \"\"\"\n    \n    if a + b > c and b + c > a and c + a > b:\n   \
    \     return round( ( (a + b + c) / 2 ), 2 )\n    else:\n        return -1\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpijwcuqbi.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 36)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 2\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6iws5iy3.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 2\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 7\n            Output: 5.0000\n  \
    \          \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c:\n        area = round(\
    \ ( (a + b - c) * 0.5 ), 2)\n    elif a + c > b:\n        area = round( ( (a +\
    \ c - b) * 0.5 ), 2)\n    elif b + c > a:\n        area = round( ( (b + c - a)\
    \ * 0.5 ), 2)\n    else:\n        area = -1\n    return area\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpntrwamdx.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 7\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   4\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    if a + b > c and a + c > b and b + c > a:\n        return\
    \ round( ( (a + b + c) / 2 ), 2)\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt3pydb7u.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b = 5\n            c\
    \ = 2\n            Output:\n            12.5\n            \"\"\"\n    \"\"\"\n\
    \    if a + b > c and a + c > b and b + c > a:\n        return round(triangle_area(a,\
    \ b, c), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6prlbj_.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            4.5\n            Input:\n      \
    \      a =   5\n            b =   3\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   3\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   6\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   7\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   8\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   9\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   10\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   11\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   12\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   13\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   14\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   15\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   16\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   17\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   18\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   19\n            Output:\n\
    \            -1\n            Input:\n            a =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfm4arven.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b=10\n            c=10\n\
    \            Output:\n            10.000000\n            \"\"\"\n    \"\"\"\n\
    \    \n    if a + b > c and a + c > b and b + c > a:\n        return round( ((a\
    \ * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n        return -1\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntriangle_area(10,10,10)\n</cell>\n\
    <cell>\ntriangle_area(10,10,10)\n</cell>\n<cell>\ntri\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxwddgz2k.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.142857142857142\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    if a\
    \ + b > c:\n        return -1\n    elif b + c > a:\n        return -1\n    elif\
    \ c + a > b:\n        return -1\n    else:\n        return round(math.sqrt(a *\
    \ b * c), 2)\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpww3cpg3_.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n\
    \        return round( ( (a + b + c) / 2) ** 0.5, 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhxdrt7_.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ( ( (a + b + c) / 2) ** 0.5 ), 2 )\n    else:\n  \
    \      return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptai84p78.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    if a + b > c:\n\
    \        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n\
    \        return -1\n    else:\n        return round(0.5 * (a + b + c), 2)\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl43dgo5.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            5.0000\n            \"\"\"\n   \
    \ \"\"\"\n    area = 0.5 * (a + b + c)\n    if area >= (a + b + c):\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxicdiven.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 3, c = 3\n            Output: 4.5\n      \
    \      \"\"\"\n    \"\"\"\n    \n    if a + b > c:\n        area_of_triangle =\
    \ round((a * b * c) / 2, 2)\n    else:\n        area_of_triangle = -1\n    return\
    \ area_of_triangle\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp85qejayp.py\"\
    , line 10\n    Input: a = 2, b = 3, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkpz8p89r.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a : 5\n            b : 3\n            c\
    \ : 7\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\n\
    \    \n    \n    if a + b > c:\n        return -1\n    elif b + c > a:\n     \
    \   return -1\n    elif c + a > b:\n        return -1\n    else:\n        return\
    \ round( ( ( ( a + b ) * ( b + c ) ) - ( ( a + c ) * ( b + c ) ) ) / 2, 2 )\n\
    \    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n   \
    \ assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n  \
    \  assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n  \
    \  assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7az0uulj.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    if a + b > c and b + c > a and c + a > b:\n        return round( ((a +\
    \ b + c) / 2) ** (1/2) , 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp27skbzq_.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 2\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ylbygyx.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 2\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n \
    \       area = 0.5 * (a + b + c) * 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9zm9ely1.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.142857142857142\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n   \
    \ assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n  \
    \  assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n  \
    \  assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbc2m64p1.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 268)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        return -1\n    elif b + c > a:\n        return -1\n    elif\
    \ c + a > b:\n        return -1\n    else:\n        return round( ((a * b) + (b\
    \ * c) + (c * a)) / (2 * a * b), 2)\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4_5qkhf1.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            Area =   6.0000\n            \"\"\
    \"\n    \"\"\"\n    \n    if a + b > c and b + c > a and c + a > b:\n        return\
    \ round( ( ( (a + b) * (b + c) ) - ( (b + c) * (c + a) ) ) / 2, 2 )\n    else:\n\
    \        return -1\n    \ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnnm0_d66.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            area = 4.5\n            \"\"\"\n\
    \    \"\"\"\n    area = (a+b+c)/2\n    if a > b and a > c:\n        return round(area,2)\n\
    \    elif b > a and b > c:\n        return round(b,2)\n    elif c > a and c >\
    \ b:\n        return round(c,2)\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ryozz2r.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  4\n           \
    \ c =  3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    \n    if a + b > c and a + c > b and b + c > a:\n        return round( (\
    \ (a + b + c) / 2) ** (1/2), 2)\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnyulca0.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    \"\"\"\n    \n    if a + b > c:\n        return -1\n    elif a +\
    \ c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n\
    \        return round( ((a + b + c) / 2), 2)\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 5)\n</cell>\n<cell>\ntriangle_area(3, 4, 6)\n</cell>\n<cell>\ntriangle_area(3,\
    \ 4, 7)\n</cell>\n<cell>\ntriangle_area(3, 4, 8)\n</cell>\n<text>\nProblem 7:\
    \ Write a function that accepts a string and returns the number of words in the\
    \ string.\n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqg99bnp.py\"\
    , line 18\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 60)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    if a + b > c and b + c > a and c + a > b:\n        return round(\
    \ ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n        return -1\n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp97j6_cw5.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            sides = [3,5,7]\n            Output:\n \
    \           12.5\n            \"\"\"\n    \"\"\"\n    sides = [a, b, c]\n    sum_of_sides\
    \ = sum(sides)\n    if sum_of_sides <= sides[2]:\n        return round(sum_of_sides,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5lez0a9f.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpljbh3bgo.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area_of_triangle = round( ((a * b) + (a * c) + (b * c)) /\
    \ (2 * a), 2)\n        return area_of_triangle\n    else:\n        return -1\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxlzlsbve.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpog2t9fyh.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   5\n         \
    \   c =   5\n            Output:\n            area = 5\n            \"\"\"\n \
    \   \"\"\"\n    area = (a * b) - (c * b)\n    if area > 0:\n        area = round(area,\
    \ 2)\n    else:\n        area = -1\n    return area\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyr4tr0rx.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    12.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt18uq5ps.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            4.5\n            Input:\n      \
    \      a =   5\n            b =   3\n            c =   4\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   3\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   5\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   6\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   7\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   8\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   9\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   10\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   11\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   12\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   13\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   14\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   15\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   16\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   17\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   18\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   19\n            Output:\n\
    \            -1\n            Input:\n            a =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpihmdjigp.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjvpagax3.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(5,5,5)\n    5.0\n    >>> triangle_area(5,5,0)\n  \
    \  -1\n    >>> triangle_area(5,0,5)\n    -1\n    >>> triangle_area(0,0,0)\n  \
    \  0.0\n    >>> triangle_area(1,1,1)\n    1.0\n    >>> triangle_area(10,10,10)\n\
    \    10.0\n    >>> triangle_area(10,10,0)\n    -1\n    >>> triangle_area(10,0,10)\n\
    \    -1\n    >>> triangle_area(0,10,10)\n    -1\n    >>> triangle_area(0,10,0)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area(0,10,0)\n    0.0\n    >>> triangle_area(0,10,10)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area(0,10,0)\n    0.0\n    >>> triangle_area(0,10,10)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area(0,10,0)\n    0.0\n    >>> triangle_area(0,10,10)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area(0,10,0)\n    0.0\n    >>> triangle_area(0,10,10)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area(0,10,0)\n    0.0\n    >>> triangle_area(0,10,10)\n\
    \    0.0\n    >>> triangle_area(0,0,10)\n    0.0\n    >>> triangle_area(10,0,0)\n\
    \    0.0\n    >>> triangle_area(10,10,0)\n    0.0\n    >>> triangle_area(10,0,10)\n\
    \    0.0\n    >>> triangle_area\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr1bm7ext.py\"\
    , line 10\n    >>> triangle_area(5,5,5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 15, c = 10\n            Output: 12.5\n  \
    \          Input: a = 10, b = 15, c = 5\n            Output: -1\n            Input:\
    \ a = 10, b = 5, c = 10\n            Output: -1\n            Input: a = 10, b\
    \ = 5, c = 5\n            Output: 12.5\n            Input: a = 10, b = 5, c =\
    \ 15\n            Output: 12.5\n            Input: a = 10, b = 15, c = 5\n   \
    \         Output: 12.5\n            Input: a = 10, b = 15, c = 10\n          \
    \  Output: 12.5\n            Input: a = 10, b = 5, c = 10\n            Output:\
    \ 12.5\n            Input: a = 10, b = 5, c = 15\n            Output: 12.5\n \
    \           Input: a = 10, b = 15, c = 5\n            Output: 12.5\n         \
    \   Input: a = 10, b = 15, c = 10\n            Output: 12.5\n            Input:\
    \ a = 10, b = 5, c = 10\n            Output: 12.5\n            Input: a = 10,\
    \ b = 5, c = 15\n            Output: 12.5\n            Input: a = 10, b = 15,\
    \ c = 5\n            Output: 12.5\n            Input: a = 10, b = 15, c = 10\n\
    \            Output: 12.5\n            Input: a = 10, b = 5, c = 10\n        \
    \    Output: 12.5\n            Input: a = 10, b = 5, c = 15\n            Output:\
    \ 12.5\n            Input: a = 10, b = 15, c = 5\n            Output: 12.5\n \
    \           Input: a = 10, b = 15, c = 10\n            Output: 12.5\n        \
    \    Input: a = 10, b = 5, c = 10\n            Output: 12.5\n            Input:\
    \ a = 10, b = 5, c = 15\n            Output: 12.5\n            Input: a = 10,\
    \ b = 15, c = 5\n            Output: 12.5\n            Input: a = 10, b = 15,\
    \ c = 10\n            Output: 12.5\n            Input: a = 10, b = 5, c = 10\n\
    \            Output: 12.5\n            Input: a = 10, b = 5, c = 15\n        \
    \    Output: 12.5\n            Input: a = 10, b = 15, c = 5\n            Output:\
    \ 12.5\n            Input: a = 10, b = 15, c = 10\n            Output: 12.5\n\
    \            Input: a = 10, b = 5, c = 10\n            Output: 12.5\n        \
    \    Input: a = 10, b = 5, c = 15\n            Output: 12.5\n            Input:\
    \ a = 10, b = 15, c = 5\n            Output: 12.5\n            Input: a = 10,\
    \ b = 15, c = 10\n            Output: 12.5\n            Input: a = 10, b = 5,\
    \ c = 10\n            Output: 12.5\n            Input\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwa2hfp23.py\"\
    , line 10\n    Input: a = 10, b = 15, c = 10\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 7\n            Output: 3.14\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        area = (a + b + c) / 2\n        return round(area, 2)\n  \
    \  else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpstx58szb.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 7\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk08skg6x.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        area_of_triangle = abs(a * b * c) / 4\n        return round(area_of_triangle,\
    \ 2)\n    else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n \
    \   assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n \
    \   assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaafcfjzm.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp93x1buj_.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4w7y9z1.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            12.5\n            \"\"\"\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfn0nzc3n.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzbnfpqzk.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            4.5\n            Input:\n         \
    \   a =  5\n            b =  3\n            c =  4\n            Output:\n    \
    \        -1\n            Input:\n            a =  5\n            b =  4\n    \
    \        c =  2\n            Output:\n            -1\n            Input:\n   \
    \         a =  5\n            b =  4\n            c =  4\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  4\n\
    \            c =  5\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  2\n            Output:\n\
    \            -1\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  4\n            Output:\n            4.5\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  5\n            Output:\n\
    \            -1\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  6\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  7\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  8\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  9\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  10\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  11\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  12\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  13\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  14\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  15\n            Output:\n\
    \            4.5\n            Input:\n            a =  5\n            b =  5\n\
    \            c =  16\n            Output:\n            -1\n            Input:\n\
    \            a =  5\n            b =  5\n            c =  17\n            Output:\n\
    \            4.5\n            Input:\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzowk5i.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   5\n         \
    \   c =   7\n            Output:\n            5.0000\n            \"\"\"\n   \
    \ \"\"\"\n    \n    \n    if a + b > c:\n        return -1\n    elif a + c > b:\n\
    \        return -1\n    elif b + c > a:\n        return -1\n    else:\n      \
    \  return round( ( ( (a + b + c) / 2) ** 0.5 ), 2)\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n \
    \   assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3zn47s09.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2bqhafra.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 5.0000\n  \
    \          \"\"\"\n    \"\"\"\n    a, b, c = sorted([a, b, c])\n    if a + b >\
    \ c:\n        return round(triangle_area(a, b, c), 2)\n    elif b + c > a:\n \
    \       return round(triangle_area(a, b, c), 2)\n    elif c + a > b:\n       \
    \ return round(triangle_area(a, b, c), 2)\n    else:\n        return -1\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo4ivnid1.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n\
    \    else:\n        return -1\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxfy414lr.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 2, c = 3\n            Output: 4.5\n      \
    \      \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n   \
    \     area = 0.5 * (a + b + c)\n        return round(area, 2)\n    else:\n   \
    \     return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnff2r8sd.py\"\
    , line 10\n    Input: a = 2, b = 2, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1x6e38f7.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            5.5\n            \"\"\"\n    \"\"\
    \"\n    if a + b > c and a + c > b and b + c > a:\n        return round( ( (a\
    \ + b + c) / 2) ** (1/2), 2)\n    else:\n        return -1\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdiyvs64n.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.141592653589793\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3,\
    \ 4, 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3,\
    \ 4, 10)\n    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3,\
    \ 4, 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2rnagara.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            3.14\n            \"\"\"\n    \"\
    \"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdb5509k.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 2, c = 2\n            Output: 2.00\n     \
    \       Input: a = 2, b = 2, c = 0\n            Output: -1.00\n            Input:\
    \ a = 0, b = 0, c = 0\n            Output: -1.00\n            Input: a = 0, b\
    \ = 0, c = 1\n            Output: 0.00\n            Input: a = 0, b = 1, c = 1\n\
    \            Output: 0.00\n            Input: a = 1, b = 1, c = 1\n          \
    \  Output: 1.00 \n            \"\"\"\n    \"\"\"\n    \n    if a + b > c and a\
    \ + c > b and b + c > a:\n        return round( ( (a + b + c) / 2 ) * 100 , 2)\n\
    \    else:\n        return -1\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp7_pfl92.py\"\
    , line 10\n    Input: a = 2, b = 2, c = 2\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif\
    \ b + c > a:\n        return -1\n    else:\n        return round((a * b * c) /\
    \ 2, 2)\n    \n    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpci8xdwde.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 42)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 4, c = 6\n            Output: 5.0000\n   \
    \         \"\"\"\n            Input: a = 5, b = 4, c = 5\n            Output:\
    \ -1.0000\n    \"\"\"\n    if a + b > c and b + c > a and c + a > b:\n       \
    \ return round(0.5 * (a + b + c), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn1sla7s1.py\"\
    , line 10\n    Input: a = 5, b = 4, c = 6\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   3\n            b =   2\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    if a + b > c:\n        return round(triangle_area(a, b, c), 2)\n    elif\
    \ a + c > b:\n        return round(triangle_area(a, b, c), 2)\n    elif b + c\
    \ > a:\n        return round(triangle_area(a, b, c), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpacszz7hb.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr0pt4u_a.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            5.0000\n            \n         \
    \   Input:\n            a =   5\n            b =   3\n            c =   4\n  \
    \          Output:\n            -1.0000\n            \n            Input:\n  \
    \          a =   5\n            b =   3\n            c =   6\n            Output:\n\
    \            -1.0000\n            \n            Input:\n            a =   5\n\
    \            b =   3\n            c =   7\n            Output:\n            -1.0000\n\
    \            \n            Input:\n            a =   5\n            b =   3\n\
    \            c =   8\n            Output:\n            -1.0000\n            \n\
    \            Input:\n            a =   5\n            b =   3\n            c =\
    \   9\n            Output:\n            -1.0000\n            \n            Input:\n\
    \            a =   5\n            b =   3\n            c =   10\n            Output:\n\
    \            -1.0000\n            \n            Input:\n            a =   5\n\
    \            b =   3\n            c =   11\n            Output:\n            -1.0000\n\
    \            \n            Input:\n            a =   5\n            b =   3\n\
    \            c =   12\n            Output:\n            -1.0000\n            \n\
    \            Input:\n            a =   5\n            b =   3\n            c =\
    \   13\n            Output:\n            -1.0000\n            \n            Input:\n\
    \            a =   5\n            b =   3\n            c =   14\n            Output:\n\
    \            -1.0000\n            \n            Input:\n            a =   5\n\
    \            b =   3\n            c =   15\n            Output:\n            -1.0000\n\
    \            \n            Input:\n            a =   5\n            b =   3\n\
    \            c =   16\n            Output:\n            -1.0000\n            \n\
    \            Input:\n            a =   5\n            b =   3\n            c =\
    \   17\n            Output:\n            -1.0000\n            \n            Input:\n\
    \            a =   5\n            b =   3\n            c =   18\n            Output:\n\
    \            -1.0000\n            \n            Input:\n            a =   5\n\
    \            b =   3\n            c =   19\n            Output:\n            -1.0000\n\
    \            \n            Input:\n            a =   5\n            b =   3\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps9_unfjg.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            3.14\n            \n           \
    \ Input:\n            a =   5\n            b =   2\n            c =   3\n    \
    \        Output:\n            -1\n            \n            Input:\n         \
    \   a =   5\n            b =   3\n            c =   4\n            Output:\n \
    \           -1\n            \n            Input:\n            a =   5\n      \
    \      b =   4\n            c =   3\n            Output:\n            -1\n   \
    \         \n            Input:\n            a =   5\n            b =   4\n   \
    \         c =   4\n            Output:\n            3.14\n            \n     \
    \       Input:\n            a =   5\n            b =   4\n            c =   5\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   5\n            b =   4\n            c =   6\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   5\n     \
    \       b =   4\n            c =   7\n            Output:\n            -1\n  \
    \          \n            Input:\n            a =   5\n            b =   4\n  \
    \          c =   8\n            Output:\n            -1\n            \n      \
    \      Input:\n            a =   5\n            b =   4\n            c =   9\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   5\n            b =   4\n            c =   10\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   5\n     \
    \       b =   4\n            c =   11\n            Output:\n            -1\n \
    \           \n            Input:\n            a =   5\n            b =   4\n \
    \           c =   12\n            Output:\n            -1\n            \n    \
    \        Input:\n            a =   5\n            b =   4\n            c =   13\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   5\n            b =   4\n            c =   14\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   5\n     \
    \       b =   4\n            c =   15\n            Output:\n            -1\n \
    \           \n            Input:\n            a =   5\n            b =   4\n \
    \           c =   16\n            Output:\n            -1\n            \n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt7rko57c.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw5b2jl_u.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  4\n            b =  5\n           \
    \ c =  6\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    \n    \n    \n    if a + b > c and a + c > b and b + c > a:\n        return\
    \ round( ( (a + b + c) / 2 ), 2 )\n    else:\n        return -1\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbtrergbq.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            area = 4.5\n            \"\"\"\n\
    \    \"\"\"\n    area = (a * b) ** (1 / 2)\n    if area >= c:\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0zqgvya.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv_vq61fj.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.0\n    >>> triangle_area(3, 4, 6)\n\
    \    0.0\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c:\n        a, b, c = c, b, a\n    \n    area_of_triangle = (a + b + c)\
    \ / 2\n    \n    if area_of_triangle >= a + b and area_of_triangle >= a + c and\
    \ area_of_triangle >= b + c:\n        return round(area_of_triangle, 2)\n    else:\n\
    \        return -1\n</cell>\n<cell>\ntriangle_area(3, 4, 5)\n</cell>\n<cell>\n\
    triangle_area(3, 4, 6)\n</cell>\n<cell>\ntriangle_area(3, 4, 7)\n</cell>\n<text>\n\
    Problem 7\nWrite a function that takes a list and a number as input, and returns\
    \ a list with the number removed from the list. \nIf the number is not in the\
    \ list, return an empty list.\nIf the list is empty, return an empty list.\nIf\
    \ the list has one item, return an empty list.\nIf the list has two items, remove\
    \ the first item from the list, and return the new list.\nIf the list has three\
    \ items, remove the second item from the list, and return the new list.\nIf the\
    \ list has more than three items, remove all but the last item from the list,\
    \ and return the new list.\nFor example, \n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 6)\n[1,2,3,4,5,7,8,9]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 10)\n[]\n>>>\
    \ remove_last_item([1,2,3,4,5,6,7,8,9], 0)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ -1)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 7)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 8)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 9)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 10)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 11)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 12)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 13)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 14)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 15)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9],\
    \ 16)\n[]\n>>> remove_last_item([1,2,3,4,5,6,7,8,9], 17)\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpezz5zw9s.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 91)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 2, c = 3\n            Output: 4.5\n      \
    \      \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b +\
    \ c > a:\n        area_of_triangle = float(a * b * c)/2\n        return round(area_of_triangle,\
    \ 2)\n    else:\n        return -1\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp395eb1pj.py\"\
    , line 10\n    Input: a = 5, b = 2, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    \"\"\"\n    \n    sides = [a, b, c]\n    \n    sum_of_sides = sum(sides)\n\
    \    \n    if sum_of_sides <= sides[2]:\n        return round(sum_of_sides, 2)\n\
    \    else:\n        return -1\n    \n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj96yu37b.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b=2\n            c=4\n\
    \            Output:\n            5.5\n            Input:\n            a=3\n \
    \           b=4\n            c=2\n            Output:\n            -1\n      \
    \      Input:\n            a=4\n            b=3\n            c=2\n           \
    \ Output:\n            -1\n            Input:\n            a=4\n            b=4\n\
    \            c=3\n            Output:\n            5.5\n            Input:\n \
    \           a=4\n            b=4\n            c=4\n            Output:\n     \
    \       5.5\n            Input:\n            a=4\n            b=4\n          \
    \  c=5\n            Output:\n            -1\n            Input:\n            a=4\n\
    \            b=5\n            c=4\n            Output:\n            -1\n     \
    \       Input:\n            a=4\n            b=5\n            c=5\n          \
    \  Output:\n            -1\n            Input:\n            a=4\n            b=5\n\
    \            c=6\n            Output:\n            -1\n            Input:\n  \
    \          a=4\n            b=6\n            c=5\n            Output:\n      \
    \      -1\n            Input:\n            a=4\n            b=6\n            c=6\n\
    \            Output:\n            -1\n            Input:\n            a=4\n  \
    \          b=6\n            c=7\n            Output:\n            -1\n       \
    \     Input:\n            a=4\n            b=7\n            c=6\n            Output:\n\
    \            -1\n            Input:\n            a=4\n            b=7\n      \
    \      c=7\n            Output:\n            -1\n            Input:\n        \
    \    a=4\n            b=7\n            c=8\n            Output:\n            -1\n\
    \            Input:\n            a=4\n            b=8\n            c=7\n     \
    \       Output:\n            -1\n            Input:\n            a=4\n       \
    \     b=8\n            c=8\n            Output:\n            -1\n            Input:\n\
    \            a=4\n            b=8\n            c=9\n            Output:\n    \
    \        -1\n            Input:\n            a=4\n            b=9\n          \
    \  c=8\n            Output:\n            -1\n            Input:\n            a=4\n\
    \            b=9\n            c=9\n            Output:\n            -1\n     \
    \       Input:\n            a=4\n            b=9\n            c=10\n         \
    \   Output:\n            -1\n            Input:\n            a=4\n           \
    \ b=10\n            c=9\n            Output:\n            -1\n            Input:\n\
    \            a=4\n            b=10\n            c=10\n            Output:\n  \
    \          -1\n            Input:\n            a=4\n            b=10\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7u3rw9g.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    if a + b > c:\n        return round(triangle_area(a,\
    \ b, c), 2)\n    elif b + c > a:\n        return round(triangle_area(a, b, c),\
    \ 2)\n    elif c + a > b:\n        return round(triangle_area(a, b, c), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa4usjaun.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        return round( ((a * b) + (a * c) + (b * c)) / (2 * a), 2)\n    else:\n\
    \        return -1\n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatsdtflk.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 2, b = 2, c = 3\n            Output: 2.00\n     \
    \       \"\"\"\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate(3, 4, 5)\
    \ == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5)\
    \ == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3)\
    \ == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3)\
    \ == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10)\
    \ == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng191s0f.py\"\
    , line 10\n    Input: a = 2, b = 2, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b=20\n            c=30\n\
    \            Output:\n            50.00\n            Explanation:\n          \
    \  Valid triangle\n            \"\"\"\n    \"\"\"\n    \n    if a + b > c and\
    \ b + c > a and c + a > b:\n        area = (a * b + b * c + c * a) / 2.0\n   \
    \     return round(area, 2)\n    else:\n        return -1\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2wuacsfz.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  5\n            b =  3\n           \
    \ c =  2\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    if a + b > c:\n        return round(triangle_area(a, b, c), 2)\n    elif\
    \ b + c > a:\n        return round(triangle_area(a, b, c), 2)\n    elif c + a\
    \ > b:\n        return round(triangle_area(a, b, c), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr5t0lbm4.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.5\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4, 8)\n\
    \    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3, 4, 10)\n\
    \    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3, 4,\
    \ 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfg8nexz7.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =3\n            b = 1\n            c =\
    \ 2\n            Output:\n            3.14\n            \"\"\"\n    \"\"\"\n \
    \   \n    if a + b > c:\n        return round( ( ( (a + b) * (c - b) ) / 2 ),\
    \ 2 )\n    elif b + c > a:\n        return round( ( ( (b + c) * (a - c) ) / 2\
    \ ), 2 )\n    elif c + a > b:\n        return round( ( ( (c + a) * (b - a) ) /\
    \ 2 ), 2 )\n    else:\n        return -1\n    \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzw2v3opj.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 5.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    \n    if a + b > c and a + c > b and b\
    \ + c > a:\n        return round( ( (a + b + c) / 2) ** (1/2) , 2)\n    else:\n\
    \        return -1\n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxnktzvgd.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    if a + b > c and a + c > b and b + c > a:\n        area_of_triangle\
    \ = abs(a * b * c) / 2\n        return round(area_of_triangle, 2)\n    else:\n\
    \        return -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppsya9975.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    5.0\n    >>> triangle_area(3, 4, 6)\n\
    \    0.0\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3, 4,\
    \ 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3,\
    \ 4, 10)\n    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3,\
    \ 4, 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area(3, 4, 49\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoh7qygxi.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    6.666666666666667\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    >>> triangle_area(3,\
    \ 4, 8)\n    -1\n    >>> triangle_area(3, 4, 9)\n    -1\n    >>> triangle_area(3,\
    \ 4, 10)\n    -1\n    >>> triangle_area(3, 4, 11)\n    -1\n    >>> triangle_area(3,\
    \ 4, 12)\n    -1\n    >>> triangle_area(3, 4, 13)\n    -1\n    >>> triangle_area(3,\
    \ 4, 14)\n    -1\n    >>> triangle_area(3, 4, 15)\n    -1\n    >>> triangle_area(3,\
    \ 4, 16)\n    -1\n    >>> triangle_area(3, 4, 17)\n    -1\n    >>> triangle_area(3,\
    \ 4, 18)\n    -1\n    >>> triangle_area(3, 4, 19)\n    -1\n    >>> triangle_area(3,\
    \ 4, 20)\n    -1\n    >>> triangle_area(3, 4, 21)\n    -1\n    >>> triangle_area(3,\
    \ 4, 22)\n    -1\n    >>> triangle_area(3, 4, 23)\n    -1\n    >>> triangle_area(3,\
    \ 4, 24)\n    -1\n    >>> triangle_area(3, 4, 25)\n    -1\n    >>> triangle_area(3,\
    \ 4, 26)\n    -1\n    >>> triangle_area(3, 4, 27)\n    -1\n    >>> triangle_area(3,\
    \ 4, 28)\n    -1\n    >>> triangle_area(3, 4, 29)\n    -1\n    >>> triangle_area(3,\
    \ 4, 30)\n    -1\n    >>> triangle_area(3, 4, 31)\n    -1\n    >>> triangle_area(3,\
    \ 4, 32)\n    -1\n    >>> triangle_area(3, 4, 33)\n    -1\n    >>> triangle_area(3,\
    \ 4, 34)\n    -1\n    >>> triangle_area(3, 4, 35)\n    -1\n    >>> triangle_area(3,\
    \ 4, 36)\n    -1\n    >>> triangle_area(3, 4, 37)\n    -1\n    >>> triangle_area(3,\
    \ 4, 38)\n    -1\n    >>> triangle_area(3, 4, 39)\n    -1\n    >>> triangle_area(3,\
    \ 4, 40)\n    -1\n    >>> triangle_area(3, 4, 41)\n    -1\n    >>> triangle_area(3,\
    \ 4, 42)\n    -1\n    >>> triangle_area(3, 4, 43)\n    -1\n    >>> triangle_area(3,\
    \ 4, 44)\n    -1\n    >>> triangle_area(3, 4, 45)\n    -1\n    >>> triangle_area(3,\
    \ 4, 46)\n    -1\n    >>> triangle_area(3, 4, 47)\n    -1\n    >>> triangle_area(3,\
    \ 4, 48)\n    -1\n    >>> triangle_area\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6kyzwypi.py\"\
    , line 10\n    >>> triangle_area(3, 4, 5)\n    ^^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            5.0000\n            \"\"\"\n   \
    \ \"\"\"\n    if a + b > c:\n        return round(triangle_area(a, b, c), 2)\n\
    \    elif b + c > a:\n        return round(triangle_area(a, b, c), 2)\n    elif\
    \ c + a > b:\n        return round(triangle_area(a, b, c), 2)\n    else:\n   \
    \     return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnntq2l5r.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 15, c = 10\n            Output: 12.5\n  \
    \          Input: a = 10, b = 15, c = 5\n            Output: -1\n            Input:\
    \ a = 10, b = 15, c = 15\n            Output: 12.5\n            Input: a = 10,\
    \ b = 15, c = 10\n            Output: 12.5\n            Input: a = 10, b = 15,\
    \ c = 5\n            Output: -1\n            Input: a = 10, b = 15, c = 15\n \
    \           Output: 12.5\n            Input: a = 10, b = 15, c = 10\n        \
    \    Output: 12.5\n            Input: a = 10, b = 15, c = 5\n            Output:\
    \ -1\n            Input: a = 10, b = 15, c = 15\n            Output: 12.5\n  \
    \          Input: a = 10, b = 15, c = 10\n            Output: 12.5\n         \
    \   Input: a = 10, b = 15, c = 5\n            Output: -1\n            Input: a\
    \ = 10, b = 15, c = 15\n            Output: 12.5\n            Input: a = 10, b\
    \ = 15, c = 10\n            Output: 12.5\n            Input: a = 10, b = 15, c\
    \ = 5\n            Output: -1\n            Input: a = 10, b = 15, c = 15\n   \
    \         Output: 12.5\n            Input: a = 10, b = 15, c = 10\n          \
    \  Output: 12.5\n            Input: a = 10, b = 15, c = 5\n            Output:\
    \ -1\n            Input: a = 10, b = 15, c = 15\n            Output: 12.5\n  \
    \          Input: a = 10, b = 15, c = 10\n            Output: 12.5\n         \
    \   Input: a = 10, b = 15, c = 5\n            Output: -1\n            Input: a\
    \ = 10, b = 15, c = 15\n            Output: 12.5\n            Input: a = 10, b\
    \ = 15, c = 10\n            Output: 12.5\n            Input: a = 10, b = 15, c\
    \ = 5\n            Output: -1\n            Input: a = 10, b = 15, c = 15\n   \
    \         Output: 12.5\n            Input: a = 10, b = 15, c = 10\n          \
    \  Output: 12.5\n            Input: a = 10, b = 15, c = 5\n            Output:\
    \ -1\n            Input: a = 10, b = 15, c = 15\n            Output: 12.5\n  \
    \          Input: a = 10, b = 15, c = 10\n            Output: 12.5\n         \
    \   Input: a = 10, b = 15, c = 5\n            Output: -1\n            Input: a\
    \ = 10, b = 15, c = 15\n            Output: 12.5\n            Input: a = 10, b\
    \ = 15, c = 10\n            Output: 12.5\n            Input: a = 10, b = 15, c\
    \ = 5\n            Output: -1\n            Input: a = 10, b = 15, c = 15\n   \
    \         \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpki2t5sku.py\"\
    , line 10\n    Input: a = 10, b = 15, c = 10\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\
    \"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9qte2taw.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        area = (a * b + c) / 2\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6996o3ch.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   4\n         \
    \   c =   3\n            Output:\n            4.5\n            Input:\n      \
    \      a =   5\n            b =   4\n            c =   6\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   7\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   8\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   9\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   10\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   11\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   12\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   13\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   14\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   15\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   16\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   17\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   18\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   19\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   20\n            Output:\n\
    \            -1\n            Input:\n            a =   5\n            b =   4\n\
    \            c =   21\n            Output:\n            -1\n            Input:\n\
    \            a =   5\n            b =   4\n            c =   22\n            Output:\n\
    \            -1\n            Input:\n            a =\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_r8gxkho.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =   5\n            b =   3\n         \
    \   c =   2\n            Output:\n            3.14\n            \n           \
    \ Input:\n            a =   5\n            b =   3\n            c =   4\n    \
    \        Output:\n            -1\n            \n            Input:\n         \
    \   a =   5\n            b =   4\n            c =   2\n            Output:\n \
    \           -1\n            \n            Input:\n            a =   5\n      \
    \      b =   4\n            c =   4\n            Output:\n            3.14\n \
    \           \n            Input:\n            a =   5\n            b =   4\n \
    \           c =   6\n            Output:\n            -1\n            \n     \
    \       Input:\n            a =   5\n            b =   4\n            c =   8\n\
    \            Output:\n            -1\n            \n            Input:\n     \
    \       a =   5\n            b =   4\n            c =   10\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   5\n     \
    \       b =   4\n            c =   12\n            Output:\n            3.14\n\
    \            \n            Input:\n            a =   5\n            b =   4\n\
    \            c =   14\n            Output:\n            -1\n            \n   \
    \         Input:\n            a =   5\n            b =   4\n            c =  \
    \ 16\n            Output:\n            -1\n            \n            Input:\n\
    \            a =   5\n            b =   4\n            c =   18\n            Output:\n\
    \            3.14\n            \n            Input:\n            a =   5\n   \
    \         b =   4\n            c =   20\n            Output:\n            -1\n\
    \            \n            Input:\n            a =   5\n            b =   4\n\
    \            c =   22\n            Output:\n            -1\n            \n   \
    \         Input:\n            a =   5\n            b =   4\n            c =  \
    \ 24\n            Output:\n            3.14\n            \n            Input:\n\
    \            a =   5\n            b =   4\n            c =   26\n            Output:\n\
    \            -1\n            \n            Input:\n            a =   5\n     \
    \       b =   4\n            c =   28\n            Output:\n            -1\n \
    \           \n            Input:\n            a =   5\n            b =   4\n \
    \           c =   30\n            Output:\n            3.\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdt2k0f8k.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    if a + b > c:\n\
    \        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n\
    \        return -1\n    else:\n        return round(math.sqrt(a * b * c), 2)\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbe60ka2b.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14285714285714\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    if a\
    \ + b > c and b + c > a and c + a > b:\n        return round(math.sqrt(a * b *\
    \ c), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7x2j094a.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 5\n            Output: 12.5\n    \
    \        Input: a = 10, b = 5, c = 10\n            Output: -1\n            Input:\
    \ a = 10, b = 5, c = 15\n            Output: -1\n            Input: a = 10, b\
    \ = 5, c = 20\n            Output: -1\n            Input: a = 10, b = 5, c = 25\n\
    \            Output: 12.5\n            Input: a = 10, b = 5, c = 20\n        \
    \    Output: 12.5\n            Input: a = 10, b = 5, c = 25\n            Output:\
    \ 12.5\n            Input: a = 10, b = 5, c = 20\n            Output: 12.5\n \
    \           Input: a = 10, b = 5, c = 25\n            Output: 12.5\n         \
    \   Input: a = 10, b = 5, c = 20\n            Output: 12.5\n            Input:\
    \ a = 10, b = 5, c = 25\n            Output: 12.5\n            Input: a = 10,\
    \ b = 5, c = 20\n            Output: 12.5\n            Input: a = 10, b = 5, c\
    \ = 25\n            Output: 12.5\n            Input: a = 10, b = 5, c = 20\n \
    \           Output: 12.5\n            Input: a = 10, b = 5, c = 25\n         \
    \   Output: 12.5\n            Input: a = 10, b = 5, c = 20\n            Output:\
    \ 12.5\n            Input: a = 10, b = 5, c = 25\n            Output: 12.5\n \
    \           Input: a = 10, b = 5, c = 20\n            Output: 12.5\n         \
    \   Input: a = 10, b = 5, c = 25\n            Output: 12.5\n            Input:\
    \ a = 10, b = 5, c = 20\n            Output: 12.5\n            Input: a = 10,\
    \ b = 5, c = 25\n            Output: 12.5\n            Input: a = 10, b = 5, c\
    \ = 20\n            Output: 12.5\n            Input: a = 10, b = 5, c = 25\n \
    \           Output: 12.5\n            Input: a = 10, b = 5, c = 20\n         \
    \   Output: 12.5\n            Input: a = 10, b = 5, c = 25\n            Output:\
    \ 12.5\n            Input: a = 10, b = 5, c = 20\n            Output: 12.5\n \
    \           Input: a = 10, b = 5, c = 25\n            Output: 12.5\n         \
    \   Input: a = 10, b = 5, c = 20\n            Output: 12.5\n            Input:\
    \ a = 10, b = 5, c = 25\n            Output: 12.5\n            Input: a = 10,\
    \ b = 5, c = 20\n            Output: 12.5\n            Input: a = 10, b = 5, c\
    \ = 25\n            Output: 12.5\n            Input: a = 10, b = 5, c = 20\n \
    \           Output: 12.5\n            Input: \ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzvim3uc.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 5\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =10\n            b =10\n            c\
    \ =10\n            Output:\n            10.00\n            \"\"\"\n    \"\"\"\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplaer2sk6.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 4, b = 2, c = 3\n            Output: 4.5\n      \
    \      \"\"\"\n    \n    area = (a * b) - (c * c)\n    if area > 0:\n        area\
    \ = round(area, 2)\n    else:\n        area = -1\n    return area\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4dma_8ln.py\"\
    , line 10\n    Input: a = 4, b = 2, c = 3\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input:\n            a =  4\n            b =  2\n           \
    \ c =  1\n            Output:\n            4.5\n            \"\"\"\n    \"\"\"\
    \n    if a + b > c and b + c > a and c + a > b:\n        return round(float(a\
    \ + b + c) / 2, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7j9isqtw.py\"\
    , line 10\n    Input:\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.141592653589793\n    >>> triangle_area(3,\
    \ 4, 6)\n    -1\n    \"\"\"\n    \n    if a + b > c:\n        return -1\n    elif\
    \ a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n\
    \        return round( ( (a + b + c) / 2 ), 2)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ga9jnn8.py\"\
    , line 14\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 40)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         Input: a = 5, b = 10, c = 12\n            Output: -1\n            \"\
    \"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n        return\
    \ round(0.5 * (a + b + c), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6acvvm5h.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 8\n            Output: 12.5\n    \
    \        \"\"\"\n    \"\"\"\n    if a + b > c and a + c > b and b + c > a:\n \
    \       area = (a * b * c) / 2\n        return round(area, 2)\n    else:\n   \
    \     return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe3fzqrve.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 8\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n    >>> triangle_area(3, 4, 5)\n    3.14\n    >>> triangle_area(3, 4, 6)\n\
    \    -1\n    >>> triangle_area(3, 4, 7)\n    -1\n    \"\"\"\n    \n    if a +\
    \ b > c and a + c > b and b + c > a:\n        return round( ((a * b) + (a * c)\
    \ + (b * c)) / (2 * a), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6f9lio_p.py\"\
    , line 16\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 5, b = 10, c = 15\n            Output: 12.5\n   \
    \         \"\"\"\n    \"\"\"\n    \n    if a + b > c and a + c > b and b + c >\
    \ a:\n        area = (a * b + b * c + c * a) / 2.0\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpem99ojo8.py\"\
    , line 10\n    Input: a = 5, b = 10, c = 15\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n            \"\
    \"\"\n            Input: a = 10, b = 5, c = 7\n            Output: 7.07\n    \
    \        Input: a = 10, b = 5, c = 5\n            Output: -1\n            Input:\
    \ a = 10, b = 5, c = 10\n            Output: -1\n            Input: a = 10, b\
    \ = 10, c = 10\n            Output: -1\n            Input: a = 10, b = 10, c =\
    \ 5\n            Output: -1\n            Input: a = 10, b = 10, c = 7\n      \
    \      Output: 7.07\n            Input: a = 10, b = 5, c = 10\n            Output:\
    \ -1\n            Input: a = 10, b = 5, c = 7\n            Output: 7.07\n    \
    \        Input: a = 10, b = 10, c = 10\n            Output: -1\n            Input:\
    \ a = 10, b = 10, c = 5\n            Output: -1\n            Input: a = 10, b\
    \ = 10, c = 7\n            Output: 7.07\n            Input: a = 10, b = 5, c =\
    \ 10\n            Output: -1\n            Input: a = 10, b = 5, c = 7\n      \
    \      Output: 7.07\n            Input: a = 10, b = 10, c = 10\n            Output:\
    \ -1\n            Input: a = 10, b = 10, c = 5\n            Output: -1\n     \
    \       Input: a = 10, b = 10, c = 7\n            Output: 7.07\n            Input:\
    \ a = 10, b = 5, c = 10\n            Output: -1\n            Input: a = 10, b\
    \ = 5, c = 7\n            Output: 7.07\n            Input: a = 10, b = 10, c =\
    \ 10\n            Output: -1\n            Input: a = 10, b = 10, c = 5\n     \
    \       Output: -1\n            Input: a = 10, b = 10, c = 7\n            Output:\
    \ 7.07\n            Input: a = 10, b = 5, c = 10\n            Output: -1\n   \
    \         Input: a = 10, b = 5, c = 7\n            Output: 7.07\n            Input:\
    \ a = 10, b = 10, c = 10\n            Output: -1\n            Input: a = 10, b\
    \ = 10, c = 5\n            Output: -1\n            Input: a = 10, b = 10, c =\
    \ 7\n            Output: 7.07\n            Input: a = 10, b = 5, c = 10\n    \
    \        Output: -1\n            Input: a = 10, b = 5, c = 7\n            Output:\
    \ 7.07\n            Input: a = 10, b = 10, c = 10\n            Output: -1\n  \
    \          Input: a = 10, b = 10, c = 5\n            Output: -1\n            Input:\
    \ a = 10, b = 10, c = 7\n            Output: 7.07\n            Input: a = 10,\
    \ b = 5, c = 10\n            Output: -1\n            Input: a = 10, b = 5, c =\
    \ 7\n            Output: 7.07\n            Input: a = \ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbsy59tm5.py\"\
    , line 10\n    Input: a = 10, b = 5, c = 7\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception

name: HumanEval_88_sort_array
language: py
results:
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum += array[i]\n       \
    \ if sum % 2 == 0:\n            even_sum += array[i]\n            even_count +=\
    \ 1\n        else:\n            odd_sum += array[i]\n            odd_count +=\
    \ 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n      \
    \  else:\n            even_array.append(array[i])\n    odd_array.sort()\n    even_array.sort()\n\
    \    odd_array.reverse()\n    even_array.reverse()\n    odd_array = odd_array[::-1]\n\
    \    even_array = even_array[::-1]\n    odd_sum = odd_sum + odd_count\n    even_sum\
    \ = even_sum + even_count\n    if odd_sum % 2 == 1:\n        odd_array.append(odd_sum)\n\
    \    else:\n        even_array.append(even_sum)\n    return odd_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5j2jfzvx.py\"\
    , line 60, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5j2jfzvx.py\"\
    , line 58, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5j2jfzvx.py\"\
    , line 51, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpanke142n.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpanke142n.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpanke142n.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum_list\
    \ = []\n    even_sum_list = []\n    odd_sum_list.append(array[0])\n    even_sum_list.append(array[-1])\n\
    \    for i in range(1, len(array)):\n        sum += array[i]\n        if sum %\
    \ 2 == 0:\n            even_sum += array[i]\n            even_sum_list.append(array[i])\n\
    \        else:\n            odd_sum += array[i]\n            odd_sum_list.append(array[i])\n\
    \    if odd_sum % 2 != 0:\n        odd_sum_list.sort(reverse=True)\n    else:\n\
    \        odd_sum_list.sort()\n    if even_sum % 2 != 0:\n        even_sum_list.sort(reverse=True)\n\
    \    else:\n        even_sum_list.sort()\n    return odd_sum_list, even_sum_list\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp631n2lgd.py\"\
    , line 51, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp631n2lgd.py\"\
    , line 49, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp631n2lgd.py\"\
    , line 40, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp631n2lgd.py\"\
    , line 19, in sort_array\n    odd_sum_list.append(array[0])\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    even_index = 0\n\
    \    odd_index = 0\n    \n    for i in range(len(array)):\n        sum += array[i]\n\
    \        if sum % 2 == 0:\n            even += array[i]\n            even_index\
    \ += 1\n        else:\n            odd += array[i]\n            odd_index += 1\n\
    \    \n    if even_index > odd_index:\n        array[:odd_index] = array[odd_index:]\n\
    \        array[odd_index:] = even\n    elif even_index < odd_index:\n        array[:even_index]\
    \ = array[even_index:]\n        array[even_index:] = odd\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_didhmsv.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_didhmsv.py\"\
    , line 47, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_didhmsv.py\"\
    , line 39, in check\n    assert candidate([5]) == [5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_didhmsv.py\"\
    , line 34, in sort_array\n    array[even_index:] = odd\nTypeError: can only assign\
    \ an iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahej67xg.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahej67xg.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpahej67xg.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 6, 4, 2]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n\
    \    return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc3bqn8kq.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 34)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            even_array.append(array[i])\n\
    \        else:\n            odd_array.append(array[i])\n    odd_array.sort()\n\
    \    even_array.sort()\n    odd_sum = sum(odd_array)\n    even_sum = sum(even_array)\n\
    \    if odd_sum % 2 == 0:\n        odd_array.sort()\n        odd_sum = sum(odd_array)\n\
    \        odd_array.sort()\n        odd_array = odd_array[::-1]\n        odd_sum\
    \ = sum(odd_array)\n        odd_array = odd_array[:length]\n    else:\n      \
    \  even_array.sort()\n        even_sum = sum(even_array)\n        even_array.sort()\n\
    \        even_array = even_array[::-1]\n        even_sum = sum(even_array)\n \
    \       even_array = even_array[:length]\n    return odd_array + even_array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlk2k79w.py\"\
    , line 58, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlk2k79w.py\"\
    , line 56, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlk2k79w.py\"\
    , line 47, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlk2k79w.py\"\
    , line 28, in sort_array\n    odd_sum = sum(odd_array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjh1_ct1.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjh1_ct1.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqjh1_ct1.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            even += array[i]\n        else:\n            odd += array[i]\n  \
    \  array.sort()\n    if even % 2 != 0:\n        array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_juyibwb.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_juyibwb.py\"\
    , line 39, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_juyibwb.py\"\
    , line 32, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 5, 6, 4]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum = 0\n    sorted_array = []\n   \
    \ for num in array:\n        sum += num\n        sorted_array.append(num)\n  \
    \  if sum % 2 == 0:\n        sorted_array.reverse()\n    return sorted_array\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8ht9sn4x.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 40)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    i = 0\n    j = len(array) - 1\n    while i\
    \ < j:\n        sum = array[i] + array[j]\n        if sum % 2 == 0:\n        \
    \    array[i], array[j] = array[j], array[i]\n            i += 1\n           \
    \ j -= 1\n        else:\n            i += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmkedk5m.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmkedk5m.py\"\
    , line 37, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmkedk5m.py\"\
    , line 30, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    \n   \
    \ for i in range(len(array)):\n        sum += array[i]\n        if sum % 2 ==\
    \ 0:\n            even_sum += array[i]\n            even_count += 1\n        else:\n\
    \            odd_sum += array[i]\n            odd_count += 1\n    \n    if odd_count\
    \ > even_count:\n        odd_array.extend(array[even_count:len(array)])\n    \
    \    odd_array.extend(array[0:even_count])\n        odd_array.sort()\n       \
    \ odd_array.extend(array[0:len(array) - even_count])\n        odd_array.sort()\n\
    \    else:\n        even_array.extend(array[odd_count:len(array)])\n        even_array.extend(array[0:odd_count])\n\
    \        even_array.sort()\n        even_array.extend(array[0:len(array) - odd_count])\n\
    \        even_array.sort()\n    \n    return odd_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk58shk0n.py\"\
    , line 58, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk58shk0n.py\"\
    , line 56, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk58shk0n.py\"\
    , line 48, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum += array[i]\n       \
    \ if sum % 2 == 0:\n            even_sum += array[i]\n            even_count +=\
    \ 1\n        else:\n            odd_sum += array[i]\n            odd_count +=\
    \ 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n      \
    \  else:\n            even_array.append(array[i])\n    odd_array.sort()\n    even_array.sort()\n\
    \    odd_array.reverse()\n    even_array.reverse()\n    odd_array.append(even_sum)\n\
    \    even_array.append(odd_sum)\n    odd_array.extend(even_array)\n    odd_array.append(even_count)\n\
    \    even_array.append(odd_count)\n    return odd_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpetlkb8xx.py\"\
    , line 57, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpetlkb8xx.py\"\
    , line 55, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpetlkb8xx.py\"\
    , line 46, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum = sum + array[i]\n        i += 1\n    if sum % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo640fu5l.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo640fu5l.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo640fu5l.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_count\
    \ += 1\n            even_array.append(num)\n        else:\n            odd_count\
    \ += 1\n            odd_array.append(num)\n    if odd_count > even_count:\n  \
    \      odd_array.extend(even_array)\n        array = odd_array\n    else:\n  \
    \      even_array.extend(odd_array)\n        array = even_array\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9uvyoad.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9uvyoad.py\"\
    , line 47, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9uvyoad.py\"\
    , line 40, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) <= 1:\n        return array\n    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphor6he1b.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphor6he1b.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphor6he1b.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjaef3yc5.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjaef3yc5.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjaef3yc5.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ci5wnxu.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ci5wnxu.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ci5wnxu.py\"\
    , line 30, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            sum -= array[i]\n\
    \        else:\n            sum += array[i]\n    array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjhc0trt5.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjhc0trt5.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjhc0trt5.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   sum_list = []\n    sum_list.append(array[0])\n    sum_list.append(array[-1])\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \    sum_list.append(sum)\n    sum_list.append(sum)\n    sum_list.append(sum)\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqrmv5okx.py\"\
    , line 114, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqrmv5okx.py\"\
    , line 112, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqrmv5okx.py\"\
    , line 104, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    else:\n   \
    \     sum = 0\n        odd_sum = 0\n        even_sum = 0\n        odd_count =\
    \ 0\n        even_count = 0\n        odd_index = 0\n        even_index = 0\n \
    \       odd_index_list = []\n        even_index_list = []\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        odd_index_list.append(0)\n\
    \        even_index_list.append(0)\n        odd_index_list.append(0)\n       \
    \ even_index_list.append(0)\n        odd_index_list.append(0)\n        even_index_list.append(0)\n\
    \        odd_index_list.append(0)\n        even_index_list.append(0)\n       \
    \ odd_index_list.append(0)\n        even_index_list.append(0)\n        \ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnway_9gx.py\"\
    , line 109, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnway_9gx.py\"\
    , line 107, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnway_9gx.py\"\
    , line 99, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    odd_array.sort()\n   \
    \ even_array.sort()\n    odd_array.reverse()\n    even_array.reverse()\n    odd_array.extend(even_array)\n\
    \    odd_array.extend(odd_array)\n    return odd_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkyfjvt92.py\"\
    , line 53, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkyfjvt92.py\"\
    , line 51, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkyfjvt92.py\"\
    , line 43, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    odd_array.append(array[0])\n\
    \    even_array.append(array[0])\n    odd_array.append(array[1])\n    even_array.append(array[1])\n\
    \    for i in range(2, len(array)):\n        sum += array[i]\n        if sum %\
    \ 2 == 0:\n            even_sum += array[i]\n            even_count += 1\n   \
    \     else:\n            odd_sum += array[i]\n            odd_count += 1\n   \
    \     if sum % 2 == 1:\n            odd_array.append(array[i])\n            even_array.append(array[i])\n\
    \            odd_count += 1\n            even_count += 1\n        else:\n    \
    \        odd_array.append(array[i])\n            even_array.append(array[i])\n\
    \            odd_count += 1\n            even_count += 1\n    if odd_count % 2\
    \ == 1:\n        odd_array.append(array[-1])\n        even_array.append(array[-1])\n\
    \        odd_count += 1\n        even_count += 1\n    else:\n        odd_array.append(array[-1])\n\
    \        even_array.append(array[-1])\n        odd_count += 1\n        even_count\
    \ += 1\n    if odd_count % 2 == 0:\n        odd_array.append(array[-1])\n    \
    \    even_array.append(array[-1])\n        odd_count += 1\n        even_count\
    \ += 1\n    else:\n        odd_array.append(array[-1])\n        even_array.append(array[-1])\n\
    \        odd_count += 1\n        even_count += 1\n    odd_array.sort()\n    even_array.sort()\n\
    \    return odd_array, even_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_19qkw4.py\"\
    , line 79, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_19qkw4.py\"\
    , line 77, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_19qkw4.py\"\
    , line 68, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_19qkw4.py\"\
    , line 21, in sort_array\n    odd_array.append(array[0])\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo5li0yyn.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo5li0yyn.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo5li0yyn.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    print(array)\n\
    \n    array = [1, 5, 3, 6, 4, 2]\n    array.sort(reverse=True)\n    print(array)\n\
    \n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    array.sort(reverse=True)\n\
    \    print(array)\n\n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    print(array)\n\
    \n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    print(array)\n\
    \n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    print(array)\n\n    array = [1, 5, 3, 6, 4,\
    \ 2]\n    array.sort()\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    print(array)\n\
    \n    array = [1, 5, 3, 6, 4, 2]\n    array.sort()\n    array.sort(reverse=True)\n\
    \    array.sort(reverse=True)\n    array.sort(reverse=True)\n    array.sort(\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvjnf94c2.py\"\
    , line 122\n    array.sort(\n              ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            even += array[i]\n        else:\n            odd += array[i]\n  \
    \  array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n    array.sort()\n\
    \    array.sort()\n    array.sort()\n    array.sort()\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp00ayr__h.py\"\
    , line 154, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp00ayr__h.py\"\
    , line 152, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp00ayr__h.py\"\
    , line 143, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8ng1ib9.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8ng1ib9.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8ng1ib9.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum = sum + array[i]\n        if sum % 2 == 0:\n            array[i],\
    \ array[length] = array[length], array[i]\n            length = length - 1\n \
    \   return array\n\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprq6qebgq.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprq6qebgq.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprq6qebgq.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprq6qebgq.py\"\
    , line 19, in sort_array\n    array[i], array[length] = array[length], array[i]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        return sorted(array)\n    else:\n        return sorted(array, key=lambda\
    \ x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphniv53fn.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphniv53fn.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphniv53fn.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg3z12ci.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg3z12ci.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppg3z12ci.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n   \
    \ even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even\
    \ = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n\
    \    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    odd_even = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even\
    \ = 0\n    even_odd = 0\n    odd_odd = 0\n    even_even = 0\n    odd_even = 0\n\
    \    even_odd = 0\n    odd_odd\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdyzkytb.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdyzkytb.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdyzkytb.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj99nn9c4.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj99nn9c4.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj99nn9c4.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even\
    \ = 0\n    odd_odd_odd_sum = 0\n    even_odd_odd_sum = 0\n    even_odd_odd_even\
    \ = 0\n    odd_odd_odd_even = 0\n    odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_even = 0\n \
    \   odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_od\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx94_3h3m.py\"\
    , line 63, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx94_3h3m.py\"\
    , line 61, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx94_3h3m.py\"\
    , line 52, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx94_3h3m.py\"\
    , line 50, in sort_array\n    odd_odd_odd_odd_od\nNameError: name 'odd_odd_odd_odd_od'\
    \ is not defined. Did you mean: 'odd_odd_odd_odd_sum'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    if odd_count > even_count:\n\
    \        odd_array.extend(even_array[::-1])\n    else:\n        even_array.extend(odd_array[::-1])\n\
    \    return odd_array\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsr_scgxa.py\"\
    , line 51, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsr_scgxa.py\"\
    , line 49, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsr_scgxa.py\"\
    , line 42, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpie65k7cb.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpie65k7cb.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpie65k7cb.py\"\
    , line 23, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpie65k7cb.py\"\
    , line 15, in sort_array\n    sum_of_array = sum(array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeg9o4jgn.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeg9o4jgn.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeg9o4jgn.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    array_copy\
    \ = array.copy()\n    array_copy.reverse()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_q5pzjm.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_q5pzjm.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw_q5pzjm.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n    if odd_count > even_count:\n        odd_array.extend(even_array)\n\
    \        odd_array.extend(odd_array)\n        odd_array.sort()\n    elif odd_count\
    \ < even_count:\n        even_array.extend(odd_array)\n        even_array.extend(even_array)\n\
    \        even_array.sort()\n    else:\n        odd_array.extend(even_array)\n\
    \        odd_array.sort()\n    return odd_array\n\ndef check(candidate):\n   \
    \ assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwfekc3n.py\"\
    , line 54, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwfekc3n.py\"\
    , line 52, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwfekc3n.py\"\
    , line 44, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_first_last_value = sum(array[0:-1])\n    if sum_of_first_last_value\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9kaq4ld.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9kaq4ld.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9kaq4ld.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_count\
    \ += 1\n            even_array.append(num)\n        else:\n            odd_count\
    \ += 1\n            odd_array.append(num)\n    if odd_count > even_count:\n  \
    \      odd_array.extend(even_array)\n        array = odd_array\n    else:\n  \
    \      even_array.extend(odd_array)\n        array = even_array\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1jg5owb.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1jg5owb.py\"\
    , line 47, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1jg5owb.py\"\
    , line 40, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) <= 1:\n        return array\n    else:\n\
    \        mid = len(array) // 2\n        left = sort_array(array[:mid])\n     \
    \   right = sort_array(array[mid:])\n        if sum(left) % 2 == 1:\n        \
    \    return left\n        else:\n            return right\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvn8dmbqi.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvn8dmbqi.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvn8dmbqi.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx_nokgev.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx_nokgev.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx_nokgev.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwig1c3nm.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwig1c3nm.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwig1c3nm.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd = True\n    even = True\n    length =\
    \ len(array)\n    i = 0\n    while i < length:\n        sum += array[i]\n    \
    \    if sum % 2 == 0:\n            even = False\n        else:\n            odd\
    \ = False\n        i += 1\n    if odd:\n        array.sort()\n    else:\n    \
    \    array.reverse()\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz5nja61w.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz5nja61w.py\"\
    , line 42, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz5nja61w.py\"\
    , line 35, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    \n   \
    \ for i in range(len(array)):\n        sum += array[i]\n        if sum % 2 ==\
    \ 0:\n            even_sum += array[i]\n            even_count += 1\n        else:\n\
    \            odd_sum += array[i]\n            odd_count += 1\n    \n    if odd_count\
    \ > even_count:\n        odd_array.extend(array[:odd_count])\n        odd_array.extend(array[odd_count:])\n\
    \        odd_array.sort()\n    elif odd_count < even_count:\n        even_array.extend(array[:even_count])\n\
    \        even_array.extend(array[even_count:])\n        even_array.sort()\n  \
    \  else:\n        odd_array.extend(array[:odd_count])\n        odd_array.extend(array[odd_count:])\n\
    \        odd_array.sort()\n        even_array.extend(array[:even_count])\n   \
    \     even_array.extend(array[even_count:])\n        even_array.sort()\n    \n\
    \    return odd_array\n    \nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1,\
    \ 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2,\
    \ 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\n\
    print(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1,\
    \ 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2,\
    \ 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\n\
    print(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1,\
    \ 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2,\
    \ 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\n\
    print(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1,\
    \ 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2,\
    \ 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\n\
    print(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1,\
    \ 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2, 4, 5]))\nprint(sort_array([1, 3, 2,\
    \ 4, 5]))\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: "[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n\
    []\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n[]\n"
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9flx2dg.py\"\
    , line 93, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9flx2dg.py\"\
    , line 91, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl9flx2dg.py\"\
    , line 85, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd = True\n    even = False\n    length =\
    \ len(array)\n    i = 0\n    while i < length:\n        sum += array[i]\n    \
    \    if sum % 2 == 0:\n            even = True\n        else:\n            odd\
    \ = False\n        i += 1\n    if odd:\n        array.sort(reverse=True)\n   \
    \ else:\n        array.sort()\n    return array\n\ndef check(candidate):\n   \
    \ assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzaiazry.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzaiazry.py\"\
    , line 42, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzzaiazry.py\"\
    , line 36, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum = sum + array[i]\n        i += 1\n    \n    if sum\
    \ % 2 == 0:\n        array.sort(reverse = True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dphc_jh.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dphc_jh.py\"\
    , line 37, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3dphc_jh.py\"\
    , line 31, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptgq0ozt6.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptgq0ozt6.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptgq0ozt6.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    sum_of_first_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl22yltb.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl22yltb.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxl22yltb.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length]\
    \ = array[length], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy3sz8i0.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy3sz8i0.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy3sz8i0.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqy3sz8i0.py\"\
    , line 19, in sort_array\n    array[i], array[length] = array[length], array[i]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnwesbb_8.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnwesbb_8.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnwesbb_8.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index = 0\n   \
    \ odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index = 0\n    odd_sum_index = 0\n    even_sum_index\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_index = 0\n    even_index =\
    \ 0\n    odd_sum_index = 0\n    even_sum_index = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_index = 0\n    even_index\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv2j_3278.py\"\
    , line 111, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv2j_3278.py\"\
    , line 109, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv2j_3278.py\"\
    , line 101, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    i = 0\n    length\
    \ = len(array)\n    while i < length:\n        sum += array[i]\n        if sum\
    \ % 2 == 0:\n            even += array[i]\n        else:\n            odd += array[i]\n\
    \        i += 1\n    even = sort_array(even)\n    odd = sort_array(odd)\n    i\
    \ = 0\n    length = len(array)\n    while i < length:\n        if sum % 2 == 0:\n\
    \            array[i] = even[even.index(array[i]) + 1]\n        else:\n      \
    \      array[i] = odd[odd.index(array[i]) - 1]\n        i += 1\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbrp6o4af.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbrp6o4af.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbrp6o4af.py\"\
    , line 39, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbrp6o4af.py\"\
    , line 26, in sort_array\n    even = sort_array(even)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbrp6o4af.py\"\
    , line 18, in sort_array\n    length = len(array)\nTypeError: object of type 'int'\
    \ has no len()\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   odd_sum = 0\n    even_sum = 0\n    odd_count = 0\n    even_count = 0\n   \
    \ odd_index = 0\n    even_index = 0\n    odd_index_list = []\n    even_index_list\
    \ = []\n    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_index_list.append(0)\n    even_index_list.append(0)\n\
    \    odd_index_list.append(0)\n    even_index_list.append(0)\n    odd_index_list.append(0)\n\
    \    even_index_list.append(0)\n    odd_\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvpsqn5r2.py\"\
    , line 108, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvpsqn5r2.py\"\
    , line 106, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvpsqn5r2.py\"\
    , line 98, in check\n    assert candidate([5]) == [5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvpsqn5r2.py\"\
    , line 95, in sort_array\n    odd_\nNameError: name 'odd_' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_qr0a6jx.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_qr0a6jx.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_qr0a6jx.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8usb6p2s.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8usb6p2s.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8usb6p2s.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum\
    \ = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n\
    \    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n\
    \    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum\
    \ = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n\
    \    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n\
    \    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum\
    \ = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n\
    \    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n\
    \    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum\
    \ = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n\
    \    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n\
    \    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum\
    \ = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n\
    \    even_sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_sum = 0\n    even_sum\
    \ = 0\n    odd_sum\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb64cutgx.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb64cutgx.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb64cutgx.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    for num in array:\n        sum += num\n     \
    \   if sum % 2 == 0:\n            even_array.append(num)\n        else:\n    \
    \        odd_array.append(num)\n    if sum % 2 == 0:\n        odd_sum = sum(odd_array)\n\
    \        even_sum = sum(even_array)\n    else:\n        odd_sum = sum(odd_array[::-1])\n\
    \        even_sum = sum(even_array[::-1])\n    odd_array.sort()\n    even_array.sort()\n\
    \    return odd_array + even_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko2cmtsg.py\"\
    , line 47, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko2cmtsg.py\"\
    , line 45, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko2cmtsg.py\"\
    , line 36, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpko2cmtsg.py\"\
    , line 26, in sort_array\n    odd_sum = sum(odd_array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmply3jop8h.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmply3jop8h.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmply3jop8h.py\"\
    , line 23, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmply3jop8h.py\"\
    , line 15, in sort_array\n    sum_of_array = sum(array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) <= 1:\n        return array\n    sum_of_first_and_last\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20nwq8qb.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20nwq8qb.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp20nwq8qb.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    even_index = 0\n\
    \    odd_index = 0\n    length = len(array)\n    for i in range(length):\n   \
    \     sum += array[i]\n        if sum % 2 == 0:\n            even += array[i]\n\
    \            even_index += 1\n        else:\n            odd += array[i]\n   \
    \         odd_index += 1\n    array = [array[i] for i in range(length)]\n    array[even_index],\
    \ array[odd_index] = array[odd_index], array[even_index]\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo3n2_ji.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo3n2_ji.py\"\
    , line 42, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo3n2_ji.py\"\
    , line 33, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxo3n2_ji.py\"\
    , line 29, in sort_array\n    array[even_index], array[odd_index] = array[odd_index],\
    \ array[even_index]\nIndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n        else:\n            array[i],\
    \ array[length - i - 1] = array[length - i - 1], array[length - i - 1]\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6z3u24y.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6z3u24y.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd6z3u24y.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vb5hdm8.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vb5hdm8.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6vb5hdm8.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    \n    if sum % 2 !=\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr5zd4w2.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr5zd4w2.py\"\
    , line 37, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr5zd4w2.py\"\
    , line 31, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even\
    \ = 0\n    even_odd_odd_sum = 0\n    even_odd_odd_even = 0\n    odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_sum = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_even = 0\n \
    \   odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_od\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl79p9m.py\"\
    , line 60, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl79p9m.py\"\
    , line 58, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl79p9m.py\"\
    , line 49, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1gl79p9m.py\"\
    , line 47, in sort_array\n    even_odd_odd_odd_odd_odd_od\nNameError: name 'even_odd_odd_odd_odd_odd_od'\
    \ is not defined. Did you mean: 'even_odd_odd_odd_odd_odd_sum'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 6, 4, 2]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    array_length = len(array)\n    sorted_array\
    \ = []\n    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        for i\
    \ in range(array_length):\n            sorted_array.append(array[i])\n    else:\n\
    \        for i in range(array_length):\n            sorted_array.append(array[-(i\
    \ + 1)])\n    return sorted_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ezn_8h3.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 41)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd60hj2lq.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd60hj2lq.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd60hj2lq.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 8, 2, 6, 4, 7, 9, 0]\n    array_copy\
    \ = array.copy()\n    array_copy = sort_array(array_copy)\n    print(array_copy)\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 29, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 20, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 16, in sort_array\n    array_copy = sort_array(array_copy)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 16, in sort_array\n    array_copy = sort_array(array_copy)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 16, in sort_array\n    array_copy = sort_array(array_copy)\n  [Previous\
    \ line repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ycwynwu.py\"\
    , line 15, in sort_array\n    array_copy = array.copy()\nRecursionError: maximum\
    \ recursion depth exceeded while calling a Python object\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length]\
    \ = array[length], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mj3r67a.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mj3r67a.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mj3r67a.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4mj3r67a.py\"\
    , line 19, in sort_array\n    array[i], array[length] = array[length], array[i]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_array = sum(array)\n    if sum_array % 2 == 0:\n  \
    \      array.sort(reverse=True)\n    else:\n        array.sort()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hgctxab.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hgctxab.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2hgctxab.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \        if sum % 2 == 0:\n            sum -= array[0]\n            array[0] =\
    \ array[i]\n            array[i] = sum\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqf6dz5m5.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqf6dz5m5.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqf6dz5m5.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    array2 = []\n    array2.append(array[0])\n    array2.append(array[-1])\n\
    \    array2.append(array[1])\n    array2.append(array[-2]) \n    array2.append(array[2])\n\
    \    array2.append(array[-3])\n    array2.append(array[3])\n    array2.append(array[-4])\n\
    \    array2.append(array[4])\n    array2.append(array[-5])\n    array2.append(array[5])\n\
    \    array2.append(array[-6])\n    array2.append(array[6])\n    array2.append(array[-7])\n\
    \    array2.append(array[7])\n    array2.append(array[-8])\n    array2.append(array[8])\n\
    \    array2.append(array[-9])\n    array2.append(array[9])\n    array2.append(array[-8])\n\
    \    array2.append(array[8])\n    array2.append(array[-7])\n    array2.append(array[7])\n\
    \    array2.append(array[-6])\n    array2.append(array[6])\n    array2.append(array[-5])\n\
    \    array2.append(array[5])\n    array2.append(array[-4])\n    array2.append(array[4])\n\
    \    array2.append(array[-3])\n    array2.append(array[3])\n    array2.append(array[-2])\n\
    \    array2.append(array[2])\n    array2.append(array[-1])\n    array2.append(array[0])\n\
    \    array2.append(array[1])\n    array2.append(array[2])\n    array2.append(array[3])\n\
    \    array2.append(array[4])\n    array2.append(array[5])\n    array2.append(array[6])\n\
    \    array2.append(array[7])\n    array2.append(array[8])\n    array2.append(array[9])\n\
    \    array2.append(array[10])\n    array2.append(array[11])\n    array2.append(array[12])\n\
    \    array2.append(array[13])\n    array2.append(array[14])\n    array2.append(array[15])\n\
    \    array2.append(array[16])\n    array2.append(array[17])\n    array2.append(array[18])\n\
    \    array2.append(array[19])\n    array2.append(array[20])\n    array2.append(array[21])\n\
    \    array2.append(array[22])\n    array2.append(array[23])\n    array2.append(array[24])\n\
    \    array2.append(array[25])\n    array2.append(array[26])\n    array2.append(array[27])\n\
    \    array2.append(array[28])\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvw867dq.py\"\
    , line 95, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvw867dq.py\"\
    , line 93, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvw867dq.py\"\
    , line 84, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqvw867dq.py\"\
    , line 19, in sort_array\n    array2.append(array[0])\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    i = 0\n    j = 0\n    length = len(array)\n\
    \    while i < length:\n        sum += array[i]\n        i += 1\n    while j <\
    \ length:\n        if sum % 2 == 0:\n            array[j], array[j + 1] = array[j\
    \ + 1], array[j]\n            j += 1\n        else:\n            array[j], array[j\
    \ + 1] = array[j], array[j + 1]\n            j += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptj2ks14u.py\"\
    , line 42, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptj2ks14u.py\"\
    , line 40, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptj2ks14u.py\"\
    , line 32, in check\n    assert candidate([5]) == [5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptj2ks14u.py\"\
    , line 26, in sort_array\n    array[j], array[j + 1] = array[j], array[j + 1]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    i = 0\n    j =\
    \ len(array) - 1\n    while i < j:\n        sum += array[i]\n        if sum %\
    \ 2 == 0:\n            even += array[i]\n            i += 1\n        else:\n \
    \           odd += array[i]\n            j -= 1\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    array.sort()\n    array\
    \ = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n   \
    \ array.sort()\n    array = [x for x in array]\n    array.sort()\n    array =\
    \ [x for x in array]\n    array.sort()\n    array = [x for x in array]\n    array.sort()\n\
    \    array = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    array.sort()\n    array\
    \ = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n   \
    \ array.sort()\n    array = [x for x in array]\n    array.sort()\n    array =\
    \ [x for x in array]\n    array.sort()\n    array = [x for x in array]\n    array.sort()\n\
    \    array = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    array.sort()\n    array\
    \ = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n   \
    \ array.sort()\n    array = [x for x in array]\n    array.sort()\n    array =\
    \ [x for x in array]\n    array.sort()\n    array = [x for x in array]\n    array.sort()\n\
    \    array = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    array.sort()\n    array\
    \ = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n   \
    \ array.sort()\n    array = [x for x in array]\n    array.sort()\n    array =\
    \ [x for x in array]\n    array.sort()\n    array = [x for x in array]\n    array.sort()\n\
    \    array = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    array.sort()\n    array\
    \ = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n   \
    \ array.sort()\n    array = [x for x in array]\n    array.sort()\n    array =\
    \ [x for x in array]\n    array.sort()\n    array = [x for x in array]\n    array.sort()\n\
    \    array = [x for x in array]\n    array.sort()\n    array = [x for x in array]\n\
    \    array.sort()\n    array = [x for x in array]\n    \ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xaowohd.py\"\
    , line 123, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xaowohd.py\"\
    , line 121, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7xaowohd.py\"\
    , line 112, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 4, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphlyg8gjr.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    odd = True\n    for\
    \ i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n   \
    \         odd = False\n            break\n    if odd:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdighups.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdighups.py\"\
    , line 38, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdighups.py\"\
    , line 31, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length]\
    \ = array[length], array[i]\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4acntcru.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4acntcru.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4acntcru.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4acntcru.py\"\
    , line 19, in sort_array\n    array[i], array[length] = array[length], array[i]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_count\
    \ += 1\n            even_array.append(num)\n        else:\n            odd_count\
    \ += 1\n            odd_array.append(num)\n    if odd_count > even_count:\n  \
    \      odd_array.extend(even_array)\n        odd_array = odd_array[::-1]\n   \
    \     return odd_array\n    else:\n        even_array.extend(odd_array)\n    \
    \    even_array = even_array[::-1]\n        return even_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprqe1m8ui.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprqe1m8ui.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprqe1m8ui.py\"\
    , line 41, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.reverse()\n        return array\n    else:\n        array.reverse()\n\
    \        array.append(0)\n        array.append(0)\n        return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_zpzbibo.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_zpzbibo.py\"\
    , line 39, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_zpzbibo.py\"\
    , line 31, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n            sum -= array[i]\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvy7g_gph.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvy7g_gph.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvy7g_gph.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_array = 0\n    sum_array2 = []\n    sum_array3 = []\n\
    \    sum_array4 = []\n    sum_array5 = []\n    sum_array6 = []\n    sum_array7\
    \ = []\n    sum_array8 = []\n    sum_array9 = []\n    sum_array10 = []\n    sum_array11\
    \ = []\n    sum_array12 = []\n    sum_array13 = []\n    sum_array14 = []\n   \
    \ sum_array15 = []\n    sum_array16 = []\n    sum_array17 = []\n    sum_array18\
    \ = []\n    sum_array19 = []\n    sum_array20 = []\n    sum_array21 = []\n   \
    \ sum_array22 = []\n    sum_array23 = []\n    sum_array24 = []\n    sum_array25\
    \ = []\n    sum_array26 = []\n    sum_array27 = []\n    sum_array28 = []\n   \
    \ sum_array29 = []\n    sum_array30 = []\n    sum_array31 = []\n    sum_array32\
    \ = []\n    sum_array33 = []\n    sum_array34 = []\n    sum_array35 = []\n   \
    \ sum_array36 = []\n    sum_array37 = []\n    sum_array38 = []\n    sum_array39\
    \ = []\n    sum_array40 = []\n    sum_array41 = []\n    sum_array42 = []\n   \
    \ sum_array43 = []\n    sum_array44 = []\n    sum_array45 = []\n    sum_array46\
    \ = []\n    sum_array47 = []\n    sum_array48 = []\n    sum_array49 = []\n   \
    \ sum_array50 = []\n    sum_array51 = []\n    sum_array52 = []\n    sum_array53\
    \ = []\n    sum_array54 = []\n    sum_array55 = []\n    sum_array56 = []\n   \
    \ sum_array57 = []\n    sum_array58 = []\n    sum_array59 = []\n    sum_array60\
    \ = []\n    sum_array61 = []\n    sum_array62 = []\n    sum_array63 = []\n   \
    \ sum_array64 = []\n    sum_array65 = []\n    sum_array66 = []\n    sum_array67\
    \ = []\n    sum_array68 = []\n    sum_array69 = []\n    sum_array70 = []\n   \
    \ sum_array71 = []\n    sum_array72 = []\n    sum_array73 = []\n    sum_array74\
    \ = []\n    sum_array75 = []\n    sum_array76 = []\n    sum_array77 = []\n   \
    \ sum_array78 = []\n    sum_array79 = []\n    sum_array80 = []\n    sum_array81\
    \ = []\n    sum_array82 = []\n    sum_\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxg7k_a1l.py\"\
    , line 109, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxg7k_a1l.py\"\
    , line 107, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxg7k_a1l.py\"\
    , line 98, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxg7k_a1l.py\"\
    , line 96, in sort_array\n    sum_\nNameError: name 'sum_' is not defined. Did\
    \ you mean: 'sum'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    array = [1, 3, 5]\n    \ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 101, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 15, in sort_array\n    sorted_array = sort_array(array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 15, in sort_array\n    sorted_array = sort_array(array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_pxqz61.py\"\
    , line 15, in sort_array\n    sorted_array = sort_array(array)\n  [Previous line\
    \ repeated 994 more times]\nRecursionError: maximum recursion depth exceeded\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    else:\n   \
    \     sum = 0\n        sum1 = array[0]\n        sum2 = array[-1]\n        sum3\
    \ = sum1 + sum2\n        sum4 = sum3 % 2\n        sum5 = sum3 // 2\n        sum6\
    \ = sum5 + sum4\n        if sum6 == 1:\n            sum6 = -1\n        elif sum6\
    \ == -1:\n            sum6 = 1\n        sum7 = sum6\n        sum8 = sum7 + sum5\n\
    \        sum9 = sum8 + sum4\n        sum10 = sum9 + sum3\n        sum11 = sum10\
    \ + sum2\n        sum12 = sum11 + sum1\n        sum13 = sum12 + sum\n        sum14\
    \ = sum13 + array[0]\n        sum15 = sum14 + array[-1]\n        sum16 = sum15\
    \ + sum\n        sum17 = sum16 + sum1\n        sum18 = sum17 + sum2\n        sum19\
    \ = sum18 + sum3\n        sum20 = sum19 + sum4\n        sum21 = sum20 + sum5\n\
    \        sum22 = sum21 + sum6\n        sum23 = sum22 + sum7\n        sum24 = sum23\
    \ + sum8\n        sum25 = sum24 + sum9\n        sum26 = sum25 + sum10\n      \
    \  sum27 = sum26 + sum11\n        sum28 = sum27 + sum12\n        sum29 = sum28\
    \ + sum13\n        sum30 = sum29 + sum14\n        sum31 = sum30 + sum15\n    \
    \    sum32 = sum31 + sum16\n        sum33 = sum32 + sum17\n        sum34 = sum33\
    \ + sum18\n        sum35 = sum34 + sum19\n        sum36 = sum35 + sum20\n    \
    \    sum37 = sum36 + sum21\n        sum38 = sum37 + sum22\n        sum39 = sum38\
    \ + sum23\n        sum40 = sum39 + sum24\n        sum41 = sum40 + sum25\n    \
    \    sum42 = sum41 + sum26\n        sum43 = sum42 + sum27\n        sum44 = sum43\
    \ + sum28\n        sum45 = sum44 + sum29\n        sum46 = sum45 + sum30\n    \
    \    sum47 = sum46 + sum31\n        sum48 = sum47 + sum32\n        sum49 = sum48\
    \ + sum33\n        sum50 = sum49 + sum34\n        sum51 = sum50\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6i_v41c3.py\"\
    , line 85, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6i_v41c3.py\"\
    , line 83, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6i_v41c3.py\"\
    , line 75, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 7, 2, 6]\n    array.sort()\n    print(array)\n\
    \    array = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n\
    \    array = [1, 5, 3, 7, 2, 6]\n    array.sort()\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n    array.sort(reverse=True)\n    print(array)\n    array\
    \ = [1, 5, 3, 7, 2, 6]\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: "[1, 2, 3, 5, 6, 7]\n[7, 6, 5, 3, 2, 1]\n[1, 2, 3, 5, 6, 7]\n[7, 6, 5, 3,\
    \ 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5,\
    \ 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6,\
    \ 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7,\
    \ 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n\
    [7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n\
    [7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n[7, 6, 5, 3, 2, 1]\n\
    [7, 6, 5, 3, 2, 1]\n"
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8w2hjtui.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8w2hjtui.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8w2hjtui.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgr619_yc.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgr619_yc.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgr619_yc.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    even_index = 0\n\
    \    odd_index = 0\n    length = len(array)\n    for i in range(length):\n   \
    \     sum += array[i]\n        if sum % 2 == 0:\n            even += array[i]\n\
    \            even_index += 1\n        else:\n            odd += array[i]\n   \
    \         odd_index += 1\n    array = [x for x in array]\n    array[even_index],\
    \ array[odd_index] = array[odd_index], array[even_index]\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9r5vuqzp.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9r5vuqzp.py\"\
    , line 42, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9r5vuqzp.py\"\
    , line 33, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9r5vuqzp.py\"\
    , line 29, in sort_array\n    array[even_index], array[odd_index] = array[odd_index],\
    \ array[even_index]\nIndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 5, 4]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoyk0oufr.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 38)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpob46idq9.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpob46idq9.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpob46idq9.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkftdtuqz.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkftdtuqz.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkftdtuqz.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    array_copy\
    \ = array.copy()\n    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_copy.append(0)\n\
    \    array_copy.append(0)\n    array_copy.append(0)\n    array_\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tul9i91.py\"\
    , line 113, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tul9i91.py\"\
    , line 111, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tul9i91.py\"\
    , line 103, in check\n    assert candidate([5]) == [5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_tul9i91.py\"\
    , line 100, in sort_array\n    array_\nNameError: name 'array_' is not defined.\
    \ Did you mean: 'array'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   length = len(array)\n    for i in range(length):\n        sum += array[i]\n\
    \        if sum % 2 == 0:\n            sum -= array[i]\n            array[i] =\
    \ 0\n        else:\n            sum -= array[i]\n            array[i] = array[-1]\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnujfv3w.py\"\
    , line 40, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnujfv3w.py\"\
    , line 38, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnujfv3w.py\"\
    , line 31, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr2sfiu9.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr2sfiu9.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkr2sfiu9.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_array = 0\n    sum_array1 = array[0]\n    sum_array2\
    \ = array[-1]\n    sum_array3 = sum_array1 + sum_array2\n    sum_array4 = sum_array3\
    \ % 2\n    if sum_array4 == 0:\n        sum_array4 = -1\n    sum_array5 = sum_array1\
    \ + sum_array2 + sum_array4\n    sum_array6 = sum_array5 - 1\n    sum_array7 =\
    \ sum_array6\n    sum_array8 = sum_array7\n    sum_array9 = sum_array8\n    sum_array10\
    \ = sum_array9\n    sum_array11 = sum_array10\n    sum_array12 = sum_array11\n\
    \    sum_array13 = sum_array12\n    sum_array14 = sum_array13\n    sum_array15\
    \ = sum_array14\n    sum_array16 = sum_array15\n    sum_array17 = sum_array16\n\
    \    sum_array18 = sum_array17\n    sum_array19 = sum_array18\n    sum_array20\
    \ = sum_array19\n    sum_array21 = sum_array20\n    sum_array22 = sum_array21\n\
    \    sum_array23 = sum_array22\n    sum_array24 = sum_array23\n    sum_array25\
    \ = sum_array24\n    sum_array26 = sum_array25\n    sum_array27 = sum_array26\n\
    \    sum_array28 = sum_array27\n    sum_array29 = sum_array28\n    sum_array30\
    \ = sum_array29\n    sum_array31 = sum_array30\n    sum_array32 = sum_array31\n\
    \    sum_array33 = sum_array32\n    sum_array34 = sum_array33\n    sum_array35\
    \ = sum_array34\n    sum_array36 = sum_array35\n    sum_array37 = sum_array36\n\
    \    sum_array38 = sum_array37\n    sum_array39 = sum_array38\n    sum_array40\
    \ = sum_array39\n    sum_array41 = sum_array40\n    sum_array42 = sum_array41\n\
    \    sum_array43 = sum_array42\n    sum_array44 = sum_array43\n    sum_array45\
    \ = sum_array44\n    sum_array46 = sum_array45\n    sum_array47 = sum_array46\n\
    \    sum_array48 = sum_array47\n    sum_array49 = sum_array48\n    sum_array50\
    \ = sum_array49\n    sum_array51 = sum_array50\n    sum_array52 = sum_array51\n\
    \    sum_array53 = sum_array52\n    sum_array54 = sum_array53\n    sum_array55\
    \ = sum_array54\n    sum_\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5])\
    \ == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5,\
    \ 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa960m7od.py\"\
    , line 85, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa960m7od.py\"\
    , line 83, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa960m7od.py\"\
    , line 74, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa960m7od.py\"\
    , line 15, in sort_array\n    sum_array1 = array[0]\nIndexError: list index out\
    \ of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even\
    \ = 0\n    odd_odd_odd_sum = 0\n    even_odd_odd_sum = 0\n    even_odd_odd_even\
    \ = 0\n    odd_odd_odd_even = 0\n    odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_even = 0\n \
    \   odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_even = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_odd_odd_od\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpph3oo2n8.py\"\
    , line 63, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpph3oo2n8.py\"\
    , line 61, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpph3oo2n8.py\"\
    , line 52, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpph3oo2n8.py\"\
    , line 50, in sort_array\n    odd_odd_odd_odd_od\nNameError: name 'odd_odd_odd_odd_od'\
    \ is not defined. Did you mean: 'odd_odd_odd_odd_sum'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   odd = True\n    even = False\n    i = 0\n    length = len(array)\n    while\
    \ i < length:\n        sum += array[i]\n        if sum % 2 == 0:\n           \
    \ even = True\n        else:\n            odd = False\n        i += 1\n    if\
    \ odd:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ixw6n15.py\"\
    , line 46, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ixw6n15.py\"\
    , line 44, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1ixw6n15.py\"\
    , line 37, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_element\
    \ = array[0]\n    sum_of_last_element = array[-1]\n    if sum_of_first_element\
    \ + sum_of_last_element % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1g8rsn38.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1g8rsn38.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1g8rsn38.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum = sum + array[i]\n        if sum % 2 == 0:\n            array[i],\
    \ array[length-1] = array[length-1], array[i]\n            length -= 1\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd7nnpc91.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd7nnpc91.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd7nnpc91.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprtu4owfq.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprtu4owfq.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprtu4owfq.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            sum -= array[i]\n\
    \            array[i], array[length-i-1] = array[length-i-1], array[i]\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpigm6xams.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpigm6xams.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpigm6xams.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu51z7kco.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu51z7kco.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu51z7kco.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even_sum\
    \ = 0\n    even_odd_odd_sum = 0\n    odd_odd_even_even = 0\n    even_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_sum = 0\n    even_odd_odd_odd_sum = 0\n    odd_odd_even_odd_even\
    \ = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_even_odd_odd_sum = 0\n    even_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_even = 0\n    even_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_sum = 0\n\
    \    odd_odd_even_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_odd_sum = 0\n    ev\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk0xfkrq2.py\"\
    , line 63, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk0xfkrq2.py\"\
    , line 61, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk0xfkrq2.py\"\
    , line 52, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk0xfkrq2.py\"\
    , line 50, in sort_array\n    ev\nNameError: name 'ev' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1qa_e3az.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1qa_e3az.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1qa_e3az.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl0ig3rr0.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl0ig3rr0.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl0ig3rr0.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_count\
    \ += 1\n            even_array.append(num)\n        else:\n            odd_count\
    \ += 1\n            odd_array.append(num)\n    if odd_count > even_count:\n  \
    \      odd_array.extend(even_array)\n        odd_array.sort()\n    else:\n   \
    \     even_array.extend(odd_array)\n        even_array.sort()\n    return odd_array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxrwrbl9.py\"\
    , line 49, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxrwrbl9.py\"\
    , line 47, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsxrwrbl9.py\"\
    , line 40, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp755xtvkz.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp755xtvkz.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp755xtvkz.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = sorted(array)\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa50flxwb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa50flxwb.py\"\
    , line 27, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa50flxwb.py\"\
    , line 21, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 6, 4, 2]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum_array = sum(array)\n    if sum_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzxn12hsx.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n            sum += array[length-i-1]\n      \
    \  else:\n            array[i], array[length-i-1] = array[length-i-1], array[i]\n\
    \            sum += array[i]\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbdugz1e.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbdugz1e.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdbdugz1e.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 5, 3, 7, 9, 2, 4, 6, 8]\n    array_copy = array.copy()\n\
    \    array_copy.sort()\n    print(array_copy)\n    array_copy = array.copy()\n\
    \    array_copy.sort(reverse=True)\n    print(array_copy)\n    \"\"\"\n    array_copy\
    \ = array.copy()\n    array_copy.sort()\n    array_copy.sort(reverse=True)\n \
    \   return array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxnjr1fc8.py\"\
    , line 21\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 39)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            sum -= array[i]\n\
    \            array[i] = 0\n        else:\n            sum -= array[i]\n      \
    \      array[i] = array[length - i - 1]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8n6h44xe.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8n6h44xe.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8n6h44xe.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum = sum + array[i]\n        if sum % 2 == 0:\n            array[i],\
    \ array[length - i - 1] = array[length - i - 1], array[i]\n        else:\n   \
    \         array[i], array[length - i - 1] = array[length - i - 1], array[length\
    \ - i - 1]\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivz1zslj.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivz1zslj.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivz1zslj.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpteso3byr.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpteso3byr.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpteso3byr.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   odd_sum = 0\n    even_sum = 0\n    odd_count = 0\n    even_count = 0\n   \
    \ odd_array = []\n    even_array = []\n    odd_array.append(array[0])\n    even_array.append(array[0])\n\
    \    for i in range(1, len(array)):\n        sum += array[i]\n        if sum %\
    \ 2 == 0:\n            even_sum += array[i]\n            even_count += 1\n   \
    \     else:\n            odd_sum += array[i]\n            odd_count += 1\n   \
    \     if odd_count == odd_sum:\n            odd_array.append(array[i])\n     \
    \   elif even_count == even_sum:\n            even_array.append(array[i])\n  \
    \      else:\n            odd_array.append(array[i])\n            even_array.append(array[i])\n\
    \    odd_array.sort()\n    even_array.sort()\n    return odd_array + even_array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nq6atf2.py\"\
    , line 56, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nq6atf2.py\"\
    , line 54, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3nq6atf2.py\"\
    , line 46, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwv4w3yhq.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwv4w3yhq.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwv4w3yhq.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    i = 0\n    while\
    \ i < len(array):\n        sum += array[i]\n        if sum % 2 == 0:\n       \
    \     even += array[i]\n        else:\n            odd += array[i]\n        i\
    \ += 1\n    if even > odd:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8d9i6yb2.py\"\
    , line 43, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8d9i6yb2.py\"\
    , line 41, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8d9i6yb2.py\"\
    , line 34, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 4, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4lxjjnkl.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    for num in array:\n        sum += num\n     \
    \   if sum % 2 == 0:\n            even_sum += num\n        else:\n           \
    \ odd_sum += num\n        if sum % 2 == 0:\n            even_array.append(num)\n\
    \        else:\n            odd_array.append(num)\n    odd_array.sort()\n    even_array.sort()\n\
    \    return odd_array + even_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg51c7gu9.py\"\
    , line 45, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg51c7gu9.py\"\
    , line 43, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg51c7gu9.py\"\
    , line 36, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n            length -= 1\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprvv7ju8q.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprvv7ju8q.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprvv7ju8q.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    odd_array.sort()\n   \
    \ even_array.sort()\n    odd_array.extend(even_array)\n    return odd_array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnjd6tx1y.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnjd6tx1y.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnjd6tx1y.py\"\
    , line 41, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxhw2zyqk.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxhw2zyqk.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxhw2zyqk.py\"\
    , line 23, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxhw2zyqk.py\"\
    , line 15, in sort_array\n    sum_of_array = sum(array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n    return array\n\ndef check(candidate):\n \
    \   assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp28vxfqn9.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp28vxfqn9.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp28vxfqn9.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx171lh8w.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx171lh8w.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx171lh8w.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    sum_of_first_and_last_element = sum(array[0:-1])\n\
    \    if sum_of_first_and_last_element % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0mc_3dp.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0mc_3dp.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0mc_3dp.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyf4kyyay.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyf4kyyay.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyf4kyyay.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    else:\n   \
    \     sum_of_first_and_last_element = sum(array[0:-1])\n        if sum_of_first_and_last_element\
    \ % 2 == 0:\n            array.sort()\n        else:\n            array.reverse()\n\
    \        return array\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalqbsddt.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalqbsddt.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalqbsddt.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqyyv27pw.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqyyv27pw.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqyyv27pw.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfb34zjef.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfb34zjef.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfb34zjef.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_array = sum(array)\n    if sum_array % 2 == 0:\n  \
    \      array.sort(reverse=True)\n    else:\n        array.sort()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbha0m3ay.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbha0m3ay.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbha0m3ay.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array)\
    \ == 1:\n        return array\n    sum = 0\n    i = 0\n    j = len(array) - 1\n\
    \    while i < j:\n        sum = array[i] + array[j]\n        if sum % 2 == 0:\n\
    \            array[i], array[j] = array[j], array[i]\n            i += 1\n   \
    \         j -= 1\n        else:\n            i += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgkeqgwl.py\"\
    , line 43, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgkeqgwl.py\"\
    , line 41, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgkeqgwl.py\"\
    , line 34, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum += array[i]\n       \
    \ if sum % 2 == 0:\n            even_sum += array[i]\n            even_count +=\
    \ 1\n        else:\n            odd_sum += array[i]\n            odd_count +=\
    \ 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n      \
    \  else:\n            even_array.append(array[i])\n    odd_array.sort()\n    even_array.sort()\n\
    \    odd_array.extend(even_array)\n    return odd_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0lgt1wp2.py\"\
    , line 51, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0lgt1wp2.py\"\
    , line 49, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0lgt1wp2.py\"\
    , line 42, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqgy2g2e.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqgy2g2e.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxqgy2g2e.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj51lnuux.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj51lnuux.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj51lnuux.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n        else:\n            array[i],\
    \ array[length - i - 1] = array[length - i - 1], array[length - i - 1]\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvj561xfb.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvj561xfb.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvj561xfb.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wgeo0e0.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wgeo0e0.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wgeo0e0.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    i = 0\n    j = 0\n    length = len(array)\n\
    \    while i < length:\n        sum += array[i]\n        i += 1\n    while j <\
    \ length:\n        if sum % 2 == 0:\n            array[j], array[j + 1] = array[j\
    \ + 1], array[j]\n            j += 1\n        else:\n            array[j], array[j\
    \ + 1] = array[j + 1], array[j]\n            j += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4oynsih7.py\"\
    , line 42, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4oynsih7.py\"\
    , line 40, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4oynsih7.py\"\
    , line 32, in check\n    assert candidate([5]) == [5]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4oynsih7.py\"\
    , line 26, in sort_array\n    array[j], array[j + 1] = array[j + 1], array[j]\n\
    IndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    else:\n   \
    \     sum = 0\n        for i in range(len(array)):\n            sum += array[i]\n\
    \            if sum % 2 != 0:\n                sum -= array[i]\n            else:\n\
    \                sum -= array[i] - 1\n        return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjyzcym_h.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjyzcym_h.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjyzcym_h.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    odd_array.sort()\n   \
    \ even_array.sort()\n    odd_array.extend(even_array)\n    return odd_array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0oo2oxas.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0oo2oxas.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0oo2oxas.py\"\
    , line 41, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ktln3g.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ktln3g.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph1ktln3g.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    odd_array.append(array[0])\n\
    \    even_array.append(array[-1])\n    for i in range(1, len(array)):\n      \
    \  sum += array[i]\n        if sum % 2 == 0:\n            even_sum += array[i]\n\
    \            even_count += 1\n        else:\n            odd_sum += array[i]\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n\
    \            even_array.append(array[i])\n            odd_count += 1\n       \
    \     even_count += 1\n        else:\n            odd_array.append(array[i])\n\
    \            odd_array.append(array[i])\n            odd_count += 1\n        \
    \    even_count += 1\n    odd_array.sort()\n    even_array.sort()\n    odd_array.reverse()\n\
    \    even_array.reverse()\n    return odd_array + even_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkin6p260.py\"\
    , line 59, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkin6p260.py\"\
    , line 57, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkin6p260.py\"\
    , line 48, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkin6p260.py\"\
    , line 21, in sort_array\n    odd_array.append(array[0])\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 5, 6, 4, 7, 8]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        sorted_array = sorted(array)\n    else:\n        sorted_array\
    \ = sorted(array, reverse=True)\n    return sorted_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv949t7oi.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 37)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    even_even = 0\n    odd_odd = 0\n    even_odd = 0\n    odd_even = 0\n    even_even\
    \ = 0\n    odd_odd = 0\n    even_odd = 0\n    odd_even = 0\n    even_even = 0\n\
    \    odd_odd = 0\n    even_odd = 0\n    odd_even = 0\n    even_even = 0\n    odd_odd\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    even_even = 0\n    odd_odd = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    even_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    odd_odd = 0\n    even_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    odd_odd\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0,\
    \ 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3,\
    \ 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1wkbp39.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1wkbp39.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1wkbp39.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    array = [int(i) for i in array]\n    for i in range(length):\n        sum\
    \ += array[i]\n        if sum % 2 == 0:\n            even += array[i]\n      \
    \  else:\n            odd += array[i]\n    array = [i for i in array]\n    array.sort()\n\
    \    if even > odd:\n        array.sort()\n    else:\n        array.reverse()\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4sgevkf.py\"\
    , line 45, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4sgevkf.py\"\
    , line 43, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr4sgevkf.py\"\
    , line 36, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n\
    \    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even\
    \ = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n\
    \    even_odd = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd\
    \ = 0\n    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n\
    \    odd_even = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even\
    \ = 0\n    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n\
    \    odd_odd = 0\n    even_even = 0\n    even_odd = 0\n    odd_even = 0\n    odd_odd\
    \ = 0\n    even_even\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqxropp_.py\"\
    , line 112, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqxropp_.py\"\
    , line 110, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoqxropp_.py\"\
    , line 101, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        return sorted(array)\n    else:\n        return sorted(array, key=lambda\
    \ x: -x)\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbw9gv9zb.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbw9gv9zb.py\"\
    , line 35, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbw9gv9zb.py\"\
    , line 28, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyxsa_ey.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyxsa_ey.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmyxsa_ey.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7gyr3kyg.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7gyr3kyg.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7gyr3kyg.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_first_index = 0\n    sum_of_last_index\
    \ = 0\n    sum_of_first_index_of_last_index = 0\n    sum_of_last_index_of_first_index\
    \ = 0\n    sum_of_first_index_of_first_index = 0\n    sum_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_last_index_of_first_index = 0\n    sum_of_last_index_of_first_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_last_index = 0\n    sum_of_last_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_first_index_of_last_index = 0\n\
    \    sum_of_last_index_of_last_index_of_first_index_of_last_index = 0\n    sum_of_first_index_of_first_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_last_index_of_last_index_of_first_index_of_last_index = 0\n\
    \    sum_of_first_index_of_first_index_of_first_index_of_first_index_of_last_index\
    \ = 0\n    sum_of_last_index_of_last_index_of_first_index_of_first_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_last_index_of_first_index_of_first_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_first_index_of_first_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_last_index_of_last_index_of_first_index_of_first_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_last_index_of_last_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_last_index_of_first_index_of_first_index_of_last_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index\
    \ = 0\n    sum_of_last_index_of_last_index_of_first_index_of_first_index_of_last_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_last_index_of_first_index_of_last_index_of_first_index_of_last_index\
    \ = 0\n    sum_of_last_index_of_first_index_of_first_index_of_last_index_of_first_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_first_index_of_first_index_of_last_index_of_first_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_last_index_of_last_index_of_first_index_of_first_index_of_last_index_of_first_index_of_last_index_of_last_index\
    \ = 0\n    sum_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index_of_\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplusy3p8i.py\"\
    , line 56, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplusy3p8i.py\"\
    , line 54, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplusy3p8i.py\"\
    , line 45, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplusy3p8i.py\"\
    , line 43, in sort_array\n    sum_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index_of_\n\
    NameError: name 'sum_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index_of_'\
    \ is not defined. Did you mean: 'sum_of_first_index_of_first_index_of_last_index_of_last_index_of_first_index'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n        else:\n            array[i],\
    \ array[length - i - 1] = array[length - i - 1], array[length - i - 1]\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5s84wdb.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5s84wdb.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5s84wdb.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            even += array[i]\n        else:\n            odd += array[i]\n  \
    \  even = sort_array(even)\n    odd = sort_array(odd)\n    array = [even, odd]\n\
    \    return array\n\ndef check(candidate):\n    assert candidate([]) == []\n \
    \   assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wl_r8jm.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wl_r8jm.py\"\
    , line 39, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wl_r8jm.py\"\
    , line 30, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wl_r8jm.py\"\
    , line 24, in sort_array\n    even = sort_array(even)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5wl_r8jm.py\"\
    , line 17, in sort_array\n    length = len(array)\nTypeError: object of type 'int'\
    \ has no len()\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum = sum + array[i]\n        if sum % 2 == 0:\n            array[i],\
    \ array[length-i-1] = array[length-i-1], array[i]\n        else:\n           \
    \ array[i], array[length-i-1] = array[length-i-1], array[i]\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny04akhn.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny04akhn.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpny04akhn.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    \n   \
    \ for num in array:\n        sum += num\n        if sum % 2 == 0:\n          \
    \  even_count += 1\n            even_array.append(num)\n        else:\n      \
    \      odd_count += 1\n            odd_array.append(num)\n    \n    if odd_count\
    \ > even_count:\n        odd_array.extend(even_array)\n        even_array.clear()\n\
    \    else:\n        even_array.extend(odd_array)\n        odd_array.clear()\n\
    \    \n    return odd_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkm1jeo1s.py\"\
    , line 52, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkm1jeo1s.py\"\
    , line 50, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkm1jeo1s.py\"\
    , line 43, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    length = len(array)\n\
    \    for i in range(length):\n        sum += array[i]\n        if sum % 2 == 0:\n\
    \            even += array[i]\n        else:\n            odd += array[i]\n  \
    \  even = sorted(even)\n    odd = sorted(odd)\n    array = even + odd\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbx00jwfh.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbx00jwfh.py\"\
    , line 39, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbx00jwfh.py\"\
    , line 30, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbx00jwfh.py\"\
    , line 24, in sort_array\n    even = sorted(even)\nTypeError: 'int' object is\
    \ not iterable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    i = 0\n    j = len(array) - 1\n    while i\
    \ < j:\n        sum = array[i] + array[j]\n        if sum % 2 == 0:\n        \
    \    array[i], array[j] = array[j], array[i]\n            i += 1\n           \
    \ j -= 1\n        else:\n            i += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbxazeqc.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbxazeqc.py\"\
    , line 37, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbxazeqc.py\"\
    , line 30, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n            sum -= array[i]\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpucijenzv.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpucijenzv.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpucijenzv.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   odd = True\n    even = False\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            even = True\n\
    \        else:\n            odd = False\n    if odd:\n        array.sort()\n \
    \   else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgl6aunc.py\"\
    , line 44, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgl6aunc.py\"\
    , line 42, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqgl6aunc.py\"\
    , line 35, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    even = 0\n    odd = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n    odd_index = 0\n    even_index = 0\n\
    \    odd_index = 0\n    even_index = 0\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1adp1lvw.py\"\
    , line 121, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1adp1lvw.py\"\
    , line 119, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1adp1lvw.py\"\
    , line 110, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    for num in array:\n        sum += num\n     \
    \   if sum % 2 == 0:\n            even_sum += num\n        else:\n           \
    \ odd_sum += num\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    odd_array.sort()\n   \
    \ even_array.sort()\n    return odd_array + even_array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjazybwj3.py\"\
    , line 45, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjazybwj3.py\"\
    , line 43, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjazybwj3.py\"\
    , line 36, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum = sum + array[i]\n        if sum % 2 == 0:\n            array[i],\
    \ array[length-1] = array[length-1], array[i]\n            length -= 1\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatazy3am.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatazy3am.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpatazy3am.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum = 0\n \
    \   length = len(array)\n    i = 0\n    while i < length:\n        sum += array[i]\n\
    \        i += 1\n    \n    if sum % 2 == 1:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0eqz6mn5.py\"\
    , line 41, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0eqz6mn5.py\"\
    , line 39, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0eqz6mn5.py\"\
    , line 32, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum = sum + array[i]\n  \
    \      if sum % 2 == 0:\n            even_sum = even_sum + array[i]\n        \
    \    even_count = even_count + 1\n        else:\n            odd_sum = odd_sum\
    \ + array[i]\n            odd_count = odd_count + 1\n    if odd_count > even_count:\n\
    \        for i in range(length):\n            odd_array.append(array[i])\n   \
    \         odd_sum = odd_sum - odd_array[i]\n            odd_count = odd_count\
    \ - 1\n        for i in range(length):\n            even_array.append(array[i])\n\
    \            even_sum = even_sum + even_array[i]\n            even_count = even_count\
    \ + 1\n    else:\n        for i in range(length):\n            even_array.append(array[i])\n\
    \            even_sum = even_sum - even_array[i]\n            even_count = even_count\
    \ - 1\n        for i in range(length):\n            odd_array.append(array[i])\n\
    \            odd_sum = odd_sum + odd_array[i]\n            odd_count = odd_count\
    \ + 1\n    return odd_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5he475iw.py\"\
    , line 62, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5he475iw.py\"\
    , line 60, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5he475iw.py\"\
    , line 53, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum += array[i]\n        i += 1\n    if sum % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprsz_tg5p.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprsz_tg5p.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprsz_tg5p.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_first_last_elements = 0\n    sum_of_first_last_elements\
    \ = sum(array[0:-1])\n    if sum_of_first_last_elements % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0orkpbfv.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0orkpbfv.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0orkpbfv.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hd9n2p5.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hd9n2p5.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hd9n2p5.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_and_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_and_last_element % 2 == 0:\n       \
    \ array.sort()\n    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xnz7dwq.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xnz7dwq.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2xnz7dwq.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpftf8adjo.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpftf8adjo.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpftf8adjo.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    \n    for i in range(length):\n        sum += array[i]\n \
    \       if sum % 2 == 0:\n            even_sum += array[i]\n            even_count\
    \ += 1\n        else:\n            odd_sum += array[i]\n            odd_count\
    \ += 1\n    \n    if odd_count > even_count:\n        for i in range(length):\n\
    \            if odd_sum > even_sum:\n                odd_array.append(array[i])\n\
    \            else:\n                even_array.append(array[i])\n    else:\n \
    \       for i in range(length):\n            if odd_sum < even_sum:\n        \
    \        odd_array.append(array[i])\n            else:\n                even_array.append(array[i])\n\
    \    \n    return odd_array\n    \ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpke05na0a.py\"\
    , line 59, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpke05na0a.py\"\
    , line 57, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpke05na0a.py\"\
    , line 50, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_v90pa3t.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_v90pa3t.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_v90pa3t.py\"\
    , line 23, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_v90pa3t.py\"\
    , line 15, in sort_array\n    sum_of_array = sum(array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprssu4hqz.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprssu4hqz.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprssu4hqz.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_and_last_element\
    \ = array[0] + array[len(array) - 1]\n    if sum_of_first_and_last_element % 2\
    \ == 0:\n        array.sort()\n    else:\n        array.reverse()\n    return\
    \ array\n\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1lzqvgz1.py\"\
    , line 36, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1lzqvgz1.py\"\
    , line 34, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1lzqvgz1.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7czcrj9c.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7czcrj9c.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7czcrj9c.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-i-1]\
    \ = array[length-i-1], array[i]\n            sum -= array[i]\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe85gkoc5.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe85gkoc5.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe85gkoc5.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even_sum\
    \ = 0\n    even_odd_odd_sum = 0\n    odd_odd_even_even = 0\n    even_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_sum = 0\n    even_odd_odd_odd_sum = 0\n    odd_odd_even_odd_even\
    \ = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_even_odd_odd_sum = 0\n    even_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_even = 0\n    even_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_sum = 0\n\
    \    odd_odd_even_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mw6gu48.py\"\
    , line 64, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mw6gu48.py\"\
    , line 62, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mw6gu48.py\"\
    , line 53, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsio8elx5.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsio8elx5.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsio8elx5.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length-1]\
    \ = array[length-1], array[i]\n            length -= 1\n    return array\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53u7pkkh.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53u7pkkh.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53u7pkkh.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    sum_of_array = sum(array)\n    if sum_of_array\
    \ % 2 == 0:\n        array = sorted(array)\n    else:\n        array = sorted(array,\
    \ reverse=True)\n    return array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe2t6_2f.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe2t6_2f.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe2t6_2f.py\"\
    , line 23, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoe2t6_2f.py\"\
    , line 15, in sort_array\n    sum_of_array = sum(array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptx0xd313.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptx0xd313.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptx0xd313.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum += array[i]\n       \
    \ if sum % 2 == 0:\n            even_sum += array[i]\n            even_count +=\
    \ 1\n        else:\n            odd_sum += array[i]\n            odd_count +=\
    \ 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n      \
    \  else:\n            even_array.append(array[i])\n    odd_array.sort()\n    even_array.sort()\n\
    \    if odd_count > even_count:\n        return odd_array\n    else:\n       \
    \ return even_array\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0b0gl2i2.py\"\
    , line 53, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0b0gl2i2.py\"\
    , line 51, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0b0gl2i2.py\"\
    , line 44, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n\
    \    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd\
    \ = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n\
    \    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even\
    \ = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n\
    \    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd\
    \ = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n\
    \    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even\
    \ = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n\
    \    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd\
    \ = 1\n    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n\
    \    even_even = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even\
    \ = 1\n    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n\
    \    even_odd = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd\
    \ = 2\n    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n\
    \    odd_even = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    odd_even\
    \ = 2\n    odd_odd = 1\n    even_even = 1\n    even_odd = 2\n    od\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557zxhp8.py\"\
    , line 106, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557zxhp8.py\"\
    , line 104, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557zxhp8.py\"\
    , line 95, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp557zxhp8.py\"\
    , line 93, in sort_array\n    od\nNameError: name 'od' is not defined. Did you\
    \ mean: 'id'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n        if sum % 2 == 1:\n            odd_array.append(num)\n\
    \        else:\n            even_array.append(num)\n    if odd_count > even_count:\n\
    \        odd_array.extend(even_array)\n    else:\n        even_array.extend(odd_array)\n\
    \    return odd_array\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) ==\
    \ [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4fx2s9z.py\"\
    , line 51, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4fx2s9z.py\"\
    , line 49, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4fx2s9z.py\"\
    , line 42, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even_sum\
    \ = 0\n    even_odd_odd_sum = 0\n    odd_odd_even_even = 0\n    even_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_sum = 0\n    even_odd_odd_odd_sum = 0\n    odd_odd_even_odd_even\
    \ = 0\n    even_odd_odd_odd_even = 0\n    odd_odd_even_odd_odd_sum = 0\n    even_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_even = 0\n    even_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_sum = 0\n\
    \    odd_odd_even_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_even = 0\n\
    \    odd_odd_even_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    odd_odd_even_odd_odd_odd_odd_odd_sum = 0\n    even_odd_odd_odd_odd_odd_odd_sum\
    \ = 0\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvyfog85p.py\"\
    , line 64, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvyfog85p.py\"\
    , line 62, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvyfog85p.py\"\
    , line 53, in check\n    assert candidate([]) == []\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    i = 0\n    j = len(array) - 1\n    while i\
    \ < j:\n        sum = array[i] + array[j]\n        if sum % 2 == 0:\n        \
    \    array[i], array[j] = array[j], array[i]\n            i += 1\n           \
    \ j -= 1\n        else:\n            i += 1\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbq6kk59u.py\"\
    , line 39, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbq6kk59u.py\"\
    , line 37, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbq6kk59u.py\"\
    , line 30, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalv4tjm4.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalv4tjm4.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalv4tjm4.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            even_sum += array[i]\n\
    \            even_array.append(array[i])\n        else:\n            odd_sum +=\
    \ array[i]\n            odd_array.append(array[i])\n    if odd_sum % 2 != 0:\n\
    \        odd_array.sort()\n    else:\n        odd_array.sort(reverse=True)\n \
    \   if even_sum % 2 != 0:\n        even_array.sort()\n    else:\n        even_array.sort(reverse=True)\n\
    \    return odd_array + even_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbt_bbec.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbt_bbec.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnbt_bbec.py\"\
    , line 41, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    i = 0\n    while\
    \ i < length:\n        sum = sum + array[i]\n        i += 1\n    if sum % 2 ==\
    \ 0:\n        array.sort()\n    else:\n        array.reverse()\n    return array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ppe9mey.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ppe9mey.py\"\
    , line 36, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ppe9mey.py\"\
    , line 29, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdwiein0d.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdwiein0d.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdwiein0d.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    \n    for i in range(len(array)):\n        sum\
    \ += array[i]\n        if sum % 2 == 0:\n            even_array.append(array[i])\n\
    \        else:\n            odd_array.append(array[i])\n    \n    if sum % 2 ==\
    \ 0:\n        odd_sum = sum(odd_array)\n        even_sum = sum(even_array)\n \
    \   else:\n        odd_sum = sum(odd_array[::-1])\n        even_sum = sum(even_array[::-1])\n\
    \    \n    if odd_sum % 2 == 0:\n        odd_array.sort()\n    else:\n       \
    \ odd_array.sort(reverse=True)\n    \n    if even_sum % 2 == 0:\n        even_array.sort()\n\
    \    else:\n        even_array.sort(reverse=True)\n    \n    return odd_array\
    \ + even_array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalzmfbml.py\"\
    , line 58, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalzmfbml.py\"\
    , line 56, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalzmfbml.py\"\
    , line 47, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpalzmfbml.py\"\
    , line 28, in sort_array\n    odd_sum = sum(odd_array)\nTypeError: 'int' object\
    \ is not callable\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_array =\
    \ sum(array)\n    if sum_array % 2 == 0:\n        array.sort(reverse=True)\n \
    \   else:\n        array.sort()\n    return array\n\ndef check(candidate):\n \
    \   assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9z0yxbkw.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9z0yxbkw.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9z0yxbkw.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array_copy = array.copy()\n    array_copy.sort()\n    return\
    \ array_copy\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2,\
    \ 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1,\
    \ 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87,\
    \ 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11])\
    \ == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9929gzxw.py\"\
    , line 30, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9929gzxw.py\"\
    , line 28, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9929gzxw.py\"\
    , line 22, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            array[i], array[length\
    \ - i - 1] = array[length - i - 1], array[i]\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpib16y1y0.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpib16y1y0.py\"\
    , line 32, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpib16y1y0.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    length\
    \ = len(array)\n    for i in range(length):\n        sum += array[i]\n       \
    \ if sum % 2 == 0:\n            even_sum += array[i]\n            even_count +=\
    \ 1\n        else:\n            odd_sum += array[i]\n            odd_count +=\
    \ 1\n        if sum % 2 == 1:\n            odd_array.append(array[i])\n      \
    \  else:\n            even_array.append(array[i])\n    odd_array.sort()\n    even_array.sort()\n\
    \    if odd_count > even_count:\n        odd_array.extend(even_array[::-1])\n\
    \    else:\n        even_array.extend(odd_array[::-1])\n    return odd_array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mo8fb9k.py\"\
    , line 54, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mo8fb9k.py\"\
    , line 52, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mo8fb9k.py\"\
    , line 45, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = [1, 3, 2, 4, 5]\n    sorted_array = sort_array(array)\n\
    \    print(sorted_array)\n    \"\"\"\n    sum = 0\n    sorted_array = []\n   \
    \ for i in range(len(array)):\n        sum += array[i]\n        sorted_array.append(array[i])\n\
    \        if sum % 2 == 0:\n            sorted_array.reverse()\n    return sorted_array\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppcsokj_8.py\"\
    , line 17\n    \"\"\"\n    ^\nSyntaxError: unterminated triple-quoted string literal\
    \ (detected at line 39)\n"
  exit_code: 1
  status: SyntaxError
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_count\
    \ = 0\n    even_count = 0\n    odd_array = []\n    even_array = []\n    for num\
    \ in array:\n        sum += num\n        if sum % 2 == 0:\n            even_sum\
    \ += num\n            even_count += 1\n        else:\n            odd_sum += num\n\
    \            odd_count += 1\n    if odd_count > even_count:\n        odd_array.extend(even_array)\n\
    \        odd_array.extend(odd_array)\n        odd_array.sort()\n    elif odd_count\
    \ < even_count:\n        even_array.extend(odd_array)\n        even_array.extend(even_array)\n\
    \        even_array.sort()\n    else:\n        odd_array.extend(even_array)\n\
    \        odd_array.sort()\n    return odd_array\n\ndef check(candidate):\n   \
    \ assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxdhz30uz.py\"\
    , line 54, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxdhz30uz.py\"\
    , line 52, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxdhz30uz.py\"\
    , line 44, in check\n    assert candidate([5]) == [5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpixwu0max.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpixwu0max.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpixwu0max.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_first_last_element\
    \ = sum(array[0:-1])\n    if sum_of_first_last_element % 2 == 0:\n        array.sort()\n\
    \    else:\n        array.reverse()\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y4gnw1.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y4gnw1.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp69y4gnw1.py\"\
    , line 27, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort()\n    else:\n        array.reverse()\n    return array\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpazl6yu3o.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpazl6yu3o.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpazl6yu3o.py\"\
    , line 24, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_array\
    \ = []\n    even_array = []\n    length = len(array)\n    for i in range(length):\n\
    \        sum += array[i]\n        if sum % 2 == 0:\n            even_sum += array[i]\n\
    \            even_array.append(array[i])\n        else:\n            odd_sum +=\
    \ array[i]\n            odd_array.append(array[i])\n    if odd_sum % 2 != 0:\n\
    \        odd_array.sort()\n    else:\n        odd_array.sort(reverse=True)\n \
    \   if even_sum % 2 != 0:\n        even_array.sort()\n    else:\n        even_array.sort(reverse=True)\n\
    \    return odd_array + even_array\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([5]) == [5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6,\
    \ 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n    assert candidate([15,\
    \ 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14,\
    \ 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlnipgik.py\"\
    , line 50, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlnipgik.py\"\
    , line 48, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvlnipgik.py\"\
    , line 41, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum_of_array = sum(array)\n    if sum_of_array % 2 == 0:\n\
    \        array.sort(reverse=True)\n    else:\n        array.sort()\n    return\
    \ array\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
    \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n   \
    \ assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert\
    \ candidate([2, 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) ==\
    \ [0, 11, 15, 32, 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21,\
    \ 14, 11]\n\ndef test_check():\n    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sbhvuqi.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sbhvuqi.py\"\
    , line 31, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sbhvuqi.py\"\
    , line 25, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    sum = 0\n    odd_sum = 0\n    even_sum = 0\n    odd_even\
    \ = 0\n    odd_odd_sum = 0\n    even_odd_sum = 0\n    even_odd_even = 0\n    odd_odd_even\
    \ = 0\n    even_odd_odd_sum = 0\n    odd_odd_odd_even = 0\n    even_odd_odd_odd_sum\
    \ = 0\n    odd_odd_odd_odd_even = 0\n    even_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_sum = 0\n    odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 0\n    even_odd_odd_odd_odd_odd_odd_odd_od\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuob_ekhe.py\"\
    , line 57, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuob_ekhe.py\"\
    , line 55, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuob_ekhe.py\"\
    , line 46, in check\n    assert candidate([]) == []\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuob_ekhe.py\"\
    , line 44, in sort_array\n    even_odd_odd_odd_odd_odd_odd_odd_od\nNameError:\
    \ name 'even_odd_odd_odd_odd_odd_odd_odd_od' is not defined. Did you mean: 'even_odd_odd_odd_odd_odd_odd_odd_sum'?\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    array = sorted(array)\n    return array\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([5]) == [5]\n    assert\
    \ candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) ==\
    \ [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42,\
    \ 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
    \    check(sort_array)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz4lt8p0.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz4lt8p0.py\"\
    , line 27, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoz4lt8p0.py\"\
    , line 21, in check\n    assert candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4,\
    \ 3, 2, 1, 0]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
    \    \"\"\"\n    Given an array of non-negative integers, return a copy of the\
    \ given array after sorting,\n    you will sort the given array in ascending order\
    \ if the sum( first index value, last index value) is odd,\n    or sort it in\
    \ descending order if the sum( first index value, last index value) is even.\n\
    \n    Note:\n    * don't change the given array.\n\n    Examples:\n          \
    \          \"\"\"\n    if len(array) == 0:\n        return []\n    sum_of_array\
    \ = sum(array)\n    if sum_of_array % 2 == 0:\n        array.sort()\n    else:\n\
    \        array.reverse()\n    return array\n\ndef check(candidate):\n    assert\
    \ candidate([]) == []\n    assert candidate([5]) == [5]\n    assert candidate([2,\
    \ 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert candidate([2, 4, 3, 0, 1,\
    \ 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2, 1]) == [1, 2]\n  \
    \  assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32, 42, 87]\n    assert\
    \ candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n    check(sort_array)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8p4_8pk.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8p4_8pk.py\"\
    , line 33, in test_check\n    check(sort_array)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8p4_8pk.py\"\
    , line 26, in check\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3,\
    \ 4, 5]\nAssertionError\n"
  exit_code: -1
  status: Exception

name: HumanEval_34_unique
language: py
results:
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzjhal53.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzjhal53.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzjhal53.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_dq7q1b.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_dq7q1b.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_dq7q1b.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphw0ewxuy.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphw0ewxuy.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphw0ewxuy.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd15j4g2c.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd15j4g2c.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd15j4g2c.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8ximz59.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8ximz59.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8ximz59.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvmzz0f_d.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvmzz0f_d.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvmzz0f_d.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5z46l942.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5z46l942.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5z46l942.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7ahg5lx.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7ahg5lx.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7ahg5lx.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfue_4u_.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfue_4u_.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkfue_4u_.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp30p29nl2.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp30p29nl2.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp30p29nl2.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl362jazv.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl362jazv.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl362jazv.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4k37gg2t.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4k37gg2t.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4k37gg2t.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0p4yd23.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0p4yd23.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn0p4yd23.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzmyg8ja.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzmyg8ja.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdzmyg8ja.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzfzjlmx.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzfzjlmx.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphzfzjlmx.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbyxkvq4.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbyxkvq4.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvbyxkvq4.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp22vw51sj.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp22vw51sj.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp22vw51sj.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpud4i5luy.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpud4i5luy.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpud4i5luy.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmdicuak.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmdicuak.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsmdicuak.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9l5vlxqy.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9l5vlxqy.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9l5vlxqy.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4w7nigj.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4w7nigj.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph4w7nigj.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnxhlfrz.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnxhlfrz.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsnxhlfrz.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3pt5ag.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3pt5ag.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2_3pt5ag.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqfizbgwa.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqfizbgwa.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqfizbgwa.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjageyxai.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjageyxai.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjageyxai.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplgvhdqk8.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplgvhdqk8.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplgvhdqk8.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzipnfg_c.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzipnfg_c.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzipnfg_c.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp59z0jt1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp59z0jt1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp59z0jt1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9wwjvqzw.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9wwjvqzw.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9wwjvqzw.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbpco232s.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbpco232s.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbpco232s.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbqupsn7.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbqupsn7.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbqupsn7.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvglnhua.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvglnhua.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnvglnhua.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8mggoms.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8mggoms.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8mggoms.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe_51hpp.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe_51hpp.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxe_51hpp.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp915dplgr.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp915dplgr.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp915dplgr.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn7q8mkiz.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn7q8mkiz.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn7q8mkiz.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyj6owtnw.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyj6owtnw.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyj6owtnw.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpojfjsj8z.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpojfjsj8z.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpojfjsj8z.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6l_bi2q9.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6l_bi2q9.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6l_bi2q9.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ceczq1w.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ceczq1w.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ceczq1w.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf7xl13j.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf7xl13j.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvf7xl13j.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh89ebvu.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh89ebvu.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh89ebvu.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mt697i.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mt697i.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp37mt697i.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1nqkq62.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1nqkq62.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1nqkq62.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7154mrwa.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7154mrwa.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7154mrwa.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgthng04e.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgthng04e.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgthng04e.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi6xaeny.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi6xaeny.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwi6xaeny.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsohs87ex.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsohs87ex.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsohs87ex.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgfxtp8.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgfxtp8.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgfxtp8.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiwjj2o6m.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiwjj2o6m.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiwjj2o6m.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpumrfnkwp.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpumrfnkwp.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpumrfnkwp.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8rr801t.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8rr801t.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw8rr801t.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbarr16bl.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbarr16bl.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbarr16bl.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpoarhly.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpoarhly.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpoarhly.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiy5d6cho.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiy5d6cho.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiy5d6cho.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7h2wpk.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7h2wpk.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng7h2wpk.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8ujnkj0.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8ujnkj0.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8ujnkj0.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmjn8n0m1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmjn8n0m1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmjn8n0m1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0c9in51s.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0c9in51s.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0c9in51s.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp974b065d.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp974b065d.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp974b065d.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbt0u0jk.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbt0u0jk.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfbt0u0jk.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrcxzgti.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrcxzgti.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnrcxzgti.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3yye_4qx.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3yye_4qx.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3yye_4qx.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpba6qh8wz.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpba6qh8wz.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpba6qh8wz.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgw_iz9wo.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgw_iz9wo.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgw_iz9wo.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpccen5x9o.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpccen5x9o.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpccen5x9o.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t39bmr7.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t39bmr7.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2t39bmr7.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7beqqgxh.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7beqqgxh.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7beqqgxh.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7nbgqrx.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7nbgqrx.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb7nbgqrx.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_b0k_hm.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_b0k_hm.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc_b0k_hm.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3a2o8aaq.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3a2o8aaq.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3a2o8aaq.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3jstzihs.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3jstzihs.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3jstzihs.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpks_96w44.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpks_96w44.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpks_96w44.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk5zs9hdk.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk5zs9hdk.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk5zs9hdk.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipey07bq.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipey07bq.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipey07bq.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnp53n6xo.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnp53n6xo.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnp53n6xo.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9lyauh98.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9lyauh98.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9lyauh98.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnplx0g1q.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnplx0g1q.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnplx0g1q.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0ztk7fp.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0ztk7fp.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg0ztk7fp.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i3rtz8s.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i3rtz8s.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7i3rtz8s.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2irgsdeu.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2irgsdeu.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2irgsdeu.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipxfik2q.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipxfik2q.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipxfik2q.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ge6sggc.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ge6sggc.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ge6sggc.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprye8rru4.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprye8rru4.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprye8rru4.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9da5e3e.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9da5e3e.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9da5e3e.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35rym454.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35rym454.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp35rym454.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rm6eiek.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rm6eiek.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rm6eiek.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu1q3xr1b.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu1q3xr1b.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu1q3xr1b.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5xxfqtwr.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5xxfqtwr.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5xxfqtwr.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rwvd7x0.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rwvd7x0.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rwvd7x0.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4jwd0q9i.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4jwd0q9i.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4jwd0q9i.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpztbdtdb6.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpztbdtdb6.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpztbdtdb6.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwzuqnbk.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwzuqnbk.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwwzuqnbk.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1uyaabvn.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1uyaabvn.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1uyaabvn.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeq_3ekki.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeq_3ekki.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeq_3ekki.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaaikja3y.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaaikja3y.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaaikja3y.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bht0jt2.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bht0jt2.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bht0jt2.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3pe7xiwc.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3pe7xiwc.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3pe7xiwc.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvrtan2or.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvrtan2or.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvrtan2or.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpovj6qp1i.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpovj6qp1i.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpovj6qp1i.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51hmi_tj.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51hmi_tj.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51hmi_tj.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmabk6zn.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmabk6zn.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmabk6zn.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u_71vb1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u_71vb1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u_71vb1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodmjw5hq.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodmjw5hq.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodmjw5hq.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4u1kzhnd.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4u1kzhnd.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4u1kzhnd.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdp76yjc.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdp76yjc.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjdp76yjc.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeu9xkpmo.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeu9xkpmo.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeu9xkpmo.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi0wotsgm.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi0wotsgm.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi0wotsgm.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1ipsbx8.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1ipsbx8.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf1ipsbx8.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0l5pja1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0l5pja1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf0l5pja1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt41qji8l.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt41qji8l.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt41qji8l.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7prtw_h.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7prtw_h.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk7prtw_h.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tpdr6t6.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tpdr6t6.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1tpdr6t6.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps80zv__z.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps80zv__z.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps80zv__z.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl8qcfffp.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl8qcfffp.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl8qcfffp.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa7w8lc1g.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa7w8lc1g.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa7w8lc1g.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdrkx3eaq.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdrkx3eaq.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdrkx3eaq.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpts8ujhcv.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpts8ujhcv.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpts8ujhcv.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu705lpaz.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu705lpaz.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu705lpaz.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv1doz_v.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv1doz_v.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqv1doz_v.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq1dzp3e.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq1dzp3e.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzq1dzp3e.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxr74juwf.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxr74juwf.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxr74juwf.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ss0305z.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ss0305z.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_ss0305z.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplc6pcuy1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplc6pcuy1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplc6pcuy1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivahzfla.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivahzfla.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpivahzfla.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt7vjlmep.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt7vjlmep.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt7vjlmep.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_86x52o9.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_86x52o9.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_86x52o9.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_aosl7bi.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_aosl7bi.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_aosl7bi.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp85h6ot4.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp85h6ot4.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp85h6ot4.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqpaf4ne.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqpaf4ne.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnqpaf4ne.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqbl02wtw.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqbl02wtw.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqbl02wtw.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxfol7fbj.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxfol7fbj.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxfol7fbj.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hp9m29u.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hp9m29u.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_hp9m29u.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r0pcp5y.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r0pcp5y.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4r0pcp5y.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jozeen1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jozeen1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0jozeen1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zsy4m4c.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zsy4m4c.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8zsy4m4c.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa2dlgdsl.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa2dlgdsl.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa2dlgdsl.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd_qmrx63.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd_qmrx63.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd_qmrx63.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph5i6o0hm.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph5i6o0hm.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph5i6o0hm.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bg0_uow.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bg0_uow.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5bg0_uow.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuar2zg9y.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuar2zg9y.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuar2zg9y.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpup6yshpd.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpup6yshpd.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpup6yshpd.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcz28xutx.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcz28xutx.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcz28xutx.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmchehx39.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmchehx39.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmchehx39.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsu47i0u.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsu47i0u.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvsu47i0u.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm54g87iy.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm54g87iy.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm54g87iy.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzbsopoi.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzbsopoi.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmzbsopoi.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1xttm_d1.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1xttm_d1.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1xttm_d1.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4remsfmp.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4remsfmp.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4remsfmp.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoc0zlold.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoc0zlold.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoc0zlold.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgu6u1s84.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgu6u1s84.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgu6u1s84.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u4xkujk.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u4xkujk.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5u4xkujk.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7a1by78k.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7a1by78k.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7a1by78k.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if x not in seen and not seen_add(x)]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjkonozev.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjkonozev.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjkonozev.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n        \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhmn49ua.py\"\
    , line 16, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhmn49ua.py\"\
    , line 14, in test_check\n    check(unique)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhmn49ua.py\"\
    , line 11, in check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\nAssertionError\n"
  exit_code: -1
  status: Exception

name: HumanEval_20_find_closest_elements
language: py
prompt: "from typing import List, Tuple\n\ndef find_closest_elements(numbers: List[float])\
  \ -> Tuple[float, float]:\n    \"\"\" From a supplied list of numbers (of length\
  \ at least two) select and return two that are the closest to each\n    other and\
  \ return them in order (smaller number, larger number).\n            \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2])\
  \ == (3.9, 4.0)\n    assert candidate([1.0, 2.0, 5.9, 4.0, 5.0]) == (5.0, 5.9)\n\
  \    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) == (2.0, 2.2)\n    assert\
  \ candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) == (2.0, 2.0)\n    assert candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]) == (2.2, 3.1)\n\ndef test_check():\n    check(find_closest_elements)\n\
  \ntest_check()\n"
completions: ["    smallest_number = min(numbers)\n    largest_number = max(numbers)\n\
    \    closest_numbers = (smallest_number, largest_number)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest_number:\n            smallest_number = number\n\
    \        if number > largest_number:\n            largest_number = number\n  \
    \  return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    \n\
    \    for number in numbers:\n        if number == smallest_number:\n         \
    \   closest_numbers[0] = number\n        elif number == largest_number:\n    \
    \        closest_numbers[1] = number\n        else:\n            closest_numbers\
    \ = [number, number]\n    \n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    smallest_difference\
    \ = largest_difference = float('inf')\n    for number in numbers:\n        difference\
    \ = abs(number - smallest_number)\n        if difference < smallest_difference:\n\
    \            smallest_difference = difference\n            smallest_number = number\n\
    \        difference = abs(number - largest_number)\n        if difference > largest_difference:\n\
    \            largest_difference = difference\n            largest_number = number\n\
    \    return smallest_number, largest_number\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest_number:\n            smallest_number = number\n\
    \        if number > largest_number:\n            largest_number = number\n  \
    \  return smallest_number, largest_number\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    for number in numbers:\n        if abs(smallest_number - number) < abs(largest_number\
    \ - number):\n            closest_numbers[0] = number\n        else:\n       \
    \     closest_numbers[1] = number\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers_index = 0\n    smallest_difference\
    \ = largest_number - smallest_number\n    largest_difference = largest_number\
    \ - smallest_number\n    \n    for number in numbers:\n        difference = number\
    \ - smallest_number\n        if difference < smallest_difference:\n          \
    \  smallest_difference = difference\n            closest_numbers_index = 0\n \
    \           smallest_number = number\n        elif difference > largest_difference:\n\
    \            largest_difference = difference\n            closest_numbers_index\
    \ = 1\n            largest_number = number\n        else:\n            closest_numbers_index\
    \ += 1\n            \n    return closest_numbers[closest_numbers_index], closest_numbers[1\
    \ - closest_numbers_index]\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index\
    \ = numbers.index(smallest_number)\n    largest_index = numbers.index(largest_number)\n\
    \    return smallest_number, largest_number\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    for number in numbers:\n        if\
    \ number < smallest_number:\n            smallest_number = number\n        elif\
    \ number > largest_number:\n            largest_number = number\n        else:\n\
    \            closest_numbers.append(number)\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index\
    \ = numbers.index(smallest_number)\n    largest_index = numbers.index(largest_number)\n\
    \    return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    smallest_difference = largest_difference = float('inf')\n    for number in\
    \ numbers:\n        difference = abs(number - smallest_number)\n        if difference\
    \ < smallest_difference:\n            smallest_difference = difference\n     \
    \       smallest_number = number\n        difference = abs(number - largest_number)\n\
    \        if difference > largest_difference:\n            largest_difference =\
    \ difference\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    for number in numbers:\n        if number < smallest_number:\n          \
    \  smallest_number = number\n        if number > largest_number:\n           \
    \ largest_number = number\n    return smallest_number, largest_number\n", "  \
    \  smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers_tuple = tuple(closest_numbers)\n    return\
    \ closest_numbers_tuple\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n    largest_index\
    \ = numbers.index(largest_number)\n    return (smallest_number, largest_number)\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number]\n\
    \    closest_numbers.append(largest_number)\n    return tuple(closest_numbers)\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = (smallest_number, largest_number)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        elif number > largest_number:\n            largest_number\
    \ = number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    smallest_index = numbers.index(smallest_number)\n    largest_index\
    \ = numbers.index(largest_number)\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers_index = 0\n    for\
    \ index, number in enumerate(numbers):\n        if number == smallest_number:\n\
    \            closest_numbers_index = index\n            break\n        elif number\
    \ == largest_number:\n            closest_numbers_index = index\n            break\n\
    \        else:\n            closest_numbers_index = index\n            closest_numbers.append(number)\n\
    \    return closest_numbers, closest_numbers_index\n", "    smallest_number =\
    \ min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number =\
    \ numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index\
    \ = numbers.index(smallest_number)\n    largest_index = numbers.index(largest_number)\n\
    \    return smallest_number, largest_number\n", "    smallest = numbers[0]\n \
    \   largest = numbers[0]\n    for number in numbers:\n        if number < smallest:\n\
    \            smallest = number\n        if number > largest:\n            largest\
    \ = number\n    return smallest, largest\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest = numbers[0]\n    largest = numbers[0]\n    for num in numbers:\n\
    \        if num < smallest:\n            smallest = num\n        elif num > largest:\n\
    \            largest = num\n    return smallest, largest\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers[0], closest_numbers[1]\n", "    smallest_number =\
    \ min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    for number in numbers:\n        if number == smallest_number:\n\
    \            closest_numbers[0] = number\n        elif number == largest_number:\n\
    \            closest_numbers[1] = number\n    return closest_numbers\n", "   \
    \ smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        elif number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    for number in numbers:\n        if\
    \ number < smallest_number:\n            smallest_number = number\n        elif\
    \ number > largest_number:\n            largest_number = number\n        else:\n\
    \            closest_numbers.append(number)\n    return smallest_number, largest_number\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest = numbers[0]\n    largest = numbers[0]\n \
    \   for number in numbers:\n        if number < smallest:\n            smallest\
    \ = number\n        elif number > largest:\n            largest = number\n   \
    \ return smallest, largest\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers.sort()\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = (smallest_number,\
    \ largest_number)\n    return closest_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers_index = 0\n    smallest_number_index = -1\n    largest_number_index\
    \ = -1\n    for index, number in enumerate(numbers):\n        if number == smallest_number:\n\
    \            smallest_number_index = index\n        elif number == largest_number:\n\
    \            largest_number_index = index\n        else:\n            difference\
    \ = abs(number - closest_numbers[closest_numbers_index])\n            if difference\
    \ < abs(number - closest_numbers[closest_numbers_index + 1]):\n              \
    \  closest_numbers_index += 1\n                closest_numbers.append(number)\n\
    \            else:\n                closest_numbers_index += 1\n             \
    \   closest_numbers.append(closest_numbers[closest_numbers_index])\n         \
    \       closest_numbers.append(number)\n    return closest_numbers[smallest_number_index],\
    \ closest_numbers[largest_number_index]\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest = numbers[0]\n    largest = numbers[0]\n  \
    \  for num in numbers[1:]:\n        if num < smallest:\n            smallest =\
    \ num\n        if num > largest:\n            largest = num\n    return smallest,\
    \ largest\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    for number in numbers:\n        if number < smallest_number:\n          \
    \  smallest_number = number\n        if number > largest_number:\n           \
    \ largest_number = number\n    return smallest_number, largest_number\n", "  \
    \  smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        elif number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number]\n    closest_numbers.append(largest_number)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = (smallest_number,\
    \ largest_number)\n    return closest_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number]\n\
    \    closest_numbers.append(largest_number)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index\
    \ = numbers.index(smallest_number)\n    largest_index = numbers.index(largest_number)\n\
    \    return smallest_number, largest_number\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers_index = 0\n    smallest_difference = largest_number - smallest_number\n\
    \    largest_difference = largest_number - smallest_number\n    \n    for index,\
    \ number in enumerate(numbers):\n        difference = number - smallest_number\n\
    \        if difference < smallest_difference:\n            smallest_difference\
    \ = difference\n            closest_numbers_index = index\n        difference\
    \ = number - largest_number\n        if difference > largest_difference:\n   \
    \         largest_difference = difference\n            closest_numbers_index =\
    \ index\n        \n    closest_numbers = numbers[closest_numbers_index]\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number]\n    for number in numbers:\n\
    \        if number == smallest_number:\n            closest_numbers.append(number)\n\
    \        elif number == largest_number:\n            closest_numbers.append(number)\n\
    \        else:\n            closest_numbers.append(number - smallest_number)\n\
    \            closest_numbers.append(number - largest_number)\n    return tuple(closest_numbers)\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    smallest_difference\
    \ = largest_difference = float('inf')\n    for number in numbers:\n        difference\
    \ = abs(number - smallest_number)\n        if difference < smallest_difference:\n\
    \            smallest_difference = difference\n            smallest_number = number\n\
    \        difference = abs(number - largest_number)\n        if difference > largest_difference:\n\
    \            largest_difference = difference\n            largest_number = number\n\
    \    return smallest_number, largest_number\n", "    smallest = numbers[0]\n \
    \   largest = numbers[0]\n    for number in numbers:\n        if number < smallest:\n\
    \            smallest = number\n        if number > largest:\n            largest\
    \ = number\n    return smallest, largest\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers_index\
    \ = 0\n    smallest_difference = largest_number - smallest_number\n    largest_difference\
    \ = largest_number - smallest_number\n    \n    for index in range(1, len(numbers)):\n\
    \        difference = numbers[index] - smallest_number\n        if difference\
    \ < smallest_difference:\n            smallest_difference = difference\n     \
    \       closest_numbers_index = index\n        elif difference > largest_difference:\n\
    \            largest_difference = difference\n            closest_numbers_index\
    \ = index\n        else:\n            continue\n    \n    return closest_numbers[closest_numbers_index],\
    \ closest_numbers[closest_numbers_index + 1]\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        if number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        if number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers.sort()\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers_index\
    \ = 0\n    for index in range(1, len(numbers)):\n        difference = abs(numbers[index]\
    \ - closest_numbers[closest_numbers_index])\n        if difference < smallest_number:\n\
    \            smallest_number = difference\n            closest_numbers_index =\
    \ index\n        elif difference > largest_number:\n            largest_number\
    \ = difference\n            closest_numbers_index = index\n        else:\n   \
    \         pass\n    return closest_numbers[closest_numbers_index], closest_numbers[closest_numbers_index\
    \ + 1]\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    for number in numbers:\n        if number < smallest_number:\n          \
    \  smallest_number = number\n        if number > largest_number:\n           \
    \ largest_number = number\n    return smallest_number, largest_number\n", "  \
    \  smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest = numbers[0]\n    largest = numbers[0]\n    for num in numbers:\n\
    \        if num < smallest:\n            smallest = num\n        elif num > largest:\n\
    \            largest = num\n    return smallest, largest\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        elif number > largest_number:\n            largest_number\
    \ = number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        if number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        if number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = (smallest_number,\
    \ largest_number)\n    return closest_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = (smallest_number,\
    \ largest_number)\n    return closest_numbers\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers[0],\
    \ closest_numbers[1]\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = (smallest_number, largest_number)\n  \
    \  return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers[0], closest_numbers[1]\n", "    smallest_number =\
    \ min(numbers)\n    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return (smallest_number,\
    \ largest_number)\n", "    smallest_number = numbers[0]\n    largest_number =\
    \ numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n    largest_index\
    \ = numbers.index(largest_number)\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index\
    \ = numbers.index(smallest_number)\n    largest_index = numbers.index(largest_number)\n\
    \    return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    smallest_difference = largest_difference\
    \ = float('inf')\n    for number in numbers:\n        difference = abs(number\
    \ - smallest_number)\n        if difference < smallest_difference:\n         \
    \   smallest_difference = difference\n            smallest_number = number\n \
    \       difference = abs(number - largest_number)\n        if difference > largest_difference:\n\
    \            largest_difference = difference\n            largest_number = number\n\
    \    return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        elif number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    for number in numbers:\n        if number < smallest_number:\n          \
    \  smallest_number = number\n        if number > largest_number:\n           \
    \ largest_number = number\n    return smallest_number, largest_number\n", "  \
    \  smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers[0], closest_numbers[1]\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number]\n    closest_numbers.append(largest_number)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest = numbers[0]\n    largest = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest:\n            smallest = number\n        elif number\
    \ > largest:\n            largest = number\n    return smallest, largest\n", " \
    \   smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number]\n\
    \    closest_numbers.append(largest_number)\n    return tuple(closest_numbers)\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        elif number > largest_number:\n            largest_number\
    \ = number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest_number:\n            smallest_number = number\n\
    \        if number > largest_number:\n            largest_number = number\n  \
    \  return smallest_number, largest_number\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  \n    for number in numbers:\n        if number < smallest_number:\n      \
    \      smallest_number = number\n        elif number > largest_number:\n     \
    \       largest_number = number\n        else:\n            closest_numbers.append(number)\n\
    \    \n    return closest_numbers\n", "    smallest_number = min(numbers)\n  \
    \  largest_number = max(numbers)\n    closest_numbers = [smallest_number]\n  \
    \  closest_numbers.append(largest_number)\n    return closest_numbers\n", "  \
    \  smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    smallest_difference = largest_difference\
    \ = float('inf')\n    for number in numbers:\n        difference = abs(number\
    \ - smallest_number)\n        if difference < smallest_difference:\n         \
    \   smallest_difference = difference\n            smallest_number = number\n \
    \       difference = abs(number - largest_number)\n        if difference > largest_difference:\n\
    \            largest_difference = difference\n            largest_number = number\n\
    \    return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        elif number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest_number:\n            smallest_number = number\n\
    \        if number > largest_number:\n            largest_number = number\n  \
    \  return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    smallest_index, largest_index = 0, 0\n    while smallest_index\
    \ < len(numbers) and largest_index < len(numbers):\n        if numbers[smallest_index]\
    \ == smallest_number:\n            smallest_index += 1\n        elif numbers[largest_index]\
    \ == largest_number:\n            largest_index += 1\n        else:\n        \
    \    smallest_number = numbers[smallest_index]\n            largest_number = numbers[largest_index]\n\
    \            smallest_index += 1\n            largest_index += 1\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    smallest_index, largest_index\
    \ = 0, 0\n    smallest_difference = largest_number\n    largest_difference = smallest_number\n\
    \    for index, number in enumerate(numbers):\n        if number == smallest_number:\n\
    \            smallest_index = index\n            smallest_difference = number\n\
    \        elif number == largest_number:\n            largest_index = index\n \
    \           largest_difference = number\n    if smallest_difference == largest_difference:\n\
    \        return smallest_number, smallest_number\n    if smallest_difference <\
    \ largest_difference:\n        return numbers[smallest_index], numbers[largest_index]\n\
    \    else:\n        return numbers[largest_index], numbers[smallest_index]\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    smallest_index,\
    \ largest_index = 0, 0\n    smallest_difference = largest_number - smallest_number\n\
    \    largest_difference = smallest_number - largest_number\n    while smallest_index\
    \ < len(numbers) - 1:\n        difference = numbers[smallest_index] - numbers[largest_index]\n\
    \        if difference < smallest_difference:\n            smallest_difference\
    \ = difference\n            smallest_index = smallest_index + 1\n        elif\
    \ difference > largest_difference:\n            largest_difference = difference\n\
    \            largest_index = largest_index + 1\n        else:\n            return\
    \ numbers[smallest_index], numbers[largest_index]\n    return numbers[smallest_index],\
    \ numbers[largest_index]\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        elif number > largest_number:\n            largest_number\
    \ = number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers_index = 0\n    smallest_distance = abs(smallest_number\
    \ - numbers[0])\n    largest_distance = abs(largest_number - numbers[0])\n   \
    \ for number in numbers:\n        distance = abs(number - numbers[0])\n      \
    \  if distance < smallest_distance:\n            smallest_distance = distance\n\
    \            closest_numbers_index = 0\n        elif distance < largest_distance:\n\
    \            largest_distance = distance\n            closest_numbers_index =\
    \ 1\n        else:\n            closest_numbers_index = closest_numbers_index\
    \ + 1\n        closest_numbers.append(number)\n    return closest_numbers[closest_numbers_index],\
    \ closest_numbers[closest_numbers_index + 1]\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n\
    \    largest_index = numbers.index(largest_number)\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers_index = 0\n    for index, number in enumerate(numbers):\n\
    \        if number == smallest_number:\n            closest_numbers_index = index\n\
    \        elif number == largest_number:\n            closest_numbers_index = index\n\
    \        else:\n            difference = abs(number - closest_numbers[closest_numbers_index])\n\
    \            if difference < abs(number - closest_numbers[closest_numbers_index\
    \ + 1]):\n                closest_numbers_index += 1\n            else:\n    \
    \            closest_numbers_index += 1\n                closest_numbers.append(number)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n    largest_index\
    \ = numbers.index(largest_number)\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = (smallest_number, largest_number)\n  \
    \  return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = (smallest_number, largest_number)\n  \
    \  return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers.sort()\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number]\n    closest_numbers.append(largest_number)\n\
    \    return tuple(closest_numbers)\n", "    smallest_number = min(numbers)\n \
    \   largest_number = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ tuple(closest_numbers)\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        if number > largest_number:\n \
    \           largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number]\n    closest_numbers.append(largest_number)\n    return\
    \ closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = (smallest_number, largest_number)\n  \
    \  return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = (smallest_number, largest_number)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = (smallest_number,\
    \ largest_number)\n    return closest_numbers\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        elif number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = min(numbers)\n    largest_number =\
    \ max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n    closest_numbers\
    \ = sorted(closest_numbers)\n    return closest_numbers\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number, largest_number]\n  \
    \  closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n", " \
    \   smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = numbers[0]\n    largest_number\
    \ = numbers[0]\n    for number in numbers:\n        if number < smallest_number:\n\
    \            smallest_number = number\n        elif number > largest_number:\n\
    \            largest_number = number\n    return smallest_number, largest_number\n",
  "    smallest_number = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers\
    \ = [smallest_number, largest_number]\n    closest_numbers = sorted(closest_numbers)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    closest_numbers = [smallest_number]\n    closest_numbers.append(largest_number)\n\
    \    closest_numbers = sorted(closest_numbers)\n    return closest_numbers\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        if number > largest_number:\n            largest_number =\
    \ number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = min(numbers)\n    largest_number = max(numbers)\n    closest_numbers = [smallest_number,\
    \ largest_number]\n    closest_numbers_index = 0\n    for index in range(1, len(numbers)):\n\
    \        difference = abs(numbers[index] - closest_numbers[closest_numbers_index])\n\
    \        if difference < smallest_number:\n            smallest_number = difference\n\
    \            closest_numbers_index = index\n        elif difference > largest_number:\n\
    \            largest_number = difference\n            closest_numbers_index =\
    \ index\n        else:\n            pass\n    return closest_numbers[closest_numbers_index],\
    \ closest_numbers[closest_numbers_index + 1]\n", "    smallest_number = min(numbers)\n\
    \    largest_number = max(numbers)\n    closest_numbers = (smallest_number, largest_number)\n\
    \    return closest_numbers\n", "    smallest_number = min(numbers)\n    largest_number\
    \ = max(numbers)\n    smallest_index = numbers.index(smallest_number)\n    largest_index\
    \ = numbers.index(largest_number)\n    return smallest_number, largest_number\n",
  "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n    for number\
    \ in numbers:\n        if number < smallest_number:\n            smallest_number\
    \ = number\n        elif number > largest_number:\n            largest_number\
    \ = number\n    return smallest_number, largest_number\n", "    smallest_number\
    \ = numbers[0]\n    largest_number = numbers[0]\n    for number in numbers:\n\
    \        if number < smallest_number:\n            smallest_number = number\n\
    \        elif number > largest_number:\n            largest_number = number\n\
    \    return smallest_number, largest_number\n", "    smallest_number = numbers[0]\n\
    \    largest_number = numbers[0]\n    for number in numbers:\n        if number\
    \ < smallest_number:\n            smallest_number = number\n        if number\
    \ > largest_number:\n            largest_number = number\n    return smallest_number,\
    \ largest_number\n", "    smallest_number = numbers[0]\n    largest_number = numbers[0]\n\
    \    for number in numbers:\n        if number < smallest_number:\n          \
    \  smallest_number = number\n        if number > largest_number:\n           \
    \ largest_number = number\n    return smallest_number, largest_number\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_92_any_int
language: py
prompt: "def any_int(x: float, y: float, z: float) -> bool:\n    \"\"\"\n    Create\
  \ a function that takes 3 numbers.\n    Returns true if one of the numbers is equal\
  \ to the sum of the other two, and all numbers are integers.\n    Returns false\
  \ in any other cases.\n    \n    Examples\n        \n    \n        \n      \n\n\
  \    \n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(2, 3, 1) == True\n    assert candidate(2.5,\
  \ 2, 3) == False\n    assert candidate(1.5, 5, 3.5) == False\n    assert candidate(2,\
  \ 6, 2) == False\n    assert candidate(4, 2, 2) == True\n    assert candidate(2.2,\
  \ 2.2, 2.2) == False\n    assert candidate(-4, 6, 2) == True\n    assert candidate(2,\
  \ 1, 1) == True\n    assert candidate(3, 4, 7) == True\n    assert candidate(3.0,\
  \ 4, 7) == False\n\ndef test_check():\n    check(any_int)\n\ntest_check()\n"
completions: ["    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x + y + z == sum(map(int, (x, y, z)))\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int) and x == y + z\n\n", "    return isinstance(x, int) and\
    \ isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n</cell>\n<cell>\nany_int(1,2,3)\n</cell>\n<cell>\nany_int(1.1,2.2,3.3)\n\
    </cell>\n<cell>\nany_int(1.1,2.2,3.4)\n</cell>\n<cell>\nany_int(1.1,2.2,3.5)\n\
    </cell>\n<cell>\nany_int(1.1,2.2,3.6)\n</cell>\n<cell>\nany_int(1.1,2.2,3.7)\n\
    </cell>\n<cell>\nany_int(1.1,2.2,3.8)\n</cell>\n<cell>\nany_int(1.1,2.2,3.9)\n\
    </cell>\n<cell>\nany_int(1.1,2.2,4)\n</cell>\n<cell>\nany_int(1.1,2.2,4.1)\n</cell>\n\
    <cell>\nany_int(1.1,2.2,4.2)\n</cell>\n<cell>\nany_int(1.1,2.2,4.3)\n</cell>\n\
    <cell>\nany_int(1.1,2.2,4.4)\n</cell>\n<cell>\nany_int(1.1,2.2,4.5)\n</cell>\n\
    <cell>\nany_int(1.1,2.2,4.6)\n</cell>\n<cell>\nany_int(1.1,2.2,4.7)\n</cell>\n\
    <cell>\nany_int(1.1,2.2,4.8)\n</cell>\n<cell>\nany_int(1.1,2.2,4.9)\n</cell>\n\
    <cell>\nany_int(1.1,2.2,5)\n</cell>\n<cell>\nany_int(1.1,2.2,5.1)\n</cell>\n<cell>\n\
    any_int(1.1,2.2,5.2)\n</cell>\n<cell>\nany_int(1.1,2.2,5.3)\n</cell>\n<cell>\n\
    any_int(1.1,2.2,5.4)\n</cell>\n<cell>\nany_int(1.1,2.2,5.5)\n</cell>\n<cell>\n\
    any_int(1.1,2.2,5.6)\n</cell>\n<cell>\nany_int(1.1,2.2,5.7)\n</cell>\n<cell>\n\
    any_int(1.1,2.2,5.8)\n</cell>\n<cell>\nany_int(1.1,2.2,5.9)\n</cell>\n<cell>\n\
    any_int(1.1,2.2,6)\n</cell>", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x + y + z == sum(map(int, (x, y, z)))\n", " \
    \   return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x + y + z == sum(map(int, (x, y, z)))\n\n", "    return isinstance(x, int) and\
    \ isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    pass\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z and x != y\
    \ and x != z and y != z\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x == y + z\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    pass\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x == y + z\n\n", "    \n    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n    ", "    \n    pass\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n</cell>\n<cell>\nany_int(1, 2, 3)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2,\
    \ 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n\
    </cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n\
    <cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\n\
    any_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2,\
    \ 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n\
    </cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n\
    <cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\n\
    any_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2,\
    \ 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n\
    </cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n\
    <cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\n\
    any_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1, 2, 3.5)\n</cell>\n<cell>\nany_int(1,\
    \ 2, 3.5)\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x + y + z == sum(map(int, (x, y, z)))\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    pass\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\
    \ and x == y + z and x != y and x != z and y != z and x != int(x) and y != int(y)\
    \ and z != int(z)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x == y + z\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  \n    pass\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    \n    pass\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x == y + z\n\n", "    \n    pass\n\n", "   \
    \ return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x + y + z == 100\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x == y + z\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    pass\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    \n    pass\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x + y + z == sum(map(int, (x, y, z)))\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int) and x == y + z and x != 0 and y != 0 and z != 0\n\n", "    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x, int) and\
    \ isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  \n    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\
    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    pass\n\
    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x == y + z\n", "    return isinstance(x, int)\
    \ and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    \n    pass\n\n",
  "    \n    pass\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x + y + z == sum(map(int, (x, y, z)))\n", " \
    \   return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    \n    pass\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int) and x == y + z\n\n", "    \n    pass\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x + y + z == sum(map(int,\
    \ (x, y, z)))\n\n", "    return isinstance(x, int) and isinstance(y, int) and\
    \ isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y, int)\
    \ and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    \n    pass\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int)\n\n", "    return isinstance(x,\
    \ int) and isinstance(y, int) and isinstance(z, int) and x == y + z\n\n", "  \
    \  return isinstance(x, int) and isinstance(y, int) and isinstance(z, int)\n\n",
  "    return isinstance(x, int) and isinstance(y, int) and isinstance(z, int) and\
    \ x == y + z\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    return isinstance(x, int) and isinstance(y, int) and isinstance(z,\
    \ int)\n\n", "    \n    pass\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int)\n\n", "    return isinstance(x, int) and isinstance(y,\
    \ int) and isinstance(z, int) and x + y + z == sum(map(int, (x, y, z)))\n\n",
  "    \n    pass\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_49_modp
language: py
results:
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 2 == 0:\n        return\
    \ p\n    if p % 3 == 0:\n        return p - (p % 3)\n    return p - (p % 5 + 2)\n\
    \n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoq_lwuq8.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoq_lwuq8.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoq_lwuq8.py\"\
    , line 21, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kn5qqvu.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph8_tiual.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph8_tiual.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph8_tiual.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n // 2, p) + p\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyzjjbm8.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyzjjbm8.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcyzjjbm8.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9i5gkyc6.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9i5gkyc6.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9i5gkyc6.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p // 4\n    if p % 8 == 0:\n        return p //\
    \ 8\n    if p % 16 == 0:\n        return p // 16\n    return p // 8\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9nmobbfy.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9nmobbfy.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9nmobbfy.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n == 3:\n        return ((p * p * p) % p) % p\n    if n == 4:\n      \
    \  return (((p * p * p * p) % p) % p) % p\n    if n == 5:\n        return (((p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 6:\n        return (((p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 7:\n        return (((p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 8:\n        return (((p * p * p * p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 9:\n        return (((p * p * p\
    \ * p * p * p * p * p) % p) % p) % p\n    if n == 10:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 11:\n        return (((p\
    \ * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 12 or n == 1:\n\
    \        return p\n    if n == 13 or n == 2:\n        return ((p * p * p * p *\
    \ p * p * p * p) % p) % p\n    if n == 14 or n == 3:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 15 or n == 4:\n        return\
    \ (((p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 16 or n ==\
    \ 5:\n        return (((p * p * p * p * p * p * p * p * p) % p) % p) % p\n   \
    \ if n == 17 or n == 6:\n        return (((p * p * p * p * p * p * p * p * p)\
    \ % p) % p) % p\n    if n == 18 or n == 7:\n        return (((p * p * p * p *\
    \ p * p * p * p * p * p) % p) % p) % p\n    if n == 19 or n == 8:\n        return\
    \ (((p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 20 or n\
    \ == 9:\n        return (((p * p * p * p * \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamv5gg_0.py\"\
    , line 45\n    return (((p * p * p * p * \n             ^\nSyntaxError: '(' was\
    \ never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3k9cq4s8.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3k9cq4s8.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3k9cq4s8.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzp9p7kz4.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzp9p7kz4.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzp9p7kz4.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvfojx36z.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvfojx36z.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvfojx36z.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6v2bhdn.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6v2bhdn.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6v2bhdn.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(-n, p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp((n - 1) // 2, p)\n    return modp((n - 1) // 2, p) + p\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng675gh2.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng675gh2.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpng675gh2.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(n,\
    \ (p + 1) // 4, p)\n    if p % 8 == 0:\n        return pow(n, (p + 3) // 8, p)\n\
    \    if p % 16 == 0:\n        return pow(n, (p + 7) // 16, p)\n    if p % 32 ==\
    \ 0:\n        return pow(n, (p + 15) // 32, p)\n    if p % 64 == 0:\n        return\
    \ pow(n, (p + 31)//64, p)\n    return pow(n, p // 64, p)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sg3qdm5.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sg3qdm5.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8sg3qdm5.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 4\n    if p == 6:\n        return n &\
    \ 8\n    if p == 7:\n        return n & 16\n    if p == 8:\n        return n &\
    \ 32\n    if p == 9:\n        return n & 64\n    if p == 10:\n        return n\
    \ & 128\n    if p == 11:\n        return n & 256\n    if p == 12:\n        return\
    \ n & 512\n    if p == 13:\n        return n & 1024\n    if p == 14:\n       \
    \ return n & 2048\n    if p == 15:\n        return n & 4096\n    if p == 16:\n\
    \        return n & 8192\n    if p == 17:\n        return n & 16384\n    if p\
    \ == 18:\n        return n & 32768\n    if p == 19:\n        return n & 65536\n\
    \    if p == 20:\n        return n & 131072\n    if p == 21:\n        return n\
    \ & 262144\n    if p == 22:\n        return n & 524288\n    if p == 23:\n    \
    \    return n & 1048576\n    if p == 24:\n        return n & 2097152\n    if p\
    \ == 25:\n        return n & 4194304\n    if p == 26:\n        return n & 8388608\n\
    \    if p == 27:\n        return n & 16777216\n    if p == 28:\n        return\
    \ n & 33554432\n    if p == 29:\n        return n & 67108864\n    if p == 30:\n\
    \        return n & 134217728\n    if p == 31:\n        return n & 268435456\n\
    \    if p == 32:\n        return n & 536870912\n    if p == 33:\n        return\
    \ n & 1073741824\n    if p == 34:\n        return n & 2147483648\n    if p ==\
    \ 35:\n        return n & 4294967296\n    if p == 36:\n        return n & 8589934592\n\
    \    if p == 37:\n        return n & 17179869184\n    if p == 38:\n        return\
    \ n & 34359738368\n    if p == 39:\n        return n & 68719476736\n    if p ==\
    \ 40:\n        return n & 137438953472\n    if p == 41:\n        return n & 274877906944\n\
    \    if p == 42:\n        return n & 549755813888\n    if p == 43:\n        return\
    \ n & 1099511627776\n    if p == 44\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7dbox9a.py\"\
    , line 88\n    if p == 44\n              ^\nSyntaxError: expected ':'\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4mih00f.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4mih00f.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm4mih00f.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return n // 2\n    if p % 3 == 0:\n        return\
    \ n // 3\n    if p % 5 == 0:\n        return n // 5\n    if p % 7 == 0:\n    \
    \    return n // 7\n    if p % 11 == 0:\n        return n // 11\n    if p % 13\
    \ == 0:\n        return n // 13\n    if p % 17 == 0:\n        return n // 17\n\
    \    if p % 19 == 0:\n        return n // 19\n    if p % 23 == 0:\n        return\
    \ n // 23\n    if p % 29 == 0:\n        return n // 29\n    if p % 31 == 0:\n\
    \        return n // 31\n    if p % 37 == 0:\n        return n // 37\n    if p\
    \ % 41 == 0:\n        return n // 41\n    if p % 43 == 0:\n        return n //\
    \ 43\n    if p % 47 == 0:\n        return n // 47\n    if p % 53 == 0:\n     \
    \   return n // 53\n    if p % 59 == 0:\n        return n // 59\n    if p % 61\
    \ == 0:\n        return n // 61\n    if p % 67 == 0:\n        return n // 67\n\
    \    if p % 71 == 0:\n        return n // 71\n    if p % 73 == 0:\n        return\
    \ n // 73\n    if p % 79 == 0:\n        return n // 79\n    if p % 83 == 0:\n\
    \        return n // 83\n    if p % 89 == 0:\n        return n // 89\n    if p\
    \ % 97 == 0:\n        return n // 97\n    if p % 103 == 0:\n        return n //\
    \ 103\n    if p % 107 == 0:\n        return n // 107\n    if p % 113 == 0:\n \
    \       return n // 113\n    if p % 119 == 0:\n        return n // 119\n    if\
    \ p % 127 == 0:\n        return n // 127\n    if p % 131 == 0:\n        return\
    \ n // 131\n    if p % 137 == 0:\n        return n // 137\n    if p % 141 == 0:\n\
    \        return n // 141\n    if p % 143 == 0:\n        return n // 143\n    if\
    \ p % 147 == 0:\n        return n // 147\n    if p % 151 == 0:\n        return\
    \ n // 151\n    if p % 157 == 0:\n        return n // 157\n    if p % 161 == 0:\n\
    \        return n // 161\n    if p % 163 == 0:\n        return n // 163\n    if\
    \ p % 167 == 0:\n        return n // 167\n    if p % 171 == 0:\n        return\
    \ n // 171\n    if p % 173 == 0:\n        return n // 173\n    if p % 177 == 0:\n\
    \        return n // 177\n    if p % 181 == 0:\n        return n // 181\n    if\
    \ p % 183 == 0:\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9bxg15b0.py\"\
    , line 95\n    def check(candidate):\nIndentationError: expected an indented block\
    \ after 'if' statement on line 94\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p < n) else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6evh69l.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6evh69l.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6evh69l.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return n -\
    \ (n % 4)\n    if p % 2 == 0:\n        return n - 1\n    if p % 3 == 0:\n    \
    \    return n - 2\n    return n\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1jhyjjbs.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1jhyjjbs.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1jhyjjbs.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    if p % 7 == 0:\n        return p // 7\n    if p % 11 == 0:\n   \
    \     return p // 11\n    if p % 13 == 0:\n        return p // 13\n    if p %\
    \ 17 == 0:\n        return p // 17\n    if p % 19 == 0:\n        return p // 19\n\
    \    if p % 23 == 0:\n        return p // 23\n    if p % 29 == 0:\n        return\
    \ p // 29\n    if p % 31 == 0:\n        return p // 31\n    if p % 37 == 0:\n\
    \        return p // 37\n    if p % 41 == 0:\n        return p // 41\n    if p\
    \ % 43 == 0:\n        return p // 43\n    if p % 47 == 0:\n        return p //\
    \ 47\n    if p % 53 == 0:\n        return p // 53\n    if p % 59 == 0:\n     \
    \   return p // 59\n    if p % 61 == 0:\n        return p // 61\n    if p % 67\
    \ == 0:\n        return p // 67\n    if p % 71 == 0:\n        return p // 71\n\
    \    if p % 73 == 0:\n        return p // 73\n    if p % 79 == 0:\n        return\
    \ p // 79\n    if p % 83 == 0:\n        return p // 83\n    if p % 89 == 0:\n\
    \        return p // 89\n    if p % 97 == 0:\n        return p // 97\n    if p\
    \ % 103 == 0:\n        return p // 103\n    if p % 107 == 0:\n        return p\
    \ // 107\n    if p % 113 == 0:\n        return p // 113\n    if p % 119 == 0:\n\
    \        return p // 119\n    if p % 127 == 0:\n        return p // 127\n    if\
    \ p % 131 == 0:\n        return p // 131\n    if p % 137 == 0:\n        return\
    \ p // 137\n    if p % 141 == 0:\n        return p // 141\n    if p % 143 == 0:\n\
    \        return p // 143\n    if p % 147 == 0:\n        return p // 147\n    if\
    \ p % 151 == 0:\n        return p // 151\n    if p % 157 == 0:\n        return\
    \ p // 157\n    if p % 161 == 0:\n        return p // 161\n    if p % 163 == 0:\n\
    \        return p // 163\n    if p % 167 == 0:\n        return p // 167\n    if\
    \ p % 171 == 0:\n        return p // 171\n    if p % 173 == 0:\n        return\
    \ p // 173\n    if p % 177 == 0:\n        return p // 177\n    if p % 181 == 0:\n\
    \        return p // 181\n\ndef check(candidate):\n    assert candidate(3, 5)\
    \ == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) ==\
    \ 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n \
    \   assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbzweuim.py\"\
    , line 109, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbzweuim.py\"\
    , line 107, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcbzweuim.py\"\
    , line 98, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnd92eq04.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnd92eq04.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnd92eq04.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 2 == 0:\n        return\
    \ p\n    if p % 3 == 0:\n        return p - (p % 3)\n    if p % 5 == 0:\n    \
    \    return p - (p % 5)\n    return 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oqimxyn.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oqimxyn.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6oqimxyn.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 4, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgmfjcwh.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgmfjcwh.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcgmfjcwh.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(n,\
    \ (p + 1) // 4, p)\n    if p % 2 == 0:\n        return pow(n, (p + 3) // 2, p)\n\
    \    k = n // p\n    if k == 1:\n        return p\n    if k % 2 == 0:\n      \
    \  return pow(n, (p + 3) // 2, p)\n    if n % 8 == 0:\n        return pow(n, (p\
    \ + 7) // 8, p)\n    return pow(n, p, p)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sfc869e.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sfc869e.py\"\
    , line 32, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_sfc869e.py\"\
    , line 23, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) << p) | ((n & 4) << p) | ((n & 8) << p) | (n & 255)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52u_3r1a.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52u_3r1a.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp52u_3r1a.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == n:\n        return p\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p)\n    if p % 5 ==\
    \ 0:\n        return modp(n // 5, p)\n    return modp(n // 2, p)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 13, in modp\n    return modp(n // 5, p)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 13, in modp\n    return modp(n // 5, p)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 13, in modp\n    return modp(n // 5, p)\n  [Previous line repeated 993\
    \ more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4edru982.py\"\
    , line 4, in modp\n    if p == 2:\nRecursionError: maximum recursion depth exceeded\
    \ in comparison\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyuwtw4ze.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hkkdehb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hkkdehb.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hkkdehb.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7zy8uywi.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7zy8uywi.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7zy8uywi.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return n -\
    \ (n % 4)\n    if p % 2 == 0:\n        return n - (n % 2)\n    return n\n\n\n\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkh56pd.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkh56pd.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprwkh56pd.py\"\
    , line 17, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n << p) + 1) & ((1\
    \ << p) - 1)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n   \
    \ assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqm0cfaq.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqm0cfaq.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqm0cfaq.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p -\
    \ 1\n    k = p // 2\n    if n % p == 0:\n        return k\n    if n % p == 1:\n\
    \        return k + 1\n    if n % p == p - 1:\n        return k + 2\n    return\
    \ k + 3\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1z91jk9t.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1z91jk9t.py\"\
    , line 30, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1z91jk9t.py\"\
    , line 21, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp74iesg8.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp74iesg8.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp74iesg8.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n % 2 == 1:\n        return p % p\n    return p % p\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf14lyaav.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf14lyaav.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf14lyaav.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == n:\n        return p\n    if p == 1 or p == -1:\n        return\
    \ n\n    if n % p == 0:\n        return n\n    if p % n == 0:\n        return\
    \ p\n    if p == 1 or n == 2:\n        return n\n    if n == 1 or p == 2:\n  \
    \      return p\n    if p == 3:\n        return 3\n    if n == 3:\n        return\
    \ p\n    if p == 4:\n        return 4\n    if n == 4:\n        return p\n    if\
    \ p == 5:\n        return 5\n    if n == 5:\n        return p\n    if p == 6:\n\
    \        return 6\n    if n == 6:\n        return p\n    if p == 7:\n        return\
    \ 7\n    if n == 7:\n        return p\n    if p == 8:\n        return 8\n    if\
    \ n == 8:\n        return p\n    if p == 9:\n        return 9\n    if n == 9:\n\
    \        return p\n    if p == 10:\n        return 10\n    if n == 10:\n     \
    \   return p\n    if p == 11:\n        return 11\n    if n == 11:\n        return\
    \ p\n    if p == 12:\n        return 12\n    if n == 12:\n        return p\n \
    \   if p == 13:\n        return 13\n    if n == 13:\n        return p\n    if\
    \ p == 14:\n        return 14\n    if n == 14:\n        return p\n    if p ==\
    \ 15:\n        return 15\n    if n == 15:\n        return p\n    if p == 16:\n\
    \        return 16\n    if n == 16:\n        return p\n    if p == 17:\n     \
    \   return 17\n    if n == 17:\n        return p\n    if p == 18:\n        return\
    \ 18\n    if n == 18:\n        return p\n    if p == 19:\n        return 19\n\
    \    if n == 19:\n        return p\n    if p == 20:\n        return 20\n    if\
    \ n == 20:\n        return p\n    if p == 21:\n        return 21\n    if n ==\
    \ 21:\n        return p\n    if p == 22:\n        return 22\n    if n == 22:\n\
    \        return p\n    if p == 23:\n        return 23\n    if n == 23:\n     \
    \   return p\n    if p == 24:\n        return 24\n    if n == 24:\n        return\
    \ p\n    if p == 25:\n        return 25\n    if n == 25:\n        return p\n \
    \   if p == 26:\n        return 26\n    if n == 26:\n        return p\n    if\
    \ p == 27:\n        return 27\n    if n == 27:\n        return p\n    if p ==\
    \ 28:\n        return 28\n    if n == 28:\n        return p\n    if p == 29:\n\
    \        return 29\n    if n == 29:\n        return p\n    if p == 30:\n     \
    \   return 30\n    if n == 30:\n        return p\n    if p == 31:\n        return\
    \ 31\n    if n == 3\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp48nqvj8g.py\"\
    , line 132\n    if n == 3\n             ^\nSyntaxError: expected ':'\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppzzbcv4g.py\"\
    , line 18, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppzzbcv4g.py\"\
    , line 16, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppzzbcv4g.py\"\
    , line 8, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return p\n    if p % 4 == 0:\n        return p\n\
    \    if p % 8 == 0:\n        return p\n    if p % 16 == 0:\n        return p\n\
    \    if p % 32 == 0:\n        return p\n    if p % 64 == 0:\n        return p\n\
    \    if p % 256 == 0:\n        return p\n    if p % 1024 == 0:\n        return\
    \ p\n    if p % 4096 == 0:\n        return p\n    if p % 8192 == 0:\n        return\
    \ p\n    if p % 16384 == 0:\n        return p\n    if p % 32768 == 0:\n      \
    \  return p\n    if p % 65536 == 0:\n        return p\n    if p % 131072 == 0:\n\
    \        return p\n    if p % 262144 == 0:\n        return p\n    if p % 524288\
    \ == 0:\n        return p\n    if p % 1048576 == 0:\n        return p\n    if\
    \ p % 2097152 == 0:\n        return p\n    if p % 4194304 == 0:\n        return\
    \ p\n    if p % 8388608 == 0:\n        return p\n    if p % 16777216 == 0:\n \
    \       return p\n    if p % 33554432 == 0:\n        return p\n    if p % 67108864\
    \ == 0:\n        return p\n    if p % 134217728 == 0:\n        return p\n    if\
    \ p % 268435456 == 0:\n        return p\n    if p % 536870912 == 0:\n        return\
    \ p\n    if p % 1073741824 == 0:\n        return p\n    if p % 2147483648 == 0:\n\
    \        return p\n    if p % 4294967296 == 0:\n        return p\n    if p % 8589934592\
    \ == 0:\n        return p\n    if p % 17179869184 == 0:\n        return p\n  \
    \  if p % 34359738368 == 0:\n        return p\n    if p % 68719476736 == 0:\n\
    \        return p\n    if p % 137438953472 == 0:\n        return p\n    if p %\
    \ 26843545608 == 0:\n        return p\n    if p % 53687091232 == 0:\n        return\
    \ p\n    if p % 107374182400 == 0:\n        return p\n    if p % 214748364800\
    \ == 0:\n        return p\n    if p % 429496729600 == 0:\n        return p\n \
    \   if p % 858993459200 == 0:\n        return p\n    if p % 1717986918400 == 0:\n\
    \        return p\n    if p % 3435973836800 == 0:\n        return p\n    if p\
    \ % 6871947673600 == 0:\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgvtefc9u.py\"\
    , line 95\n    def check(candidate):\nIndentationError: expected an indented block\
    \ after 'if' statement on line 94\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n == 3:\n        return ((p * p * p) % p) % p\n    if n == 4:\n      \
    \  return (((p * p * p * p) % p) % p) % p\n    if n == 5:\n        return (((p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 6:\n        return (((p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 7:\n        return (((p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 8:\n        return (((p * p * p * p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 9:\n        return (((p * p * p\
    \ * p * p * p * p * p) % p) % p) % p\n    if n == 10:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 11:\n        return (((p\
    \ * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 12 or n == 0:\n\
    \        return p\n    if n == 13:\n        return ((p * p * p * p * p * p * p\
    \ * p * p) % p) % p\n    if n == 14:\n        return (((p * p * p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 15:\n        return (((p * p * p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 16:\n        return (((p\
    \ * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 17:\n      \
    \  return (((p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n ==\
    \ 18:\n        return (((p * p * p * p * p * p * p * p * p * p * p) % p) % p)\
    \ % p\n    if n == 19:\n        return (((p * p * p * p * p * p * p * p * p *\
    \ p * p) % p) % p) % p\n    if n == 20:\n        return (((p * p * p * p * p *\
    \ p * p * p * p * p * p) % p\ndef check(candidate):\n    assert candidate(3, 5)\
    \ == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) ==\
    \ 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n \
    \   assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmreg36p.py\"\
    , line 45\n    return (((p * p * p * p * p * p * p * p * p * p * p) % p\n    \
    \        ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpohqnoq7l.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpohqnoq7l.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpohqnoq7l.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8j4b9sc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8j4b9sc.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj8j4b9sc.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfp__rkk.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfp__rkk.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnfp__rkk.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(-n, p)\n    if n == 0:\n        return\
    \ 0\n    if p == 1 or p == 2:\n        return n\n    if p % 4 == 3:\n        return\
    \ modp(n // 4, p) * 4\n    if p % 8 == 5:\n        return modp(n // 8, p) * 8\n\
    \    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n\
    \        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n\
    \ // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if\
    \ p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n      \
    \  return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8,\
    \ p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8\
    \ == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return\
    \ modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n\
    \    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n\
    \        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n\
    \ // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if\
    \ p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n      \
    \  return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8,\
    \ p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8\
    \ == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return\
    \ modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n\
    \    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n\
    \        return modp(n // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n\
    \ // 8, p) * 8\n    if p % 8 == 7:\n        return modp(n // 8, p) * 8\n    if\
    \ p \ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy1gpusa_.py\"\
    , line 68\n    if p \n         ^\nSyntaxError: expected ':'\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5h1eyso3.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo44mibj3.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo44mibj3.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo44mibj3.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return n // 2\n    if p % 3 == 0:\n        return\
    \ n // 3\n    if p % 5 == 0:\n        return n // 5\n    if p % 7 == 0:\n    \
    \    return n // 7\n    return n // 9\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4su59ce.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4su59ce.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq4su59ce.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 2 == 0:\n        return\
    \ p\n    if p % 3 == 0:\n        return p - (p % 3)\n    return p - (p % 5 + 2)\n\
    \n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv_abgxx.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv_abgxx.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnv_abgxx.py\"\
    , line 21, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgt91ymkc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgt91ymkc.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgt91ymkc.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzisfx2j.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzisfx2j.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkzisfx2j.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    if p % 7 == 0:\n        return p // 7\n    if p % 11 == 0:\n   \
    \     return p // 11\n    return p % 11\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp73c5c5l2.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp73c5c5l2.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp73c5c5l2.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(n,\
    \ (p + 1) // 4, p)\n    if p % 8 == 0:\n        return pow(n, (p + 3) // 8, p)\n\
    \    if p % 16 == 0:\n        return pow(n, (p + 7) // 16, p)\n    if p % 32 ==\
    \ 0:\n        return pow(n, (p + 15) // 32, p)\n    if p % 64 == 0:\n        return\
    \ pow(n, (p + 31)//64, p)\n    if p % 256 == 0:\n        return pow(n, (p + 63)\
    \ // 256, p)\n    raise ValueError(\"modp only works with p % 256 == 0\")\n\n\n\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbvuox1z.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbvuox1z.py\"\
    , line 33, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbvuox1z.py\"\
    , line 24, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbvuox1z.py\"\
    , line 20, in modp\n    raise ValueError(\"modp only works with p % 256 == 0\"\
    )\nValueError: modp only works with p % 256 == 0\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 4, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6svaw__v.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6svaw__v.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6svaw__v.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uepxvxd.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uepxvxd.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3uepxvxd.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sahiuvz.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sahiuvz.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5sahiuvz.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return n //\
    \ 2\n    if p % 3 == 0:\n        return n // 3\n    if p % 5 == 0:\n        return\
    \ n // 5\n    return n // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc93kkr5z.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc93kkr5z.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc93kkr5z.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6octoygo.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6octoygo.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6octoygo.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o4a427d.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o4a427d.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0o4a427d.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56ooq642.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56ooq642.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp56ooq642.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p\n\
    \    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd9b49rsn.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd9b49rsn.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd9b49rsn.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) << p) |  ((n & 4) << p) | ((n & 8) << p) | (n & 255)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpncridx82.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpncridx82.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpncridx82.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc4juvnf.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc4juvnf.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc4juvnf.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxhq3ng1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxhq3ng1.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbxhq3ng1.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n == 3:\n        return ((p * p * p) % p) % p\n    if n == 4:\n      \
    \  return (((p * p * p * p) % p) % p) % p\n    if n == 5:\n        return (((p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 6:\n        return (((p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 7:\n        return (((p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 8:\n        return (((p * p * p * p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 9:\n        return (((p * p * p\
    \ * p * p * p * p * p) % p) % p) % p\n    if n == 10:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 11:\n        return (((p\
    \ * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 12 or n == 0:\n\
    \        return p\n    if n == 13 or n == 14:\n        return ((p * p * p * p\
    \ * p * p * p * p * p) % p) % p\n    if n == 15 or n == 16:\n        return (((p\
    \ * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 17 or n == 18:\n\
    \        return (((p * p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n\
    \    if n == 19 or n == 20:\n        return (((p * p * p * p * p * p * p * p *\
    \ p * p * p) % p) % p) % p\n    if n == 21 or n == 22:\n        return (((p *\
    \ p * p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 23 or\
    \ n == 24:\n        return (((p * p * p * p * p * p * p * p * p * p * p * p *\
    \ p) % p) % p) % p\n    if n == 25 or n == 26:\n        return (((p * p * p *\
    \ p * p * p * p * p * p * p * \ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwatn39t_.py\"\
    , line 43\n    return (((p * p * p * p * p * p * p * p * p * p * \n          \
    \   ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return n // 2\n    if p % 3 == 0:\n        return\
    \ n // 3\n    if p % 5 == 0:\n        return n // 5\n    if p % 7 == 0:\n    \
    \    return n // 7\n    return n // p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmxf9tk_.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmxf9tk_.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzmxf9tk_.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 2, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp96obck5l.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp96obck5l.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp96obck5l.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 2, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzardhm0k.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzardhm0k.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzardhm0k.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx6b_eod1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx6b_eod1.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpx6b_eod1.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpseplztq5.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpseplztq5.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpseplztq5.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p\n    if p % 8 == 0:\n        return p << 1\n \
    \   if p % 16 == 0:\n        return p << 2\n    if p % 32 == 0:\n        return\
    \ p << 3\n    if p % 64 == 0:\n        return p << 6\n    return p << 8\n\n\n\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpse2px17q.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpse2px17q.py\"\
    , line 33, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpse2px17q.py\"\
    , line 24, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 4, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiga7c59q.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiga7c59q.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiga7c59q.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw06kkaua.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw06kkaua.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw06kkaua.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpku3wsp_x.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpku3wsp_x.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpku3wsp_x.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpamhgvios.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxu1m38oj.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxu1m38oj.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxu1m38oj.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjtatpl0.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjtatpl0.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxjtatpl0.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppp28x500.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppp28x500.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppp28x500.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p) + modp(n // 3,\
    \ p // 3)\n    return modp(n // 2, p) + modp(n // 2, p // 2) + modp(n // 2, p\
    \ // 3)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3oo9xzv.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3oo9xzv.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3oo9xzv.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92bq27kx.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92bq27kx.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp92bq27kx.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p > 0) else ((n ** p) % p + p)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ljwj6l6.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ljwj6l6.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ljwj6l6.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsh1c91pq.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsh1c91pq.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsh1c91pq.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1csqklvj.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1csqklvj.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1csqklvj.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    bits = bin(n).count('1')\n    return modp(bits, p) * 2**(n - bits)\n\n\
    \ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 24, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 15, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 11, in modp\n    return modp(bits, p) * 2**(n - bits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 11, in modp\n    return modp(bits, p) * 2**(n - bits)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 11, in modp\n    return modp(bits, p) * 2**(n - bits)\n  [Previous line\
    \ repeated 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4xv9vobo.py\"\
    , line 4, in modp\n    if p == 2:\nRecursionError: maximum recursion depth exceeded\
    \ in comparison\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(2,\
    \ n, p)\n    if p % 8 == 0:\n        return pow(2, n, p // 4)\n    if p % 16 ==\
    \ 0:\n        return pow(2, n, p // 8)\n    return pow(2, n, p // 16)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ki_9gy5.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ki_9gy5.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ki_9gy5.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3ki_9gy5.py\"\
    , line 14, in modp\n    return pow(2, n, p // 16)\nValueError: pow() 3rd argument\
    \ cannot be 0\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmznaj4.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmznaj4.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dmznaj4.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(n,\
    \ (p + 1) // 4, p)\n    if p % 8 == 0:\n        return pow(n, (p + 3) // 8, p)\n\
    \    if p % 16 == 0:\n        return pow(n, (p + 7) // 16, p)\n    if p % 32 ==\
    \ 0:\n        return pow(n, (p + 15) // 32, p)\n    if p % 64 == 0:\n        return\
    \ pow(n, (p + 31)//64, p)\n    if p % 256 == 0:\n        return pow(n, (p + 63)\
    \ // 256, p)\n    return pow(n, (p + 1) // 256, p)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgszsogcb.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgszsogcb.py\"\
    , line 33, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgszsogcb.py\"\
    , line 24, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 8 == 0:\n        return\
    \ p - (p % 8)\n    if p % 16 == 0:\n        return p - (p % 16)\n    return p\
    \ - (p % 32)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n   \
    \ assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0lmnsm2.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0lmnsm2.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0lmnsm2.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return n //\
    \ 2\n    if p % 3 == 0:\n        return n // 3\n    if p % 5 == 0:\n        return\
    \ n // 5\n    return n // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgyvie35.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgyvie35.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphgyvie35.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmporu1dq_j.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmporu1dq_j.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmporu1dq_j.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_6taqyq.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_6taqyq.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp_6taqyq.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return n //\
    \ 2\n    if p % 3 == 0:\n        return n // 3\n    if p % 5 == 0:\n        return\
    \ n // 5\n    return n // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopj526ew.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopj526ew.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpopj526ew.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2pm53yqp.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2pm53yqp.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2pm53yqp.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpvqysng.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpvqysng.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcpvqysng.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf3q45z31.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf3q45z31.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf3q45z31.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 2, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fji8n8.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fji8n8.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn3fji8n8.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p\n    if p % 8 == 0:\n        return p >> 3\n \
    \   if p % 16 == 0:\n        return p >> 6\n    return p >> 9\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhu5ll_0.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhu5ll_0.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzhu5ll_0.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_et7rrnk.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_et7rrnk.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_et7rrnk.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p -\
    \ 1\n    if p % 3 == 0:\n        return p - (p // 3) * 3\n    if p % 5 == 0:\n\
    \        return p - (p // 5) * 5\n    return p - (p // 7) * 7\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpylaapzo4.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpylaapzo4.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpylaapzo4.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n % 2 == 1:\n        n -= 1\n    return p % p * p + p\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_e_nbp2s.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_e_nbp2s.py\"\
    , line 24, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_e_nbp2s.py\"\
    , line 15, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 1 or p == -1:\n        return n\n    if p == 0:\n        return\
    \ 0\n    if p == -1:\n        return -p\n    if p == 1:\n        return p\n  \
    \  if n % p == 0:\n        return modp(n // p, p)\n    if n % p == p - 1:\n  \
    \      return modp(n // p, p)\n    if n % p == p - 2:\n        return modp(n //\
    \ p, p)\n    if n % p == p - 3:\n        return modp(n // p, p)\n    return modp(n\
    \ // p, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 37, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 35, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 26, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 19, in modp\n    return modp(n // p, p)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 15, in modp\n    return modp(n // p, p)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 15, in modp\n    return modp(n // p, p)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 15, in modp\n    return modp(n // p, p)\n  [Previous line repeated 992\
    \ more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn195v7xn.py\"\
    , line 4, in modp\n    if p == 2:\nRecursionError: maximum recursion depth exceeded\
    \ in comparison\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p + p\n\
    \    if n % 2 == 0:\n        return modp(n // 2, p) + p\n    if n % 2 == 1:\n\
    \        return modp(n // 2, p) + p + p\n    return modp(n // 2, p) + p\n\n\n\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpczlqrzxe.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpczlqrzxe.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpczlqrzxe.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 0 or p == 1:\n        return n\n    if p < 0:\n        p += n\n\
    \    return pow(2, n, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5)\
    \ == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) ==\
    \ 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n \
    \   assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcc8g94w5.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcc8g94w5.py\"\
    , line 23, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcc8g94w5.py\"\
    , line 16, in check\n    assert candidate(0, 101) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n << p) + 1) % (1\
    \ << p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzoi3efx.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzoi3efx.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvzoi3efx.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8gaeyxlq.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8gaeyxlq.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8gaeyxlq.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(n,\
    \ (p + 1) // 4, p)\n    if p % 8 == 0:\n        return pow(n, (p + 3) // 8, p)\n\
    \    if p % 16 == 0:\n        return pow(n, (p + 7) // 16, p)\n    if p % 32 ==\
    \ 0:\n        return pow(n, (p + 15) // 32, p)\n    if p % 64 == 0:\n        return\
    \ pow(n, (p + 31)//64, p)\n    if p % 256 == 0:\n        return pow(n, (p + 63)//256,\
    \ p)\n    return pow(n, (p + 127) // 256, p)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6a45111l.py\"\
    , line 35, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6a45111l.py\"\
    , line 33, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6a45111l.py\"\
    , line 24, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p\n    if p % 8 == 0:\n        return p\n    if\
    \ p % 16 == 0:\n        return p\n    if p % 32 == 0:\n        return p\n    if\
    \ p % 64 == 0:\n        return p\n    if p % 256 == 0:\n        return p\n   \
    \ if p % 1024 == 0:\n        return p\n    if p % 2048 == 0:\n        return p\n\
    \    if p % 4096 == 0:\n        return p\n    if p % 8192 == 0:\n        return\
    \ p\n    if p % 16384 == 0:\n        return p\n    if p % 32768 == 0:\n      \
    \  return p\n    if p % 65536 == 0:\n        return p\n    if p % 131072 == 0:\n\
    \        return p\n    if p % 262144 == 0:\n        return p\n    if p % 524288\
    \ == 0:\n        return p\n    if p % 1048576 == 0:\n        return p\n    if\
    \ p % 2097152 == 0:\n        return p\n    if p % 4194304 == 0:\n        return\
    \ p\n    if p % 8388608 == 0:\n        return p\n    if p % 16777216 == 0:\n \
    \       return p\n    if p % 33554432 == 0:\n        return p\n    if p % 67108864\
    \ == 0:\n        return p\n    if p % 134217728 == 0:\n        return p\n    if\
    \ p % 268435456 == 0:\n        return p\n    if p % 536870912 == 0:\n        return\
    \ p\n    if p % 1073741824 == 0:\n        return p\n    if p % 2147483648 == 0:\n\
    \        return p\n    if p % 4294967296 == 0:\n        return p\n    if p % 8589934592\
    \ == 0:\n        return p\n    if p % 17179869184 == 0:\n        return p\n  \
    \  if p % 34359738368 == 0:\n        return p\n    if p % 68719476736 == 0:\n\
    \        return p\n    if p % 137438953472 == 0:\n        return p\n    if p %\
    \ 268435456048 == 0:\n        return p\n    if p % 536870912000 == 0:\n      \
    \  return p\n    if p % 107374182400 == 0:\n        return p\n    if p % 214748364800\
    \ == 0:\n        return p\n    if p % 429496729600 == 0:\n        return p\n \
    \   if p % 858993459200 == 0:\n        return p\n    if p % 1717986918400 == 0:\n\
    \        return p\n    if p % 3435973836000 == 0:\n        return p\n    if p\
    \ % 6871947673600 == 0:\n        return p\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt3f2fo3u.py\"\
    , line 108, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt3f2fo3u.py\"\
    , line 106, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt3f2fo3u.py\"\
    , line 97, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpye2_pacd.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpye2_pacd.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpye2_pacd.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) << p) | ((n & 4) << p) | ((n & 8) << p) | (n & 255)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9xurpsda.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9xurpsda.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9xurpsda.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n % 2 == 1:\n        return p % p\n    return p\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvx4j43re.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvx4j43re.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvx4j43re.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofawi1x9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofawi1x9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpofawi1x9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpykv1kfi0.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpykv1kfi0.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpykv1kfi0.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzgf6r9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzgf6r9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdtzgf6r9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) >> 63)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n  \
    \  assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4_41r8t.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4_41r8t.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4_41r8t.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdp45quzc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdp45quzc.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdp45quzc.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp78ih208.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp78ih208.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp78ih208.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 2 == 0:\n        return\
    \ p\n    return p - p % 4\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq92_hz6s.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq92_hz6s.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq92_hz6s.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1rg8m_g3.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p\n    if p % 8 == 0:\n        return p >> 1\n \
    \   if p % 16 == 0:\n        return p >> 2\n    return p >> 3\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgwruyr9j.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgwruyr9j.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgwruyr9j.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if p == 2:\n        return n\n    if\
    \ p % 4 == 0:\n        return p - (p % 4)\n    if p % 2 == 0:\n        return\
    \ p\n    if p % 3 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n %\
    \ 2 == 0:\n        return p\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return\
    \ p - (p % 3)\n    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n\
    \    if n % 3 == 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 ==\
    \ 0 and n % 2 == 0:\n        return p - (p % 3)\n    if n % 3 == 0 and n % 2 ==\
    \ 0:\n        return p - (\ndef check(candidate):\n    assert candidate(3, 5)\
    \ == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) ==\
    \ 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n \
    \   assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomi7p04a.py\"\
    , line 77\n    return p - (\n               ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pddi1dx.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pddi1dx.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0pddi1dx.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return n &\
    \ (p - 1)\n    if p % 8 == 0:\n        return n | (n - 1)\n    if p % 16 == 0:\n\
    \        return n & 0xFFFFFFFF\n    if p % 32 == 0:\n        return n & 0xFFFFFFFFFFFFFFFF\n\
    \    return n & 0xn\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq1evvsws.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq1evvsws.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq1evvsws.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppwur0yrt.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppwur0yrt.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppwur0yrt.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p) + modp(n // 3,\
    \ p // 3)\n    if p % 5 == 0:\n        return modp(n // 5, p) + modp(n // 5, p\
    \ // 5) + modp(n // 5, p // 5)\n    return modp(n // 2, p) + modp(n // 3, p) +\
    \ modp(n // 5, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9p4_j75f.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9p4_j75f.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9p4_j75f.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p + p %\
    \ p\n    if n % 2 == 0:\n        return p + (p // 2)\n    return p + (p // 2)\
    \ + (p // 3) + (p // 4) - (p // 5) + (p // 6) + (p // 7) + (p // 8) + (p // 9)\n\
    \n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdhi0g0g.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdhi0g0g.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppdhi0g0g.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(2,\
    \ n, p)\n    k = n // p\n    return pow(2, k) * p\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bfdexgb.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bfdexgb.py\"\
    , line 24, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4bfdexgb.py\"\
    , line 15, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_5_fibc.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_5_fibc.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj_5_fibc.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p) + 2\n    if p %\
    \ 5 == 0:\n        return modp(n // 5, p) + 3\n    return modp(n // 5, p)\n\n\n\
    def check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnu03qg4.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnu03qg4.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplnu03qg4.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyqcl76w.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyqcl76w.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphyqcl76w.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p -\
    \ 1\n    if p % 3 == 0:\n        return p - (p // 3) * 3\n    return p - (p //\
    \ 3) * (3 - (p // 3) // 2)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprcl5y4du.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprcl5y4du.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprcl5y4du.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphtftaipe.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphtftaipe.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphtftaipe.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5inkfirb.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5inkfirb.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5inkfirb.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 0 or p == 1:\n        return 1\n    if p < 0:\n        p += n\n\
    \    if p < 2 or p > n:\n        return 0\n    if n % 2 == 0:\n        return\
    \ modp(n // 2, p)\n    k = n // 2\n    while k * k <= n:\n        k += 1\n   \
    \ return k * k\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n \
    \   assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpluvygd23.py\"\
    , line 32, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpluvygd23.py\"\
    , line 30, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpluvygd23.py\"\
    , line 21, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) << p) | ((n & 4) << p) | ((n & 8) << p) | (n & 255)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcr_1o1j1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcr_1o1j1.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcr_1o1j1.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n == 3:\n        return ((p * p * p) % p) % p\n    if n == 4:\n      \
    \  return (((p * p * p * p) % p) % p) % p\n    if n == 5:\n        return (((p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 6:\n        return (((p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 7:\n        return (((p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 8:\n        return (((p * p * p * p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 9:\n        return (((p * p * p\
    \ * p * p * p * p * p) % p) % p) % p\n    if n == 10:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 11:\n        return (((p\
    \ * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 12 or n == 0:\n\
    \        return p\n    if n == 13:\n        return ((p * p * p * p * p * p * p\
    \ * p * p) % p) % p\n    if n == 14:\n        return (((p * p * p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 15:\n        return (((p * p * p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 16:\n        return (((p\
    \ * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 17:\n      \
    \  return (((p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n ==\
    \ 18:\n        return (((p * p * p * p * p * p * p * p * p * p * p) % p) % p)\
    \ % p\n    if n == 19:\n        return (((p * p * p * p * p * p * p * p * p *\
    \ p * p) % p) % p) % p\n    if n == 20:\n        return (((p * p * p * p * p *\
    \ p * p * p * p * p * p) % p\ndef check(candidate):\n    assert candidate(3, 5)\
    \ == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) ==\
    \ 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n \
    \   assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppsmh98y0.py\"\
    , line 45\n    return (((p * p * p * p * p * p * p * p * p * p * p) % p\n    \
    \        ^\nSyntaxError: '(' was never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return modp(n // 2, p)\n    if p % 3 == 0:\n\
    \        return modp(n // 3, p) + 2\n    if p % 5 == 0:\n        return modp(n\
    \ // 5, p) + 3\n    if p % 7 == 0:\n        return modp(n // 7, p) + 5\n    return\
    \ modp(n // 2, p) + 7\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 11, in modp\n    return modp(n // 5, p) + 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 11, in modp\n    return modp(n // 5, p) + 3\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 11, in modp\n    return modp(n // 5, p) + 3\n  [Previous line repeated\
    \ 993 more times]\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4d65ninb.py\"\
    , line 4, in modp\n    if p == 2:\nRecursionError: maximum recursion depth exceeded\
    \ in comparison\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p + p\n\
    \    if n % 2 == 0:\n        return modp(n // 2, p)\n    else:\n        return\
    \ modp(n - 1, p) + p\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3j8yz_dx.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3j8yz_dx.py\"\
    , line 26, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3j8yz_dx.py\"\
    , line 17, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_qnn745.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_qnn745.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_qnn745.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) >> (p - 1))\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa47jn2qa.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa47jn2qa.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa47jn2qa.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p < n) else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ltp_2ig.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ltp_2ig.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9ltp_2ig.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpateed5zg.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpateed5zg.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpateed5zg.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29pqs9g2.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29pqs9g2.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp29pqs9g2.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    if p % 7 == 0:\n        return p // 7\n    if p % 11 == 0:\n   \
    \     return p // 11\n    return p % 13\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8t0wq0j.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8t0wq0j.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8t0wq0j.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ >> 1) & -n)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n  \
    \  assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8cpskzh.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8cpskzh.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm8cpskzh.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgdf6qofh.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgdf6qofh.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgdf6qofh.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3gg_5m5.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3gg_5m5.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa3gg_5m5.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(abs(n), p)\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p\n    if\
    \ n % 2 == 0:\n        return modp(n // 2, p)\n    if n % 2 == 1:\n        return\
    \ modp(n - 1, p)\n    return modp(n - 2, p) + p\n\n\ndef check(candidate):\n \
    \   assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9p2957l.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9p2957l.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph9p2957l.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p < n) else ((n % p) + p)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvaqy1s_s.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvaqy1s_s.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvaqy1s_s.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp13vvmjis.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp13vvmjis.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp13vvmjis.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfvwjnyi9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfvwjnyi9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfvwjnyi9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 0 or p == 1:\n        return n\n    if p < 0:\n        return\
    \ modp(n - 1, p) * p + p\n    if p > 1:\n        return modp(n - 1, p)\n    return\
    \ modp(n - 1, p) * (p - 1)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dsl1_p0.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dsl1_p0.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2dsl1_p0.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n << p) + 1) % (1\
    \ << p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhmvul5b.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhmvul5b.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnhmvul5b.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdhn7u4y.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdhn7u4y.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdhn7u4y.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk2dwo24.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk2dwo24.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptk2dwo24.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8k4pudb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8k4pudb.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa8k4pudb.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == n:\n        return 0\n    if p == 1 or p == 2:\n        return\
    \ n\n    if n % p == 0:\n        return n\n    if n % p == 1 or n % p == p:\n\
    \        return n % p\n    if n % p == p - 1:\n        return n % p\n    return\
    \ n + (p - 1) * (p - 1) / 2\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1nrnvpw.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1nrnvpw.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa1nrnvpw.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw07098du.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw07098du.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw07098du.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    if p % 7 == 0:\n        return p // 7\n    if p % 11 == 0:\n   \
    \     return p // 11\n    return p // 7\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm43g0cmk.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm43g0cmk.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm43g0cmk.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5yg7az5g.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5yg7az5g.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5yg7az5g.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt7crwk9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt7crwk9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprt7crwk9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpntn11sea.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpntn11sea.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpntn11sea.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaydd9sf.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaydd9sf.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppaydd9sf.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n % 2 == 1:\n        return p % p\n    k = n // 2\n    return p % p *\
    \ pow(2, k) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjp2fx38j.py\"\
    , line 28, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjp2fx38j.py\"\
    , line 26, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjp2fx38j.py\"\
    , line 17, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpric2542z.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpric2542z.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpric2542z.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_kxgee2.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_kxgee2.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_kxgee2.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p -\
    \ 1\n    k = p // 2\n    return ((n - k) * p + k) % p\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb_9zin3m.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb_9zin3m.py\"\
    , line 24, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb_9zin3m.py\"\
    , line 15, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | (n\
    \ >> 63)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywve4xx8.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywve4xx8.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywve4xx8.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwwm248r.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwwm248r.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvwwm248r.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == n:\n        return p\n    if p == 1 or p == -1:\n        return\
    \ n\n    if n % p == 0:\n        return n\n    if p % n == 0:\n        return\
    \ p\n    if n % p == p:\n        return p\n    if n % p == p - 1:\n        return\
    \ p + 1\n    return p\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5wdbb2q.py\"\
    , line 33, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5wdbb2q.py\"\
    , line 31, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5wdbb2q.py\"\
    , line 22, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6z5rb56.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6z5rb56.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj6z5rb56.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n and p) else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkk8nwl1j.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkk8nwl1j.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkk8nwl1j.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p //\
    \ 2\n    if p % 3 == 0:\n        return p // 3\n    if p % 5 == 0:\n        return\
    \ p // 5\n    return p // 7\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq38d0a9f.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq38d0a9f.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq38d0a9f.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n % 2 == 0:\n        return p + (p // 2)\n    return p + (p // 2) * (p\
    \ // 2)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsgg9mguy.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsgg9mguy.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsgg9mguy.py\"\
    , line 16, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskccd4s1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskccd4s1.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskccd4s1.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi31d8tj.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi31d8tj.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi31d8tj.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return pow(n, (p + 1) // 2, p)\n    if p % 3\
    \ == 0:\n        return pow(n, (p + 1) // 3, p)\n    if p % 5 == 0:\n        return\
    \ pow(n, (p + 1) // 5, p)\n    return pow(n, (p + 1) // 4, p)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqt91jro.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqt91jro.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgqt91jro.py\"\
    , line 17, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p % 2 == 0:\n        return pow(n, (p + 1) // 2, p)\n    if p % 3\
    \ == 0:\n        return pow(n, (p + 1) // 3, p)\n    if p % 5 == 0:\n        return\
    \ pow(n, (p + 1) // 5, p)\n    return pow(n, (p + 1) // 2, p)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert\
    \ candidate(0, 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100,\
    \ 101) == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) ==\
    \ 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdepdny6t.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdepdny6t.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdepdny6t.py\"\
    , line 17, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | ((n\
    \ & 2) >> 63)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n  \
    \  assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert\
    \ candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30,\
    \ 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsw0v9r4o.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsw0v9r4o.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsw0v9r4o.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p <= n) else ((n % p) + p) % p\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwokfeab1.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwokfeab1.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwokfeab1.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1i9sjll.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1i9sjll.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps1i9sjll.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu95zknb9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu95zknb9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu95zknb9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n >= 0 and p >= 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp589ki3t4.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp589ki3t4.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp589ki3t4.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (p * p < n) else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva5wc7dp.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva5wc7dp.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva5wc7dp.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmf7ze7r9.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmf7ze7r9.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmf7ze7r9.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(-n, p)\n    if n == 0:\n        return\
    \ 0\n    ans = 1\n    while n != 0:\n        ans = (ans * p) % n\n        n //=\
    \ p\n    return ans\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukwhna59.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukwhna59.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpukwhna59.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p)\n    if n % 4 ==\
    \ 0:\n        return modp(n // 4, p)\n    if n % 5 == 0:\n        return modp(n\
    \ // 5, p)\n    return modp(n // 2, p)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplq8mxaka.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplq8mxaka.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplq8mxaka.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if p == 3:\n        return n & 1\n    if p == 4:\n        return n &\
    \ 2\n    if p == 5:\n        return n & 3\n    if p == 6:\n        return n &\
    \ 4\n    if p == 7:\n        return n & 5\n    if p == 8:\n        return n &\
    \ 6\n    if p == 9:\n        return n & 7\n    if p == 10:\n        return n &\
    \ 8\n    if p == 11:\n        return n & 9\n    if p == 12:\n        return n\
    \ & 10\n    if p == 13:\n        return n & 11\n    if p == 14:\n        return\
    \ n & 12\n    if p == 15:\n        return n & 13\n    if p == 16:\n        return\
    \ n & 14\n    if p == 17:\n        return n & 15\n    if p == 18:\n        return\
    \ n & 16\n    if p == 19:\n        return n & 17\n    if p == 20:\n        return\
    \ n & 18\n    if p == 21:\n        return n & 19\n    if p == 22:\n        return\
    \ n & 20\n    if p == 23:\n        return n & 21\n    if p == 24:\n        return\
    \ n & 22\n    if p == 25:\n        return n & 23\n    if p == 26:\n        return\
    \ n & 24\n    if p == 27:\n        return n & 25\n    if p == 28:\n        return\
    \ n & 26\n    if p == 29:\n        return n & 27\n    if p == 30:\n        return\
    \ n & 28\n    if p == 31:\n        return n & 29\n    if p == 32:\n        return\
    \ n & 30\n    if p == 33:\n        return n & 31\n    if p == 34:\n        return\
    \ n & 32\n    if p == 35:\n        return n & 33\n    if p == 36:\n        return\
    \ n & 34\n    if p == 37:\n        return n & 35\n    if p == 38:\n        return\
    \ n & 36\n    if p == 39:\n        return n & 37\n    if p == 40:\n        return\
    \ n & 38\n    if p == 41:\n        return n & 39\n    if p == 42:\n        return\
    \ n & 40\n    if p == 43:\n        return n & 41\n    if p == 44:\n        return\
    \ n & 42\n    if p == 45:\n        return n & 43\n    if p == 46:\n        return\
    \ n & 44\n    if p == 47:\n        return n & 45\n    if p == 48:\n        return\
    \ n & 46\n    if p == 49:\n        return n & 47\n    if p == 50:\n        return\
    \ n & 48\n    if p == 51:\n        return n & \ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpci7bp1vy.py\"\
    , line 103\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqtmrx7i.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqtmrx7i.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdqtmrx7i.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo7u0se41.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo7u0se41.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo7u0se41.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 4 == 0:\n        return pow(2,\
    \ n, p)\n    if p % 8 == 0:\n        return pow(2, n, p + 4)\n    if p % 16 ==\
    \ 0:\n        return pow(2, n, p + 8)\n    if p % 32 == 0:\n        return pow(2,\
    \ n, p + 16)\n    return pow(2, n, p + 32)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0,\
    \ 101) == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101)\
    \ == 1\n    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\n\
    def test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf2e906hk.py\"\
    , line 31, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf2e906hk.py\"\
    , line 29, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf2e906hk.py\"\
    , line 20, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return pow(n,\
    \ (p + 1) // 2, p)\n    if p % 3 == 0:\n        return pow(n, (p + 1) // 3, p)\n\
    \    if p % 5 == 0:\n        return pow(n, (p + 1) // 5, p)\n    return pow(n,\
    \ (p + 1) // 4, p)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lbhs_r_.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lbhs_r_.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_lbhs_r_.py\"\
    , line 19, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % (2 **\
    \ p)) % p\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo34212r7.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo34212r7.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo34212r7.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp809tizwc.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp809tizwc.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp809tizwc.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p) * 3\n    if p %\
    \ 5 == 0:\n        return modp(n // 5, p) * 5\n    return modp(n // 2, p) * 7\n\
    \n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75mmkmgb.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75mmkmgb.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp75mmkmgb.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1w5bn0tn.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1w5bn0tn.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1w5bn0tn.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return p -\
    \ 1\n    if p % 3 == 0:\n        return p - (p // 3) * 3\n    return p - (p //\
    \ 3) * (3 - (p // 3))\n\n\ndef check(candidate):\n    assert candidate(3, 5) ==\
    \ 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n\
    \    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1obzu51q.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1obzu51q.py\"\
    , line 25, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1obzu51q.py\"\
    , line 17, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if n == 1:\n        return p\n    if n == 2:\n        return p % p\n\
    \    if n == 3:\n        return ((p * p * p) % p) % p\n    if n == 4:\n      \
    \  return (((p * p * p * p) % p) % p) % p\n    if n == 5:\n        return (((p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 6:\n        return (((p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 7:\n        return (((p * p * p * p\
    \ * p * p * p) % p) % p) % p\n    if n == 8:\n        return (((p * p * p * p\
    \ * p * p * p * p) % p) % p) % p\n    if n == 9:\n        return (((p * p * p\
    \ * p * p * p * p * p) % p) % p) % p\n    if n == 10:\n        return (((p * p\
    \ * p * p * p * p * p * p) % p) % p) % p\n    if n == 11:\n        return (((p\
    \ * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 12 or n == 0:\n\
    \        return p\n    if n == 13:\n        return (((p * p * p * p * p * p *\
    \ p * p * p) % p) % p) % p\n    if n == 14:\n        return (((p * p * p * p *\
    \ p * p * p * p * p * p) % p) % p) % p\n    if n == 15:\n        return (((p *\
    \ p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 16:\n    \
    \    return (((p * p * p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if\
    \ n == 17:\n        return (((p * p * p * p * p * p * p * p * p * p * p) % p)\
    \ % p) % p\n    if n == 18:\n        return (((p * p * p * p * p * p * p * p *\
    \ p * p * p * p) % p) % p) % p\n    if n == 19:\n        return (((p * p * p *\
    \ p * p * p * p * p * p * p * p * p) % p) % p) % p\n    if n == 20:\n        return\
    \ (((p * p * p * p * p\ndef check(candidate):\n    assert candidate(3, 5) == 3\n\
    \    assert candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n   \
    \ assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n    assert\
    \ candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9rowcup4.py\"\
    , line 45\n    return (((p * p * p * p * p\n             ^\nSyntaxError: '(' was\
    \ never closed\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpassmu0_n.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpassmu0_n.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpassmu0_n.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if n == 0:\n        return\
    \ 0\n    if p == 2:\n        return n\n    if p % 2 == 0:\n        return modp(n\
    \ // 2, p)\n    if p % 3 == 0:\n        return modp(n // 3, p) * 3\n    if p %\
    \ 5 == 0:\n        return modp(n // 5, p) * 5\n    return modp(n // 2, p) * 7\n\
    \n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0a85wqae.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0a85wqae.py\"\
    , line 27, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0a85wqae.py\"\
    , line 18, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ (n != 0 and p != 0) else 0\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 5) == 3\n    assert candidate(1101, 101) == 2\n    assert candidate(0, 101)\
    \ == 1\n    assert candidate(3, 11) == 8\n    assert candidate(100, 101) == 1\n\
    \    assert candidate(30, 5) == 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n\
    \    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd12ip35_.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd12ip35_.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd12ip35_.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n & 1) << p) | (n\
    \ >> 63)\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqco255yh.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqco255yh.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqco255yh.py\"\
    , line 8, in check\n    assert candidate(3, 5) == 3\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    if p == 2:\n        return\
    \ n\n    if n < 0:\n        return modp(-n, p)\n    if n == 0:\n        return\
    \ 0\n    if p == 1 or p == 2:\n        return n\n    if p == 3:\n        return\
    \ n & 1\n    if p == 4:\n        return n & 2\n    if p == 5:\n        return\
    \ n & 4\n    if p == 6:\n        return n & 8\n    if p == 7:\n        return\
    \ n & 16\n    if p == 8:\n        return n & 32\n    if p == 9:\n        return\
    \ n & 64\n    if p == 10:\n        return n & 128\n    if p == 11:\n        return\
    \ n & 256\n    if p == 12:\n        return n & 512\n    if p == 13:\n        return\
    \ n & 1024\n    if p == 14:\n        return n & 2048\n    if p == 15:\n      \
    \  return n & 4096\n    if p == 16:\n        return n & 8192\n    if p == 17:\n\
    \        return n & 16384\n    if p == 18:\n        return n & 32768\n    if p\
    \ == 19:\n        return n & 65536\n    if p == 20:\n        return n & 131072\n\
    \    if p == 21:\n        return n & 262144\n    if p == 22:\n        return n\
    \ & 524288\n    if p == 23:\n        return n & 1048576\n    if p == 24:\n   \
    \     return n & 2097152\n    if p == 25:\n        return n & 4194304\n    if\
    \ p == 26:\n        return n & 8388608\n    if p == 27:\n        return n & 16777216\n\
    \    if p == 28:\n        return n & 33554432\n    if p == 29:\n        return\
    \ n & 67108864\n    if p == 30:\n        return n & 134217728\n    if p == 31:\n\
    \        return n & 268435456\n    if p == 32:\n        return n & 536870912\n\
    \    if p == 33:\n        return n & 1073741824\n    if p == 34:\n        return\
    \ n & 2147483648\n    if p == 35:\n        return n & 4294967296\n    if p ==\
    \ 36:\n        return n & 8589934592\n    if p == 37:\n        return n & 17179869184\n\
    \    if p == 38:\n        return n & 34359738368\n    if p == 39:\n        return\
    \ n & 68719476736\n    if p == 40:\n        return n & 137438953472\n    if p\
    \ == 41:\n        return n & 274877906944\n    if p == 42:\n        return n &\
    \ \ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert candidate(1101,\
    \ 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3, 11) ==\
    \ 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) == 4\n \
    \   assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp2twlybnb.py\"\
    , line 91\n    return n & \n               ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else 0\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4ywjp5l.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4ywjp5l.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf4ywjp5l.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def modp(n: int, p: int) -> int:\n    \"\"\"Return 2^n modulo p (be aware\
    \ of numerics).\n                        \"\"\"\n    return ((n ** p) % p) if\
    \ p else n\n\n\ndef check(candidate):\n    assert candidate(3, 5) == 3\n    assert\
    \ candidate(1101, 101) == 2\n    assert candidate(0, 101) == 1\n    assert candidate(3,\
    \ 11) == 8\n    assert candidate(100, 101) == 1\n    assert candidate(30, 5) ==\
    \ 4\n    assert candidate(31, 5) == 3\n\ndef test_check():\n    check(modp)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdk795dou.py\"\
    , line 19, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdk795dou.py\"\
    , line 17, in test_check\n    check(modp)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdk795dou.py\"\
    , line 9, in check\n    assert candidate(1101, 101) == 2\nAssertionError\n"
  exit_code: -1
  status: Exception

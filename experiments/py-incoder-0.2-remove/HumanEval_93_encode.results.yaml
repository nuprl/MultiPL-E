name: HumanEval_93_encode
language: py
results:
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda m: vowels[m.lower()])\n    \n    message = message.replace(\"a\", \"\
    A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message = message.replace(\"\
    i\", \"I\")\n    \n    message = message.replace(\"o\", \"O\")\n    \n    message\
    \ = message.replace(\"u\", \"U\")\n    \n    message = message.replace(\"A\",\
    \ \"a\")\n    \n    message = message.replace(\"E\", \"e\")\n    \n    message\
    \ = message.replace(\"I\", \"i\")\n    \n    message = message.replace(\"O\",\
    \ \"o\")\n    \n    message = message.replace(\"U\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"A\")\n    \n    message = message.replace(\"e\",\
    \ \"E\")\n    \n    message = message.replace(\"i\", \"I\")\n    \n    message\
    \ = message.replace(\"o\", \"O\")\n    \n    message = message.replace(\"u\",\
    \ \"U\")\n    \n    message = message.replace(\"A\", \"a\")\n    \n    message\
    \ = message.replace(\"E\", \"e\")\n    \n    message = message.replace(\"I\",\
    \ \"i\")\n    \n    message = message.replace(\"O\", \"o\")\n    \n    message\
    \ = message.replace(\"U\", \"u\")\n    \n    message = message.replace(\"a\",\
    \ \"A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message\
    \ = message.replace(\"i\", \"I\")\n    \n    message = message.replace(\"o\",\
    \ \"O\")\n    \n    message = message.replace(\"u\", \"U\")\n    \n    message\
    \ = message.replace(\"A\", \"a\")\n    \n    message = message.replace(\"E\",\
    \ \"e\")\n    \n    message = message.replace(\"I\", \"i\")\n    \n    message\
    \ = message.replace(\"O\", \"o\")\n    \n    message = message.replace(\"U\",\
    \ \"u\")\n    \n    message = message.replace(\"a\", \"A\")\n    \n    message\
    \ = message.replace(\"e\", \"E\")\n    \n    message = message.replace(\"i\",\
    \ \"I\")\n    \n    message = message.replace(\"o\", \"O\")\n    \n    message\
    \ = message.replace(\"u\", \"U\")\n    \n    message = message.replace(\"A\",\
    \ \"a\")\n    \n    message = message.replace(\"E\", \"e\")\n    \n    message\
    \ = message.replace(\"I\", \"i\")\n    \n    message = message.replace(\"O\",\
    \ \"o\")\n    \n    message = message.replace(\"U\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"A\")\n    \n    message = message.replace(\"e\",\
    \ \"E\")\n    \n    message = message.replace(\"i\", \"I\")\n    \n    \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp435hkny.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded_message =\
    \ \"\"\n    \n    for letter in message:\n        if letter in vowels:\n     \
    \       encoded_message += letter\n        else:\n            encoded_message\
    \ += letter.upper()\n            \n    return encoded_message\n</cell>\n<cell>\n\
    encode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n\
    <cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n\
    </cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppmwdotfg.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'hleelllloo'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n            >>>'hiee'\n            encode(\"hi\")\n            >>>'hiee'\n\
    \            encode(\"hi\")\n            >>>'hiee'\n            encode(\"hi\"\
    )\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv4avfjbz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\"\
    )\n            print(message)\n            # Output: heLlo\n            \"\"\"\
    \n    \n    Args:\n        message (str): the message to be encoded\n    \n  \
    \  Returns:\n        str: the encoded message\n    \"\"\"\n    \n    message =\
    \ message.lower()\n    \n    vowels = \"aeiou\"\n    \n    message = message.replace(vowels,\
    \ \"\")\n    \n    message = message.replace(\"a\", \"1\")\n    message = message.replace(\"\
    e\", \"2\")\n    message = message.replace(\"i\", \"3\")\n    message = message.replace(\"\
    o\", \"4\")\n    message = message.replace(\"u\", \"5\")\n    \n    message =\
    \ message.replace(\"1\", \"a\")\n    message = message.replace(\"2\", \"e\")\n\
    \    message = message.replace(\"3\", \"i\")\n    message = message.replace(\"\
    4\", \"o\")\n    message = message.replace(\"5\", \"u\")\n    \n    return message\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg6ubjtxj.py\"\
    , line 11\n    message = encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           > \"hELLO\"\n            encode(\"Hello World\")\n            > \"\
    hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\
    \n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"\
    Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"Hello World\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"Hello World\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"\
    hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\
    \n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"\
    Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"Hello World\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"Hello World\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"\
    hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\
    \n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"\
    Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"Hello World\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"Hello World\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"\
    hELLO wORLD\"\n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\
    \n            encode(\"Hello World\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"\
    Hello World\")\n            > \"hELLO wORLD\"\n            encode(\"Hello World\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"Hello World\")\n      \
    \      > \"hELLO \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvxz8ue9v.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hello\")\n       \
    \     > \"ehllo\"\n            \n            encode(\"hello\")\n            >\
    \ \"ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\
    \n            \n            encode(\"hello\")\n            > \"ehllo\"\n     \
    \       \n            encode(\"hello\")\n            > \"ehllo\"\n           \
    \ \n            encode(\"hello\")\n            > \"ehllo\"\n            \n   \
    \         encode(\"hello\")\n            > \"ehllo\"\n            \n         \
    \   encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp51u3a_rz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'Hlee'\n            encode(\"hey\")\n            >>>'Heyy'\n  \
    \          encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n            >>>'Hayy'\n            encode(\"hay\")\n            >>>'Hayy'\n\
    \            encode(\"hay\")\n            >>>'Hayy'\n            encode(\"hay\"\
    )\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp005sz_9.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'Hllo Wrd'\n            \n      \
    \      encode(\"Hello World\")\n            \n            >>>'Hllo Wrd'\n    \
    \        \n            encode(\"Hello World\")\n            \n            >>>'Hllo\
    \ Wrd'\n            \n            encode(\"Hello World\")\n            \n    \
    \        >>>'Hllo Wrd'\n            \n            encode(\"Hello World\")\n  \
    \          \n            >>>'Hllo Wrd'\n            \n            encode(\"Hello\
    \ World\")\n            \n            >>>'Hllo Wrd'\n            \n          \
    \  encode(\"Hello World\")\n            \n            >>>'Hllo Wrd'\n        \
    \    \n            encode(\"Hello World\")\n            \n            >>>'Hllo\
    \ Wrd'\n            \n            encode(\"Hello World\")\n            \n    \
    \        >>>'Hllo Wrd'\n            \n            encode(\"Hello World\")\n  \
    \          \n            >>>'Hllo Wrd'\n            \n            encode(\"Hello\
    \ World\")\n            \n            >>>'Hllo Wrd'\n            \n          \
    \  encode(\"Hello World\")\n            \n            >>>'Hllo Wrd'\n        \
    \    \n            encode(\"Hello World\")\n            \n            >>>'Hllo\
    \ Wrd'\n            \n            encode(\"Hello World\")\n            \n    \
    \        >>>'Hllo Wrd'\n            \n            encode(\"Hello World\")\n  \
    \          \n            >>>'Hllo Wrd'\n            \n            encode(\"Hello\
    \ World\")\n            \n            >>>'Hllo Wrd'\n            \n          \
    \  encode(\"Hello World\")\n            \n            >>>'Hllo Wrd'\n        \
    \    \n            encode(\"Hello World\")\n            \n            >>>'Hllo\
    \ Wrd'\n            \n            encode(\"Hello World\")\n            \n    \
    \        >>>'Hllo Wrd'\n            \n            encode(\"Hello World\")\n  \
    \          \n            >>>'Hllo Wrd'\n            \n            encode(\"Hello\
    \ World\")\n            \n            >>>'Hllo Wrd'\n            \n          \
    \  encode(\"Hello World\")\n            \n            >>>'Hllo Wrd'\n        \
    \    \n            encode(\"Hello World\")\n            \n            >>>'Hllo\
    \ Wrd'\n            \n            encode(\"Hello World\")\n            \n    \
    \        >>>'Hllo Wrd'\n            \n            encode(\"Hello World\")\ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpl4_1ywqj.py\"\
    , line 12\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            >>>\"hELLO\"\n            \n            encode(\"hello\"\
    )\n            >>>\"hELLO\"\n            \n            encode(\"hello\")\n   \
    \         >>>\"hELLO\"\n            \n            encode(\"hello\")\n        \
    \    >>>\"hELLO\"\n            \n            encode(\"hello\")\n            >>>\"\
    hELLO\"\n            \n            encode(\"hello\")\n            >>>\"hELLO\"\
    \n            \n            encode(\"hello\")\n            >>>\"hELLO\"\n    \
    \        \n            encode(\"hello\")\n            >>>\"hELLO\"\n         \
    \   \n            encode(\"hello\")\n            >>>\"hELLO\"\n            \n\
    \            encode(\"hello\")\n            >>>\"hELLO\"\n            \n     \
    \       encode(\"hello\")\n            >>>\"hELLO\"\n            \n          \
    \  encode(\"hello\")\n            >>>\"hELLO\"\n            \n            encode(\"\
    hello\")\n            >>>\"hELLO\"\n            \n            encode(\"hello\"\
    )\n            >>>\"hELLO\"\n            \n            encode(\"hello\")\n   \
    \         >>>\"hELLO\"\n            \n            encode(\"hello\")\n        \
    \    >>>\"hELLO\"\n            \n            encode(\"hello\")\n            >>>\"\
    hELLO\"\n            \n            encode(\"hello\")\n            >>>\"hELLO\"\
    \n            \n            encode(\"hello\")\n            >>>\"hELLO\"\n    \
    \        \n            encode(\"hello\")\n            >>>\"hELLO\"\n         \
    \   \n            encode(\"hello\")\n            >>>\"hELLO\"\n            \n\
    \            encode(\"hello\")\n            >>>\"hELLO\"\n            \n     \
    \       encode(\"hello\")\n            >>>\"hELLO\"\n            \n          \
    \  encode(\"hello\")\n            >>>\"hELLO\"\n            \n            encode(\"\
    hello\")\n            >>>\"hELLO\"\n            \n            encode(\"hello\"\
    )\n            >>>\"hELLO\"\n            \n            encode(\"hello\")\n   \
    \         >>>\"hELLO\"\n            \n            encode(\"hello\")\n        \
    \    >>>\"hELLO\"\n            \n            encode(\"hello\")\n            >>>\"\
    hELLO\"\n            \n            encode(\"hello\")\n            >>>\"hELLO\"\
    \n            \n            encode(\"hello\")\n            >>>\"hELLO\"\n    \
    \        \n            encode(\"hello\")\n            >>>\"hELLO\"\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpet8p67vg.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    goodbye\")\n            \n            >>>\"gdbye\"\n            \n           \
    \ encode(\"hi there\")\n            \n            >>>\"hi threer\"\n         \
    \   \n            encode(\"hi there, how are you?\")\n            \n         \
    \   >>>\"hi there, howr aery\"\n            \n            encode(\"hi there, how\
    \ are you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"hi there, howr\
    \ aery im fin thank you.\"\n            \n            encode(\"hi there, how are\
    \ you? I'm fine, thank you.\")\n            \n            >>>\"h\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdthygeok.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hey\")\n            > \"heyy\"\
    \n            encode(\"hi\")\n            > \"hiii\"\n            encode(\"howdy\"\
    )\n            > \"howdyy\"\n            encode(\"hi\")\n            > \"hiii\"\
    \n            encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"\
    howdy\")\n            > \"howdyy\"\n            encode(\"howdy\")\n          \
    \  > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\n   \
    \         encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"howdy\"\
    )\n            > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\
    \n            encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"\
    howdy\")\n            > \"howdyy\"\n            encode(\"howdy\")\n          \
    \  > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\n   \
    \         encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"howdy\"\
    )\n            > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\
    \n            encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"\
    howdy\")\n            > \"howdyy\"\n            encode(\"howdy\")\n          \
    \  > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\n   \
    \         encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"howdy\"\
    )\n            > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\
    \n            encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"\
    howdy\")\n            > \"howdyy\"\n            encode(\"howdy\")\n          \
    \  > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\n   \
    \         encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"howdy\"\
    )\n            > \"howdyy\"\n            encode(\"howdy\")\n            > \"howdyy\"\
    \n            encode(\"howdy\")\n            > \"howdyy\"\n            encode(\"\
    howdy\")\n            \ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpswy8ii_d.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"Hlee\"\n            encode(\"hey\")\n            > \"Hey\"\n \
    \           encode(\"hay\")\n            > \"Hay\"\n            encode(\"hmm\"\
    )\n            > \"Hmm\"\n            encode(\"hmmm\")\n            > \"Hmmm\"\
    \n            encode(\"hmmmm\")\n            > \"Hmmmm\"\n            encode(\"\
    hmmmmm\")\n            > \"Hmmmmm\"\n            encode(\"hmmmmmm\")\n       \
    \     > \"Hmmmmmm\"\n            encode(\"hmmmmmmm\")\n            > \"Hmmmmmmm\"\
    \n            encode(\"hmmmmmmmm\")\n            > \"Hmmmmmmmm\"\n           \
    \ encode(\"hmmmmmmmmm\")\n            > \"Hmmmmmmmmm\"\n            encode(\"\
    hmmmmmmmmmm\")\n            > \"Hmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmm\")\n   \
    \         > \"Hmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmm\")\n      \
    \      > \"Hmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmm\")\n       \
    \     > \"Hmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmm\")\n      \
    \      > \"Hmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmm\")\n   \
    \         > \"Hmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmm\")\n\
    \            > \"Hmmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmmmmmmmmmm\"\n            encode(\"hmmmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"Hmmmmmmmmmmmmmmmm\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9wyf57h0.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"He llo orld\"\n            \"\"\"\n            \n    Args:\n\
    \        message (str): the message to encode\n        \n    Returns:\n      \
    \  str: the encoded message\n    \"\"\"\n    \n    message = message.lower()\n\
    \    \n    vowels = \"aeiou\"\n    \n    encoded_message = \"\"\n    \n    for\
    \ letter in message:\n        if letter in vowels:\n            encoded_message\
    \ += letter\n        else:\n            encoded_message += letter.upper()\n  \
    \          \n    return encoded_message\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg3zmlb91.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hey\")\n    \
    \        > \"heyheyhey\"\n            \n            encode(\"hey you\")\n    \
    \        > \"heyheyhey youyou\"\n            \n            encode(\"hey you too\"\
    )\n            > \"heyheyhey youyoutoo\"\n            \n            encode(\"\
    hey you\")\n            > \"heyheyhey youyou\"\n            \n            encode(\"\
    hey you too\")\n            > \"heyheyhey youyoutoo\"\n            \n        \
    \    encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\n        \
    \    \n            encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\
    \n            \n            encode(\"hey you too\")\n            > \"heyheyhey\
    \ youyoutoo\"\n            \n            encode(\"hey you too\")\n           \
    \ > \"heyheyhey youyoutoo\"\n            \n            encode(\"hey you too\"\
    )\n            > \"heyheyhey youyoutoo\"\n            \n            encode(\"\
    hey you too\")\n            > \"heyheyhey youyoutoo\"\n            \n        \
    \    encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\n        \
    \    \n            encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\
    \n            \n            encode(\"hey you too\")\n            > \"heyheyhey\
    \ youyoutoo\"\n            \n            encode(\"hey you too\")\n           \
    \ > \"heyheyhey youyoutoo\"\n            \n            encode(\"hey you too\"\
    )\n            > \"heyheyhey youyoutoo\"\n            \n            encode(\"\
    hey you too\")\n            > \"heyheyhey youyoutoo\"\n            \n        \
    \    encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\n        \
    \    \n            encode(\"hey you too\")\n            > \"heyheyhey youyoutoo\"\
    \n            \n            encode(\"hey you too\")\n            > \"heyheyhey\
    \ youyoutoo\"\n            \n            encode(\"hey \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt0f9j1zk.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hello\"\n            \n            encode(\"hleelllloo\")\n\
    \            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelllloo\"\n            \n            encode(\"hleelllloo\"\
    )\n            >> \"hleelll\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsuahw_y9.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hllo Wrd'\n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprh4irn0a.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelll\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelll\"\n            \n            encode(\"hello\")\n            > \"\
    hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpae__h3ty.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \n            Enter a message: hello\n            Hll\n         \
    \   \n            Enter a message: hello\n            Hee\n            \n    \
    \        Enter a message: hello\n            Hee\n            \n            Enter\
    \ a message: hello\n            Hee\n            \n            Enter a message:\
    \ hello\n            Hee\n            \n            Enter a message: hello\n \
    \           Hee\n            \n            Enter a message: hello\n          \
    \  Hee\n            \n            Enter a message: hello\n            Hee\n  \
    \          \n            Enter a message: hello\n            Hee\n           \
    \ \n            Enter a message: hello\n            Hee\n            \n      \
    \      Enter a message: hello\n            Hee\n            \n            Enter\
    \ a message: hello\n            Hee\n            \n            Enter a message:\
    \ hello\n            Hee\n            \n            Enter a message: hello\n \
    \           Hee\n            \n            Enter a message: hello\n          \
    \  Hee\n            \n            Enter a message: hello\n            Hee\n  \
    \          \n            Enter a message: hello\n            Hee\n           \
    \ \n            Enter a message: hello\n            Hee\n            \n      \
    \      Enter a message: hello\n            Hee\n            \n            Enter\
    \ a message: hello\n            Hee\n            \n            Enter a message:\
    \ hello\n            Hee\n            \n            Enter a message: hello\n \
    \           Hee\n            \n            Enter a message: hello\n          \
    \  Hee\n            \n            Enter a message: hello\n            Hee\n  \
    \          \n            Enter a message: hello\n            Hee\n           \
    \ \n            Enter a message: hello\n            Hee\n            \n      \
    \      Enter a message: hello\n            Hee\n            \n            Enter\
    \ a message: hello\n            Hee\n            \n            Enter a message:\
    \ hello\n            Hee\n            \n            Enter a message: hello\n \
    \           Hee\n            \n            Enter a message: hello\n          \
    \  Hee\n            \n            Enter a message: hello\n            Hee\n  \
    \          \n            Enter a message: hello\n            Hee\n           \
    \ \n            Enter a message: hello\n            Hee\n            \n      \
    \      Enter a message: hello\n            Hee\n            \n            Enter\
    \ a message: hello\n            Hee\n            \n            Enter a message:\
    \ hello\n            Hee\n            \n            Enter a message: hello\n \
    \           Hee\n            \n            Enter a message: hello\n          \
    \  Hee\n            \n            Enter a message: hello\n            Hee\n  \
    \          \n            Enter a message: hello\n            Hee\n           \
    \ \n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6uhnp35g.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hello\")\n       \
    \     > \"ehllo\"\n            \n            encode(\"hello\")\n            >\
    \ \"ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\
    \n            \n            encode(\"hello\")\n            > \"ehllo\"\n     \
    \       \n            encode(\"hello\")\n            > \"ehllo\"\n           \
    \ \n            encode(\"hello\")\n            > \"ehllo\"\n            \n   \
    \         encode(\"hello\")\n            > \"ehllo\"\n            \n         \
    \   encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp96bo285l.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \n            Enter a message: hello\n            Hlelo\n       \
    \     \n            Enter a message: helloo\n            Hlelo\n            \n\
    \            Enter a message: hellooo\n            Hlelo\n            \n     \
    \       Enter a message: helloooo\n            Hlelo\n            \n         \
    \   Enter a message: hellooooa\n            Hlelo\n            \n            Enter\
    \ a message: hellooooaa\n            Hlelo\n            \n            Enter a\
    \ message: hellooooaaa\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaa\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaa\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaa\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaa\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaab\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaaab\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaaabb\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaaabbb\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaaabbbb\n            Hlelo\n            \n            Enter a message:\
    \ hellooooaaaaaaaabbbbb\n            Hlelo\n            \n            Enter a\
    \ message: hellooooaaaaaaaabbbbba\n            Hlelo\n            \n         \
    \   Enter a message: hellooooaaaaaaaabbbbbaa\n            Hlelo\n            \n\
    \            Enter a message: hellooooaaaaaaaabbbbbaaa\n            Hlelo\n  \
    \          \n            Enter a message: hellooooaaaaaaaabbbbbaaaa\n        \
    \    Hlelo\n            \n            Enter a message: hellooooaaaaaaaabbbbbaaaaa\n\
    \            Hlelo\n            \n            Enter a message: hellooooaaaaaaaabbbbbaaaaaa\n\
    \            Hlelo\n            \n            Enter a message: hellooooaaaaaaaabbbbbaaaaaaa\n\
    \            Hlelo\n            \n            Enter a message: hellooooaaaaaaaabbbbbaaaaaaaa\n\
    \            Hlelo\n            \n            Enter a message: hellooooaaaaaaaabbbbbaaaaaaaab\n\
    \            Hlelo\n            \n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps51ybjo5.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'Hlllo'\n            encode(\"hello\")\n            >>>'Hllllo'\n\
    \            encode(\"hello\")\n            >>>'Hlllllo'\n            encode(\"\
    hello\")\n            >>>'Hllllllo'\n            encode(\"hello\")\n         \
    \   >>>'Hlllllllo'\n            encode(\"hello\")\n            >>>'Hllllllllo'\n\
    \            encode(\"hello\")\n            >>>'Hlllllllllo'\n            encode(\"\
    hello\")\n            >>>'Hllllllllllo'\n            encode(\"hello\")\n     \
    \       >>>'Hlllllllllllo'\n            encode(\"hello\")\n            >>>'Hllllllllllllo'\n\
    \            encode(\"hello\")\n            >>>'Hlllllllllllllo'\n           \
    \ encode(\"hello\")\n            >>>'Hllllllllllllllo'\n            encode(\"\
    hello\")\n            >>>'Hlllllllllllllllo'\n            encode(\"hello\")\n\
    \            >>>'Hllllllllllllllllo'\n            encode(\"hello\")\n        \
    \    >>>'Hlllllllllllllllllo'\n            encode(\"hello\")\n            >>>'Hllllllllllllllllllo'\n\
    \            encode(\"hello\")\n            >>>'Hlllllllllllllllllllo'\n     \
    \       encode(\"hello\")\n            >>>'Hllllllllllllllllllllo'\n         \
    \   encode(\"hello\")\n            >>>'Hlllllllllllllllllllllo'\n            encode(\"\
    hello\")\n            >>>'Hllllllllllllllllllllllo'\n            encode(\"hello\"\
    )\n            >>>'Hllllllllllllllllllllllllo'\n            encode(\"hello\")\n\
    \            >>>'Hllllllllllllllllllllllllllo'\n            encode(\"hello\")\n\
    \            >>>'Hllllllllllllllllllllllllllo'\n            encode(\"hello\")\n\
    \            >>>'Hllllllllllllllllllllllllllllo'\n            encode(\"hello\"\
    )\n            >>>'Hllllllllllllllllllllllllllllllo'\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqkhhdzz5.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hi there\")\n            > \"ehi\
    \ ereht\"\n            encode(\"hi there, how are you?\")\n            > \"ehi\
    \ ereht, ehi eruoy\"\n            encode(\"hi there, how are you? I'm fine\")\n\
    \            > \"ehi ereht, ehi eruoy ehi eruoy\"\n            encode(\"hi there,\
    \ how are you? I'm fine, thank you\")\n            > \"ehi ereht, ehi eruoy ehi\
    \ eruoy ehi eruoy\"\n            encode(\"hi there, how are you? I'm fine, thank\
    \ you, thank you\")\n            > \"ehi ereht, ehi eruoy ehi eruoy ehi eruoy\
    \ ehi eruoy\"\n            encode(\"hi there, how are you? I'm fine, thank you,\
    \ thank you, thank you\")\n            > \"ehi ereht, ehi eruoy ehi eruoy ehi\
    \ eruoy ehi eruoy ehi eruoy\"\n            encode(\"hi there, how are you? I'm\
    \ fine, thank you, thank you, thank you, thank you\")\n            > \"ehi ereht,\
    \ ehi eruoy ehi eruoy ehi eruoy ehi eruoy ehi eruoy ehi eruoy\"\n            encode(\"\
    hi there, how are you? I'm fine, thank you, thank you, thank you, thank you, thank\
    \ you\")\n            > \"ehi ereht, ehi eruoy ehi eruoy ehi eruoy ehi eruoy ehi\
    \ eruoy ehi eruoy ehi eruoy\"\n            encode(\"hi there, how are you? I'm\
    \ fine, thank you, thank you, thank you, thank you, thank you, thank you\")\n\
    \            > \"ehi ereht, ehi eru\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmponb41795.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \n            encode(\"hello\")\n       \
    \     > \"h3ll0\"\n            \n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            \n            encode(\"hello\")\n            > \"h3ll0\"\n     \
    \       \n            encode(\"hello\")\n            > \"h3ll0\"\n           \
    \ \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n   \
    \         encode(\"hello\")\n            > \"h3ll0\"\n            \n         \
    \   encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo5mx605l.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelllloo\"\n            \n            encode(\"hello\")\n   \
    \         > \"hleelllloo\"\n            \n            encode(\"hello\")\n    \
    \        > \"hleelllloo\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelllloo\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelllloo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleelllloo\"\n            \n            encode(\"hello\")\n        \
    \    > \"hleelllloo\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelllloo\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelllloo\"\n            \n            encode(\"hello\")\n           \
    \ > \"hleelllloo\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelllloo\"\n            \n            encode(\"hello\")\n            > \"\
    hleelllloo\"\n            \n            encode(\"hello\")\n            > \"hleelllloo\"\
    \n            \n            encode(\"hello\")\n            > \"hleelllloo\"\n\
    \            \n            encode(\"hello\")\n            > \"hleelllloo\"\n \
    \           \n            encode(\"hello\")\n            > \"hleelllloo\"\n  \
    \          \n            encode(\"hello\")\n            > \"hleelllloo\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelllloo\"\n    \
    \        \n            encode(\"hello\")\n            > \"hleelllloo\"\n     \
    \       \n            encode(\"hello\")\n            > \"hleelllloo\"\n      \
    \      \n            encode(\"hello\")\n            > \"hleelllloo\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelllloo\"\n        \
    \    \n            encode(\"hello\")\n            > \"hleelllloo\"\n         \
    \   \n            encode(\"hello\")\n            > \"hleelllloo\"\n          \
    \  \n            encode(\"hello\")\n            > \"hleelllloo\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelllloo\"\n            \n\
    \            encode(\"hello\")\n            > \"hleelllloo\"\n            \n \
    \           encode(\"hello\")\n            > \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9155o54h.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \n            encode(\"hello\")\n       \
    \     > \"h3ll0\"\n            \n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            \n            encode(\"hello\")\n            > \"h3ll0\"\n     \
    \       \n            encode(\"hello\")\n            > \"h3ll0\"\n           \
    \ \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n   \
    \         encode(\"hello\")\n            > \"h3ll0\"\n            \n         \
    \   encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphscva2m9.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \n            encode(\"hello\")\n       \
    \     > \"h3ll0\"\n            \n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            \n            encode(\"hello\")\n            > \"h3ll0\"\n     \
    \       \n            encode(\"hello\")\n            > \"h3ll0\"\n           \
    \ \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n   \
    \         encode(\"hello\")\n            > \"h3ll0\"\n            \n         \
    \   encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4y3cnlu3.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrss\"\n            \"\"\"\n    \"\"\"\n    \n\
    \    message = message.lower()\n    \n    vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    \n    encoded = \"\"\n    \n    for letter in message:\n       \
    \ if letter in vowels:\n            letter = letter.upper()\n            \n  \
    \      encoded += letter\n        \n    return encoded\n</cell>\n<cell>\nencode(message)\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo8mx_34c.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu478jp3p.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleel\"\n            \n            encode(\"hello\")\n            >\
    \ \"hllee\"\n            \n            encode(\"hello\")\n            > \"hllee\"\
    \n            \n            encode(\"hello\")\n            > \"hllee\"\n     \
    \       \n            encode(\"hello\")\n            > \"hllee\"\n           \
    \ \n            encode(\"hello\")\n            > \"hllee\"\n            \n   \
    \         encode(\"hello\")\n            > \"hllee\"\n            \n         \
    \   encode(\"hello\")\n            > \"hllee\"\n            \n            encode(\"\
    hello\")\n            > \"hllee\"\n            \n            encode(\"hello\"\
    )\n            > \"hllee\"\n            \n            encode(\"hello\")\n    \
    \        > \"hllee\"\n            \n            encode(\"hello\")\n          \
    \  > \"hllee\"\n            \n            encode(\"hello\")\n            > \"\
    hllee\"\n            \n            encode(\"hello\")\n            > \"hllee\"\n\
    \            \n            encode(\"hello\")\n            > \"hllee\"\n      \
    \      \n            encode(\"hello\")\n            > \"hllee\"\n            \n\
    \            encode(\"hello\")\n            > \"hllee\"\n            \n      \
    \      encode(\"hello\")\n            > \"hllee\"\n            \n            encode(\"\
    hello\")\n            > \"hllee\"\n            \n            encode(\"hello\"\
    )\n            > \"hllee\"\n            \n            encode(\"hello\")\n    \
    \        > \"hllee\"\n            \n            encode(\"hello\")\n          \
    \  > \"hllee\"\n            \n            encode(\"hello\")\n            > \"\
    hllee\"\n            \n            encode(\"hello\")\n            > \"hllee\"\n\
    \            \n            encode(\"hello\")\n            > \"hllee\"\n      \
    \      \n            encode(\"hello\")\n            > \"hllee\"\n            \n\
    \            encode(\"hello\")\n            > \"hllee\"\n            \n      \
    \      encode(\"hello\")\n            > \"hllee\"\n            \n            encode(\"\
    hello\")\n            > \"hllee\"\n            \n            encode(\"hello\"\
    )\n            > \"hllee\"\n            \n            encode(\"hello\")\n    \
    \        > \"hllee\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy4978cnt.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \n            encode(\"hey\")\n         \
    \   > \"h3y1\"\n            \n            encode(\"hi\")\n            > \"h1i\"\
    \n            \n            encode(\"hmm\")\n            > \"h3mm\"\n        \
    \    \n            encode(\"hmmm\")\n            > \"h3mmm\"\n            \n \
    \           encode(\"hmmmm\")\n            > \"h3mmmm\"\n            \n      \
    \      encode(\"hmmmmm\")\n            > \"h3mmmmm\"\n            \n         \
    \   encode(\"hmmmmmm\")\n            > \"h3mmmmmm\"\n            \n          \
    \  encode(\"hmmmmmmm\")\n            > \"h3mmmmmmm\"\n            \n         \
    \   encode(\"hmmmmmmmm\")\n            > \"h3mmmmmmmm\"\n            \n      \
    \      encode(\"hmmmmmmmmm\")\n            > \"h3mmmmmmmmm\"\n            \n \
    \           encode(\"hmmmmmmmmmm\")\n            > \"h3mmmmmmmmmm\"\n        \
    \    \n            encode(\"hmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmm\"\n\
    \            \n            encode(\"hmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmmmmmm\")\n            > \"h3mmmmmmmmmmmmmmmmm\"\
    \n            \n            encode(\"hmmmmmmmmmmmmmmmmmm\")\n            > \"\
    h3mmmmmmmmmmmmmmmmm\"\n            \n            encode(\"hmmmmmmmmmmmmmmmmmmm\"\
    )\n            > \"h3mmmmmmmmmmmmmmmmmmm\"\n            \n            encode(\"\
    hmmmm\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp19_mr0nb.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq82wpfc0.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\
    \n            encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"\
    hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n          \
    \  >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n   \
    \         encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\"\
    )\n            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"\
    ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n           \
    \ encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n\
    \            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\
    \n            encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"\
    hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n          \
    \  >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n   \
    \         encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\"\
    )\n            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"\
    ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n           \
    \ encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n\
    \            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\
    \n            encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"\
    hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n          \
    \  >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n   \
    \         encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\"\
    )\n            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"\
    ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n           \
    \ encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n\
    \            >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\
    \n            encode(\"hello\")\n            >> \"ehllo\"\n            encode(\"\
    hello\")\n            >> \"ehllo\"\n            encode(\"hello\")\n          \
    \  >> \"ehllo\"\n            encode(\"hello\")\n            >> \"ehllo\"\n   \
    \         encode(\"hello\")\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6tt2pcmt.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hello\")\n           \
    \ > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\n      \
    \      encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hello\")\n           \
    \ > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\n      \
    \      encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hello\")\n           \
    \ > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\n      \
    \      encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hello\")\n           \
    \ > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\n      \
    \      encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hello\")\n           \
    \ > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\n      \
    \      encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp61duoman.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptt_9m1uc.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrssss\"\n            \n         \
    \   encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\n          \
    \  \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp99jejz7j.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           >>>\"Hlee\"\n            encode(\"Hello World\")\n            >>>\"\
    Hleelorld\"\n            encode(\"Hello World!\")\n            >>>\"Hleelorldo!\"\
    \n            encode(\"Hello World! How are you?\")\n            >>>\"Hleelorldo!\
    \ Hower are you?\"\n            encode(\"Hello World! How are you? I'm fine.\"\
    )\n            >>>\"Hleelorldo! Hower are you? I'm feline.\"\n            encode(\"\
    Hello World! How are you? I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm\
    \ fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvuwoidnq.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > 'He llo orld'\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda m: vowels[m.lower()])\n    \n    message = message.replace(\"a\", \"\
    A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message = message.replace(\"\
    i\", \"I\")\n    \n    message = message.replace(\"o\", \"O\")\n    \n    message\
    \ = message.replace(\"u\", \"U\")\n    \n    message = message.replace(\"y\",\
    \ \"Y\")\n    \n    message = message.replace(\"h\", \"H\")\n    \n    message\
    \ = message.replace(\"r\", \"R\")\n    \n    message = message.replace(\"t\",\
    \ \"T\")\n    \n    message = message.replace(\"s\", \"S\")\n    \n    message\
    \ = message.replace(\"d\", \"D\")\n    \n    message = message.replace(\"f\",\
    \ \"F\")\n    \n    message = message.replace(\"g\", \"G\")\n    \n    message\
    \ = message.replace(\"p\", \"P\")\n    \n    message = message.replace(\"m\",\
    \ \"M\")\n    \n    message = message.replace(\"n\", \"N\")\n    \n    message\
    \ = message.replace(\"l\", \"L\")\n    \n    message = message.replace(\"k\",\
    \ \"K\")\n    \n    message = message.replace(\"j\", \"J\")\n    \n    message\
    \ = message.replace(\"q\", \"Q\")\n    \n    message = message.replace(\"x\",\
    \ \"X\")\n    \n    message = message.replace(\"z\", \"Z\")\n    \n    message\
    \ = message.replace(\"x\", \"X\")\n    \n    message = message.replace(\"y\",\
    \ \"Y\")\n    \n    message = message.replace(\"w\", \"W\")\n    \n    message\
    \ = message.replace(\"v\", \"V\")\n    \n    message = message.replace(\"b\",\
    \ \"B\")\n    \n    message = message.replace(\"m\", \"M\")\n    \n    message\
    \ = message.replace(\"n\", \"N\")\n    \n    message = message.replace(\"l\",\
    \ \"L\")\n    \n    message = message.replace(\"k\", \"K\")\n    \n    message\
    \ = message.replace(\"j\", \"J\")\n    \n    message = message.replace(\"q\",\
    \ \"Q\")\n    \n    message = message.replace(\"x\", \"X\")\n    \n    message\
    \ = message.replace(\"z\", \"Z\")\n    \n    message = message.replace(\"x\",\
    \ \"X\")\n    \n    message = message.replace(\"y\", \"Y\")\n    \n    message\
    \ = message.replace(\"w\", \"W\")\n    \n    message = message.replace(\"v\",\
    \ \"V\")\n    \n    message = message.replace(\"b\", \"B\")\n    \n    message\
    \ = message.replace(\"m\", \"M\")\n    \n    message = message.replace(\"n\",\
    \ \"N\")\n    \n    message = message.replace(\"l\", \"L\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxhni7q8n.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            encode(\"Hello World\")\n         \
    \   > \"Hllo Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo\
    \ Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo Wrd\"\n   \
    \         encode(\"Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"\
    Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            encode(\"Hello World\")\n         \
    \   > \"Hllo Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo\
    \ Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo Wrd\"\n   \
    \         encode(\"Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"\
    Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            encode(\"Hello World\")\n         \
    \   > \"Hllo Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo\
    \ Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo Wrd\"\n   \
    \         encode(\"Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"\
    Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            encode(\"Hello World\")\n         \
    \   > \"Hllo Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo\
    \ Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo Wrd\"\n   \
    \         encode(\"Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"\
    Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            encode(\"Hello World\")\n         \
    \   > \"Hllo Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo\
    \ Wrd\"\n            encode(\"Hello World\")\n            > \"Hllo Wrd\"\n   \
    \         encode(\"Hello World\")\n            > \"Hllo Wrd\"\n            encode(\"\
    Hello World\")\n            > \"Hllo Wrd\"\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpicro45q7.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"Hleellllooorrrssss\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thgqckbrwnfpxxmmpsvvzsvsv\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thg\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfnlj7fvi.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y0\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y0\"\
    \n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb0ep71bx.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelllloo\"\n            \n            encode(\"hello\")\n   \
    \         > \"hleelllloo\"\n            \n            encode(\"hello\")\n    \
    \        > \"hleelllloo\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelllloo\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelllloo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleelllloo\"\n            \n            encode(\"hello\")\n        \
    \    > \"hleelllloo\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelllloo\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelllloo\"\n            \n            encode(\"hello\")\n           \
    \ > \"hleelllloo\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelllloo\"\n            \n            encode(\"hello\")\n            > \"\
    hleelllloo\"\n            \n            encode(\"hello\")\n            > \"hleelllloo\"\
    \n            \n            encode(\"hello\")\n            > \"hleelllloo\"\n\
    \            \n            encode(\"hello\")\n            > \"hleelllloo\"\n \
    \           \n            encode(\"hello\")\n            > \"hleelllloo\"\n  \
    \          \n            encode(\"hello\")\n            > \"hleelllloo\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelllloo\"\n    \
    \        \n            encode(\"hello\")\n            > \"hleelllloo\"\n     \
    \       \n            encode(\"hello\")\n            > \"hleelllloo\"\n      \
    \      \n            encode(\"hello\")\n            > \"hleelllloo\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelllloo\"\n        \
    \    \n            encode(\"hello\")\n            > \"hleelllloo\"\n         \
    \   \n            encode(\"hello\")\n            > \"hleelllloo\"\n          \
    \  \n            encode(\"hello\")\n            > \"hleelllloo\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelllloo\"\n            \n\
    \            encode(\"hello\")\n            > \"hleelllloo\"\n            \n \
    \           encode(\"hello\")\n            > \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3kage1pi.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaedy23j1.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\n\
    \            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hey\")\n            > \"hEy\"\n            encode(\"hello\")\n            > \"\
    hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hey\")\n            >\
    \ \"hEy\"\n            encode(\"hello\")\n            > \"hELLO\"\n          \
    \  encode(\"hey\")\n            > \"hEy\"\n            encode(\"hello\")\n   \
    \         > \"hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\n  \
    \          encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hey\"\
    )\n            > \"hEy\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hey\")\n            > \"hEy\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hey\")\n            > \"hEy\"\n            encode(\"hello\")\n            > \"\
    hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\n            encode(\"\
    hello\")\n            > \"hELLO\"\n            encode(\"hey\")\n            >\
    \ \"hEy\"\n            encode(\"hello\")\n            > \"hELLO\"\n          \
    \  encode(\"hey\")\n            > \"hEy\"\n            encode(\"hello\")\n   \
    \         > \"hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\n  \
    \          encode(\"hello\")\n            > \"hELLO\"\n            encode(\"hey\"\
    )\n            > \"hEy\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"hey\")\n            > \"hEy\"\n            encode(\"hello\"\
    )\n            > \"hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\
    \n            encode(\"hello\")\n            > \"hELLO\"\n            encode(\"\
    hey\")\n            > \"hEy\"\n            encode(\"hello\")\n            > \"\
    hELLO\"\n            encode(\"hey\")\n            > \"hEy\"\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpis6rodhr.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\") ==\
    \ \"ehllo\"\n            encode(\"hi there\") == \"ehi ereht\"\n            encode(\"\
    hi there, how are you?\") == \"ehi ereht erawy\"\n            encode(\"hi there,\
    \ how are you? I'm fine\") == \"ehi ereht erawy imfa\"\n            encode(\"\
    hi there, how are you? I'm fine, thank you\") == \"ehi ereht erawy imfa yeah\"\
    \n            encode(\"hi there, how are you? I'm fine, thank you!\") == \"ehi\
    \ ereht erawy imfa yeah!\"\n            encode(\"hi there, how are you? I'm fine,\
    \ thank you!!!\") == \"ehi ereht erawy imfa yeah!!!\"\n            encode(\"hi\
    \ there, how are you? I'm fine, thank you!!!?\") == \"ehi ereht erawy imfa yeah!!!\"\
    \n            encode(\"hi there, how are you? I'm fine, thank you!!!??\") == \"\
    ehi ereht erawy imfa yeah!!!\"\n            encode(\"hi there, how are you? I'm\
    \ fine, thank you!!!???\") == \"ehi ereht erawy imfa yeah!!!\"\n            encode(\"\
    hi there, how are you? I'm fine, thank you!!!????\") == \"ehi ereht erawy imfa\
    \ yeah!!!\"\n            encode(\"hi there, how are you? I'm fine, thank you!!!?????\"\
    ) == \"ehi ereht erawy imfa yeah!!!\"\n            encode(\"hi there, how are\
    \ you? I'm fine, thank you!!!??????\") == \"ehi ereht erawy imfa yeah!!!\"\n \
    \           encode(\"hi there, how are you? I'm fine, thank you!!!???????\") ==\
    \ \"ehi ereht erawy imfa yeah!!!\"\n            encode(\"hi there, how are you?\
    \ I'm fine, thank you!!!????????\") == \"ehi ereht erawy imfa yeah!!!\"\n    \
    \        encode(\"hi there, how are you? I'm fine, thank you!!!?????????\") ==\
    \ \"ehi ereht erawy \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8_vlwi_f.py\"\
    , line 11\n    encode(\"hello\") == \"ehllo\"\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \n            encode(\"hello\")\n       \
    \     > \"h3ll0\"\n            \n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            \n            encode(\"hello\")\n            > \"h3ll0\"\n     \
    \       \n            encode(\"hello\")\n            > \"h3ll0\"\n           \
    \ \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n   \
    \         encode(\"hello\")\n            > \"h3ll0\"\n            \n         \
    \   encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr_xdlt8k.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"awesome\")\n            > \"ehwoe\"\
    \n            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode(\"awesome\")\n       \
    \     > \"ehwoe\"\n            encode(\"awesome\")\n            > \"ehwoe\"\n\
    \            encode(\"awesome\")\n            > \"ehwoe\"\n            encode(\"\
    awesome\")\n            > \"ehwoe\"\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmuwgybey.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>\"HLO WOL\"\n            \n     \
    \       encode(\"Hello World\")\n            \n            >>>\"HLO WOL\"\n  \
    \          \n            encode(\"Hello World\")\n            \n            >>>\"\
    HLO WOL\"\n            \n            encode(\"Hello World\")\n            \n \
    \           >>>\"HLO WOL\"\n            \n            encode(\"Hello World\")\n\
    \            \n            >>>\"HLO WOL\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>\"HLO WOL\"\n            \n     \
    \       encode(\"Hello World\")\n            \n            >>>\"HLO WOL\"\n  \
    \          \n            encode(\"Hello World\")\n            \n            >>>\"\
    HLO WOL\"\n            \n            encode(\"Hello World\")\n            \n \
    \           >>>\"HLO WOL\"\n            \n            encode(\"Hello World\")\n\
    \            \n            >>>\"HLO WOL\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>\"HLO WOL\"\n            \n     \
    \       encode(\"Hello World\")\n            \n            >>>\"HLO WOL\"\n  \
    \          \n            encode(\"Hello World\")\n            \n            >>>\"\
    HLO WOL\"\n            \n            encode(\"Hello World\")\n            \n \
    \           >>>\"HLO WOL\"\n            \n            encode(\"Hello World\")\n\
    \            \n            >>>\"HLO WOL\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>\"HLO WOL\"\n            \n     \
    \       encode(\"Hello World\")\n            \n            >>>\"HLO WOL\"\n  \
    \          \n            encode(\"Hello World\")\n            \n            >>>\"\
    HLO WOL\"\n            \n            encode(\"Hello World\")\n            \n \
    \           >>>\"HLO WOL\"\n            \n            encode(\"Hello World\")\n\
    \            \n            >>>\"HLO WOL\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>\"HLO WOL\"\n            \n     \
    \       encode(\"Hello World\")\n            \n            >>>\"HLO WOL\"\n  \
    \          \n            encode(\"Hello World\")\n            \n            >>>\"\
    HLO WOL\"\n            \n            encode(\"Hello World\")\n            \n \
    \           >>>\"HLO WOL\"\n            \n            encode(\"Hello World\")\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5icb6vwq.py\"\
    , line 12\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded = \"\
    \"\n    \n    for letter in message:\n        if letter in vowels:\n         \
    \   letter = letter.upper()\n            \n        encoded += letter\n       \
    \ \n    return encoded\n</cell>\n<cell>\nencode(\"hello\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a message and returns the number of vowels\
    \ \nin the message. \nAssume only letters. \nAssume only lower case letters. \n\
    Assume only upper case letters. \nAssume only letters a-z. \nAssume only letters\
    \ A-Z. \nAssume only letters a-z and A-Z. \nAssume only letters a-z, A-Z, and\
    \ 0-9. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters\
    \ a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces.\
    \ \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z,\
    \ A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume\
    \ only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9,\
    \ and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters\
    \ a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces.\
    \ \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z,\
    \ A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume\
    \ only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9,\
    \ and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters\
    \ a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces.\
    \ \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z,\
    \ A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume\
    \ only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z, A-Z, 0-9,\
    \ and spaces. \nAssume only letters a-z, A-Z, 0-9, and spaces. \nAssume only letters\
    \ a-z, A-Z, 0-9, and spaces. \nAssume only letters a-z\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9n_mzcjg.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"hello\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"helloo\")\n            print(message)\n            # oheeelllll\n \
    \           message = encode(\"hellooo\")\n            print(message)\n      \
    \      # oheeelllll\n            message = encode(\"hellooooo\")\n           \
    \ print(message)\n            # oheeelllll\n            message = encode(\"helloooooo\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"hellooooooo\")\n            print(message)\n            # oheeelllll\n\
    \            message = encode(\"helloooooooo\")\n            print(message)\n\
    \            # oheeelllll\n            message = encode(\"hellooooooooo\")\n \
    \           print(message)\n            # oheeelllll\n            message = encode(\"\
    helloooooooooo\")\n            print(message)\n            # oheeelllll\n    \
    \        message = encode(\"hellooooooooooo\")\n            print(message)\n \
    \           # oheeelllll\n            message = encode(\"helloooooooooooo\")\n\
    \            print(message)\n            # oheeelllll\n            message = encode(\"\
    hellooooooooooooo\")\n            print(message)\n            # oheeelllll\n \
    \           message = encode(\"helloooooooooooooo\")\n            print(message)\n\
    \            # oheeelllll\n            message = encode(\"hellooooooooooooooo\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"helloooooooooooooooo\")\n            print(message)\n            #\
    \ oheeelllll\n            message = encode(\"hellooooooooooooooooo\")\n      \
    \      print(message)\n            # oheeelllll\n            message = encode(\"\
    helloooooooooooooooooo\")\n            print(message)\n            # oheeelllll\n\
    \            message = encode(\"hellooooooooooooooooooo\")\n            print(message)\n\
    \            # oheeelllll\n            message = encode(\"helloooooooooooooooooooo\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"hellooooooooooooooooooooo\")\n            print(message)\n        \
    \    # oheeelllll\n            message = encode(\"helloooooooooooooooooooooo\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"hellooooooooooooooooooooooo\")\n            print(message)\n      \
    \      # oheeelllll\n            message = encode(\"helloooooooooooooooooooooooo\"\
    )\n            print(message)\n            # oheeelllll\n            message =\
    \ encode(\"hellooooooooooooooooooooooooo\")\n            print(message)\n    \
    \        # oheeelllll\n            message = encode(\"helloooooooooooooooooooooooooo\"\
    )\n            print(message)\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3_o6tqua.py\"\
    , line 11\n    message = encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded = \"\"\n\
    \    \n    for letter in message:\n        if letter in vowels:\n            encoded\
    \ = encoded + letter\n        else:\n            encoded = encoded + letter.upper()\n\
    \            \n    return encoded\n</cell>\n<cell>\nencode(message=\"hello\")\n\
    </cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0asa4ny4.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\
    \n            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6b2cy07n.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    message = message.lower()\n\
    \    \n    vowels = \"aeiou\"\n    \n    encoded = \"\"\n    \n    for letter\
    \ in message:\n        if letter in vowels:\n            letter = letter.upper()\n\
    \            \n        encoded = encoded + letter\n        \n    return encoded\n\
    </cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7a8u8ucf.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqlzw6mm4.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            > \"hEllo\"\n            \n            encode(\"hey\")\n\
    \            > \"hEy\"\n            \n            encode(\"hay\")\n          \
    \  > \"hAY\"\n            \n            encode(\"hay\")\n            > \"hAY\"\
    \n            \n            encode(\"hay\")\n            > \"hAY\"\n         \
    \   \n            encode(\"hay\")\n            > \"hAY\"\n            \n     \
    \       encode(\"hay\")\n            > \"hAY\"\n            \n            encode(\"\
    hay\")\n            > \"hAY\"\n            \n            encode(\"hay\")\n   \
    \         > \"hAY\"\n            \n            encode(\"hay\")\n            >\
    \ \"hAY\"\n            \n            encode(\"hay\")\n            > \"hAY\"\n\
    \            \n            encode(\"hay\")\n            > \"hAY\"\n          \
    \  \n            encode(\"hay\")\n            > \"hAY\"\n            \n      \
    \      encode(\"hay\")\n            > \"hAY\"\n            \n            encode(\"\
    hay\")\n            > \"hAY\"\n            \n            encode(\"hay\")\n   \
    \         > \"hAY\"\n            \n            encode(\"hay\")\n            >\
    \ \"hAY\"\n            \n            encode(\"hay\")\n            > \"hAY\"\n\
    \            \n            encode(\"hay\")\n            > \"hAY\"\n          \
    \  \n            encode(\"hay\")\n            > \"hAY\"\n            \n      \
    \      encode(\"hay\")\n            > \"hAY\"\n            \n            encode(\"\
    hay\")\n            > \"hAY\"\n            \n            encode(\"hay\")\n   \
    \         > \"hAY\"\n            \n            encode(\"hay\")\n            >\
    \ \"hAY\"\n            \n            encode(\"hay\")\n            > \"hAY\"\n\
    \            \n            encode(\"hay\")\n            > \"hAY\"\n          \
    \  \n            encode(\"hay\")\n            > \"hAY\"\n            \n      \
    \      encode(\"hay\")\n            > \"hAY\"\n            \n            encode(\"\
    hay\")\n            > \"hAY\"\n            \n            encode(\"hay\")\n   \
    \         > \"hAY\"\n            \n            encode(\"hay\")\n            >\
    \ \"hAY\"\n            \n            encode(\"hay\")\n            > \"hAY\"\n\
    \            \n            encode(\"hay\")\n            > \"hAY\"\n          \
    \  \n            encode(\"hay\")\n            > \"hAY\"\n            \n      \
    \      \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcdkq3p12.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He lll oW rld\"\n            \n            encode(\"Hello World\"\
    )\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa28rnq2u.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    ) \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n      \
    \      >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"\
    Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n\
    \            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n         \
    \   encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"\
    Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\"\
    ) \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n      \
    \      >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"\
    Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n\
    \            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n         \
    \   encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"\
    Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\"\
    ) \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n      \
    \      >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"\
    Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n\
    \            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n         \
    \   encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"\
    Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\"\
    ) \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n      \
    \      >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"\
    Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n\
    \            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n         \
    \   encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"\
    Hello World\") \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\"\
    ) \n            >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n      \
    \      >> \"Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"\
    Hllo Wrd\"\n            encode(\"Hello World\") \n            >> \"Hllo Wrd\"\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdcyoe4zu.py\"\
    , line 11\n    encode(\"Hello World\") \nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqzvm0s03.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrss\"\n            \n           \
    \ encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\n            \n\
    \            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\n   \
    \         \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9tkdxont.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"AEIOUaeiou\"\n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda i: vowels[vowels.index(i)-2])\n    \n    return message\n</cell>\n<cell>\n\
    encode(encode(\"Hello World\"))\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpelhwkbpa.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hey\")\n            > \"hEY\"\n\
    \            encode(\"hi\")\n            > \"hI\"\n            encode(\"ho\")\n\
    \            > \"hO\"\n            encode(\"wow\")\n            > \"wOW\"\n  \
    \          encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"wOW\"\n            encode(\"wow\")\n            > \"wOW\"\n\
    \            encode(\"wow\")\n            > \"wOW\"\n            encode(\"wow\"\
    )\n            > \"\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0k_zvsjb.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \"\"\"\n    \n    \n    \n    \"\
    \"\"\n    \n    \n    \n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqsekmeqe.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpog3dm7iz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    message = message.lower()\n\
    \    \n    vowels = \"aeiou\"\n    \n    letters = [letter for letter in message\
    \ if letter in vowels]\n    \n    letters_2 = []\n    \n    for letter in letters:\n\
    \        letter_2 = letters[letters.index(letter)+1]\n        letters_2.append(letter_2)\n\
    \    \n    letters_2.reverse()\n    \n    letters_3 = []\n    \n    for letter\
    \ in letters_2:\n        letters_3.append(letters[letters.index(letter)-1])\n\
    \    \n    letters_3.reverse()\n    \n    letters_4 = []\n    \n    for letter\
    \ in letters_3:\n        letters_4.append(letters[letters.index(letter)-2])\n\
    \    \n    letters_4.reverse()\n    \n    letters_5 = []\n    \n    for letter\
    \ in letters_4:\n        letters_5.append(letters[letters.index(letter)-3])\n\
    \    \n    letters_5.reverse()\n    \n    letters_6 = []\n    \n    for letter\
    \ in letters_5:\n        letters_6.append(letters[letters.index(letter)-4])\n\
    \    \n    letters_6.reverse()\n    \n    letters_7 = []\n    \n    for letter\
    \ in letters_6:\n        letters_7.append(letters[letters.index(letter)-5])\n\
    \    \n    letters_7.reverse()\n    \n    letters_8 = []\n    \n    for letter\
    \ in letters_7:\n        letters_8.append(letters[letters.index(letter)-6])\n\
    \    \n    letters_8.reverse()\n    \n    letters_9 = []\n    \n    for letter\
    \ in letters_8:\n        letters_9.append(letters[letters.index(letter)-7])\n\
    \    \n    letters_9.reverse()\n    \n    letters_10 = []\n    \n    for letter\
    \ in letters_9:\n        letters_10.append(letters[letters.index(letter)-8])\n\
    \    \n    letters_10.reverse()\n    \n    letters_11 = []\n    \n    for letter\
    \ in letters_10:\n        letters_11.append(letters[letters.index(letter)-9])\n\
    \    \n    letters_11.reverse()\n    \n    letters_12 = []\n    \n    for letter\
    \ in letters_11:\n        letters_12.append(letters[letters.index(letter)-10])\n\
    \    \n    letters_12.reverse()\n    \n    letters_13 = []\n    \n    for letter\
    \ in letters_12:\n        letter\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8k226_p_.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hello\")\n            > \"hEllO\"\
    \n            encode(\"hello\")\n            > \"hElLo\"\n            encode(\"\
    hello\")\n            > \"hEllo\"\n            encode(\"hello\")\n           \
    \ > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\n      \
    \      encode(\"hello\")\n            > \"hEllo\"\n            encode(\"hello\"\
    )\n            > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\
    \n            encode(\"hello\")\n            > \"hEllo\"\n            encode(\"\
    hello\")\n            > \"hEllo\"\n            encode(\"hello\")\n           \
    \ > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\n      \
    \      encode(\"hello\")\n            > \"hEllo\"\n            encode(\"hello\"\
    )\n            > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\
    \n            encode(\"hello\")\n            > \"hEllo\"\n            encode(\"\
    hello\")\n            > \"hEllo\"\n            encode(\"hello\")\n           \
    \ > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\n      \
    \      encode(\"hello\")\n            > \"hEllo\"\n            encode(\"hello\"\
    )\n            > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\
    \n            encode(\"hello\")\n            > \"hEllo\"\n            encode(\"\
    hello\")\n            > \"hEllo\"\n            encode(\"hello\")\n           \
    \ > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\n      \
    \      encode(\"hello\")\n            > \"hEllo\"\n            encode(\"hello\"\
    )\n            > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\
    \n            encode(\"hello\")\n            > \"hEllo\"\n            encode(\"\
    hello\")\n            > \"hEllo\"\n            encode(\"hello\")\n           \
    \ > \"hEllo\"\n            encode(\"hello\")\n            > \"hEllo\"\n      \
    \      encode(\"hello\")\n            > \"hEllo\"\n            encode(\"hello\"\
    )\n            > \"hEllo\"\n            encode(\"hello\")\n            \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ct_aed1.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleello\"\n            encode(\"hi\")\n            > \"hiei\"\n\
    \            encode(\"hey\")\n            > \"heyay\"\n            encode(\"hi\"\
    )\n            > \"hiei\"\n            encode(\"h\")\n            > \"hay\"\n\
    \            encode(\"hey\")\n            > \"heyay\"\n            encode(\"hay\"\
    )\n            > \"hayay\"\n            encode(\"hay\")\n            > \"hayay\"\
    \n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            > \"\
    hayay\"\n            encode(\"hay\")\n            > \"hayay\"\n            encode(\"\
    hay\")\n            > \"hayay\"\n            encode(\"hay\")\n            \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqa3r5yur.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplujptf1c.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hELLO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"hEllO\"\n\ndef check(candidate):\n  \
    \  assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnowjx_g6.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"hELLO wORLD\"\n            \"\"\"\n    \n    Args:\n     \
    \   message (str): the message to be encoded\n    \n    Returns:\n        str:\
    \ the encoded message\n    \"\"\"\n    \n    message = message.lower()\n    \n\
    \    vowels = \"aeiou\"\n    \n    message = message.replace(vowels, \"\")\n \
    \   \n    message = message.replace(\" \", \"\")\n    \n    message = message.replace(\"\
    h\", \"a\")\n    \n    message = message.replace(\"e\", \"i\")\n    \n    message\
    \ = message.replace(\"l\", \"o\")\n    \n    message = message.replace(\"o\",\
    \ \"u\")\n    \n    message = message.replace(\"w\", \"u\")\n    \n    message\
    \ = message.replace(\"d\", \"i\")\n    \n    message = message.replace(\"r\",\
    \ \"u\")\n    \n    message = message.replace(\"s\", \"u\")\n    \n    message\
    \ = message.replace(\"t\", \"u\")\n    \n    message = message.replace(\"n\",\
    \ \"u\")\n    \n    message = message.replace(\"m\", \"u\")\n    \n    message\
    \ = message.replace(\"i\", \"u\")\n    \n    message = message.replace(\"v\",\
    \ \"u\")\n    \n    message = message.replace(\"g\", \"u\")\n    \n    message\
    \ = message.replace(\"f\", \"u\")\n    \n    message = message.replace(\"z\",\
    \ \"u\")\n    \n    message = message.replace(\"y\", \"u\")\n    \n    message\
    \ = message.replace(\"b\", \"u\")\n    \n    message = message.replace(\"k\",\
    \ \"u\")\n    \n    message = message.replace(\"j\", \"u\")\n    \n    message\
    \ = message.replace(\"q\", \"u\")\n    \n    message = message.replace(\"x\",\
    \ \"u\")\n    \n    message = message.replace(\"z\", \"u\")\n    \n    message\
    \ = message.replace(\"x\", \"u\")\n    \n    message = message.replace(\"z\",\
    \ \"u\")\n    \n    message = message.replace(\"x\", \"u\")\n    \n    message\
    \ = message.replace(\"z\", \"u\")\n    \n    message = message.replace(\"x\",\
    \ \"u\")\n    \n    message = message.replace(\"z\", \"u\")\n    \n    message\
    \ = message.replace(\"x\", \"u\")\n    \n    message = message.replace(\"z\",\
    \ \"u\")\n    \n    message = message.replace(\"x\", \"u\")\n    \n    message\
    \ = message.replace(\"z\", \"u\")\n    \n    message = message.replace(\"x\",\
    \ \"u\")\n    \n    message = message.replace(\"z\", \"u\")\n    \n    message\
    \ = message.replace(\"x\", \"u\")\n    \n    message = message.replace(\"z\",\
    \ \"u\")\n    \n    message = message.replace(\"x\", \"u\")\n    \n    message\
    \ = message.replace(\"z\", \"u\")\n    \n    message = message.replace(\"x\",\
    \ \"u\")\n    \n    message = message.replace(\"z\", \"\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplm7_f25e.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"I\
    \ love you\")\n            print(message)\n            >> I lv you\n         \
    \   \n            message = encode(\"I love you\")\n            print(message)\n\
    \            >> I lv uoy\n            \n            message = encode(\"I love\
    \ you\")\n            print(message)\n            >> I lv uoy\n            \n\
    \            message = encode(\"I love you\")\n            print(message)\n  \
    \          >> I lv uoy\n            \n            message = encode(\"I love you\"\
    )\n            print(message)\n            >> I lv uoy\n            \n       \
    \     message = encode(\"I love you\")\n            print(message)\n         \
    \   >> I lv uoy\n            \n            message = encode(\"I love you\")\n\
    \            print(message)\n            >> I lv uoy\n            \n         \
    \   message = encode(\"I love you\")\n            print(message)\n           \
    \ >> I lv uoy\n            \n            message = encode(\"I love you\")\n  \
    \          print(message)\n            >> I lv uoy\n            \n           \
    \ message = encode(\"I love you\")\n            print(message)\n            >>\
    \ I lv uoy\n            \n            message = encode(\"I love you\")\n     \
    \       print(message)\n            >> I lv uoy\n            \n            message\
    \ = encode(\"I love you\")\n            print(message)\n            >> I lv uoy\n\
    \            \n            message = encode(\"I love you\")\n            print(message)\n\
    \            >> I lv uoy\n            \n            message = encode(\"I love\
    \ you\")\n            print(message)\n            >> I lv uoy\n            \n\
    \            message = encode(\"I love you\")\n            print(message)\n  \
    \          >> I lv uoy\n            \n            message = encode(\"I love you\"\
    )\n            print(message)\n            >> I lv uoy\n            \n       \
    \     message = encode(\"I love you\")\n            print(message)\n         \
    \   >> I lv uoy\n            \n            message = encode(\"I love you\")\n\
    \            print(message)\n            >> I lv uoy\n            \n         \
    \   message = encode(\"I love you\")\n            print(message)\n           \
    \ >> I lv uoy\n            \n            message = encode(\"I love you\")\n  \
    \          print(message)\n            >> I lv uoy\n            \n           \
    \ message = encode(\"I love you\")\n            print(message)\n            >>\
    \ I lv uoy\n            \n            message = encode(\"I love you\")\n     \
    \       print(message)\n            >> I lv uoy\n            \n            message\
    \ = encode(\"I love you\")\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_wv2760q.py\"\
    , line 11\n    message = encode(\"I love you\")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"hELLO\"\n            \n            encode(\"\
    HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n            \n   \
    \         encode(\"HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n\
    \            \n            encode(\"HelloWorld\")\n            \n            >>>\"\
    hELLOWORLD\"\n            \n            encode(\"HelloWorld\")\n            \n\
    \            >>>\"hELLOWORLD\"\n            \n            encode(\"HelloWorld\"\
    )\n            \n            >>>\"hELLOWORLD\"\n            \n            encode(\"\
    HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n            \n   \
    \         encode(\"HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n\
    \            \n            encode(\"HelloWorld\")\n            \n            >>>\"\
    hELLOWORLD\"\n            \n            encode(\"HelloWorld\")\n            \n\
    \            >>>\"hELLOWORLD\"\n            \n            encode(\"HelloWorld\"\
    )\n            \n            >>>\"hELLOWORLD\"\n            \n            encode(\"\
    HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n            \n   \
    \         encode(\"HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n\
    \            \n            encode(\"HelloWorld\")\n            \n            >>>\"\
    hELLOWORLD\"\n            \n            encode(\"HelloWorld\")\n            \n\
    \            >>>\"hELLOWORLD\"\n            \n            encode(\"HelloWorld\"\
    )\n            \n            >>>\"hELLOWORLD\"\n            \n            encode(\"\
    HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n            \n   \
    \         encode(\"HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n\
    \            \n            encode(\"HelloWorld\")\n            \n            >>>\"\
    hELLOWORLD\"\n            \n            encode(\"HelloWorld\")\n            \n\
    \            >>>\"hELLOWORLD\"\n            \n            encode(\"HelloWorld\"\
    )\n            \n            >>>\"hELLOWORLD\"\n            \n            encode(\"\
    HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n            \n   \
    \         encode(\"HelloWorld\")\n            \n            >>>\"hELLOWORLD\"\n\
    \            \n            encode(\"HelloWorld\")\n            \n            >>>\"\
    hELLOWORLD\"\n            \n            encode(\"HelloWorld\")\n            \n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6gf05jr2.py\"\
    , line 12\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hi there\")\n            > \"ehi\
    \ ereht\"\n            encode(\"hi there, how are you?\")\n            > \"ehi\
    \ ereht, ehi eruoy\"\n            encode(\"hi there, how are you? I'm fine.\"\
    )\n            > \"ehi ereht, ehi eruoy ehi eruoy ehi eruoy\"\n            encode(\"\
    hi there, how are you? I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp71c40rug.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleello\"\n            encode(\"hello\")\n            > \"heellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode(\"hello\")\n       \
    \     > \"heeellllo\"\n            encode(\"hello\")\n            > \"heeellllo\"\
    \n            encode(\"hello\")\n            > \"heeellllo\"\n            encode(\"\
    hello\")\n            > \"heeellllo\"\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpibtw1rm6.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprrr8rkhh.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"Hleellllooorrrssss\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn\
    \ xofp umps ovr thyllzydog\"\n            \n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn xofp umps ovr\
    \ thyllzydog\"\n            \n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n\
    \            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n            \n  \
    \          encode(\"The quick brown fox jumps over the lazy dog\")\n         \
    \   >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn\
    \ xofp umps ovr thyllzydog\"\n            \n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn xofp umps ovr\
    \ thyllzydog\"\n            \n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n\
    \            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n            \n  \
    \          encode(\"The quick brown fox jumps over the lazy dog\")\n         \
    \   >> \"Thyq uckbrwn xofp umps ovr thyllzydog\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn\
    \ xofp umps ovr thyllzydog\"\n            \n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            >> \"Thyq uckbrwn x\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphc86i1zu.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He \ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmph92l2fwb.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleo\"\n            \n            encode(\"\
    Hello\")\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n  \
    \  assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzeei3zjv.py\"\
    , line 12\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I love you\"\
    )\n            > \"I lv you\"\n            \n            encode(\"I love you too\"\
    )\n            > \"I lv you to\"\n            \n            encode(\"I love you\
    \ and you\")\n            > \"I lv you and y\"\n            \n            encode(\"\
    I love you and you too\")\n            > \"I lv you and y to\"\n            \n\
    \            encode(\"I love you and you and you\")\n            > \"I lv you\
    \ and y an y\"\n            \n            encode(\"I love you and you and you\
    \ too\")\n            > \"I lv you and y an y to\"\n            \n           \
    \ encode(\"I love you and you and you and you\")\n            > \"I lv you and\
    \ y an y an y\"\n            \n            encode(\"I love you and you and you\
    \ and you too\")\n            > \"I lv you and y an y an y to\"\n            \n\
    \            encode(\"I love you and you and you and you and you\")\n        \
    \    > \"I lv you and y an y an y an y\"\n            \n            encode(\"\
    I love you and you and you and you and you too\")\n            > \"I lv you and\
    \ y an y an y an y to\"\n            \n            encode(\"I love you and you\
    \ and you and you and you and you\")\n            > \"I lv you and y an y an y\
    \ an y an y\"\n            \n            encode(\"I love you and you and you and\
    \ you and you and you too\")\n            > \"I lv you and y an y an y an y an\
    \ y to\"\n            \n            encode(\"I love you and you and you and you\
    \ and you and you and you\")\n            > \"I lv you and y an y an y an y an\
    \ y an y\"\n            \n            encode(\"I love you and you and you and\
    \ you and you and you and you too\")\n            > \"I lv you and y an y an y\
    \ an y an y an y to\"\n            \n            encode(\"I love you and you and\
    \ you and you and you and you and you and you\")\n            > \"I lv you and\
    \ y an y an y an y an y an y an y\"\n            \n            encode(\"I love\
    \ you and you and you and you and you and you and you and you too\")\n       \
    \     \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeq4odsnq.py\"\
    , line 11\n    encode(\"I love you\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \"\"\"\n    \"\"\"\n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3aj5lxx4.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hi\")\n            > \"hiii\"\n            encode(\"ho\"\
    )\n            > \"hooo\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_10gou2o.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3__g7iqq.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\"hleelllloo\"\n            \n            encode(\"hello\")\n \
    \           >>>\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6zyd8_o_.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y1\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpto49rnuo.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \n            Enter a message: hello\n            hey\n         \
    \   \n            Enter a message: hello\n            hey\n            \n    \
    \        Enter a message: hello\n            hey\n            \n            Enter\
    \ a message: hello\n            hey\n            \n            Enter a message:\
    \ hello\n            hey\n            \n            Enter a message: hello\n \
    \           hey\n            \n            Enter a message: hello\n          \
    \  hey\n            \n            Enter a message: hello\n            hey\n  \
    \          \n            Enter a message: hello\n            hey\n           \
    \ \n            Enter a message: hello\n            hey\n            \n      \
    \      Enter a message: hello\n            hey\n            \n            Enter\
    \ a message: hello\n            hey\n            \n            Enter a message:\
    \ hello\n            hey\n            \n            Enter a message: hello\n \
    \           hey\n            \n            Enter a message: hello\n          \
    \  hey\n            \n            Enter a message: hello\n            hey\n  \
    \          \n            Enter a message: hello\n            hey\n           \
    \ \n            Enter a message: hello\n            hey\n            \n      \
    \      Enter a message: hello\n            hey\n            \n            Enter\
    \ a message: hello\n            hey\n            \n            Enter a message:\
    \ hello\n            hey\n            \n            Enter a message: hello\n \
    \           hey\n            \n            Enter a message: hello\n          \
    \  hey\n            \n            Enter a message: hello\n            hey\n  \
    \          \n            Enter a message: hello\n            hey\n           \
    \ \n            Enter a message: hello\n            hey\n            \n      \
    \      Enter a message: hello\n            hey\n            \n            Enter\
    \ a message: hello\n            hey\n            \n            Enter a message:\
    \ hello\n            hey\n            \n            Enter a message: hello\n \
    \           hey\n            \n            Enter a message: hello\n          \
    \  hey\n            \n            Enter a message: hello\n            hey\n  \
    \          \n            Enter a message: hello\n            hey\n           \
    \ \n            Enter a message: hello\n            hey\n            \n      \
    \      Enter a message: hello\n            hey\n            \n            Enter\
    \ a message: hello\n            hey\n            \n            Enter a message:\
    \ hello\n            hey\n            \n            Enter a message: hello\n \
    \           hey\n            \n            Enter a message: hello\n          \
    \  hey\n            \n            Enter a message: hello\n            hey\n  \
    \          \n            Enter a message: hello\n            hey\n           \
    \ \n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprhq50w3s.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > 'Hleeooorlldd'\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded = \"\
    \"\n    \n    for letter in message:\n        if letter in vowels:\n         \
    \   letter_index = vowels.index(letter)\n            encoded += letters[letter_index\
    \ + 2]\n        else:\n            encoded += letter\n    \n    return encoded\n\
    </cell>\n<cell>\nencode(message=\"Hello World\")\n</cell>\n<text>\nProblem 3\n\
    Write a function that takes a message and returns the number of vowels \nin the\
    \ message. \nAssume only letters. \nAssume only lowercase letters. \nAssume only\
    \ spaces. \nAssume only uppercase letters. \nAssume only numbers. \nAssume only\
    \ punctuation. \nAssume only spaces. \nAssume only uppercase letters. \nAssume\
    \ only letters. \nAssume only lowercase letters. \nAssume only spaces. \nAssume\
    \ only uppercase letters. \nAssume only letters. \nAssume only lowercase letters.\
    \ \nAssume only spaces. \nAssume only uppercase letters. \nAssume only letters.\
    \ \nAssume only lowercase letters. \nAssume only spaces. \nAssume only uppercase\
    \ letters. \nAssume only letters. \nAssume only lowercase letters. \nAssume only\
    \ spaces. \nAssume only uppercase letters. \nAssume only letters. \nAssume only\
    \ lowercase letters. \nAssume only spaces. \nAssume only uppercase letters. \n\
    Assume only letters. \nAssume only lowercase letters. \nAssume only spaces. \n\
    Assume only uppercase letters. \nAssume only letters. \nAssume only lowercase\
    \ letters. \nAssume only spaces. \nAssume only uppercase letters. \nAssume only\
    \ letters. \nAssume only lowercase letters. \nAssume only spaces. \nAssume only\
    \ uppercase letters. \nAssume only letters. \nAssume only lowercase letters. \n\
    Assume only spaces. \nAssume only uppercase letters. \nAssume only letters. \n\
    Assume only lowercase letters. \nAssume only spaces. \nAssume only uppercase letters.\
    \ \nAssume only letters. \nAssume only lowercase letters. \nAssume only spaces.\
    \ \nAssume only uppercase letters. \nAssume only letters. \nAssume only lowercase\
    \ letters. \nAssume only spaces. \nAssume only uppercase letters. \nAssume only\
    \ letters. \nAssume only lowercase letters. \nAssume only spaces. \nAssume only\
    \ uppercase letters. \nAssume only letters. \nAssume only lowercase letters. \n\
    Assume only spaces. \nAssume only uppercase letter\ndef check(candidate):\n  \
    \  assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppwrhx3pb.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hellooo\")\n            > \"hELLOO\"\
    \n            encode(\"helloooo\")\n            > \"hELLOOO\"\n            encode(\"\
    hellooooo\")\n            > \"hELLOOOO\"\n            encode(\"helloooooo\")\n\
    \            > \"hELLOOOOO\"\n            encode(\"hellooooooo\")\n          \
    \  > \"hELLOOOOOO\"\n            encode(\"hellooooooooo\")\n            > \"hELLOOOOOOO\"\
    \n            encode(\"helloooooooooo\")\n            > \"hELLOOOOOOOO\"\n   \
    \         encode(\"hellooooooooooo\")\n            > \"hELLOOOOOOOOO\"\n     \
    \       encode(\"hellooooooooooooo\")\n            > \"hELLOOOOOOOOOO\"\n    \
    \        encode(\"helloooooooooooooo\")\n            > \"hELLOOOOOOOOOOO\"\n \
    \           encode(\"hellooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOO\"\
    \n            encode(\"helloooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"helloooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"helloooooooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooooooooooo\")\n            > \"hELLOOOOOOOOOOOOOOOOOOOOOOOO\"\
    \n            encode(\"hellooooooooooooooooooooooooooooo\")\n            > \"\
    hELLOOOOO\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n   \
    \ assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpx_l9s5.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\
    \ World\")\n            print(message) # Hllo Wrdl\n            \"\"\"\n    \"\
    \"\"\n    \n    message = message.lower()\n    \n    vowels = \"aeiou\"\n    \n\
    \    message = message.replace(vowels, lambda m: vowels[m.lower()])\n    \n  \
    \  message = message.replace(\"a\", \"e\")\n    message = message.replace(\"e\"\
    , \"a\")\n    message = message.replace(\"i\", \"o\")\n    message = message.replace(\"\
    o\", \"i\")\n    message = message.replace(\"u\", \"u\")\n    message = message.replace(\"\
    u\", \"y\")\n    message = message.replace(\"y\", \"u\")\n    \n    return message\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvie7957d.py\"\
    , line 11\n    message = encode(\"Hello World\")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded_message =\
    \ \"\"\n    \n    for letter in message:\n        if letter in vowels:\n     \
    \       encoded_message += letter\n        else:\n            encoded_message\
    \ += letter.upper()\n            \n    return encoded_message\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppcg9gkyi.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n  \
    \  assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu7ym105w.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \"\"\"\n            \n            \n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpulmeodlx.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hi there\")\n            > \"hi threel\"\n            encode(\"\
    hi there, how are you?\")\n            > \"hi threell hoy arell\"\n          \
    \  encode(\"hi there, how are you? I'm fine\")\n            > \"hi threell hoy\
    \ arell im fel\"\n            encode(\"hi there, how are you? I'm fine. How are\
    \ you?\")\n            > \"hi threell hoy arell im fel oy arell\"\n          \
    \  encode(\"hi there, how are you? I'm fine. How are you? I'm fine\")\n      \
    \      > \"hi threell hoy arell im fel oy arell im fel\"\n            encode(\"\
    hi there, how are you? I'm fine. How are you? I'm fine. I'm fine\")\n        \
    \    > \"hi threell hoy arell im fel oy arell im fel oy arell\"\n            encode(\"\
    hi there, how are you? I'm fine. How are you? I'm fine. I'm fine. I'm fine\")\n\
    \            > \"hi threell hoy arell im fel oy arell im fel oy arell im fel oy\
    \ arell\"\n            encode(\"hi there, how are you? I'm fine. How are you?\
    \ I'm fine. I'm fine. I'm fine. I'm fine\")\n            > \"hi threell hoy arell\
    \ im fel oy arell im fel oy arell im fel oy arell im fel oy arell\"\n        \
    \    encode(\"hi there, how are you? I'm fine. How are you? I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine\")\n            > \"hi threell hoy arell im fel\
    \ oy arell im fel oy arell im fel oy arell im fel oy arell im fel oy arell\"\n\
    \            encode(\"hi there, how are you? I'm fine. How are you? I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine\")\n            > \"hi threell\
    \ hoy arell im fel \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppoozhy_l.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"HLO WOL\"\n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdwrfeyw0.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded = \"\"\n\
    \    \n    for letter in message:\n        if letter in vowels:\n            encoded\
    \ += letter\n        else:\n            encoded += letter.upper()\n          \
    \  \n    return encoded\n</cell>\n<cell>\nencode(encode(\"hello\"))\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf35gdrhs.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y0\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"hey\"\
    )\n            > \"h3y0\"\n            encode(\"hi there\")\n            > \"\
    h1i th3er0\"\n            encode(\"hi there\")\n            > \"h1i th3er0\"\n\
    \            encode(\"hi there\")\n            > \"h1i th3er0\"\n            encode(\"\
    hi there\")\n            > \"h1i th3er0\"\n            encode(\"hi there\")\n\
    \            > \"h1i th3er0\"\n            encode(\"hi there\")\n            >\
    \ \"h1i th3er0\"\n            encode(\"hi there\")\n            > \"h1i th3er0\"\
    \n            encode(\"hi there\")\n            > \"h1i th3er0\"\n           \
    \ encode(\"hi there\")\n            > \"h1i th3er0\"\n            encode(\"hi\
    \ there\")\n            > \"h1i th3er0\"\n            encode(\"hi there\")\n \
    \           > \"h1i th3er0\"\n            encode(\"hi there\")\n            >\
    \ \"h1i th3er0\"\n            encode(\"hi there\")\n            > \"h1i th3er0\"\
    \n            encode(\"hi there\")\n            > \"h1i th3er0\"\n           \
    \ encode(\"hi there\")\n            > \"h1i th3er0\"\n            encode(\"hi\
    \ there\")\n            > \"h1i th3er0\"\n            encode(\"hi there\")\n \
    \           > \"h1i th3er0\"\n            encode(\"hi there\")\n            >\
    \ \"h1i th3er0\"\n            encode(\"hi there\")\n            > \"h1i th3er0\"\
    \n            encode(\"hi there\")\n            > \"h1i th3er0\"\n           \
    \ encode(\"hi there\")\n            > \"h1i th3er0\"\n            encode(\"hi\
    \ there\")\n            > \"h1i th3er0\"\n            encode(\"hi there\")\n \
    \           > \"h1i th3er0\"\n            encode(\"hi there\")\n            >\
    \ \"h1i th3er0\"\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc5xevdpf.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y2\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"h\"\
    )\n            > \"h0\"\n            encode(\"hey\")\n            > \"h3y2\"\n\
    \            encode(\"hey you\")\n            > \"h3y2 u0u\"\n            encode(\"\
    hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you\
    \ guys\")\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\"\
    )\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\n  \
    \          > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\n      \
    \      > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\n          \
    \  > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\n            > \"\
    h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\n            > \"h3y2 u0u\
    \ g0g1y\"\n            encode(\"hey you guys\")\n            > \"h3y2 u0u g0g1y\"\
    \n            encode(\"hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n   \
    \         encode(\"hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n       \
    \     encode(\"hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n           \
    \ encode(\"hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n            encode(\"\
    hey you guys\")\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you\
    \ guys\")\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\"\
    )\n            > \"h3y2 u0u g0g1y\"\n            encode(\"hey you guys\")\ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpel5f1yon.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsn7v9dkr.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > 'Hleo WoRld'\n            \n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            > 'Thyq Brown fOx jmps ovR thyD\
    \ gOv'\n            \n            encode(\"The quick brown fox jumps over the\
    \ lazy dog\")\n            > 'Thyq Brown fOx jmps ovR thyD gOv'\n            \n\
    \            encode(\"The quick brown fox jumps over the lazy dog\")\n       \
    \     > 'Thyq Brown fOx jmps ovR thyD gOv'\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            > 'Thyq Brown fOx\
    \ jmps ovR thyD gOv'\n            \n            encode(\"The quick brown fox jumps\
    \ over the lazy dog\")\n            > 'Thyq Brown fOx jmps ovR thyD gOv'\n   \
    \         \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            > 'Thyq Brown fOx jmps ovR thyD gOv'\n            \n          \
    \  encode(\"The quick brown fox jumps over the lazy dog\")\n            > 'Thyq\
    \ Brown fOx jmps ovR thyD gOv'\n            \n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            > 'Thyq Brown fOx jmps ovR thyD\
    \ gOv'\n            \n            encode(\"The quick brown fox jumps over the\
    \ lazy dog\")\n            > 'Thyq Brown fOx jmps ovR thyD gOv'\n            \n\
    \            encode(\"The quick brown fox jumps over the lazy dog\")\n       \
    \     > 'Thyq Brown fOx jmps ovR thyD gOv'\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            > 'Thyq Brown fOx\
    \ jmps ovR thyD gOv'\n            \n            encode(\"The quick brown fox jumps\
    \ over the lazy dog\")\n            > '\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpz_w130bc.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hello\")\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n  \
    \  assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplbpgvm7m.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\"\
    )\n            print(message)\n            # \"Hlee\"\n            \"\"\"\n  \
    \  \n    Args:\n        message (str): the message to be encoded\n    \n    Returns:\n\
    \        str: the encoded message\n    \"\"\"\n    \n    message = message.lower()\n\
    \    \n    vowels = \"aeiou\"\n    \n    encoded = \"\"\n    \n    for letter\
    \ in message:\n        if letter in vowels:\n            encoded += letter\n \
    \       else:\n            encoded += letter.upper()\n            \n    return\
    \ encoded\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaa7ph2fk.py\"\
    , line 11\n    message = encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\
    \n            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprbff3zsq.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           > \"eHll\"\n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\
    \n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n          \
    \  encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"\
    HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\"\
    )\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n         \
    \   > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\
    \n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n          \
    \  encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"\
    HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\"\
    )\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n         \
    \   > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\
    \n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n          \
    \  encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"\
    HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\"\
    )\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n         \
    \   > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\
    \n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n          \
    \  encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"\
    HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\"\
    )\n            > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n         \
    \   > \"eHllWoRlD\"\n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\
    \n            encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n          \
    \  encode(\"HelloWorld\")\n            > \"eHllWoRlD\"\n            encode(\"\
    HelloWorld\")\n            > \"eHllWo\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_holishw.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"ehllo\"\n            encode(\"Hello World\")\n            >>>\"\
    eHllo Wrd\"\n            encode(\"Hello World!\")\n            >>>\"eHllo Wrd!\"\
    \n            encode(\"Hello World!!\")\n            >>>\"eHllo Wrd!!\"\n    \
    \        encode(\"Hello World!!!\")\n            >>>\"eHllo Wrd!!!\"\n       \
    \     encode(\"Hello World!!!!\")\n            >>>\"eHllo Wrd!!!!\"\n        \
    \    encode(\"Hello World!!!!!!\")\n            >>>\"eHllo Wrd!!!!!!\"\n     \
    \       encode(\"Hello World!!!!!!!\")\n            >>>\"eHllo Wrd!!!!!!!\"\n\
    \            encode(\"Hello World!!!!!!!\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!123\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1234\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12345\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!123456\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1234567\") \n            >>>\"eHllo Wrd!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12345678\") \n            >>>\"eHllo\
    \ Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!123456789\") \n       \
    \     >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!1234567890\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!12345678901\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!123456789012\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!1234567890123\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!12345678901234\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello World!!!!!!!123456789012345\"\
    ) \n            >>>\"eHllo Wrd!!!!!!!\"\n            encode(\"Hello \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp14gckfrl.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h0i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hay\")\n            > \"h1ay\"\n\
    \            encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"\
    haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\")\n          \
    \  > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\n   \
    \         encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\"\
    )\n            > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\
    \n            encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"\
    haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\")\n          \
    \  > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\n   \
    \         encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\"\
    )\n            > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\
    \n            encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"\
    haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\")\n          \
    \  > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\n   \
    \         encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\"\
    )\n            > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\
    \n            encode(\"haylo\")\n            > \"h1ayl0\"\n            encode(\"\
    haylo\")\n            > \"h1ayl0\"\n            encode(\"haylo\")\n          \
    \  > \"h1ayl0\"\n            encode(\"haylo\")\n            > \"h1ayl0\"\n   \
    \         encode(\"haylo\")\n            > \"h1ayl0\"\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpri2sy01h.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3lly\"\n\
    \            encode(\"hi\")\n            > \"h4i0\"\n            encode(\"ho\"\
    )\n            > \"h4o0\"\n            encode(\"hai\")\n            > \"h4ai0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hey\")\n            > \"h3lly\"\n            encode(\"hi\")\n            > \"\
    h4i0\"\n            encode(\"ho\")\n            > \"h4o0\"\n            encode(\"\
    hai\")\n            > \"h4ai0\"\n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            encode(\"hey\")\n            > \"h3lly\"\n          \
    \  encode(\"hi\")\n            > \"h4i0\"\n            encode(\"ho\")\n      \
    \      > \"h4o0\"\n            encode(\"hai\")\n            > \"h4ai0\"\n    \
    \        encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hey\"\
    )\n            > \"h3lly\"\n            encode(\"hi\")\n            > \"h4i0\"\
    \n            encode(\"ho\")\n            > \"h4o0\"\n            encode(\"hai\"\
    )\n            > \"h4ai0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hey\")\n            > \"h3lly\"\n            encode(\"\
    hi\")\n            > \"h4i0\"\n            encode(\"ho\")\n            > \"h4o0\"\
    \n            encode(\"hai\")\n            > \"h4ai0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hey\")\n            >\
    \ \"h3lly\"\n            encode(\"hi\")\n            > \"h4i0\"\n            encode(\"\
    ho\")\n            > \"h4o0\"\n            encode(\"hai\")\n            > \"h4ai0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hey\")\n            > \"h3lly\"\n            encode(\"hi\")\n            > \"\
    h4i0\"\n            encode(\"ho\")\n            > \"h4o0\"\n            encode(\"\
    hai\")\n            > \"h4ai0\"\n            encode(\"hello\")\n            >\
    \ \"h3ll0\"\n            \ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpomnrpo_d.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded_message = encode(message)\n            print(encoded_message)\n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj1x8tty7.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y1\"\n\
    \            encode(\"hey you\")\n            > \"h3y1 u3y\"\n            encode(\"\
    hey you guys\")\n            > \"h3y1 u3y g3u3y\"\n            encode(\"hey you\
    \ guys how are you\")\n            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y\"\n  \
    \          encode(\"hey you guys how are you doing\")\n            > \"h3y1 u3y\
    \ g3u3y o3w1 u3y h3y1 u3y d3o3w1 u3y\"\n            encode(\"hey you guys how\
    \ are you doing well\")\n            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y d3o3w1\
    \ u3y h3w1 u3y\"\n            encode(\"hey you guys how are you doing well today\"\
    )\n            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y d3o3w1 u3y h3w1 u3y d3d4\"\
    \n            encode(\"hey you guys how are you doing well today morning\")\n\
    \            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y d3o3w1 u3y h3w1 u3y d3d4 m3n1\"\
    \n            encode(\"hey you guys how are you doing well today morning evening\"\
    )\n            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y d3o3w1 u3y h3w1 u3y d3d4 m3n1\
    \ e3v3\"\n            encode(\"hey you guys how are you doing well today morning\
    \ evening night\")\n            > \"h3y1 u3y g3u3y o3w1 u3y h3y1 u3y d3o3w1 u3y\
    \ h3w1 u3y d3d4 m3\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnsxd351m.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"heLLo\")\n            > \"hELLO\"\
    \n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"\
    heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"\
    hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\
    \n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"\
    heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"\
    hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\
    \n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n       \
    \     encode(\"heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"\
    heLLo world\")\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\"\
    )\n            > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n      \
    \      > \"hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"\
    hELLO wORLD\"\n            encode(\"heLLo world\")\n            > \"hELLO wORLD\"\
    \n            encode(\"heLLo world\")\n            > \"hELLO wORLD\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8v64jmvx.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y1\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"h\"\
    )\n            > \"h0\"  \n            \"\"\"\n    \"\"\"\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp11a67vxz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'h3ll4'\n            encode(\"hey\")\n            >>>'h1ey1'\n\
    \            encode(\"hi\")\n            >>>'h3i1'\n            encode(\"ho\"\
    )\n            >>>'h4o1'\n            encode(\"hey\")\n            >>>'h1ey1'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\n            >>>'h2a1y'\n\
    \            encode(\"hay\")\n            >>>'h2a1y'\n            encode(\"hay\"\
    )\n            >>>'h2a1y'\n            encode(\"hay\")\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm9gccbsa.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelllloo\"\n            \n            encode(\"hello\")\n   \
    \         > \"hleelllloo\"\n            \n            encode(\"hello\")\n    \
    \        > \"hleelllloo\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelllloo\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelllloo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleelllloo\"\n            \n            encode(\"hello\")\n        \
    \    > \"hleelllloo\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelllloo\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelllloo\"\n            \n            encode(\"hello\")\n           \
    \ > \"hleelllloo\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelllloo\"\n            \n            encode(\"hello\")\n            > \"\
    hleelllloo\"\n            \n            encode(\"hello\")\n            > \"hleelllloo\"\
    \n            \n            encode(\"hello\")\n            > \"hleelllloo\"\n\
    \            \n            encode(\"hello\")\n            > \"hleelllloo\"\n \
    \           \n            encode(\"hello\")\n            > \"hleelllloo\"\n  \
    \          \n            encode(\"hello\")\n            > \"hleelllloo\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelllloo\"\n    \
    \        \n            encode(\"hello\")\n            > \"hleelllloo\"\n     \
    \       \n            encode(\"hello\")\n            > \"hleelllloo\"\n      \
    \      \n            encode(\"hello\")\n            > \"hleelllloo\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelllloo\"\n        \
    \    \n            encode(\"hello\")\n            > \"hleelllloo\"\n         \
    \   \n            encode(\"hello\")\n            > \"hleelllloo\"\n          \
    \  \n            encode(\"hello\")\n            > \"hleelllloo\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelllloo\"\n            \n\
    \            encode(\"hello\")\n            > \"hleelllloo\"\n            \n \
    \           encode(\"hello\")\n            > \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxcq1sj7l.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"Hlee\"\n            encode(\"hey\")\n            > \"Hey\"\n \
    \           encode(\"hay\")\n            > \"Hay\"\n            encode(\"h\")\n\
    \            > \"H\"\n            encode(\"he\")\n            > \"He\"\n     \
    \       encode(\"hay\")\n            > \"Hay\"\n            encode(\"hey\")\n\
    \            > \"Hey\"\n            encode(\"hay\")\n            > \"Hay\"\n \
    \           encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphdzbbn7s.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll4\"\n            \n            encode(\"hello world\")\n \
    \           > \"h3ll4 w3d4\"\n            \n            encode(\"hello world how\
    \ are you\")\n            > \"h3ll4 w3d4 hw3rl4 a3d4 re4y4\"\n            \n \
    \           encode(\"hello world how are you doing today\")\n            > \"\
    h3ll4 w3d4 hw3rl4 a3d4 re4y4 do4y4 d0a4\"\n            \n            encode(\"\
    hello world how are you doing today and goodbye\")\n            > \"h3ll4 w3d4\
    \ hw3rl4 a3d4 re4y4 do4y4 d0a4 by4e\"\n            \n            encode(\"hello\
    \ world how are you doing today and goodbye goodbye\")\n            > \"h3ll4\
    \ w3d4 hw3rl4 a3d4 re4y4 do4y4 d0a4 by4e by4e\"\n            \n            encode(\"\
    hello world how are you doing today and goodbye goodbye goodbye\")\n         \
    \   > \"h3ll4 w3d4 hw3rl4 a3d4 re4y4 do4y4 d0a4 by4e by4e by4e\"\n           \
    \ \n            encode(\"hello world how are you doing today and goodbye goodbye\
    \ goodbye goodbye\")\n            > \"h3ll4 w3d4 hw3rl4 a3d4 re4y4 do4y4 d0a4\
    \ by4e by4e by4e by4e\"\n            \n            encode(\"hello world how are\
    \ you doing today and goodbye goodbye goodbye goodbye goodbye\")\n           \
    \ > \"h3ll4 w3d4 hw3rl4 a3d4 re4y4 do4y4 d0a4 by4e by4e by4e by4e by4e by4e\"\n\
    \            \n            encode(\"hello world how are you doing today and goodbye\
    \ goodbye goodbye goodbye goodbye goodbye goodbye\")\n            > \"h3ll4 w3d4\
    \ hw3rl4 a3d4 re4y4 do4y4 d0a4 by4e by4e by4e by4e by4e by4e by4e \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyaxq2amc.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           >>>'Hleo'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n\
    \            >>>'HleoWrd'\n            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n\
    \            encode(\"HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"\
    HelloWorld\")\n            >>>'HleoWrd'\n            encode(\"Hello\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpprjx1odc.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3ll2\"\n\
    \            encode(\"hi\")\n            > \"h3ll2\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n         \
    \   encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"\
    hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n\
    \            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n          \
    \  > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2\
    \ th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n\
    \            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n          \
    \  encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"\
    hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n\
    \            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n          \
    \  > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2\
    \ th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n\
    \            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n          \
    \  encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"\
    hi there\")\n            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n\
    \            > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n          \
    \  > \"h3ll2 th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2\
    \ th3er0\"\n            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n\
    \            encode(\"hi there\")\n            > \"h3ll2 th3er0\"\n          \
    \  encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n   \
    \ assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5utbeehu.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            \n            encode(\"hello\")\n    \
    \        > \"h3ll0\"\n            \n            encode(\"hello\")\n          \
    \  > \"h3ll0\"\n            \n            encode(\"hello\")\n            > \"\
    h3ll0\"\n            \n            encode(\"hello\")\n            > \"h3ll0\"\n\
    \            \n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      \n            encode(\"hello\")\n            > \"h3ll0\"\n            \n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            \n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppbp63wti.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \"\"\"\n            \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n\
    \    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n\
    \    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\
    \"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\
    \    \n    \n    \"\"\"\n    \n    \n    \"\"\"\n\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf8v85ydz.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           > \"hELlo\"\n            encode(\"HelloWorld\")\n            > \"\
    hELLOwrld\"\n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n\
    \            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n           \
    \ encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\"\
    )\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n         \
    \   > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\
    \n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n          \
    \  encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"\
    HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\"\
    )\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n         \
    \   > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\
    \n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n          \
    \  encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"\
    HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\"\
    )\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n         \
    \   > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\
    \n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n          \
    \  encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"\
    HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\"\
    )\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n         \
    \   > \"hELLOwrld\"\n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\
    \n            encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n          \
    \  encode(\"HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"\
    HelloWorld\")\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\"\
    )\n            > \"hELLOwrld\"\n            encode(\"HelloWorld\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4s7hdb8y.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hlelo Wrdl\"\n            \n            encode(\"Hello World\"\
    )\n            >> \"Hle\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp50hgkzfx.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\
    \n            encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"\
    hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n          \
    \  >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n   \
    \         encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\"\
    )\n            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"\
    ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n           \
    \ encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n\
    \            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\
    \n            encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"\
    hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n          \
    \  >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n   \
    \         encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\"\
    )\n            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"\
    ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n           \
    \ encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n\
    \            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\
    \n            encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"\
    hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n          \
    \  >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n   \
    \         encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\"\
    )\n            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"\
    ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\n           \
    \ encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"hello\")\n\
    \            >>>\"ehllo\"\n            encode(\"hello\")\n            >>>\"ehllo\"\
    \n            encode(\"hello\")\n            >>>\"ehllo\"\n            encode(\"\
    hello\")\n            >>>\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpctg24nej.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           >>>\"Hlelo\"\n            encode(\"HelloWorld\")\n            >>>\"\
    Hleelorld\"\n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n\
    \            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n          \
    \  encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"\
    HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\"\
    )\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n        \
    \    >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\
    \n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n         \
    \   encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"\
    HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\"\
    )\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n        \
    \    >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\
    \n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n         \
    \   encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"\
    HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\"\
    )\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n        \
    \    >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\
    \n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n         \
    \   encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"\
    HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\"\
    )\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n        \
    \    >>>\"Hleelorld\"\n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\
    \n            encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n         \
    \   encode(\"HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"\
    HelloWorld\")\n            >>>\"Hleelorld\"\n            encode(\"HelloWorld\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeyxsw_k9.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hello\")\n       \
    \     > \"ehllo\"\n            \n            encode(\"hello\")\n            >\
    \ \"ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\
    \n            \n            encode(\"hello\")\n            > \"ehllo\"\n     \
    \       \n            encode(\"hello\")\n            > \"ehllo\"\n           \
    \ \n            encode(\"hello\")\n            > \"ehllo\"\n            \n   \
    \         encode(\"hello\")\n            > \"ehllo\"\n            \n         \
    \   encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy2lvfh0k.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"hello\"\
    )\n            print(message) # oxlel\n            message = encode(\"hello, world\"\
    )\n            print(message) # oxlel, woxrd\n            message = encode(\"\
    Hello, World!\")\n            print(message) # Hxlel, Wxrd!\n            message\
    \ = encode(\"Hello, World! How are you?\")\n            print(message) # Hxlel,\
    \ Wxrd! Howr ay ou?\n            message = encode(\"Hello, World! How are you?\
    \ I'm fine.\")\n            print(message) # Hxlel, Wxrd! Howr ay ou? Im felx.\n\
    \            message = encode(\"Hello, World! How are you? I'm fine. I'm fine.\"\
    )\n            print(message) # Hxlel, Wxrd! Howr ay ou? Im felx. Im felx.\n \
    \           message = encode(\"Hello, World! How are you? I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine.\
    \ I'm fine. I'm fine. I'm fine. I'm fine. I'm fine. I'm fine\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptjmb003j.py\"\
    , line 11\n    message = encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I like cheese\"\
    )\n            >>>\"I lIk cEEse\"\n            \n            encode(\"I like cheese\
    \ and apples\")\n            >>>\"I lIk cEEse and aApPs\"\n            \n    \
    \        encode(\"I like cheese and apples and bananas\")\n            >>>\"I\
    \ lIk cEEse and aApPs and bAnAnAs\"\n            \n            encode(\"I like\
    \ cheese and apples and bananas and grapes\")\n            >>>\"I lIk cEEse and\
    \ aApPs and bAnAnAs and gRaPes\"\n            \n            encode(\"I like cheese\
    \ and apples and bananas and grapes and cherries\")\n            >>>\"I lIk cEEse\
    \ and aApPs and bAnAnAs and gRaPes and cHErRies\"\n            \n            encode(\"\
    I like cheese and apples and bananas and grapes and cherries and strawberries\"\
    )\n            >>>\"I lIk cEEse and aApPs and bAnAnAs and gRaPes and cHErRies\
    \ and sTaWbErRies\"\n            \n            encode(\"I like cheese and apples\
    \ and bananas and grapes and cherries and strawberries and tomatoes\")\n     \
    \       >>>\"I lIk cEEse and aApPs and bAnAnAs and gRaPes and cHErRies and sTaWbErRies\
    \ and tOMaToTes\"\n            \n            encode(\"I like cheese and apples\
    \ and bananas and grapes and cherries and strawberries and tomatoes and potatoes\"\
    )\n            >>>\"I lIk cEEse and aApPs and bAnAnAs and gRaPes and cHErRies\
    \ and sTaWbErRies and tOMaToTes and pOtAtoTes\"\n            \n            encode(\"\
    I like cheese and apples and bananas and grapes and cherries and strawberries\
    \ and tomatoes and potatoes and carrots\")\n            >>>\"I lIk cEEse and aApPs\
    \ and bAnAnAs and gRaPes and cHErRies and sTaWbErR\ndef check(candidate):\n  \
    \  assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe0wbk28j.py\"\
    , line 11\n    encode(\"I like cheese\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hlelo Wrdl\"\n            encode(\"The quick brown fox jumps\
    \ over the lazy dog\")\n            > \"Thys qick brwn fx jmps ovr thys dgy\"\n\
    \            encode(\"The quick brown fox jumps over the lazy dog\")\n       \
    \     > \"Thys qick brwn fx jmps ovr thys dgy\"\n            encode(\"The quick\
    \ brown fox jumps over the lazy dog\")\n            > \"Thys qick brwn fx jmps\
    \ ovr thys dgy\"\n            encode(\"The quick brown fox jumps over the lazy\
    \ dog\")\n            > \"Thys qick brwn fx jmps ovr thys dgy\"\n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            > \"Thys qick brwn\
    \ fx jmps ovr thys dgy\"\n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            > \"Thys qick brwn fx jmps ovr thys dgy\"\n   \
    \         encode(\"The quick brown fox jumps over the lazy dog\")\n          \
    \  > \"Thys qick brwn fx jmps ovr thys dgy\"\n            encode(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            > \"Thys qick brwn fx jmps ovr thys\
    \ dgy\"\n            encode(\"The quick brown fox jumps over the lazy dog\")\n\
    \            > \"Thys qick brwn fx jmps ovr thys dgy\"\n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            > \"Thys qick brwn\
    \ fx jmps ovr thys dgy\"\n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            > \"Thys qick brwn fx jmps ovr thys dgy\"\n   \
    \         encode(\"The quick brown fox jumps over the lazy dog\")\n          \
    \  > \"Thys qick brwn fx jmps ovr thys dgy\"\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpva0zfyxi.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hello\")\n            > \"hleel\"\
    \n            encode(\"hello\")\n            > \"hleel\"\n            encode(\"\
    hello\")\n            > \"hleel\"\n            encode(\"hello\")\n           \
    \ > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\n      \
    \      encode(\"hello\")\n            > \"hleel\"\n            encode(\"hello\"\
    )\n            > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\
    \n            encode(\"hello\")\n            > \"hleel\"\n            encode(\"\
    hello\")\n            > \"hleel\"\n            encode(\"hello\")\n           \
    \ > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\n      \
    \      encode(\"hello\")\n            > \"hleel\"\n            encode(\"hello\"\
    )\n            > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\
    \n            encode(\"hello\")\n            > \"hleel\"\n            encode(\"\
    hello\")\n            > \"hleel\"\n            encode(\"hello\")\n           \
    \ > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\n      \
    \      encode(\"hello\")\n            > \"hleel\"\n            encode(\"hello\"\
    )\n            > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\
    \n            encode(\"hello\")\n            > \"hleel\"\n            encode(\"\
    hello\")\n            > \"hleel\"\n            encode(\"hello\")\n           \
    \ > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\n      \
    \      encode(\"hello\")\n            > \"hleel\"\n            encode(\"hello\"\
    )\n            > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\
    \n            encode(\"hello\")\n            > \"hleel\"\n            encode(\"\
    hello\")\n            > \"hleel\"\n            encode(\"hello\")\n           \
    \ > \"hleel\"\n            encode(\"hello\")\n            > \"hleel\"\n      \
    \      encode(\"hello\")\n            > \"hleel\"\n            encode(\"hello\"\
    )\n            > \"hleel\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_cwmfxs7.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrssss\"\n            \n         \
    \   encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\n          \
    \  \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbad1dzh3.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"hello\"\
    )\n            print(message)\n            # \"ehllo\"\n            \"\"\"\n \
    \           message = encode(\"hello\")\n            print(message)\n        \
    \    # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\n            # \"ehllo\"\n            \"\"\"\n   \
    \         message = encode(\"hello\")\n            print(message)\n          \
    \  # \"ehllo\"\n            \"\"\"\n            message = encode(\"hello\")\n\
    \            print(message)\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv5q8a4bf.py\"\
    , line 11\n    message = encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8uh8d3gr.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"The quick\
    \ brown fox jumps over the lazy dog\")\n            > \"ThE quicK brwn fOx jumPs\
    \ ovEr thEz lazY dog\"\n            \n            encode(\"The quick brown fox\
    \ jumps over the lazy dog\")\n            > \"ThE quicK brwn fOx jumPs ovEr thEz\
    \ lazY dog\"\n            \n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            > \"ThE quicK brwn fOx jumPs ovEr thEz lazY dog\"\
    \n            \n            encode(\"The quick brown fox jumps over the lazy dog\"\
    )\n            > \"ThE quicK brwn fOx jumPs ovEr thEz lazY dog\"\n           \
    \ \n            encode(\"The quick brown fox jumps over the lazy dog\")\n    \
    \        > \"ThE quicK brwn fOx jumPs ovEr thEz lazY dog\"\n            \n   \
    \         encode(\"The quick brown fox jumps over the lazy dog\")\n          \
    \  > \"ThE quicK brwn fOx jumPs ovEr thEz lazY dog\"\n            \n         \
    \   encode(\"The quick brown fox jumps over the lazy dog\")\n            > \"\
    ThE quicK brwn fOx jumPs ovEr thEz lazY dog\"\n            \n            encode(\"\
    The quick brown fox jumps over the lazy dog\")\n            > \"ThE quicK brwn\
    \ fOx jumPs ovEr thEz lazY dog\"\n            \n            encode(\"The quick\
    \ brown fox jumps over the lazy dog\")\n            > \"ThE quicK brwn fOx jumPs\
    \ ovEr thEz lazY dog\"\n            \n            encode(\"The quick brown fox\
    \ jumps over the lazy dog\")\n            > \"ThE quicK brwn fOx jumPs ovEr thEz\
    \ lazY dog\"\n            \n            encode(\"The quick brown fox jumps over\
    \ the lazy dog\")\n            > \"ThE quicK brwn fOx j\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp4ubyusz.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'Hleo'\n            encode(\"hey\")\n            >>>'Heyy'\n  \
    \          encode(\"hi\")\n            >>>'Hii'\n            encode(\"ho\")\n\
    \            >>>'Hoo'\n            encode(\"wo\")\n            >>>'Woo'\n    \
    \        encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\")\n\
    \            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n \
    \           encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"why\"\
    )\n            >>>'Whyy'\n            encode(\"why\")\n            >>>'Whyy'\n\
    \            encode(\"why\")\n            >>>'Whyy'\n            encode(\"wh\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfenjgrp1.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehlll\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehlll\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehlll\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehlll\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehlll\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehlll\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\n            > \"ehlll\"\n            encode(\"hello\")\n            > \"ehllo\"\
    \n            encode(\"hello\")\n            > \"ehlll\"\n            encode(\"\
    hello\")\n            > \"ehllo\"\n            encode(\"hello\")\n           \
    \ > \"ehlll\"\n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      encode(\"hello\")\n            > \"ehlll\"\n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\
    \n            encode(\"hello\")\n            > \"ehllo\"\n            encode(\"\
    hello\")\n            > \"ehlll\"\n            encode(\"hello\")\n           \
    \ > \"ehllo\"\n            encode(\"hello\")\n            > \"ehlll\"\n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            encode(\"hello\"\
    )\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppfx9m3av.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y1\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n            > \"\
    h3ay0\"\n            encode(\"hay\")\n            > \"h3ay0\"\n            encode(\"\
    hay\")\n            > \"h3ay0\"\n            encode(\"hay\")\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcnix9jl0.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \n            encode(\"Hello World\"\
    )\n            > \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc1gred15.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrss\"\n            \n           \
    \ encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\n            \n\
    \            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\n   \
    \         \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dosjqkz.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\n            \n            encode(\"\
    Hello\")\n            \n            >>>\"Hleeol\"\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnuh15aan.py\"\
    , line 12\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    hello\")\n            \n            >>>\"ehllo\"\n            \n            encode(\"\
    hey\")\n            \n            >>>\"ehy\"\n            \n            encode(\"\
    hey you\")\n            \n            >>>\"ehy uo\"\n            \n          \
    \  encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n            \n\
    \            encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n  \
    \          \n            encode(\"hey you\")\n            \n            >>>\"\
    ehy uo\"\n            \n            encode(\"hey you\")\n            \n      \
    \      >>>\"ehy uo\"\n            \n            encode(\"hey you\")\n        \
    \    \n            >>>\"ehy uo\"\n            \n            encode(\"hey you\"\
    )\n            \n            >>>\"ehy uo\"\n            \n            encode(\"\
    hey you\")\n            \n            >>>\"ehy uo\"\n            \n          \
    \  encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n            \n\
    \            encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n  \
    \          \n            encode(\"hey you\")\n            \n            >>>\"\
    ehy uo\"\n            \n            encode(\"hey you\")\n            \n      \
    \      >>>\"ehy uo\"\n            \n            encode(\"hey you\")\n        \
    \    \n            >>>\"ehy uo\"\n            \n            encode(\"hey you\"\
    )\n            \n            >>>\"ehy uo\"\n            \n            encode(\"\
    hey you\")\n            \n            >>>\"ehy uo\"\n            \n          \
    \  encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n            \n\
    \            encode(\"hey you\")\n            \n            >>>\"ehy uo\"\n  \
    \          \n            encode(\"hey you\")\n            \n            >>>\"\
    ehy uo\"\n            \n            encode(\"hey you\")\n            \n      \
    \      >>>\"ehy uo\"\n            \n            encode(\"hey you\")\n        \
    \    \n            >>>\"ehy uo\"\n            \n            encode(\"hey you\"\
    )\n            \n            >>>\"ehy uo\"\n            \n            encode(\"\
    hey you\")\n            \n            >>>\"\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy_eknn13.py\"\
    , line 12\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n        \
    \    \n            encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeellllooorrrddddd'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'Hleeellllooorrrddddd'\n            \n            encode(\"Hello World\"\
    )\n            \n            >>>'Hleeellllooorrrddddd'\n            \n       \
    \     encode(\"Hello World\")\n            \n            >>>'Hleeel\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzrls_fsw.py\"\
    , line 12\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hELLO\")\n       \
    \     > \"ehllo\"\n            \n            encode(\"hEllO\")\n            >\
    \ \"ehllo\"\n            \n            encode(\"heLLo\")\n            > \"ehllo\"\
    \n            \n            encode(\"heLlO\")\n            > \"ehllo\"\n     \
    \       \n            encode(\"heLlO\")\n            > \"ehllo\"\n           \
    \ \n            encode(\"heLlO\")\n            > \"ehllo\"\n            \n   \
    \         encode(\"heLlO\")\n            > \"ehllo\"\n            \n         \
    \   encode(\"heLlO\")\n            > \"ehllo\"\n            \n            encode(\"\
    heLlO\")\n            > \"ehllo\"\n            \n            encode(\"heLlO\"\
    )\n            > \"ehllo\"\n            \n            encode(\"heLlO\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"heLlO\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"heLlO\")\n            > \"\
    ehllo\"\n            \n            encode(\"heLlO\")\n            > \"ehllo\"\n\
    \            \n            encode(\"heLlO\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"heLlO\")\n            > \"ehllo\"\n            \n\
    \            encode(\"heLlO\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"heLlO\")\n            > \"ehllo\"\n            \n            encode(\"\
    heLlO\")\n            > \"ehllo\"\n            \n            encode(\"heLlO\"\
    )\n            > \"ehllo\"\n            \n            encode(\"heLlO\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"heLlO\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"heLlO\")\n            > \"\
    ehllo\"\n            \n            encode(\"heLlO\")\n            > \"ehllo\"\n\
    \            \n            encode(\"heLlO\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"heLlO\")\n            > \"ehllo\"\n            \n\
    \            encode(\"heLlO\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"heLlO\")\n            > \"ehl\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp32j_khyz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hELLO\"\n            encode(\"hey\")\n            > \"hEY\"\n\
    \            encode(\"hi\")\n            > \"hI\"\n            encode(\"ho\")\n\
    \            > \"hO\"\n            encode(\"he\")\n            > \"hE\"\n    \
    \        encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\")\n\
    \            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n \
    \           encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"hAY\"\n            encode(\"hay\")\n            > \"hAY\"\n\
    \            encode(\"hay\")\n            > \"hAY\"\n            encode(\"hay\"\
    )\n            > \"h\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv5hudtpb.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\"\
    )\n            print(message)\n            # oHllo\n            message = encode(\"\
    Hello World\")\n            print(message)\n            # oHllo Wrd\n        \
    \    message = encode(\"Hello World!\")\n            print(message)\n        \
    \    # oHllo Wrd !\n            message = encode(\"Hello World! How are you?\"\
    )\n            print(message)\n            # oHllo Wrd ! How  a  r  u  i  o  \n\
    \            message = encode(\"Hello World! How are you? I'm fine.\")\n     \
    \       print(message)\n            # oHllo Wrd ! How  a  r  u  i  o  \n    \"\
    \"\"\n    \n    message = message.lower()\n    \n    vowels = \"aeiou\"\n    \n\
    \    message = message.replace(vowels, lambda letter: letter.upper())\n    \n\
    \    message = message.replace(\"a\", \"A\")\n    message = message.replace(\"\
    e\", \"E\")\n    message = message.replace(\"i\", \"I\")\n    message = message.replace(\"\
    o\", \"O\")\n    message = message.replace(\"u\", \"U\")\n    message = message.replace(\"\
    y\", \"Y\")\n    message = message.replace(\"h\", \"H\")\n    message = message.replace(\"\
    r\", \"R\")\n    message = message.replace(\"s\", \"S\")\n    message = message.replace(\"\
    t\", \"T\")\n    message = message.replace(\"w\", \"W\")\n    message = message.replace(\"\
    v\", \"V\")\n    message = message.replace(\"z\", \"Z\")\n    \n    return message\n\
    </cell>\n<cell>\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbcl1ob98.py\"\
    , line 11\n    message = encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           > \"hELLO\"\n            encode(\"hello\")\n            > \"hELLO\"\
    \n            encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"\
    HellO\")\n            > \"hELLO\"\n            encode(\"HellO\")\n           \
    \ > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\n      \
    \      encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"HellO\"\
    )\n            > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\
    \n            encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"\
    HellO\")\n            > \"hELLO\"\n            encode(\"HellO\")\n           \
    \ > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\n      \
    \      encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"HellO\"\
    )\n            > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\
    \n            encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"\
    HellO\")\n            > \"hELLO\"\n            encode(\"HellO\")\n           \
    \ > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\n      \
    \      encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"HellO\"\
    )\n            > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\
    \n            encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"\
    HellO\")\n            > \"hELLO\"\n            encode(\"HellO\")\n           \
    \ > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\n      \
    \      encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"HellO\"\
    )\n            > \"hELLO\"\n            encode(\"HellO\")\n            > \"hELLO\"\
    \n            encode(\"HellO\")\n            > \"hELLO\"\n            encode(\"\
    HellO\")\n            > \"hELLO\"\n            encode(\"H\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmu2lcdki.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"hello\"\
    )\n            print(message)\n            >> hEllo\n            \"\"\"\n    \"\
    \"\"\n    \n    message = message.lower()\n    \n    vowels = \"aeiou\"\n    \n\
    \    message = message.replace(vowels, lambda m: vowels[m.lower()])\n    \n  \
    \  message = message.replace(\"a\", \"A\")\n    \n    message = message.replace(\"\
    e\", \"E\")\n    \n    message = message.replace(\"i\", \"I\")\n    \n    message\
    \ = message.replace(\"o\", \"O\")\n    \n    message = message.replace(\"u\",\
    \ \"U\")\n    \n    message = message.replace(\"y\", \"Y\")\n    \n    message\
    \ = message.replace(\"x\", \"X\")\n    \n    message = message.replace(\"z\",\
    \ \"Z\")\n    \n    message = message.replace(\"1\", \"1\")\n    \n    message\
    \ = message.replace(\"2\", \"2\")\n    \n    message = message.replace(\"3\",\
    \ \"3\")\n    \n    message = message.replace(\"4\", \"4\")\n    \n    message\
    \ = message.replace(\"5\", \"5\")\n    \n    message = message.replace(\"6\",\
    \ \"6\")\n    \n    message = message.replace(\"7\", \"7\")\n    \n    message\
    \ = message.replace(\"8\", \"8\")\n    \n    message = message.replace(\"9\",\
    \ \"9\")\n    \n    message = message.replace(\"0\", \"0\")\n    \n    message\
    \ = message.replace(\"_\", \"_\")\n    \n    return message\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0y4sp0n2.py\"\
    , line 11\n    message = encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrssss\"\n            \n         \
    \   encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\n          \
    \  \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvi_28sqf.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n            \n \
    \           encode(\"Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'H3ll3o W4rl4d'\n            \n            encode(\"Hello World\")\n    \
    \        \n            >>>'H3ll3o W4rl4d'\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n            \n \
    \           encode(\"Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'H3ll3o W4rl4d'\n            \n            encode(\"Hello World\")\n    \
    \        \n            >>>'H3ll3o W4rl4d'\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n            \n \
    \           encode(\"Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'H3ll3o W4rl4d'\n            \n            encode(\"Hello World\")\n    \
    \        \n            >>>'H3ll3o W4rl4d'\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n            \n \
    \           encode(\"Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'H3ll3o W4rl4d'\n            \n            encode(\"Hello World\")\n    \
    \        \n            >>>'H3ll3o W4rl4d'\n            \n            encode(\"\
    Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n            \n \
    \           encode(\"Hello World\")\n            \n            >>>'H3ll3o W4rl4d'\n\
    \            \n            encode(\"Hello World\")\n            \n           \
    \ >>>'H3ll3o W4rl4d'\n            \n            encode(\"Hello World\")\n    \
    \        \n            >>>'H3ll3o W4rl4d'\n            \n            encode(\"\
    Hello World\")\n            \n            \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpkidijn.py\"\
    , line 12\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llo orld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He \ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnr_d32gk.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"Hello World\"\
    )\n            >>>'Hleo Wrd'\n            encode(\"Hello World\")\n          \
    \  >>>'Hleo Wrd'\n            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n\
    \            encode(\"Hello World\")\n            >>>'Hleo Wrd'\n            encode(\"\
    Hello World\")\n            >>>'Hleo Wrd'\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp00rp9emb.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            \"\"\"\n    \"\"\"\n    \n    vowels = \"\
    aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    encoded = \"\"\n\
    \    \n    for letter in message:\n        if letter in vowels:\n            encoded\
    \ += letter\n        else:\n            encoded += letter.upper()\n          \
    \  \n    return encoded\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n\
    <cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n\
    </cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell>\n<cell>\nencode(message=\"hello\")\n</cell>\n<cell>\nencode(message=\"\
    hello\")\n</cell\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_dxxd2m.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\")\n            > \"ewqeao\"\n            encode(\"\
    awesome\")\n            > \"ewqeao\"\n            encode(\"awesome\")\n      \
    \      > \"ewqeao\"\n            encode(\"awesome\")\n            > \"ewqeao\"\
    \n            encode(\"awesome\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppz593vw4.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            \n            \n    \
    \        \n            \n            \n            \n            \n          \
    \  \n            \n            \n            \n            \n            \n  \
    \          \n            \n            \n            \n            \n        \
    \    \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodjx2e33.py\"\
    , line 278, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodjx2e33.py\"\
    , line 276, in test_check\n    check(encode)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpodjx2e33.py\"\
    , line 269, in check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\
    \ World\")\n            print(message)\n            \n            # Output: HeLlO\
    \ WoRlD\n            \"\"\"\n            message = encode(\"Hello World\")\n \
    \           print(message)\n            \n            # Output: HeLlO WoRlD\n\
    \            \"\"\"\n            message = encode(\"Hello World\")\n         \
    \   print(message)\n            \n            # Output: HeLlO WoRlD\n        \
    \    \"\"\"\n            message = encode(\"Hello World\")\n            print(message)\n\
    \            \n            # Output: HeLlO WoRlD\n            \"\"\"\n       \
    \     message = encode(\"Hello World\")\n            print(message)\n        \
    \    \n            # Output: HeLlO WoRlD\n            \"\"\"\n            message\
    \ = encode(\"Hello World\")\n            print(message)\n            \n      \
    \      # Output: HeLlO WoRlD\n            \"\"\"\n            message = encode(\"\
    Hello World\")\n            print(message)\n            \n            # Output:\
    \ HeLlO WoRlD\n            \"\"\"\n            message = encode(\"Hello World\"\
    )\n            print(message)\n            \n            # Output: HeLlO WoRlD\n\
    \            \"\"\"\n            message = encode(\"Hello World\")\n         \
    \   print(message)\n            \n            # Output: HeLlO WoRlD\n        \
    \    \"\"\"\n            message = encode(\"Hello World\")\n            print(message)\n\
    \            \n            # Output: HeLlO WoRlD\n            \"\"\"\n       \
    \     message = encode(\"Hello World\")\n            print(message)\n        \
    \    \n            # Output: HeLlO WoRlD\n            \"\"\"\n            message\
    \ = encode(\"Hello World\")\n            print(message)\n            \n      \
    \      # Output: HeLlO WoRlD\n            \"\"\"\n            message = encode(\"\
    Hello World\")\n            print(message)\n            \n            # Output:\
    \ HeLlO WoRlD\n            \"\"\"\n            message = encode(\"Hello World\"\
    )\n            print(message)\n            \n            # Output: HeLlO WoRlD\n\
    \            \"\"\"\n            message = encode(\"Hello World\")\n         \
    \   print(message)\n            \n            # Output: HeLlO WoRlD\n        \
    \    \"\"\"\n            message = encode(\"Hello World\")\n            print(message)\n\
    \            \n            # Output: HeLlO WoRlD\n            \"\"\"\n       \
    \     message = encode(\"Hello World\")\n            print(message)\n        \
    \    \n            # Output: HeLlO WoRlD\n            \"\"\"\n            message\
    \ = encode(\"Hello World\")\n            print(message)\n            \n      \
    \      # Output: HeLlO WoRlD\n            \"\"\"\n            message = encode(\"\
    Hello World\")\n            print(message)\n            \n            # Output:\
    \ HeLlO WoRlD\n            \"\"\"\n            message = encode(\"Hello World\"\
    )\n            print(message)\n            \n            # Output: HeLl\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6x4ne5e2.py\"\
    , line 11\n    message = encode(\"Hello World\")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\
    \n            encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"\
    hello\")\n            >>>\"Hleo\"\n            encode(\"hello\")\n           \
    \ >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\n      \
    \      encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"hello\"\
    )\n            >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\
    \n            encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"\
    hello\")\n            >>>\"Hleo\"\n            encode(\"hello\")\n           \
    \ >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\n      \
    \      encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"hello\"\
    )\n            >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\
    \n            encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"\
    hello\")\n            >>>\"Hleo\"\n            encode(\"hello\")\n           \
    \ >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\n      \
    \      encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"hello\"\
    )\n            >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\
    \n            encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"\
    hello\")\n            >>>\"Hleo\"\n            encode(\"hello\")\n           \
    \ >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\n      \
    \      encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"hello\"\
    )\n            >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\
    \n            encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"\
    hello\")\n            >>>\"Hleo\"\n            encode(\"hello\")\n           \
    \ >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\"Hleo\"\n      \
    \      encode(\"hello\")\n            >>>\"Hleo\"\n            encode(\"hello\"\
    )\n            >>>\"Hleo\"\n            encode(\"hello\")\n            >>>\ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa_w5xm1p.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'H3ll4'\n            encode(\"hey\")\n            >>>'Hey3'\n \
    \           encode(\"hi\")\n            >>>'Hi3'\n            encode(\"howdy\"\
    )\n            >>>'Howdy3'\n            encode(\"hello\")\n            >>>'H3ll4'\n\
    \            encode(\"hey\")\n            >>>'Hey3'\n            encode(\"hi\"\
    )\n            >>>'Hi3'\n            encode(\"howdy\")\n            >>>'Howdy3'\n\
    \            encode(\"hello\")\n            >>>'H3ll4'\n            encode(\"\
    hey\")\n            >>>'Hey3'\n            encode(\"hi\")\n            >>>'Hi3'\n\
    \            encode(\"howdy\")\n            >>>'Howdy3'\n            encode(\"\
    hello\")\n            >>>'H3ll4'\n            encode(\"hey\")\n            >>>'Hey3'\n\
    \            encode(\"hi\")\n            >>>'Hi3'\n            encode(\"howdy\"\
    )\n            >>>'Howdy3'\n            encode(\"hello\")\n            >>>'H3ll4'\n\
    \            encode(\"hey\")\n            >>>'Hey3'\n            encode(\"hi\"\
    )\n            >>>'Hi3'\n            encode(\"howdy\")\n            >>>'Howdy3'\n\
    \            encode(\"hello\")\n            >>>'H3ll4'\n            encode(\"\
    hey\")\n            >>>'Hey3'\n            encode(\"hi\")\n            >>>'Hi3'\n\
    \            encode(\"howdy\")\n            >>>'Howdy3'\n            encode(\"\
    hello\")\n            >>>'H3ll4'\n            encode(\"hey\")\n            >>>'Hey3'\n\
    \            encode(\"hi\")\n            >>>'Hi3'\n            encode(\"howdy\"\
    )\n            >>>'Howdy3'\n            encode(\"hello\")\n            >>>'H3ll4'\n\
    \            encode(\"hey\")\n            >>>'Hey3'\n            encode(\"hi\"\
    )\n            >>>'Hi3'\n            encode(\"howdy\")\n            >>>'Howdy3'\n\
    \            encode(\"hello\")\n            >>>'H3ll4'\n            encode(\"\
    hey\")\n            >>>'Hey3'\n            encode(\"hi\")\n            >>>'Hi3'\n\
    \            encode(\"howdy\")\n            >>>'Howdy3'\n            encode(\"\
    hello\")\n            >>>'H3ll4'\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq9vx7d8u.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n           \
    \ >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n\
    \            encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n\
    \            >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO\
    \ WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n      \
    \      encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n\
    \            >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO\
    \ WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n      \
    \      encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n\
    \            >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO\
    \ WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n      \
    \      encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n\
    \            >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO\
    \ WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n      \
    \      encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode(\"Hello World\")\n\
    \            >>>'HLO WOL'\n            encode(\"Hello World\")\n            >>>'HLO\
    \ WOL'\n            encode(\"Hello World\")\n            >>>'HLO WOL'\n      \
    \      encode(\"Hello World\")\n            >>>'HLO WOL'\n            encode(\"\
    Hello World\")\n            >>>'HLO WOL'\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjxs2_m6f.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll4\"\n            \n            encode(\"hey\")\n         \
    \   > \"h3y2\"\n            \n            encode(\"hi\")\n            > \"h3i\"\
    \n            \n            encode(\"hey\")\n            > \"h3y2\"\n        \
    \    \n            encode(\"hi\")\n            > \"h3i\"\n            \n     \
    \       encode(\"hello\")\n            > \"h3ll4\"\n            \n           \
    \ encode(\"hey\")\n            > \"h3y2\"\n            \n            encode(\"\
    hi\")\n            > \"h3i\"\n            \n            encode(\"hello\")\n  \
    \          > \"h3ll4\"\n            \n            encode(\"hey\")\n          \
    \  > \"h3y2\"\n            \n            encode(\"hi\")\n            > \"h3i\"\
    \n            \n            encode(\"hello\")\n            > \"h3ll4\"\n     \
    \       \n            encode(\"hey\")\n            > \"h3y2\"\n            \n\
    \            encode(\"hi\")\n            > \"h3i\"\n            \n           \
    \ encode(\"hello\")\n            > \"h3ll4\"\n            \n            encode(\"\
    hey\")\n            > \"h3y2\"\n            \n            encode(\"hi\")\n   \
    \         > \"h3i\"\n            \n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            \n            encode(\"hey\")\n            > \"h3y2\"\
    \n            \n            encode(\"hi\")\n            > \"h3i\"\n          \
    \  \n            encode(\"hello\")\n            > \"h3ll4\"\n            \n  \
    \          encode(\"hey\")\n            > \"h3y2\"\n            \n           \
    \ encode(\"hi\")\n            > \"h3i\"\n            \n            encode(\"hello\"\
    )\n            > \"h3ll4\"\n            \n            encode(\"hey\")\n      \
    \      > \"h3y2\"\n            \n            encode(\"hi\")\n            > \"\
    h3i\"\n            \n            encode(\"hello\")\n            > \"h3ll4\"\n\
    \            \n            encode(\"hey\")\n            > \"h3y2\"\n         \
    \   \n            encode(\"hi\")\n            > \"h3i\"\n            \n      \
    \      encode(\"hello\")\n            > \"h3ll4\"\n            \n            encode(\"\
    hey\")\n            > \"h3y2\"\n            \n            encode(\"hi\")\n\ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt071odbk.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelllloo\"\n            \n            encode(\"hello\")\n   \
    \         > \"hleelllloo\"\n            \n            encode(\"hello\")\n    \
    \        > \"hleelllloo\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelllloo\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelllloo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleelllloo\"\n            \n            encode(\"hello\")\n        \
    \    > \"hleelllloo\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelllloo\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelllloo\"\n            \n            encode(\"hello\")\n           \
    \ > \"hleelllloo\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelllloo\"\n            \n            encode(\"hello\")\n            > \"\
    hleelllloo\"\n            \n            encode(\"hello\")\n            > \"hleelllloo\"\
    \n            \n            encode(\"hello\")\n            > \"hleelllloo\"\n\
    \            \n            encode(\"hello\")\n            > \"hleelllloo\"\n \
    \           \n            encode(\"hello\")\n            > \"hleelllloo\"\n  \
    \          \n            encode(\"hello\")\n            > \"hleelllloo\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelllloo\"\n    \
    \        \n            encode(\"hello\")\n            > \"hleelllloo\"\n     \
    \       \n            encode(\"hello\")\n            > \"hleelllloo\"\n      \
    \      \n            encode(\"hello\")\n            > \"hleelllloo\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelllloo\"\n        \
    \    \n            encode(\"hello\")\n            > \"hleelllloo\"\n         \
    \   \n            encode(\"hello\")\n            > \"hleelllloo\"\n          \
    \  \n            encode(\"hello\")\n            > \"hleelllloo\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelllloo\"\n            \n\
    \            encode(\"hello\")\n            > \"hleelllloo\"\n            \n \
    \           encode(\"hello\")\n            > \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0t0hi_a7.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"I\
    \ love programming\")\n            print(message)\n            >> I lv prgmmng\n\
    \            \"\"\"\n    \"\"\"\n    \n    message = message.lower()\n    \n \
    \   vowels = \"aeiou\"\n    \n    message = message.replace(vowels, lambda m:\
    \ vowels[m.start():m.end()])\n    \n    message = message.replace(\"i\", \"v\"\
    )\n    \n    message = message.replace(\"e\", \"a\")\n    \n    message = message.replace(\"\
    o\", \"o\")\n    \n    message = message.replace(\"u\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"e\")\n    \n    message = message.replace(\"e\",\
    \ \"a\")\n    \n    message = message.replace(\"o\", \"o\")\n    \n    message\
    \ = message.replace(\"u\", \"u\")\n    \n    message = message.replace(\"a\",\
    \ \"e\")\n    \n    message = message.replace(\"e\", \"a\")\n    \n    message\
    \ = message.replace(\"o\", \"o\")\n    \n    message = message.replace(\"u\",\
    \ \"u\")\n    \n    message = message.replace(\"a\", \"e\")\n    \n    message\
    \ = message.replace(\"e\", \"a\")\n    \n    message = message.replace(\"o\",\
    \ \"o\")\n    \n    message = message.replace(\"u\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"e\")\n    \n    message = message.replace(\"e\",\
    \ \"a\")\n    \n    message = message.replace(\"o\", \"o\")\n    \n    message\
    \ = message.replace(\"u\", \"u\")\n    \n    message = message.replace(\"a\",\
    \ \"e\")\n    \n    message = message.replace(\"e\", \"a\")\n    \n    message\
    \ = message.replace(\"o\", \"o\")\n    \n    message = message.replace(\"u\",\
    \ \"u\")\n    \n    message = message.replace(\"a\", \"e\")\n    \n    message\
    \ = message.replace(\"e\", \"a\")\n    \n    message = message.replace(\"o\",\
    \ \"o\")\n    \n    message = message.replace(\"u\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"e\")\n    \n    message = message.replace(\"e\",\
    \ \"a\")\n    \n    message = message.replace(\"o\", \"o\")\n    \n    message\
    \ = message.replace(\"u\", \"u\")\n    \n    message = message.replace(\"a\",\
    \ \"e\")\n    \n    message = message.replace(\"e\", \"a\")\n    \n    message\
    \ = message.replace(\"o\", \"o\")\n    \n    message = message.replace(\"u\",\
    \ \"u\")\n    \n    message = message.replace(\"a\", \"e\")\n    \n    message\
    \ = message.replace(\"e\", \"a\")\n    \n    message = message.replace(\"o\",\
    \ \"o\")\n    \n    message = message.replace(\"u\", \"u\")\n    \n    message\
    \ = message.replace(\"a\", \"e\")\n    \n    message = message.replace(\"e\",\
    \ \"a\")\n    \n    message = message.replace(\"o\", \"o\")\n    \n    message\
    \ = message.replace(\"u\", \"u\")\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpr6odut_6.py\"\
    , line 11\n    message = encode(\"I love programming\")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqpdzy6ll.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hleelll\")\n   \
    \         > \"hello\"\n            \n            encode(\"hleellll\")\n      \
    \      > \"hleelllll\"\n            \n            encode(\"hleelllll\")\n    \
    \        > \"hleellllll\"\n            \n            encode(\"hleellllll\")\n\
    \            > \"hleelllllll\"\n            \n            encode(\"hleelllllll\"\
    )\n            > \"hleellllllll\"\n            \n            encode(\"hleellllllll\"\
    )\n            > \"hleelllllllll\"\n            \n            encode(\"hleelllllllll\"\
    )\n            > \"hleellllllllll\"\n            \n            encode(\"hleellllllllll\"\
    )\n            > \"hleelllllllllll\"\n            \n            encode(\"hleelllllllllll\"\
    )\n            > \"hleellllllllllll\"\n            \n            encode(\"hleellllllllllll\"\
    )\n            > \"hleelllllllllllll\"\n            \n            encode(\"hleelllllllllllll\"\
    )\n            > \"hleellllllllllllll\"\n            \n            encode(\"hleellllllllllllll\"\
    )\n            > \"hleelllllllllllllll\"\n            \n            encode(\"\
    hleelllllllllllllll\")\n            > \"hleellllllllllllllll\"\n            \n\
    \            encode(\"hleellllllllllllllll\")\n            > \"hleelllllllllllllllll\"\
    \n            \n            encode(\"hleelllllllllllllllllll\")\n            >\
    \ \"hleellllllllllllllllllll\"\n            \n            encode(\"hleellllllllllllllllllll\"\
    )\n            > \"hleelllllllllllllllllllll\"\n            \n            encode(\"\
    hleelllllllllllllllllllll\")\n            > \"hleellllllllllllllllllllllll\"\n\
    \            \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_qylufgj.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'Hleelllloo'\n            \n            encode(\"hello\")\n   \
    \         >>>'Hleelllloo'\n            \n            encode(\"hello\")\n     \
    \       >>>'Hleelllloo'\n            \n            encode(\"hello\")\n       \
    \     >>>'Hleelllloo'\n            \n            encode(\"hello\")\n         \
    \   >>>'Hleelllloo'\n            \n            encode(\"hello\")\n           \
    \ >>>'Hleelllloo'\n            \n            encode(\"hello\")\n            >>>'Hleelllloo'\n\
    \            \n            encode(\"hello\")\n            >>>'Hleelllloo'\n  \
    \          \n            encode(\"hello\")\n            >>>'Hleelllloo'\n    \
    \        \n            encode(\"hello\")\n            >>>'Hleelllloo'\n      \
    \      \n            encode(\"hello\")\n            >>>'Hleelllloo'\n        \
    \    \n            encode(\"hello\")\n            >>>'Hleelllloo'\n          \
    \  \n            encode(\"hello\")\n            >>>'Hleelllloo'\n            \n\
    \            encode(\"hello\")\n            >>>'Hleelllloo'\n            \n  \
    \          encode(\"hello\")\n            >>>'Hleelllloo'\n            \n    \
    \        encode(\"hello\")\n            >>>'Hleelllloo'\n            \n      \
    \      encode(\"hello\")\n            >>>'Hleelllloo'\n            \n        \
    \    encode(\"hello\")\n            >>>'Hleelllloo'\n            \n          \
    \  encode(\"hello\")\n            >>>'Hleelllloo'\n            \n            encode(\"\
    hello\")\n            >>>'Hleelllloo'\n            \n            encode(\"hello\"\
    )\n            >>>'Hleelllloo'\n            \n            encode(\"hello\")\n\
    \            >>>'Hleelllloo'\n            \n            encode(\"hello\")\n  \
    \          >>>'Hleelllloo'\n            \n            encode(\"hello\")\n    \
    \        >>>'Hleelllloo'\n            \n            encode(\"hello\")\n      \
    \      >>>'Hleelllloo'\n            \n            encode(\"hello\")\n        \
    \    >>>'Hleelllloo'\n            \n            encode(\"hello\")\n          \
    \  >>>'Hleelllloo'\n            \n            encode(\"hello\")\n            >>>'Hleelllloo'\n\
    \            \n            encode(\"hello\")\n            >>>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzbnw58_p.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelll\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelll\"\n            \n            encode(\"hello\")\n            > \"\
    hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_viionfw.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelll\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelll\"\n            \n            encode(\"hello\")\n            > \"\
    hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqrxlzmkh.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \"Hlllo Wrld\"\n            \n            encode(\"Hello World\"\
    )\n            > \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgrzistt_.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \"\"\"\n    \"\"\"\n    \n    vowels =\
    \ \"aeiou\"\n    \n    message = message.lower()\n    \n    encoded = \"\"\n \
    \   \n    for letter in message:\n        if letter in vowels:\n            letter\
    \ = letter.upper()\n            \n        encoded += letter\n    \n    return\
    \ encoded\n</cell>\n<cell>\nencode(\"\")\n</cell>\n<cell>\nencode(\"hello\")\n\
    </cell>\n<cell>\nencode(\"hleelll\")\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0mupfu6s.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"Hello\
    \ World\")\n            > \"Hleellllooorrrssss\"\n            \n            encode(\"\
    Hello World\")\n            > \"Hleellllooorrrssss\"\n            \n         \
    \   encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\n          \
    \  \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            > \"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo630m5yl.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I like turtles\"\
    )\n            >>>\"I lks tutrs\"\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda m: vowels[m.lower()])\n    \n    message = message.replace(\" \", \"\"\
    )\n    \n    message = message.replace(\",\", \"\")\n    \n    message = message.replace(\"\
    '\", \"\")\n    \n    message = message.replace(\"!\", \"\")\n    \n    message\
    \ = message.replace(\"?\", \"\")\n    \n    message = message.replace(\"(\", \"\
    \")\n    \n    message = message.replace(\")\", \"\")\n    \n    message = message.replace(\"\
    [\", \"\")\n    \n    message = message.replace(\"]\", \"\")\n    \n    message\
    \ = message.replace(\"{\", \"\")\n    \n    message = message.replace(\"}\", \"\
    \")\n    \n    message = message.replace(\"-\", \"\")\n    \n    message = message.replace(\"\
    _\", \"\")\n    \n    message = message.replace(\"=\", \"\")\n    \n    message\
    \ = message.replace(\"+\", \"\")\n    \n    message = message.replace(\"/\", \"\
    \")\n    \n    message = message.replace(\"%\", \"\")\n    \n    message = message.replace(\"\
    *\", \"\")\n    \n    message = message.replace(\"(\", \"\")\n    \n    message\
    \ = message.replace(\")\", \"\")\n    \n    message = message.replace(\"[\", \"\
    \")\n    \n    message = message.replace(\"]\", \"\")\n    \n    message = message.replace(\"\
    {\", \"\")\n    \n    message = message.replace(\"}\", \"\")\n    \n    message\
    \ = message.replace(\"'\", \"\") \n    \n    message = message.replace(\"!\",\
    \ \"\")\n    \n    message = message.replace(\"?\", \"\")\n    \n    message =\
    \ message.replace(\"(\", \"\")\n    \n    message = message.replace(\")\", \"\"\
    )\n    \n    message = message.replace(\"[\", \"\")\n    \n    message = message.replace(\"\
    ]\", \"\")\n    \n    message = message.replace(\"{\", \"\")\n    \n    message\
    \ = message.replace(\"}\", \"\")\n    \n    message = message.replace(\"-\", \"\
    \")\n    \n    message = message.replace(\"_\", \"\")\n    \n    message = message.replace(\"\
    =\", \"\")\n    \n    message = message.replace(\"+\", \"\")\n    \n    message\
    \ = message.replace(\"/\", \"\")\n    \n    message = message.replace(\"%\", \"\
    \")\n    \n    message = message.replace(\"*\", \"\")\n    \n    message = message.replace(\"\
    (\", \"\")\n    \n    message = message.replace(\")\", \"\")\n    \n    message\
    \ = message.replace(\"[\", \"\")\n    \n    message = message.replace(\"]\", \"\
    \")\n    \n    message = message.replace(\"{\", \"\")\n    \n    message = message.replace(\"\
    }\", \"\")\n    \n    message = message.replace(\"'\", \"\") \n    \n    message\
    \ = message.replace(\"!\", \"\")\n    \n    message = message.replace(\"?\", \"\
    \")\n    \n    message = message\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpins0d4q4.py\"\
    , line 11\n    encode(\"I like turtles\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelll\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelll\"\n            \n            encode(\"hello\")\n            > \"\
    hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmply1b2u26.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \n            Enter a message: hello\n            HeLlO\n       \
    \     \n            Enter a message: hellothere\n            HeLlOereThEr\n  \
    \          \n            Enter a message: hellotherethere\n            HeLlOereThErHeLlOereThEr\n\
    \            \n            Enter a message: hellotheretherethere\n           \
    \ HeLlOereThErHeLlOereThErHeLlOereThEr\n            \n            Enter a message:\
    \ hellotheretheretherethere\n            HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThEr\n\
    \            \n            Enter a message: hellotheretheretheretherethere\n \
    \           HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThEr\n   \
    \         \n            Enter a message: hellotheretheretheretheretherethere\n\
    \            HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThEr\n\
    \            \n            Enter a message: hellotheretheretheretheretherethere\n\
    \            HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThEr\n\
    \            \n            Enter a message: hellotheretheretheretheretherethere\n\
    \            HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThEr\n\
    \            \n            Enter a message: hellotheretheretheretheretheretherethere\n\
    \            HeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereThErHeLlOereTh\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0ho0xjem.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hllo Wrd\"\n            \"\"\"\n    \"\"\"\n    \n    vowels\
    \ = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda m: vowels[m.lower()])\n    \n    message = message.replace(\"a\", \"\
    A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message = message.replace(\"\
    i\", \"I\")\n    \n    message = message.replace(\"o\", \"O\")\n    \n    message\
    \ = message.replace(\"u\", \"U\")\n    \n    message = message.replace(\"y\",\
    \ \"Y\")\n    \n    message = message.replace(\"h\", \"H\")\n    \n    message\
    \ = message.replace(\"r\", \"R\")\n    \n    message = message.replace(\"t\",\
    \ \"T\")\n    \n    message = message.replace(\"s\", \"S\")\n    \n    message\
    \ = message.replace(\"d\", \"D\")\n    \n    message = message.replace(\"l\",\
    \ \"L\")\n    \n    message = message.replace(\"n\", \"N\")\n    \n    message\
    \ = message.replace(\"m\", \"M\")\n    \n    message = message.replace(\"p\",\
    \ \"P\")\n    \n    message = message.replace(\"w\", \"W\")\n    \n    message\
    \ = message.replace(\"f\", \"F\")\n    \n    message = message.replace(\"v\",\
    \ \"V\")\n    \n    message = message.replace(\"b\", \"B\")\n    \n    message\
    \ = message.replace(\"g\", \"G\")\n    \n    message = message.replace(\"j\",\
    \ \"J\")\n    \n    message = message.replace(\"x\", \"X\")\n    \n    message\
    \ = message.replace(\"z\", \"Z\")\n    \n    message = message.replace(\"0\",\
    \ \"0\")\n    \n    message = message.replace(\"1\", \"1\")\n    \n    message\
    \ = message.replace(\"2\", \"2\")\n    \n    message = message.replace(\"3\",\
    \ \"3\")\n    \n    message = message.replace(\"4\", \"4\")\n    \n    message\
    \ = message.replace(\"5\", \"5\")\n    \n    message = message.replace(\"6\",\
    \ \"6\")\n    \n    message = message.replace(\"7\", \"7\")\n    \n    message\
    \ = message.replace(\"8\", \"8\")\n    \n    message = message.replace(\"9\",\
    \ \"9\")\n    \n    message = message.replace(\"!\", \"!\")\n    \n    message\
    \ = message.replace(\"?\", \"?\")\n    \n    message = message.replace(\",\",\
    \ \",\")\n    \n    message = message.replace(\":\", \":\")\n    \n    message\
    \ = message.replace(\";\", \";\")\n    \n    message = message.replace(\"-\",\
    \ \"-\")\n    \n    message = message.replace(\"_\", \"_\")\n    \n    message\
    \ = message.replace(\"'\", '\"')\n    \n    message = message.replace(\"<\", \"\
    <\")\n    \n    message = message.replace(\">\", \">\")\n    \n    message = message.replace(\"\
    ?\", \"\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert\
    \ candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n  \
    \  assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I\
    \ DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n\
    \    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpm5oo9vjc.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hello\")\n            > \"h3ll0\"\n            encode(\"hello\")\n           \
    \ > \"h3ll0\"\n            encode(\"hello\")\n            > \"h3ll0\"\n      \
    \      encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hello\")\n            > \ndef\
    \ check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuax9q3qd.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\") ->\
    \ \"ehllo\"\n            encode(\"hELLO\") -> \"ehllo\"\n            encode(\"\
    hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n          \
    \  encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n\
    \            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") ->\
    \ \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"\
    hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n          \
    \  encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n\
    \            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") ->\
    \ \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"\
    hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n          \
    \  encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n\
    \            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") ->\
    \ \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"\
    hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n          \
    \  encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n\
    \            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") ->\
    \ \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"\
    hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n          \
    \  encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\"\n\
    \            encode(\"hEllO\") -> \"ehllo\"\n            encode(\"hEllO\") ->\
    \ \"ehllo\"\n            encode(\"hEllO\") -> \"ehllo\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpywyoyzu9.py\"\
    , line 11\n    encode(\"hello\") -> \"ehllo\"\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hi\"\
    )\n            > \"hiii\"\n            encode(\"hi\")\n            > \"hiii\"\n\
    \            encode(\"hi\")\n            > \"hiii\"\n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphrlv7pow.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"hey\"\
    )\n            > \"h1y\"\n            encode(\"hi\")\n            > \"h1i\"\n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hey\")\n            > \"h1y\"\n            encode(\"hi\")\n            > \"h1i\"\
    \n            encode(\"hey\")\n            > \"h1y\"\n            encode(\"hi\"\
    )\n            > \"h1i\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hey\")\n            > \"h1y\"\n            encode(\"hi\"\
    )\n            > \"h1i\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\
    \n            encode(\"hi\")\n            > \"h1i\"\n            encode(\"hey\"\
    )\n            > \"h1y\"\n            encode(\"hi\")\n            > \"h1i\"\n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hey\")\n            > \"h1y\"\n            encode(\"hi\")\n            > \"h1i\"\
    \n            encode(\"hey\")\n            > \"h1y\"\n            encode(\"hi\"\
    )\n            > \"h1i\"\n            encode(\"hello\")\n            > \"h3ll0\"\
    \n            encode(\"hey\")\n            > \"h1y\"\n            encode(\"hi\"\
    )\n            > \"h1i\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"hello\"\
    )\n            > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\
    \n            encode(\"hi\")\n            > \"h1i\"\n            encode(\"hey\"\
    )\n            > \"h1y\"\n            encode(\"hi\")\n            > \"h1i\"\n\
    \            encode(\"hello\")\n            > \"h3ll0\"\n            encode(\"\
    hey\")\n            > \"h1y\"\n            encode(\"hi\")\n            > \"\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc52i1mm5.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hello\")\n       \
    \     > \"ehllo\"\n            \n            encode(\"hello\")\n            >\
    \ \"ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\
    \n            \n            encode(\"hello\")\n            > \"ehllo\"\n     \
    \       \n            encode(\"hello\")\n            > \"ehllo\"\n           \
    \ \n            encode(\"hello\")\n            > \"ehllo\"\n            \n   \
    \         encode(\"hello\")\n            > \"ehllo\"\n            \n         \
    \   encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n            encode(\"hello\")\n          \
    \  > \"ehllo\"\n            \n            encode(\"hello\")\n            > \"\
    ehllo\"\n            \n            encode(\"hello\")\n            > \"ehllo\"\n\
    \            \n            encode(\"hello\")\n            > \"ehllo\"\n      \
    \      \n            encode(\"hello\")\n            > \"ehllo\"\n            \n\
    \            encode(\"hello\")\n            > \"ehllo\"\n            \n      \
    \      encode(\"hello\")\n            > \"ehllo\"\n            \n            encode(\"\
    hello\")\n            > \"ehllo\"\n            \n            encode(\"hello\"\
    )\n            > \"ehllo\"\n            \n            encode(\"hello\")\n    \
    \        > \"ehllo\"\n            \n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt9eh2nnl.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"Hello\"\
    )\n            print(message)\n            >> \"hEllo\"\n            message =\
    \ encode(\"HelloWorld\")\n            print(message)\n            >> \"hElloWoRlD\"\
    \n            message = encode(\"HelloWorld\")\n            print(encode(message))\n\
    \            >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n\
    \            print(encode(message))\n            >> \"hElloWoRlD\"\n         \
    \   message = encode(\"HelloWorld\")\n            print(encode(message))\n   \
    \         >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n  \
    \          print(encode(message))\n            >> \"hElloWoRlD\"\n           \
    \ message = encode(\"HelloWorld\")\n            print(encode(message))\n     \
    \       >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n    \
    \        print(encode(message))\n            >> \"hElloWoRlD\"\n            message\
    \ = encode(\"HelloWorld\")\n            print(encode(message))\n            >>\
    \ \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n            print(encode(message))\n\
    \            >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n\
    \            print(encode(message))\n            >> \"hElloWoRlD\"\n         \
    \   message = encode(\"HelloWorld\")\n            print(encode(message))\n   \
    \         >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n  \
    \          print(encode(message))\n            >> \"hElloWoRlD\"\n           \
    \ message = encode(\"HelloWorld\")\n            print(encode(message))\n     \
    \       >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n    \
    \        print(encode(message))\n            >> \"hElloWoRlD\"\n            message\
    \ = encode(\"HelloWorld\")\n            print(encode(message))\n            >>\
    \ \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n            print(encode(message))\n\
    \            >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n\
    \            print(encode(message))\n            >> \"hElloWoRlD\"\n         \
    \   message = encode(\"HelloWorld\")\n            print(encode(message))\n   \
    \         >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n  \
    \          print(encode(message))\n            >> \"hElloWoRlD\"\n           \
    \ message = encode(\"HelloWorld\")\n            print(encode(message))\n     \
    \       >> \"hElloWoRlD\"\n            message = encode(\"HelloWorld\")\n    \
    \        print(encode(message))\n            >> \"hEl\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9gtfk7sy.py\"\
    , line 11\n    message = encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\
    \n            encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"\
    hello\")\n            > \"h3ll4\"\n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\n      \
    \      encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"hello\"\
    )\n            > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\
    \n            encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"\
    hello\")\n            > \"h3ll4\"\n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\n      \
    \      encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"hello\"\
    )\n            > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\
    \n            encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"\
    hello\")\n            > \"h3ll4\"\n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\n      \
    \      encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"hello\"\
    )\n            > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\
    \n            encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"\
    hello\")\n            > \"h3ll4\"\n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\n      \
    \      encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"hello\"\
    )\n            > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\
    \n            encode(\"hello\")\n            > \"h3ll4\"\n            encode(\"\
    hello\")\n            > \"h3ll4\"\n            encode(\"hello\")\n           \
    \ > \"h3ll4\"\n            encode(\"hello\")\n            > \"h3ll4\"\n      \
    \      encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmawcta35.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            \n            encode(\"hey\")\n         \
    \   > \"ehy\"\n            \n            encode(\"hay\")\n            > \"ehy\"\
    \n            \n            encode(\"hay\")\n            > \"ehy\"\n         \
    \   \n            encode(\"hay\")\n            > \"ehy\"\n            \n     \
    \       encode(\"hay\")\n            > \"ehy\"\n            \n            encode(\"\
    hay\")\n            > \"ehy\"\n            \n            encode(\"hay\")\n   \
    \         > \"ehy\"\n            \n            encode(\"hay\")\n            >\
    \ \"ehy\"\n            \n            encode(\"hay\")\n            > \"ehy\"\n\
    \            \n            encode(\"hay\")\n            > \"ehy\"\n          \
    \  \n            encode(\"hay\")\n            > \"ehy\"\n            \n      \
    \      encode(\"hay\")\n            > \"ehy\"\n            \n            encode(\"\
    hay\")\n            > \"ehy\"\n            \n            encode(\"hay\")\n   \
    \         > \"ehy\"\n            \n            encode(\"hay\")\n            >\
    \ \"ehy\"\n            \n            encode(\"hay\")\n            > \"ehy\"\n\
    \            \n            encode(\"hay\")\n            > \"ehy\"\n          \
    \  \n            encode(\"hay\")\n            > \"ehy\"\n            \n      \
    \      encode(\"hay\")\n            > \"ehy\"\n            \n            encode(\"\
    hay\")\n            > \"ehy\"\n            \n            encode(\"hay\")\n   \
    \         > \"ehy\"\n            \n            encode(\"hay\")\n            >\
    \ \"ehy\"\n            \n            encode(\"hay\")\n            > \"ehy\"\n\
    \            \n            encode(\"hay\")\n            > \"ehy\"\n          \
    \  \n            encode(\"hay\")\n            > \"ehy\"\n            \n      \
    \      encode(\"hay\")\n            > \"ehy\"\n            \n            encode(\"\
    hay\")\n            > \"ehy\"\n            \n            encode(\"hay\")\n   \
    \         > \"ehy\"\n            \n            encode(\"hay\")\n            >\
    \ \"ehy\"\n            \n            encode(\"hay\")\n            > \"ehy\"\n\
    \            \n            encode(\"hay\")\n            > \"ehy\"\n          \
    \  \n            \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbmpzq77m.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3y1\"\n\
    \            encode(\"hi\")\n            > \"h1i0\"\n            encode(\"ho\"\
    )\n            > \"h0o0\"\n            encode(\"hey\")\n            > \"h3y1\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd697jyoc.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hi\")\n            > \"h1i\"\n            encode(\"ho\"\
    )\n            > \"h0o\"\n            encode(\"hey\")\n            > \"h1y\"\n\
    \            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \"h1ay\"\
    \n            encode(\"hay\")\n            > \"h1ay\"\n            encode(\"hay\"\
    )\n            > \"h1ay\"\n            encode(\"hay\")\n            > \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptsp6bme1.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           > \"eHllo\"\n            \n            encode(\"Hello World\")\n \
    \           > \"eHllo Wrd\"\n            \n            encode(\"Hello World!\"\
    )\n            > \"eHllo Wrd!\"\n            \n            encode(\"Hello World!!\"\
    )\n            > \"eHllo Wrd!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo Wrd!!!\"\n            \n            encode(\"Hello World!!!\"\
    )\n            > \"eHllo \ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu67tsdql.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelllloo\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelllloo\"\n            \n            encode(\"hello\")\n   \
    \         > \"hleelllloo\"\n            \n            encode(\"hello\")\n    \
    \        > \"hleelllloo\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelllloo\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelllloo\"\n            \n            encode(\"hello\")\n       \
    \     > \"hleelllloo\"\n            \n            encode(\"hello\")\n        \
    \    > \"hleelllloo\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelllloo\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelllloo\"\n            \n            encode(\"hello\")\n           \
    \ > \"hleelllloo\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelllloo\"\n            \n            encode(\"hello\")\n            > \"\
    hleelllloo\"\n            \n            encode(\"hello\")\n            > \"hleelllloo\"\
    \n            \n            encode(\"hello\")\n            > \"hleelllloo\"\n\
    \            \n            encode(\"hello\")\n            > \"hleelllloo\"\n \
    \           \n            encode(\"hello\")\n            > \"hleelllloo\"\n  \
    \          \n            encode(\"hello\")\n            > \"hleelllloo\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelllloo\"\n    \
    \        \n            encode(\"hello\")\n            > \"hleelllloo\"\n     \
    \       \n            encode(\"hello\")\n            > \"hleelllloo\"\n      \
    \      \n            encode(\"hello\")\n            > \"hleelllloo\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelllloo\"\n        \
    \    \n            encode(\"hello\")\n            > \"hleelllloo\"\n         \
    \   \n            encode(\"hello\")\n            > \"hleelllloo\"\n          \
    \  \n            encode(\"hello\")\n            > \"hleelllloo\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelllloo\"\n            \n\
    \            encode(\"hello\")\n            > \"hleelllloo\"\n            \n \
    \           encode(\"hello\")\n            > \ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwkcnwfa.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I love programming\"\
    ) \n            >> \"Il pvo gnipr mng\"\n            \n            encode(\"I\
    \ love programming\") \n            >> \"Il pvo gnipr mng\"\n            \n  \
    \          encode(\"I love programming\") \n            >> \"Il pvo gnipr mng\"\
    \n            \n            encode(\"I love programming\") \n            >> \"\
    Il pvo gnipr mng\"\n            \n            encode(\"I love programming\") \n\
    \            >> \"Il pvo gnipr mng\"\n            \n            encode(\"I love\
    \ programming\") \n            >> \"Il pvo gnipr mng\"\n            \n       \
    \     encode(\"I love programming\") \n            >> \"Il pvo gnipr mng\"\n \
    \           \n            encode(\"I love programming\") \n            >> \"Il\
    \ pvo gnipr mng\"\n            \n            encode(\"I love programming\") \n\
    \            >> \"Il pvo gnipr mng\"\n            \n            encode(\"I love\
    \ programming\") \n            >> \"Il pvo gnipr mng\"\n            \n       \
    \     encode(\"I love programming\") \n            >> \"Il pvo gnipr mng\"\n \
    \           \n            encode(\"I love programming\") \n            >> \"Il\
    \ pvo gnipr mng\"\n            \n            encode(\"I love programming\") \n\
    \            >> \"Il pvo gnipr mng\"\n            \n            encode(\"I love\
    \ programming\") \n            >> \"Il pvo gnipr mng\"\n            \n       \
    \     encode(\"I love programming\") \n            >> \"Il pvo gnipr mng\"\n \
    \           \n            encode(\"I love programming\") \n            >> \"Il\
    \ pvo gnipr mng\"\n            \n            encode(\"I love programming\") \n\
    \            >> \"Il pvo gnipr mng\"\n            \n            encode(\"I love\
    \ programming\") \n            >> \"Il pvo gnipr mng\"\n            \n       \
    \     encode(\"I love programming\") \n            >> \"Il pvo gnipr mng\"\n \
    \           \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6d5y72an.py\"\
    , line 11\n    encode(\"I love programming\") \nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode(\"hello\")\n            >>>\"hleello\"\n            encode(\"\
    hello\")\n            >>>\"hleello\"\n            encode(\"hello\")\n        \
    \    >>>\"hleello\"\n            encode(\"hello\")\n            >>>\"hleello\"\
    \n            encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphkq5s7lo.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"ehllo\"\n            encode(\"hey\")\n            > \"ehy\"\n\
    \            encode(\"hi\")\n            > \"ehip\"\n            encode(\"ho\"\
    )\n            > \"eho\"\n            encode(\"wo\")\n            > \"ewo\"\n\
    \            encode(\"o\")\n            > \"eo\"\n            encode(\"u\")\n\
    \            > \"eu\"\n            encode(\"i\")\n            > \"ei\"\n     \
    \       encode(\"e\")\n            > \"ee\"\n            encode(\"o\")\n     \
    \       > \"eo\"\n            encode(\"u\")\n            > \"eu\"\n          \
    \  encode(\"i\")\n            > \"ei\"\n            encode(\"e\")\n          \
    \  > \"ee\"\n            encode(\"o\")\n            > \"eo\"\n            encode(\"\
    u\")\n            > \"eu\"\n            encode(\"i\")\n            > \"ei\"\n\
    \            encode(\"e\")\n            > \"ee\"\n            encode(\"o\")\n\
    \            > \"eo\"\n            encode(\"u\")\n            > \"eu\"\n     \
    \       encode(\"i\")\n            > \"ei\"\n            encode(\"e\")\n     \
    \       > \"ee\"\n            encode(\"o\")\n            > \"eo\"\n          \
    \  encode(\"u\")\n            > \"eu\"\n            encode(\"i\")\n          \
    \  > \"ei\"\n            encode(\"e\")\n            > \"ee\"\n            encode(\"\
    o\")\n            > \"eo\"\n            encode(\"u\")\n            > \"eu\"\n\
    \            encode(\"i\")\n            > \"ei\"\n            encode(\"e\")\n\
    \            > \"ee\"\n            encode(\"o\")\n            > \"eo\"\n     \
    \       encode(\"u\")\n            > \"eu\"\n            encode(\"i\")\n     \
    \       > \"ei\"\n            encode(\"e\")\n            > \"ee\"\n          \
    \  encode(\"o\")\n            > \"eo\"\n            encode(\"u\")\n          \
    \  > \"eu\"\n            encode(\"i\")\n            > \"ei\"\n            encode(\"\
    e\")\n            > \"ee\"\n            encode(\"o\")\n            > \"eo\"\n\
    \            encode(\"u\")\n            > \"eu\"\n            encode(\"i\")\n\
    \            > \"ei\"\n            encode(\"e\")\n            > \"ee\"\n     \
    \       encode(\"o\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuok2qmaw.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hello world\")\n            >\
    \ \"hleelllwor\"\n            encode(\"hello world how are you\")\n          \
    \  > \"hleelllworhleelllworhleelllwor\"\n            encode(\"hello world how\
    \ are you doing\")\n            > \"hleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today\")\n            > \"\
    hleelllworhleelllworhleelllworhleelllworhleelllwor\"\n            encode(\"hello\
    \ world how are you doing today and you\")\n            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today and you and you\")\n\
    \            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today and you and you and\
    \ you\")\n            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today and you and you and\
    \ you and you\")\n            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today and you and you and\
    \ you and you and you\")\n            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\"\
    \n            encode(\"hello world how are you doing today and you and you and\
    \ you and you and you and you\")\n            > \"hleelllworhleelllworhleelllworhleelllworhleelllworhleelllwor\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe4b2u_jc.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>\"Hleellllooorrrssss\"\n            \n            encode(\"\
    Hello World\")\n            >>>\"Hleellllooorrrssss\"\n            \n        \
    \    encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\n        \
    \    \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\n            >>>\"Hleellllooorrrssss\"\
    \n            \n            encode(\"Hello World\")\ndef check(candidate):\n \
    \   assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpu6cmtfs6.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            encoded = encode(message)\n            print(encoded)\n\
    \            \"\"\"\n            Enter a message: hello\n            Hlelo\n \
    \           \n            Enter a message: hello\n            Helo\n         \
    \   \n            Enter a message: hello\n            Helo\n            \n   \
    \         Enter a message: hello\n            Helo\n            \n           \
    \ Enter a message: hello\n            Helo\n            \n            Enter a\
    \ message: hello\n            Helo\n            \n            Enter a message:\
    \ hello\n            Helo\n            \n            Enter a message: hello\n\
    \            Helo\n            \n            Enter a message: hello\n        \
    \    Helo\n            \n            Enter a message: hello\n            Helo\n\
    \            \n            Enter a message: hello\n            Helo\n        \
    \    \n            Enter a message: hello\n            Helo\n            \n  \
    \          Enter a message: hello\n            Helo\n            \n          \
    \  Enter a message: hello\n            Helo\n            \n            Enter a\
    \ message: hello\n            Helo\n            \n            Enter a message:\
    \ hello\n            Helo\n            \n            Enter a message: hello\n\
    \            Helo\n            \n            Enter a message: hello\n        \
    \    Helo\n            \n            Enter a message: hello\n            Helo\n\
    \            \n            Enter a message: hello\n            Helo\n        \
    \    \n            Enter a message: hello\n            Helo\n            \n  \
    \          Enter a message: hello\n            Helo\n            \n          \
    \  Enter a message: hello\n            Helo\n            \n            Enter a\
    \ message: hello\n            Helo\n            \n            Enter a message:\
    \ hello\n            Helo\n            \n            Enter a message: hello\n\
    \            Helo\n            \n            Enter a message: hello\n        \
    \    Helo\n            \n            Enter a message: hello\n            Helo\n\
    \            \n            Enter a message: hello\n            Helo\n        \
    \    \n            Enter a message: hello\n            Helo\n            \n  \
    \          Enter a message: hello\n            Helo\n            \n          \
    \  Enter a message: hello\n            Helo\n            \n            Enter a\
    \ message: hello\n            Helo\n            \n            Enter a message:\
    \ hello\n            Helo\n            \n            Enter a message: hello\n\
    \            Helo\n            \n            Enter a message: hello\n        \
    \    Helo\n            \n            Enter a message: hello\n            Helo\n\
    \            \n            Enter a message: hello\n            Helo\n        \
    \    \n            Enter a message: hello\n            Helo\n            \n  \
    \          Enter a message: hello\n            Helo\n            \n          \
    \  Enter a message: hello\n            Helo\n            \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpe7vs3krp.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           >> \"hELLO\"\n            encode(\"Hello World\")\n            >>\
    \ \"hELLO wORLD\"\n            encode(\"Hello World!\")\n            >> \"hELLO\
    \ wORLD !\" \n            \"\"\"\n    \"\"\"\n    \n    vowels = \"aeiouAEIOU\"\
    \n    \n    message = message.lower()\n    \n    message = message.replace(vowels,\
    \ lambda m: vowels[m.lower()])\n    \n    message = message.replace(\"a\", \"\
    A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message = message.replace(\"\
    i\", \"I\")\n    \n    message = message.replace(\"o\", \"O\")\n    \n    message\
    \ = message.replace(\"u\", \"U\")\n    \n    message = message.replace(\"A\",\
    \ \"a\")\n    \n    message = message.replace(\"E\", \"e\")\n    \n    message\
    \ = message.replace(\"I\", \"i\")\n    \n    message = message.replace(\"O\",\
    \ \"o\")\n    \n    message = message.replace(\"U\", \"u\")\n    \n    return\
    \ message\n</cell>\n<cell>\nencode(\"\")\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqgrnvb3.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            \n            encode(\"hello\")\n     \
    \       > \"hleelll\"\n            \n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            \n            encode(\"hello\")\n            >\
    \ \"hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode(\"hello\")\n          \
    \  > \"hleelll\"\n            \n            encode(\"hello\")\n            > \"\
    hleelll\"\n            \n            encode(\"hello\")\n            > \"hleelll\"\
    \n            \n            encode(\"hello\")\n            > \"hleelll\"\n   \
    \         \n            encode(\"hello\")\n            > \"hleelll\"\n       \
    \     \n            encode(\"hello\")\n            > \"hleelll\"\n           \
    \ \n            encode(\"hello\")\n            > \"hleelll\"\n            \n \
    \           encode(\"hello\")\n            > \"hleelll\"\n            \n     \
    \       encode(\"hello\")\n            > \"hleelll\"\n            \n         \
    \   encode(\"hello\")\n            > \"hleelll\"\n            \n            encode(\"\
    hello\")\n            > \"hleelll\"\n            \n            encode(\"hello\"\
    )\n            > \"hleelll\"\n            \n            encode(\"hello\")\n  \
    \          > \"hleelll\"\n            \n            encode(\"hello\")\n      \
    \      > \"hleelll\"\n            \n            encode\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptj32ghim.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I love you\"\
    )\n            > \"I lv you\"\n            encode(\"I hate you\")\n          \
    \  > \"I hv you\"\n            encode(\"I love you\")\n            > \"I lv you\"\
    \n            encode(\"I hate you\")\n            > \"I hv you\"\n           \
    \ encode(\"I love you\")\n            > \"I lv you\"\n            encode(\"I hate\
    \ you\")\n            > \"I hv you\"\n            encode(\"I love you\")\n   \
    \         > \"I lv you\"\n            encode(\"I hate you\")\n            > \"\
    I hv you\"\n            encode(\"I love you\")\n            > \"I lv you\"\n \
    \           encode(\"I hate you\")\n            > \"I hv you\"\n            encode(\"\
    I love you\")\n            > \"I lv you\"\n            encode(\"I hate you\")\n\
    \            > \"I hv you\"\n            encode(\"I love you\")\n            >\
    \ \"I lv you\"\n            encode(\"I hate you\")\n            > \"I hv you\"\
    \n            encode(\"I love you\")\n            > \"I lv you\"\n           \
    \ encode(\"I hate you\")\n            > \"I hv you\"\n            encode(\"I love\
    \ you\")\n            > \"I lv you\"\n            encode(\"I hate you\")\n   \
    \         > \"I hv you\"\n            encode(\"I love you\")\n            > \"\
    I lv you\"\n            encode(\"I hate you\")\n            > \"I hv you\"\n \
    \           encode(\"I love you\")\n            > \"I lv you\"\n            encode(\"\
    I hate you\")\n            > \"I hv you\"\n            encode(\"I love you\")\n\
    \            > \"I lv you\"\n            encode(\"I hate you\")\n            >\
    \ \"I hv you\"\n            encode(\"I love you\")\n            > \"I lv you\"\
    \n            encode(\"I hate you\")\n            > \"I hv you\"\n           \
    \ encode(\"I love you\")\n            > \"I lv you\"\n            encode(\"I hate\
    \ you\")\n            > \"I hv you\"\n            encode(\"I love you\")\n   \
    \         > \"I lv you\"\n            encode(\"I hate you\")\n            > \"\
    I hv you\"\n            encode(\"\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyrr6fvci.py\"\
    , line 11\n    encode(\"I love you\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           >>>'Hleo'\n            encode(\"hey\")\n            >>>'Heyy'\n  \
    \          encode(\"hi\")\n            >>>'Hii'\n            encode(\"ho\")\n\
    \            >>>'Hoo'\n            encode(\"wo\")\n            >>>'Woo'\n    \
    \        encode(\"why\")\n            >>>'Whyy'\n            encode(\"whyho\"\
    )\n            >>>'Whyho'\n            encode(\"whyhowhy\")\n            >>>'Whyhowhy'\n\
    \            encode(\"whyhowhyho\")\n            >>>'Whyhowhyho'\n           \
    \ encode(\"whyhowhyhowhy\")\n            >>>'Whyhowhyhowhy'\n            encode(\"\
    whyhowhyhowhyho\")\n            >>>'Whyhowhyhowhyho'\n            encode(\"whyhowhyhowhyhowhy\"\
    )\n            >>>'Whyhowhyhowhyhowhy'\n            encode(\"whyhowhyhowhyhowhyho\"\
    )\n            >>>'Whyhowhyhowhyhowhyho'\n            encode(\"whyhowhyhowhyhowhyhowhy\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhy'\n            encode(\"whyhowhyhowhyhowhyhowhyho\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhyho'\n            encode(\"whyhowhyhowhyhowhyhowhyhowhy\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhyhowhy'\n            encode(\"whyhowhyhowhyhowhyhowhyhowhyho\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhyhowhyho'\n            encode(\"whyhowhyhowhyhowhyhowhyhowhyhowhy\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhyhowhyhowhy'\n            encode(\"whyhowhyhowhyhowhyhowhyhowhyhowhyho\"\
    )\n            >>>'Whyhowhyhowhyhowhyhowhyhowhyhowhy\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3hlxi82t.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"I like cake\"\
    )\n            > \"I LIKE CAKE\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cAKE\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE caK\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\n            > \"I LIKE cake\"\n            \n            encode(\"I like cake\"\
    )\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpskfxhoos.py\"\
    , line 11\n    encode(\"I like cake\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"Hleo\"\n            encode(\"hey\")\n            > \"Hey\"\n \
    \           encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            > \"Hay\"\n            encode(\"hay\")\n            > \"Hay\"\n\
    \            encode(\"hay\")\n            > \"Hay\"\n            encode(\"hay\"\
    )\n            \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzcuuk7sf.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n     \
    \       >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o\
    \ W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n\
    \            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n       \
    \     encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"\
    Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\"\
    )\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n     \
    \       >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o\
    \ W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n\
    \            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n       \
    \     encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"\
    Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\"\
    )\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n     \
    \       >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o\
    \ W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n\
    \            encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n       \
    \     encode(\"Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"\
    Hello World\")\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\"\
    )\n            >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n     \
    \       >>>'H3ll3o W3rl4d'\n            encode(\"Hello World\")\n            >>>'H3ll3o\
    \ W3rl4d'\n            encode(\"Hello World\")\n            \ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjk3phlee.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = input(\"Enter\
    \ a message: \")\n            message = encode(message)\n            print(message)\n\
    \            \"\"\"\n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpv1ny5azq.py\"\
    , line 11\n    message = input(\"Enter a message: \")\nIndentationError: unexpected\
    \ indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\
    \n            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode(\"hello\")\n            > \"hleelll\"\n            encode(\"\
    hello\")\n            > \"hleelll\"\n            encode(\"hello\")\n         \
    \   > \"hleelll\"\n            encode(\"hello\")\n            > \"hleelll\"\n\
    \            encode\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfixxbrk3.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello\")\n \
    \           >> \"Hlelo\"\n            encode(\"Hello World\")\n            >>\
    \ \"Hlelo Wrdl\"\n            encode(\"Hello World!\")\n            >> \"Hlelo\
    \ Wrdl!\"\n            encode(\"Hello World!!\")\n            >> \"Hlelo Wrdl!!\"\
    \n            encode(\"Hello World!!!\")\n            >> \"Hlelo Wrdl!!!\"\n \
    \           encode(\"Hello World!!!!\")\n            >> \"Hlelo Wrdl!!!!\"\n \
    \           encode(\"Hello World!!!!!\")\n            >> \"Hlelo Wrdl!!!!!\"\n\
    \            encode(\"Hello World!!!!!!\")\n            >> \"Hlelo Wrdl!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!\")\n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!123\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1234\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12345\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!123456\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!1234567\") \n            >> \"Hlelo Wrdl!!!!!!!\"\
    \n            encode(\"Hello World!!!!!!!12345678\") \n            >> \"Hlelo\
    \ Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!123456789\") \n      \
    \      >> \"Hlelo Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!1234567890\"\
    ) \n            >> \"Hlelo Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!12345678901\"\
    ) \n            >> \"Hlelo Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!123456789012\"\
    ) \n            >> \"Hlelo Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!1234567890123\"\
    ) \n            >> \"Hlelo Wrdl!!!!!!!\"\n            encode(\"Hello World!!!!!!!1234567890\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp89nkq8_5.py\"\
    , line 11\n    encode(\"Hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"h3ll0\"\n            encode(\"hey\")\n            > \"h3ll2\"\n\
    \            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \"h3ll2\"\n            encode(\"ho\")\n            > \"h3ll3\"\
    \n            encode(\"hi\")\n            > \"h3ll1\"\n            encode(\"hey\"\
    )\n            > \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1jwdtipa.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\n            > \"He llO WoRlD\"\n            \n            encode(\"Hello World\"\
    )\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk_sk3otd.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"Hello World\"\
    )\n            > \"Hleellllooorrrssss\"\n            \"\"\"\n    \"\"\"\n    \n\
    \    vowels = \"aeiouAEIOU\"\n    \n    message = message.lower()\n    \n    message\
    \ = message.replace(vowels, lambda letter: letter.upper())\n    \n    message\
    \ = message.replace(\"a\", \"A\")\n    \n    message = message.replace(\"e\",\
    \ \"E\")\n    \n    message = message.replace(\"i\", \"I\")\n    \n    message\
    \ = message.replace(\"o\", \"O\")\n    \n    message = message.replace(\"u\",\
    \ \"U\")\n    \n    message = message.replace(\"A\", \"a\")\n    \n    message\
    \ = message.replace(\"E\", \"e\")\n    \n    message = message.replace(\"I\",\
    \ \"i\")\n    \n    message = message.replace(\"O\", \"o\")\n    \n    message\
    \ = message.replace(\"U\", \"u\")\n    \n    message = message.replace(\"a\",\
    \ \"A\")\n    \n    message = message.replace(\"e\", \"E\")\n    \n    message\
    \ = message.replace(\"i\", \"I\")\n    \n    message = message.replace(\"o\",\
    \ \"O\")\n    \n    message = message.replace(\"u\", \"U\")\n    \n    return\
    \ message\n</cell>\n<cell>\nencode(\"Hello World\")\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw45mqn72.py\"\
    , line 11\n    encode(\"Hello World\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            message = encode(\"hello\"\
    )\n            print(message) # \"ehllo\"\n            message = encode(\"hello,\
    \ world\")\n            print(message) # \"ehllo, wrld\"\n            message\
    \ = encode(\"hello, world!\")\n            print(message) # \"ehllo, wrld!\"\n\
    \            message = encode(\"hello, world!!\")\n            print(message)\
    \ # \"ehllo, wrld!!\"\n            message = encode(\"hello, world!!!\")\n   \
    \         print(message) # \"ehllo, wrld!!!\"\n            \"\"\"\n    \n    Arguments:\n\
    \        message {str} -- The message to be encoded.\n    \n    Returns:\n   \
    \     str -- The encoded message.\n    \"\"\"\n    \n    # Write your code here\n\
    \    \n    return message\n</cell>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsfo2_r7z.py\"\
    , line 11\n    message = encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception
- program: "def encode(message: str) -> str:\n    \"\"\"\n    Write a function that\
    \ takes a message, and encodes in such a \n    way that it swaps case of all letters,\
    \ replaces all vowels in \n    the message with the letter that appears 2 places\
    \ ahead of that \n    vowel in the english alphabet. \n    Assume only letters.\
    \ \n    \n    Examples:\n            \"\"\"\n            encode(\"hello\")\n \
    \           > \"hleelll\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hi\")\n            > \"hiii\"\n            encode(\"hey\"\
    )\n            > \"heyell\"\n            encode(\"hey\")\n            > \"heyell\"\
    \n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \"heyell\"\n            encode(\"hey\")\n            > \"\
    heyell\"\n            encode(\"hey\")\n            > \"heyell\"\n            encode(\"\
    hey\")\n            > \ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmedwlazz.py\"\
    , line 11\n    encode(\"hello\")\nIndentationError: unexpected indent\n"
  exit_code: -1
  status: Exception

name: HumanEval_24_largest_divisor
language: py
results:
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplmdvoli5.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplmdvoli5.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplmdvoli5.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisor = 1\n    \n    while n % divisor != 0:\n        divisor *=\
    \ 2\n    \n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp2xyot5g.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp2xyot5g.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp2xyot5g.py\"\
    , line 16, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while n % divisor == 0:\n    \
    \    divisor += 1\n        largest_divisor = divisor\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq6wckm7s.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq6wckm7s.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq6wckm7s.py\"\
    , line 13, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppqukky7n.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppqukky7n.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppqukky7n.py\"\
    , line 16, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n == 1:\n        return 1\n    \n    # Recursive\
    \ case\n    divisor = largest_divisor(n // 2)\n    if n % 2 == 0 and divisor <\
    \ n:\n        divisor = divisor + 1\n    \n    return divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwaw3p79m.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwaw3p79m.py\"\
    , line 25, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwaw3p79m.py\"\
    , line 20, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphea30s2.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphea30s2.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpphea30s2.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n+1):\n        if\
    \ n % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000000)\n</cell>\n<cell>\n\
    large\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpb5vjokje.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeldibk4s.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(100\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_0cwuizn.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqwn7q3k.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqwn7q3k.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphqwn7q3k.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000000)\n</cell>\n<cell>\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpktbjxcwq.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn2k0y4_5.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08bkq4wl.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08bkq4wl.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp08bkq4wl.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(1, n + 1):\n        if n % i ==\
    \ 0:\n            if i > largest_divisor:\n                largest_divisor = i\n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpplpj0btn.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpplpj0btn.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpplpj0btn.py\"\
    , line 13, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6nvrant.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6nvrant.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6nvrant.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppc5lblnv.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_pko4jy.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_pko4jy.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn_pko4jy.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4q3idkad.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4q3idkad.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4q3idkad.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor\n    max_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n\n    for i in range(1,\
    \ n + 1):\n        \n        # Check if i is a divisor\n        if n % i == 0:\n\
    \            \n            # Append i to divisors\n            divisors.append(i)\n\
    \            \n            # Check if i is larger than max_divisor\n         \
    \   if i > max_divisor:\n                max_divisor = i\n    \n    # Return the\
    \ largest divisor\n    return max_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor of two numbers. You may assume that both numbers are positive.\n\n\n\
    </text>\n<cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp1u_wf_aw.py\"\
    , line 26\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94gkj107.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94gkj107.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp94gkj107.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppx3g4f_5.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppx3g4f_5.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppx3g4f_5.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n + 1):\n        if n % i ==\
    \ 0:\n            if i > largest_divisor:\n                largest_divisor = i\n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeku1dpfz.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeku1dpfz.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpeku1dpfz.py\"\
    , line 13, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    max_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n and check whether they\
    \ divide evenly\n    for i in range(1, n + 1):\n        \n        # Check if the\
    \ number divides evenly\n        if n % i == 0:\n            \n            # If\
    \ the number divides evenly, append it to the list\n            divisors.append(i)\n\
    \            \n            # If the number divides evenly and is the largest divisor\
    \ found, update max_divisor\n            if i == max_divisor:\n              \
    \  max_divisor = i\n    \n    # Return the largest divisor found\n    return max_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that returns the sum of the numbers from 1 to n that are divisible by k.\n\n\
    \n</text>\n<cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpedfn66jn.py\"\
    , line 26\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n//2 + 1):\n        if\
    \ n % i == 0:\n            divisors.append(i)\n    \n    return max(divisors)\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_1dyezzd.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n + 1):\n       \
    \ if n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyclhdvob.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyclhdvob.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpyclhdvob.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n < 2:\n        return n\n    \n    # Recursive\
    \ case\n    largest_divisor = largest_divisor(n//2)\n    if n % largest_divisor\
    \ == 0:\n        return largest_divisor\n    else:\n        return largest_divisor\
    \ + 1\n</cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<text>\nThe above function\
    \ largest_divisor is recursive, meaning that it calls itself over and over again,\
    \ until it reaches the base case (n < 2). At this point, it returns the value\
    \ n and stops recursing.\n\nThe base case is when n is less than 2. In that case,\
    \ we return the value n. Otherwise, we return the largest divisor of n that is\
    \ smaller than n (the largest number that divides n evenly).\n\n\n</text>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the numbers from 1 to n that\
    \ are divisible by 3.\n\n\n</text>\n<cell>\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp200glflf.py\"\
    , line 15\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while n % divisor != 0:\n    \
    \    divisor += 1\n        largest_divisor = divisor\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpgp_76v.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpgp_76v.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplpgp_76v.py\"\
    , line 15, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while n % divisor == 0:\n    \
    \    divisor *= 2\n        largest_divisor = divisor\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0k79xu61.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0k79xu61.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0k79xu61.py\"\
    , line 13, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz6sjtjx.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz6sjtjx.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfz6sjtjx.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8rghwgj_.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplwxy7n4x.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # loop through all numbers from 1 to n and check if they are evenly divisible\n\
    \    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n\
    \    \n    # return the largest number in the list\n    return max(divisors)\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdb19ab3z.py\"\
    , line 15\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5olczomb.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5olczomb.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5olczomb.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # initialize a list to store the largest divisor\n    largest_divisor\
    \ = []\n    \n    # loop through all numbers from 1 to n\n    for i in range(1,\
    \ n + 1):\n        \n        # if the number divides evenly, append it to the\
    \ list\n        if n % i == 0:\n            largest_divisor.append(i)\n      \
    \      \n    # return the largest number in the list\n    return max(largest_divisor)\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpoomecdrq.py\"\
    , line 17\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxcy0uy4r.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n + 1):\n        if n %\
    \ i == 0:\n            divisors.append(i)\n    \n    return max(divisors)\n  \
    \  \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3x9nlbvf.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3x9nlbvf.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp3x9nlbvf.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while n % divisor != 0:\n    \
    \    divisor += 1\n        largest_divisor = divisor\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpug_t4prt.py\"\
    , line 22, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpug_t4prt.py\"\
    , line 20, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpug_t4prt.py\"\
    , line 15, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0f9d9w57.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0f9d9w57.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0f9d9w57.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptanp9i93.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptanp9i93.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptanp9i93.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n + 1):\n       \
    \ if n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpypt0ev2r.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpypt0ev2r.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpypt0ev2r.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo720acjo.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo720acjo.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo720acjo.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # base case\n    if n == 1:\n        return 1\n    \n    # recursive\
    \ case\n    else:\n        \n        # find the largest divisor smaller than n\n\
    \        largest_divisor = largest_divisor(n // 2)\n        \n        # check\
    \ if n is divisible by largest_divisor\n        if n % largest_divisor == 0:\n\
    \            return largest_divisor\n        \n        # otherwise n is divisible\
    \ by largest_divisor\n        else:\n            return n\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<text>\nThe function largest_divisor is recursive, and it can take a\
    \ long time to run. Let's see how long it takes to run it on our sample numbers.\n\
    \n\n</text>\n<cell>\n%%timeit\nlargest_divisor(100)\n</cell>\n<cell>\n%%timeit\n\
    largest_divisor(1000)\n</cell>\n<cell>\n%%timeit\nlargest_divisor(10000)\n</cell>\n\
    <cell>\n%%timeit\nlargest_divisor(100000)\n</cell>\n<cell>\n%%timeit\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\n%%timeit\nlargest_divisor(10000000)\n</cell>\n<text>\nThe function\
    \ largest_divisor is recursive, and it can take a long time to run. Let's see\
    \ how long it takes to run it on our sample numbers.\n\n\n</text>\n<cell>\n%%timeit\n\
    largest_divisor(100)\n</cell>\n<cell>\n%%timeit\nlargest_divisor(1000)\n</cell>\n\
    <cell>\n%%timeit\nlargest_divisor(10000)\n</cell>\n<cell>\n%%timeit\nlargest_divisor(100000)\n\
    </cell>\n<cell>\n%%timeit\nlargest_divisor(1000000)\n</cell>\n<cell>\n%%timeit\n\
    largest_divisor(10000000)\n</cell>\n<text>\nThe function largest_divisor is recursive,\
    \ and it can take a long time to run. Let's see how long it takes to run it on\
    \ our sample numbers.\n\n\n</text>\n<cell>\n%%timeit\nlargest_divisor(100)\n</cell>\n\
    <cell>\n%%timeit\nlargest_divisor(1000)\n</cell>\n<cell>\n%%timeit\nlargest_divisor(10000)\n\
    </cell>\n<cell>\n%%timeit\nlargest_divisor(100000)\n</cell>\n<cell>\n%%timeit\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcd_cun3j.py\"\
    , line 27\n    The function largest_divisor is recursive, and it can take a long\
    \ time to run. Let's see how long it takes to run it on our sample numbers.\n\
    \                                                                            \
    \          ^\nSyntaxError: unterminated string literal (detected at line 27)\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu301dvw.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu301dvw.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppu301dvw.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjt02r_s.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjt02r_s.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdjt02r_s.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n+1):\n        if\
    \ n % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1q_55m_.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1q_55m_.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt1q_55m_.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxxfxiu8e.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxxfxiu8e.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxxfxiu8e.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    largest_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n\n    for i in range(1,\
    \ n + 1):\n        \n        # Check if i is divisible by any number in the list\n\
    \        if i % len(divisors) == 0:\n            \n            # If the largest\
    \ divisor found so far is less than i, update it\n            if largest_divisor\
    \ < i:\n                largest_divisor = i\n        \n        # Append i to the\
    \ list\n        divisors.append(i)\n    \n    # Return the largest divisor found\n\
    \    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n\
    <cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n\
    <cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7mu3xrsi.py\"\
    , line 26\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscgoiw79.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscgoiw79.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpscgoiw79.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while divisor < n:\n        divisor\
    \ += 1\n        if n % divisor == 0:\n            largest_divisor = divisor\n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7sd2a9bm.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7sd2a9bm.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7sd2a9bm.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqcu2ctn.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqcu2ctn.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptqcu2ctn.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i * i <= n:\n        if n % i\
    \ == 0:\n            largest_divisor = i\n            n //= i\n        else:\n\
    \            i += 1\n    return largest_divisor\n\n\ndef check(candidate):\n \
    \   assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipu6t_wi.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipu6t_wi.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpipu6t_wi.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg7ke3_ax.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store divisors\n    divisors = []\n    \n \
    \   # Initialize a variable to store largest divisor found\n    max_divisor =\
    \ 0\n    \n    # Loop through all numbers from 1 to n\n    for i in range(1, n\
    \ + 1):\n        \n        # Check if i is a divisor\n        if n % i == 0:\n\
    \            \n            # Check if i is larger than the largest divisor found\n\
    \            if i > max_divisor:\n                max_divisor = i\n          \
    \  \n            # Append i to divisors\n            divisors.append(i)\n    \n\
    \    # Return the largest divisor found\n    return max_divisor\n</cell>\n<cell>\n\
    largest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\n\
    largest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\n\
    largest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n\
    <cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmplkawkhta.py\"\
    , line 26\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n \
    \           divisors.append(i)\n    return max(divisors)\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdj3hdh5u.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdj3hdh5u.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdj3hdh5u.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcneibvod.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcneibvod.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcneibvod.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc7dim7nj.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc7dim7nj.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc7dim7nj.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ncj2zl4.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ncj2zl4.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp7ncj2zl4.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisor = 1\n    \n    while n % divisor == 0:\n        divisor *=\
    \ 2\n    \n    return divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcp8lwzkl.py\"\
    , line 11\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpjrvizvvz.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpgde6m_0s.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptreut86h.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptreut86h.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptreut86h.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if i % 2 == 0:\n                largest_divisor = i\n\
    \            else:\n                largest_divisor = i + 1\n    \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpos_epk7t.py\"\
    , line 15\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n            n = n // i\n        else:\n    \
    \        i += 1\n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquwp2n49.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquwp2n49.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpquwp2n49.py\"\
    , line 16, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n+1):\n        if\
    \ n % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekuanav1.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekuanav1.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpekuanav1.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw288z1kj.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    largest_divisor_p = 1\n    for i in range(2, n):\n\
    \        if n % i == 0:\n            largest_divisor_p = i\n            largest_divisor\
    \ = i\n    if largest_divisor == largest_divisor_p:\n        return largest_divisor\n\
    \    else:\n        return largest_divisor_p\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzsfx4ux.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzsfx4ux.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzsfx4ux.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store all divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    max_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n and check if they are\
    \ evenly divisible\n    for i in range(1, n + 1):\n        if n % i == 0:\n  \
    \          divisors.append(i)\n            \n    # Loop through all divisors and\
    \ find the largest one\n    for divisor in divisors:\n        if divisor > max_divisor:\n\
    \            max_divisor = divisor\n    \n    return max_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1v6t281.py\"\
    , line 34, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1v6t281.py\"\
    , line 32, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo1v6t281.py\"\
    , line 25, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    max_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n\n    for i in range(1,\
    \ n + 1):\n        \n        # Check if the number is divisible by any number\
    \ in the list\n        if n % i == 0:\n            \n            # If the current\
    \ number is larger than the largest found so far, update max_divisor\n       \
    \     if i > max_divisor:\n                max_divisor = i\n            \n   \
    \         # Append the number to the list\n            divisors.append(i)\n  \
    \  \n    # Return the largest divisor found\n    return max_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxaqc61zq.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxaqc61zq.py\"\
    , line 36, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxaqc61zq.py\"\
    , line 29, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgve9bi.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgve9bi.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprlgve9bi.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk2pugvhd.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk2pugvhd.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk2pugvhd.py\"\
    , line 17, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdksmvn9y.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdksmvn9y.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdksmvn9y.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhxirdzw.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhxirdzw.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpdhxirdzw.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor so far\n    max_divisor\
    \ = 0\n    \n    # Loop through all numbers from 1 to n\n    for i in range(1,\
    \ n + 1):\n        \n        # Check if the number is divisible by any number\
    \ in the list\n        if n % i == 0:\n            \n            # If the current\
    \ number is larger than the largest so far, update it\n            if i > max_divisor:\n\
    \                max_divisor = i\n            \n            # Append the number\
    \ to the list\n            divisors.append(i)\n    \n    # Return the largest\
    \ divisor found\n    return max_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<text>\nThe largest divisor of 100 was 41. We can confirm this by checking\
    \ the list we created earlier:\n\n\n</text>\n<cell>\ndivisors\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the greatest common divisor of two numbers.\
    \ You can assume that both numbers are positive.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0uetug_2.py\"\
    , line 26\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor != 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiv7_1h5c.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiv7_1h5c.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpiv7_1h5c.py\"\
    , line 13, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(100\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpngdlwffv.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwqevyr0.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwqevyr0.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmwqevyr0.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n + 1):\n       \
    \ if n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n            else:\n                largest_divisor = largest_divisor\n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppd938vqt.py\"\
    , line 26, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppd938vqt.py\"\
    , line 24, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppd938vqt.py\"\
    , line 17, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n + 1):\n        if n % i ==\
    \ 0:\n            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk72m2pmm.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk72m2pmm.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpk72m2pmm.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a list to store the largest divisor so far\n    largest_divisor\
    \ = []\n    \n    # Loop through the numbers 1 to n and find the divisors\n  \
    \  for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n\
    \            \n    # Loop through the divisors and find the largest one\n    for\
    \ divisor in divisors:\n        if divisor > largest_divisor:\n            largest_divisor\
    \ = divisor\n    \n    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    large\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9m33mcl3.py\"\
    , line 22\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, int(math.sqrt(n)) + 1):\n   \
    \     if n % i == 0:\n            largest_divisor = i\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpykabc_.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpykabc_.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpykabc_.py\"\
    , line 12, in check\n    assert candidate(3) == 1\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprpykabc_.py\"\
    , line 5, in largest_divisor\n    for i in range(2, int(math.sqrt(n)) + 1):\n\
    NameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsg1ofzt9.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsg1ofzt9.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsg1ofzt9.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    divisor = 2\n    while divisor <= n:\n        if\
    \ n % divisor == 0:\n            largest_divisor = divisor\n        divisor +=\
    \ 1\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp097j9r9z.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp097j9r9z.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp097j9r9z.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc0yfwe2q.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc0yfwe2q.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpc0yfwe2q.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprja4mmv5.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprja4mmv5.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprja4mmv5.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n + 1):\n        if n %\
    \ i == 0:\n            divisors.append(i)\n            \n    return max(divisors)\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_0byog6.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_0byog6.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5_0byog6.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(100\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp45l1h4pi.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    max_divisor\
    \ = 0\n    \n    # Loop through the numbers 1 to n\n    for i in range(1, n +\
    \ 1):\n        \n        # Check if the number divides evenly by i\n        if\
    \ n % i == 0:\n            \n            # If the number divides evenly by i,\
    \ append it to the list\n            divisors.append(i)\n            \n      \
    \      # If the number divides evenly by i, but is larger than the largest divisor\
    \ found, update max_divisor\n            if i > max_divisor:\n               \
    \ max_divisor = i\n    \n    # Return the largest divisor found\n    return max_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd84rab68.py\"\
    , line 38, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd84rab68.py\"\
    , line 36, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpd84rab68.py\"\
    , line 29, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxjfkmny.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxjfkmny.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqxjfkmny.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6jro3q2.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6jro3q2.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmps6jro3q2.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpaf5bvqvy.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n + 1):\n        if n % i ==\
    \ 0:\n            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8y0er7cu.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8y0er7cu.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp8y0er7cu.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Loop through all numbers from 1 to n\n    for i in range(1, n + 1):\n\
    \        # Check if i is a divisor\n        if n % i == 0:\n            # Append\
    \ i to divisors\n            divisors.append(i)\n    \n    # Return the largest\
    \ number in divisors\n    return max(divisors)\n\n\ndef check(candidate):\n  \
    \  assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmcvqrcm4.py\"\
    , line 29, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmcvqrcm4.py\"\
    , line 27, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmcvqrcm4.py\"\
    , line 20, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while divisor < n:\n        divisor\
    \ += 1\n        if n % divisor == 0:\n            largest_divisor = divisor\n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8m7jnl1.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8m7jnl1.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpq8m7jnl1.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp67u7_woi.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp67u7_woi.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp67u7_woi.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n + 1):\n        if n %\
    \ i == 0:\n            divisors.append(i)\n    \n    return max(divisors)\n\n\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6elnq9l.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6elnq9l.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpp6elnq9l.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n < 2:\n        return 1\n    \n    # Recursive\
    \ case\n    largest_divisor_recursive(n, 1)\n    \n    return largest_divisor_recursive(n,\
    \ 2)\n</cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp5eeyaocj.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<text>\nProblem 5\nWrite a function that returns the number of prime\
    \ numbers less than or equal to a given number. \nThe function should take in\
    \ a number as an argument and return an integer.\n\n\n</text>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9u1nu7k6.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmppxe7ct7t.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n+1):\n        if n % i\
    \ == 0:\n            divisors.append(i)\n    \n    return max(divisors)\n\n\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dt6plfo.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dt6plfo.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp_dt6plfo.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbul8vzpf.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbul8vzpf.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbul8vzpf.py\"\
    , line 17, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef\
    \ check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4i__qlz5.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxefsmxpt.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxefsmxpt.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpxefsmxpt.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n+1):\n        if\
    \ n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnwsj7n2.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnwsj7n2.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpbnwsj7n2.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmphbidsrp_.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n    \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwq2xcx04.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    divisor = 2\n    while divisor < n:\n        if\
    \ n % divisor == 0:\n            largest_divisor = divisor\n        divisor +=\
    \ 1\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<text>\nProblem 7: Write a function\
    \ that returns the greatest common divisor of two numbers, using Euclid's algorithm.\n\
    \n\n</text>\n<cell>\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp863b1m31.py\"\
    , line 17\n    Problem 7: Write a function that returns the greatest common divisor\
    \ of two numbers, using Euclid's algorithm.\n                                \
    \                                                                     ^\nSyntaxError:\
    \ unterminated string literal (detected at line 17)\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o_rdehy.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o_rdehy.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp9o_rdehy.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisor = 1\n    \n    while n % divisor == 0:\n        divisor *=\
    \ 2\n    \n    return divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpml1zbpma.py\"\
    , line 11\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisor = 1\n    \n    while n % divisor == 0:\n        divisor =\
    \ divisor + 1\n    \n    return divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkt8nc_j.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkt8nc_j.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfkt8nc_j.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n == 1:\n        return 1\n    \n    # Recursive\
    \ case\n    largest_divisor = largest_divisor(n//2)\n    if n % largest_divisor\
    \ == 0:\n        return largest_divisor\n    else:\n        return largest_divisor\
    \ + 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus5r1p0_.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus5r1p0_.py\"\
    , line 25, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus5r1p0_.py\"\
    , line 18, in check\n    assert candidate(3) == 1\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpus5r1p0_.py\"\
    , line 10, in largest_divisor\n    largest_divisor = largest_divisor(n//2)\nUnboundLocalError:\
    \ local variable 'largest_divisor' referenced before assignment\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwtnxv1n5.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwtnxv1n5.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpwtnxv1n5.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Initialize a list to store the divisors\n    divisors = []\n   \
    \ \n    # Initialize a variable to store the largest divisor found\n    max_divisor\
    \ = 0\n    \n    # Initialize a variable to store the current divisor found\n\
    \    current_divisor = 1\n    \n    # Loop through all numbers from 1 to n and\
    \ check if the current number is divisible by any number in the list\n    for\
    \ i in range(1, n + 1):\n        \n        # If the current number is divisible\
    \ by any number in the list, append it to the list\n        if current_divisor\
    \ % i == 0:\n            divisors.append(i)\n            \n        # If the current\
    \ number is not divisible by any number in the list, check if it is larger than\
    \ the largest divisor found\n        elif current_divisor > max_divisor:\n   \
    \         max_divisor = current_divisor\n            \n        # If the current\
    \ number is divisible by all numbers in the list, update the current divisor found\n\
    \        else:\n            current_divisor = current_divisor / i\n    \n    #\
    \ Return the largest divisor found\n    return max_divisor\n</cell>\n<cell>\n\
    largest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\n\
    largest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\n\
    largest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n\
    <cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4b7p5dj1.py\"\
    , line 31\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi9q73mg1.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi9q73mg1.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi9q73mg1.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcvmtrfw.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcvmtrfw.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpqcvmtrfw.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4cjv6go3.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4cjv6go3.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4cjv6go3.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpfpx3iukv.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n \
    \           divisors.append(i)\n    return max(divisors)\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7t4172w.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7t4172w.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpi7t4172w.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n \
    \   assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7icg52t.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7icg52t.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy7icg52t.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor != 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53l3xz6b.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53l3xz6b.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp53l3xz6b.py\"\
    , line 13, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n+1):\n        if\
    \ n % i == 0:\n            largest_divisor = i\n    \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvcx5wbdk.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvcx5wbdk.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpvcx5wbdk.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n + 1):\n       \
    \ if n % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    \n    return largest_divisor\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc3z11jh.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc3z11jh.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpsc3z11jh.py\"\
    , line 16, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmocl5gxu.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmocl5gxu.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpmocl5gxu.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2k1vd7o.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2k1vd7o.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw2k1vd7o.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n + 1):\n        if n %\
    \ i == 0:\n            divisors.append(i)\n            \n    return max(divisors)\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpax6217tk.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpax6217tk.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpax6217tk.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptg8may4e.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptg8may4e.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmptg8may4e.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    divisors = []\n    \n    for i in range(1, n//2+1):\n        if n\
    \ % i == 0:\n            divisors.append(i)\n    \n    return max(divisors)\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n\
    </cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpw9ft3tcv.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt873skq3.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt873skq3.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpt873skq3.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2+1):\n      \
    \  if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(100)\n</cell>\n\
    <cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n</cell>\n\
    <cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n</cell>\n\
    <cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000000)\n</cell>\n<\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuz72e7ak.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yzh3urg.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yzh3urg.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp0yzh3urg.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp97qizuzp.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n == 0:\n        return 0\n    \n    # Recursive\
    \ case\n    largest_divisor_recursive(n, 1)\n    \n    return largest_divisor_recursive(n,\
    \ 1)\n</cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell\n\
    def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7) ==\
    \ 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpf61eulpz.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzarm63p0.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzarm63p0.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpzarm63p0.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(1, n + 1):\n        if n % i ==\
    \ 0:\n            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3ok_kt0.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3ok_kt0.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpo3ok_kt0.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i <= n:\n        if n % i == 0:\n\
    \            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg55el4tr.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg55el4tr.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpg55el4tr.py\"\
    , line 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkxyi_7p1.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkxyi_7p1.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpkxyi_7p1.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzzyo1i5.py\"\
    , line 25, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzzyo1i5.py\"\
    , line 23, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpuzzyo1i5.py\"\
    , line 18, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n + 1):\n       \
    \ if n % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4wdqnjr.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4wdqnjr.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpj4wdqnjr.py\"\
    , line 15, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4juugv5v.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4juugv5v.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp4juugv5v.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n):\n        if n\
    \ % i == 0:\n            if i > largest_divisor:\n                largest_divisor\
    \ = i\n    return largest_divisor\n</cell>\n<cell>\nlargest_divisor(10)\n</cell>\n\
    <cell>\nlargest_divisor(100)\n</cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n\
    <cell>\nlargest_divisor(10000)\n</cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n\
    <cell>\nlargest_divisor(1000000)\n</cell>\n<cell>\nlargest_divisor(10000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000)\n</cell>\n<cell>\nlargest_divisor(1000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(10000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n\
    </cell>\n<cell>\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp6ve9rzxe.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            if largest_divisor < i:\n                largest_divisor\
    \ = i\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    # Base case\n    if n == 0:\n        return 0\n    \n    # Recursive\
    \ case\n    divisor = largest_divisor(n // 2)\n    if n % 2 == 0:\n        return\
    \ divisor\n    else:\n        return divisor + 1\n    \n    \ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01owfz6k.py\"\
    , line 27, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01owfz6k.py\"\
    , line 25, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp01owfz6k.py\"\
    , line 18, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpejf4g5l7.py\"\
    , line 271, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpejf4g5l7.py\"\
    , line 269, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpejf4g5l7.py\"\
    , line 262, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor != 0:\n        divisor += 1\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxchj5y9.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxchj5y9.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcxchj5y9.py\"\
    , line 13, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n</cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmp73tco4u5.py\"\
    , line 13\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(100\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpad6u76lq.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n \
    \           divisors.append(i)\n    return max(divisors)\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa56vvlq4.py\"\
    , line 21, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa56vvlq4.py\"\
    , line 19, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpa56vvlq4.py\"\
    , line 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    while n % divisor == 0:\n        divisor *= 2\n    return\
    \ divisor\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8e205fs.py\"\
    , line 20, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8e205fs.py\"\
    , line 18, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpn8e205fs.py\"\
    , line 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    divisor = 1\n    largest_divisor = 1\n    while divisor < n:\n        if\
    \ n % divisor == 0:\n            largest_divisor = divisor\n        divisor +=\
    \ 1\n    return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    i = 2\n    while i * i <= n:\n        if n % i\
    \ == 0:\n            largest_divisor = i\n        i += 1\n    return largest_divisor\n\
    \n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpev9ijnlp.py\"\
    , line 23, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpev9ijnlp.py\"\
    , line 21, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpev9ijnlp.py\"\
    , line 16, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            break\n    \n    return\
    \ largest_divisor\n\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdjftiho.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdjftiho.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmprdjftiho.py\"\
    , line 17, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 0\n    \n    for i in range(1, n//2 + 1):\n    \
    \    if n % i == 0:\n            largest_divisor = i\n            break\n    \n\
    \    return largest_divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl7v2fyb.py\"\
    , line 24, in <module>\n    test_check()\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl7v2fyb.py\"\
    , line 22, in test_check\n    check(largest_divisor)\n  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpcl7v2fyb.py\"\
    , line 17, in check\n    assert candidate(10) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 1\n    for i in range(2, n):\n        if n % i == 0:\n\
    \            largest_divisor = i\n    return largest_divisor\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(100)\n</cell>\n<cell>\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpy6vs5j1p.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    \n    largest_divisor = 1\n    \n    for i in range(2, n):\n        if n\
    \ % i == 0:\n            largest_divisor = i\n            \n    return largest_divisor\n\
    </cell>\n<cell>\nlargest_divisor(10)\n</cell>\n<cell>\nlargest_divisor(100)\n\
    </cell>\n<cell>\nlargest_divisor(1000)\n</cell>\n<cell>\nlargest_divisor(10000)\n\
    </cell>\n<cell>\nlargest_divisor(100000)\n</cell>\n<cell>\nlargest_divisor(1000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000)\n</cell>\n<cell>\nlargest_divisor(100000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000)\n</cell>\n<cell>\nlargest_divisor(1000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(10000000000000000000)\n</cell>\n<cell>\nlargest_divisor(100000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(1000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(1000000000000000000000000000)\n</cell>\n<cell>\nlargest_divisor(10000000000000000000000000000)\n\
    </cell>\n<cell>\nlargest_divisor(100000000000000000000000000000)\n</cell>\n<cell>\n\
    largest_divisor(100\ndef check(candidate):\n    assert candidate(3) == 1\n   \
    \ assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/var/folders/2x/0c5d4d9j4dzd7354ndbb_gwr0000gq/T/tmpnl65el8m.py\"\
    , line 12\n    </cell>\n    ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n        \"\"\"\
    \n    largest_divisor = 0\n    for i in range(1, n):\n        if n % i == 0:\n\
    \            if i > largest_divisor:\n                largest_divisor = i\n  \
    \  return largest_divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

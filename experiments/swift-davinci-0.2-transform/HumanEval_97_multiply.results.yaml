language: swift
name: HumanEval_97_multiply
results:
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a.description.last!\n\
    \    let b = b.description.last!\n    return Int(String(a))! * Int(String(b))!\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a:\
    \ 19, b: 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a:\
    \ 14, b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a:\
    \ 17, b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0,\
    \ b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824970
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\
    \ % 10\n    let b = abs(b) % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824970
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let aUnitDigit\
    \ = a % 10\n    let bUnitDigit = b % 10\n    return aUnitDigit * bUnitDigit\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a:\
    \ 19, b: 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a:\
    \ 14, b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a:\
    \ 17, b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0,\
    \ b: 0) == 0)"
  status: Exception
  stderr: 'tmpl79zg_5n/tmpl79zg_5n.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b877a3c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b877a0beb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b877a0be988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b877a0bd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl79zg_5n                        0x000055ed9405c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b877a5b3460 __libc_start_main +
    245

    6    tmpl79zg_5n                        0x000055ed9405bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a\
    \ % 10)\n    let b = abs(b % 10)\n    return a * b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824970
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    let aUnitDigit = a % 10\n    let bUnitDigit = b % 10\n\
    \    return aUnitDigit * bUnitDigit\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\n\
    assert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\n\
    assert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a <\
    \ 0 ? -a : a\n    let b = b < 0 ? -b : b\n    return (a % 10) * (b % 10)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a:\
    \ 19, b: 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a:\
    \ 14, b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a:\
    \ 17, b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0,\
    \ b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a %\
    \ 10\n    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) ==\
    \ 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15)\
    \ == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27)\
    \ == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpyxh_apht/tmpyxh_apht.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2aad990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2aad687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2aad687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2aad6867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyxh_apht                        0x0000559d68a7c3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b2aadb7c460 __libc_start_main +
    245

    6    tmpyxh_apht                        0x0000559d68a7bef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// >>> multiply(a: 148, b: 412)\n/// 16\n/// >>> multiply(a: 19,\
    \ b: 28)\n/// 72\n/// >>> multiply(a: 2020, b: 1851)\n/// 0\n/// >>> multiply(a:\
    \ 14, b: -15)\n/// 20\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a %\
    \ 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpoxtbowlf/tmpoxtbowlf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b84aa74fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b84aa446b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b84aa446988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b84aa4457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoxtbowlf                        0x00005650e5b353cf <unavailable> + 5071

    5    libc.so.6                          0x00002b84aa93b460 __libc_start_main +
    245

    6    tmpoxtbowlf                        0x00005650e5b34ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824901

language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ (num) -> Bool in\n        return num > 10 && num % 2\
    \ != 0 && num / 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpxpbn6vut/tmpxpbn6vut.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab834122c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab833e19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab833e19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab833e187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxpbn6vut                        0x000055685c4ca674 <unavailable> + 5748

    5    libc.so.6                          0x00002ab83430e460 __libc_start_main +
    245

    6    tmpxpbn6vut                        0x000055685c4ca129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2gfnlvu2.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmp2gfnlvu2.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                                          \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2gfnlvu2.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmp2gfnlvu2.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                                          \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8n0eks05/tmp8n0eks05.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5965fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5965cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5965cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5965cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8n0eks05                        0x000055b69840e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b59661b5460 __libc_start_main +
    245

    6    tmp8n0eks05                        0x000055b69840e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0 }.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpp6b255tl/tmpp6b255tl.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39e1f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39e1c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39e1c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39e1c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp6b255tl                        0x00005638af49b674 <unavailable> + 5748

    5    libc.so.6                          0x00002b39e2126460 __libc_start_main +
    245

    6    tmpp6b255tl                        0x00005638af49b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8s522st4.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 &&\
    \ $0.lastDigit() % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmp8s522st4.swift:11:68: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                                         \
    \       ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_db9bhzc.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd\
    \ }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmp_db9bhzc.swift:11:63:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd }.count\n           \
    \                                                ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2s1jtkl.swift:11:39: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmpb2s1jtkl.swift:11:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2s1jtkl.swift:11:39: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmpb2s1jtkl.swift:11:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ {\n            let firstDigit = num / 10\n            let lastDigit = num %\
    \ 10\n            if firstDigit % 2 != 0 && lastDigit % 2 != 0 {\n           \
    \     count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp0z5nw8bt/tmp0z5nw8bt.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae06e27ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae06df71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae06df71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae06df707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0z5nw8bt                        0x000055d31acdd6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ae06e466460 __libc_start_main +
    245

    6    tmp0z5nw8bt                        0x000055d31acdd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpqicqjszr/tmpqicqjszr.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b26541bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2653eb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2653eb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2653eb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqicqjszr                        0x0000558387f603d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b26543a9460 __libc_start_main +
    245

    6    tmpqicqjszr                        0x0000558387f5ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ {\n            var num = num\n            while num > 10 {\n               \
    \ num /= 10\n            }\n            if num % 2 != 0 {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp7z8yc1hg/tmp7z8yc1hg.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b783dd06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b783d9fdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b783d9fd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b783d9fc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7z8yc1hg                        0x0000561fb0fa36b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b783def2460 __libc_start_main +
    245

    6    tmp7z8yc1hg                        0x0000561fb0fa3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && ($0 % 10).isOdd && ($0 / 10).isOdd }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpkygkuvk5.swift:11:47: error: value of type 'Int' has no member\
    \ 'isOdd'\n    return nums.filter { $0 > 10 && ($0 % 10).isOdd && ($0 / 10).isOdd\
    \ }.count\n                                    ~~~~~~~~~ ^~~~~\n/tmp/tmpkygkuvk5.swift:11:66:\
    \ error: value of type 'Int' has no member 'isOdd'\n    return nums.filter { $0\
    \ > 10 && ($0 % 10).isOdd && ($0 / 10).isOdd }.count\n                       \
    \                                ~~~~~~~~~ ^~~~~\n"
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var counter = 0\n    for num in nums {\n        if num > 10 && num % 2 !=\
    \ 0 && num / 10 % 2 != 0 {\n            counter += 1\n        }\n    }\n    return\
    \ counter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp5dwlr91m/tmp5dwlr91m.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d89e5cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d89b53b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d89b53988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d89b527b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5dwlr91m                        0x00005578f5dfd6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b2d8a048460 __libc_start_main +
    245

    6    tmp5dwlr91m                        0x00005578f5dfd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8n0eks05/tmp8n0eks05.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5965fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5965cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5965cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5965cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8n0eks05                        0x000055b69840e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b59661b5460 __libc_start_main +
    245

    6    tmp8n0eks05                        0x000055b69840e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ {\n            let firstDigit = num / 10\n            let lastDigit = num %\
    \ 10\n            if firstDigit % 2 != 0 && lastDigit % 2 != 0 {\n           \
    \     count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp0z5nw8bt/tmp0z5nw8bt.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae06e27ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae06df71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae06df71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae06df707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0z5nw8bt                        0x000055d31acdd6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ae06e466460 __libc_start_main +
    245

    6    tmp0z5nw8bt                        0x000055d31acdd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp8s522st4.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 &&\
    \ $0.lastDigit() % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmp8s522st4.swift:11:68: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                                         \
    \       ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num.firstDigit()\
    \ % 2 != 0 && num.lastDigit() % 2 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp85lkan45.swift:13:28: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        if num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit()\
    \ % 2 != 0 {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmp85lkan45.swift:13:57:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        if num > 10 &&\
    \ num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0 {\n                  \
    \                                  ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2gfnlvu2.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmp2gfnlvu2.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                                          \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ let firstDigit = num / 10\n            let lastDigit = num % 10\n          \
    \  if firstDigit % 2 != 0 && lastDigit % 2 != 0 {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8521xqqj/tmp8521xqqj.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7780f30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7780c27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7780c27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7780c267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8521xqqj                        0x000055abb0d826b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b778111c460 __libc_start_main +
    245

    6    tmp8521xqqj                        0x000055abb0d82169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n            count += 1\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmphputw903.swift:13:28: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit\
    \ % 2 != 0 {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmphputw903.swift:13:55:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        if num > 10 &&\
    \ num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n                      \
    \                            ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n      \
    \  $0 / 10 % 2 != 0 &&\n        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu58a9dve/tmpu58a9dve.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b942916dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9428e64b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9428e64988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9428e637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu58a9dve                        0x000055f282495674 <unavailable> + 5748

    5    libc.so.6                          0x00002b9429359460 __libc_start_main +
    245

    6    tmpu58a9dve                        0x000055f282495129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpb2s1jtkl.swift:11:39: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmpb2s1jtkl.swift:11:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n      \
    \  $0 / 10 % 2 != 0 &&\n        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu58a9dve/tmpu58a9dve.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b942916dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9428e64b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9428e64988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9428e637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu58a9dve                        0x000055f282495674 <unavailable> + 5748

    5    libc.so.6                          0x00002b9429359460 __libc_start_main +
    245

    6    tmpu58a9dve                        0x000055f282495129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ $0 > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10\
    \ != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpymqod8hs/tmpymqod8hs.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b47015c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b46d0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b46d0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b46d0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpymqod8hs                        0x000055608f60c674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0b47201460 __libc_start_main +
    245

    6    tmpymqod8hs                        0x000055608f60c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    let filtered = nums.filter { $0 > 10 }\n    let filtered2 = filtered.filter\
    \ { $0 % 2 != 0 }\n    let filtered3 = filtered2.filter { $0 % 10 != 0 }\n   \
    \ return filtered3.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpqv4_jhck/tmpqv4_jhck.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b07bf0ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b07bedd4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b07bedd4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b07bedd37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqv4_jhck                        0x000055bd1352f674 <unavailable> + 5748

    5    libc.so.6                          0x00002b07bf2c9460 __libc_start_main +
    245

    6    tmpqv4_jhck                        0x000055bd1352f129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8n0eks05/tmp8n0eks05.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5965fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5965cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5965cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5965cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8n0eks05                        0x000055b69840e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b59661b5460 __libc_start_main +
    245

    6    tmp8n0eks05                        0x000055b69840e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpqicqjszr/tmpqicqjszr.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b26541bdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2653eb4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2653eb4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2653eb37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqicqjszr                        0x0000558387f603d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b26543a9460 __libc_start_main +
    245

    6    tmpqicqjszr                        0x0000558387f5ff69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter {\n        $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0\n  \
    \  }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp_lgyh2lw/tmp_lgyh2lw.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b44bcdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b448c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b448c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b448c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_lgyh2lw                        0x000055eea28f1674 <unavailable> + 5748

    5    libc.so.6                          0x00002b5b44db9460 __libc_start_main +
    245

    6    tmp_lgyh2lw                        0x000055eea28f1129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ {\n            let firstDigit = num / 10\n            let lastDigit = num %\
    \ 10\n            if firstDigit % 2 != 0 && lastDigit % 2 != 0 {\n           \
    \     count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp0z5nw8bt/tmp0z5nw8bt.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae06e27ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae06df71b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae06df71988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae06df707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0z5nw8bt                        0x000055d31acdd6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ae06e466460 __libc_start_main +
    245

    6    tmp0z5nw8bt                        0x000055d31acdd169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd\
    \ }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp_db9bhzc.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd\
    \ }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmp_db9bhzc.swift:11:63:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd }.count\n           \
    \                                                ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit\
    \ % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqtlolyez.swift:12:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpqtlolyez.swift:12:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 && num % 10 != 0 {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6ujt12cf/tmp6ujt12cf.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af84290bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af842602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af842602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af8426017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujt12cf                        0x000055f95ed236b4 <unavailable> + 5812

    5    libc.so.6                          0x00002af842af7460 __libc_start_main +
    245

    6    tmp6ujt12cf                        0x000055f95ed23169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({\n        $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0\n  \
    \  }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp11jt5tvq/tmp11jt5tvq.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bfc22ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bfbf25b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bfbf25988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bfbf247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp11jt5tvq                        0x0000555bda697674 <unavailable> + 5748

    5    libc.so.6                          0x00002b3bfc41a460 __libc_start_main +
    245

    6    tmp11jt5tvq                        0x0000555bda697129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({$0 > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8n0eks05/tmp8n0eks05.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5965fc9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5965cc0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5965cc0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5965cbf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8n0eks05                        0x000055b69840e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b59661b5460 __libc_start_main +
    245

    6    tmp8n0eks05                        0x000055b69840e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpsxusoub2.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter({ $0 > 10 && $0.firstDigit() % 2 != 0 &&\
    \ $0.lastDigit() % 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpsxusoub2.swift:11:68: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }).count\n                                                        \
    \        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820991
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfadgmttg/tmpfadgmttg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a47936c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a4762db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a4762d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a4762c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfadgmttg                        0x0000556a8a7136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b3a47b22460 __libc_start_main +
    245

    6    tmpfadgmttg                        0x0000556a8a713169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num.firstDigit\
    \ % 2 != 0 && num.lastDigit % 2 != 0 {\n            count += 1\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmphputw903.swift:13:28: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        if num > 10 && num.firstDigit % 2 != 0 && num.lastDigit\
    \ % 2 != 0 {\n                       ~~~ ^~~~~~~~~~\n/tmp/tmphputw903.swift:13:55:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        if num > 10 &&\
    \ num.firstDigit % 2 != 0 && num.lastDigit % 2 != 0 {\n                      \
    \                            ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for i in nums {\n        if i > 10 && i % 2 != 0 {\n \
    \           let firstDigit = i % 10\n            let lastDigit = i / 10\n    \
    \        if firstDigit % 2 != 0 && lastDigit % 2 != 0 {\n                count\
    \ += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6w9fsnsg/tmp6w9fsnsg.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fb06c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fb03b9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fb03b9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fb03b87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6w9fsnsg                        0x0000557dd88136b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b4fb08ae460 __libc_start_main +
    245

    6    tmp6w9fsnsg                        0x0000557dd8813169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820991
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for i in nums {\n        if i > 10 && i % 2 != 0 && i\
    \ % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpo8y04edh/tmpo8y04edh.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b449f1d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b449eecdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b449eecd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b449eecc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo8y04edh                        0x0000555752b8c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b449f3c2460 __libc_start_main +
    245

    6    tmpo8y04edh                        0x0000555752b8c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820918
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpdv5k1ntj.swift:11:40: error: value of type 'Int' has no member\
    \ 'firstDigit'\n    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 &&\
    \ $0.lastDigit % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n\
    /tmp/tmpdv5k1ntj.swift:11:66: error: value of type 'Int' has no member 'lastDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                                           \
    \   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820918
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 != 0\
    \ && num / 10 % 2 != 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp5ysmq9qj/tmp5ysmq9qj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a2677bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a26472b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a26472988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a264717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ysmq9qj                        0x000055e6412356b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b7a26967460 __libc_start_main +
    245

    6    tmp5ysmq9qj                        0x000055e641235169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820919
